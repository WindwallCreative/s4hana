{"Templates":[{"template":"new sap.m.ActionListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","static":"true","prefix":"ActionListItem","Experimental":false,"module":"sap/m/ActionListItem","description":"ActionListItem(sId?, mSettings?) : sap.m.ActionListItem","constructorDescription":"Constructor for a new ActionListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.ActionListItem","helpDescription":"The <code>sap.m.ActionListItem<\/code> can be used like a <code>button<\/code> to fire actions when pressed.\n<b>Note:<\/b> The inherited <code>selected<\/code> property of the <code>sap.m.ListItemBase<\/code> is not supported.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ActionSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tname: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tselectedKey: ${\"\"}, // string\n\t\tselectedItemId: ${\"\"}, // string\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\ttype: ${sap.m.SelectType.Default}, // sap.m.SelectType\n\t\tautoAdjustWidth: ${bAutoAdjustWidth}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tvalueStateText: ${\"\"}, // string\n\t\tshowSecondaryValues: ${bShowSecondaryValues}, // boolean\n\t\tforceSelection: ${bForceSelection}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tbuttons: [${buttons}] // (sap.m.Button|string)[]\n\t}\n)\n","static":"true","prefix":"ActionSelect","Experimental":false,"module":"sap/m/ActionSelect","description":"ActionSelect(sId?, mSettings?) : sap.m.ActionSelect","constructorDescription":"Constructor for a new ActionSelect.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Associations\n<ul>\n<li>{@link #getButtons buttons} : (sap.ui.core.ID | sap.m.Button)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Select#constructor sap.m.Select}\ncan be used as well.","extends":"sap.m.Select","Deprecated":false,"name":"sap.m.ActionSelect","helpDescription":"The ActionSelect control provides a list of predefined items that allows end users to choose options and additionally trigger some actions.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ActionSheet(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tplacement: ${sap.m.PlacementType.Bottom}, // sap.m.PlacementType\n\t\tshowCancelButton: ${bShowCancelButton}, // boolean\n\t\tcancelButtonText: \"${cancelButtonText}\", // string\n\t\ttitle: \"${title}\", // string\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tcancelButtonTap: [function (oEvent) {}, this], // function|array\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tcancelButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ActionSheet","Experimental":false,"module":"sap/m/ActionSheet","description":"ActionSheet(sId?, mSettings?) : sap.m.ActionSheet","constructorDescription":"Constructor for a new ActionSheet.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Bottom)<\/li>\n<li>{@link #getShowCancelButton showCancelButton} : boolean (default: true)<\/li>\n<li>{@link #getCancelButtonText cancelButtonText} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:cancelButtonTap cancelButtonTap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancelButtonPress cancelButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ActionSheet","helpDescription":"ActionSheet is a special kind of control which contains one or more sap.m.Button(s) and the ActionSheet will be closed when one of the buttons is tapped. It looks similar as a sap.m.Dialog in iPhone and Android while as a sap.m.Popover in iPad.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.App(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tautoFocus: ${bAutoFocus}, // boolean\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tdefaultTransitionName: ${\"slide\"}, // string\n\t\tpages: [${pages}], // sap.ui.core.Control[]\n\t\tinitialPage: ${initialPage}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this], // function|array\n\t\thomeIcon: ${homeIcon}, // any\n\t\tbackgroundColor: \"${backgroundColor}\", // string\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\tbackgroundRepeat: ${bBackgroundRepeat}, // boolean\n\t\tbackgroundOpacity: ${1}, // float\n\t\torientationChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"App","Experimental":false,"module":"sap/m/App","description":"App(sId?, mSettings?) : sap.m.App","constructorDescription":"Constructor for a new App.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHomeIcon homeIcon} : any<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundOpacity backgroundOpacity} : float (default: 1)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:orientationChange orientationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.NavContainer#constructor sap.m.NavContainer}\ncan be used as well.","extends":"sap.m.NavContainer","Deprecated":false,"name":"sap.m.App","helpDescription":"App is the root element of a UI5 mobile application. It inherits from NavContainer and thus provides its navigation capabilities.\nIt also adds certain header tags to the HTML page which are considered useful for mobile apps.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"use sap.ui.Device.orientation.attachHandler(...)","since":"1.20.0"}},{"template":"fireOrientationChange(\n\t{\n\t\tlandscape: ${bLandscape} // boolean\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.App.fireOrientationChange","description":"fireOrientationChange(mParameters?) : sap.m.App","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 use sap.ui.Device.orientation.attachHandler(...)<br>Fires event <code>orientationChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"use sap.ui.Device.orientation.attachHandler(...)","since":"1.20.0"}},{"template":"new sap.m.Bar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenableFlexBox: ${bEnableFlexBox}, // boolean\n\t\ttranslucent: ${bTranslucent}, // boolean\n\t\tdesign: ${sap.m.BarDesign.Auto}, // sap.m.BarDesign\n\t\tcontentLeft: [${contentLeft}], // sap.ui.core.Control[]\n\t\tcontentMiddle: [${contentMiddle}], // sap.ui.core.Control[]\n\t\tcontentRight: [${contentRight}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","static":"true","prefix":"Bar","Experimental":false,"module":"sap/m/Bar","description":"Bar(sId?, mSettings?) : sap.m.Bar","constructorDescription":"Constructor for a new Bar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableFlexBox enableFlexBox} : boolean (default: false)<\/li>\n<li>{@link #getTranslucent translucent} : boolean (default: false)<\/li>\n<li>{@link #getDesign design} : sap.m.BarDesign (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContentLeft contentLeft} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContentMiddle contentMiddle} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContentRight contentRight} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Bar","helpDescription":"The Bar control can be used as a header, sub-header and a footer in a page.\nIt has the capability to center a content like a title, while having other controls on the left and right side.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Breadcrumbs(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcurrentLocationText: \"${currentLocationText}\", // string\n\t\tlinks: [${links}] // sap.m.Link[]\n\t}\n)\n","static":"true","prefix":"Breadcrumbs","Experimental":false,"module":"sap/m/Breadcrumbs","description":"Breadcrumbs(sId?, mSettings?) : sap.m.Breadcrumbs","constructorDescription":"Constructor for a new Breadcrumbs\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCurrentLocationText currentLocationText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLinks links} : sap.m.Link[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Breadcrumbs","helpDescription":"Enables users to navigate between items by providing a list of links to previous steps in the user's\nnavigation path. The last three steps can be accessed as links directly The remaining links prior to them\nare available in a drop-down menu.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.BusyDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\ttitle: ${\"\"}, // string\n\t\tcustomIcon: ${\"\"}, // sap.ui.core.URI\n\t\tcustomIconRotationSpeed: ${1000}, // int\n\t\tcustomIconDensityAware: ${bCustomIconDensityAware}, // boolean\n\t\tcustomIconWidth: ${\"44px\"}, // sap.ui.core.CSSSize\n\t\tcustomIconHeight: ${\"44px\"}, // sap.ui.core.CSSSize\n\t\tcancelButtonText: ${\"\"}, // string\n\t\tshowCancelButton: ${bShowCancelButton}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tclose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"BusyDialog","Experimental":false,"module":"sap/m/BusyDialog","description":"BusyDialog(sId?, mSettings?) : sap.m.BusyDialog","constructorDescription":"Constructor for a new BusyDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getCustomIconRotationSpeed customIconRotationSpeed} : int (default: 1000)<\/li>\n<li>{@link #getCustomIconDensityAware customIconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getCustomIconWidth customIconWidth} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getCustomIconHeight customIconHeight} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getCancelButtonText cancelButtonText} : string (default: )<\/li>\n<li>{@link #getShowCancelButton showCancelButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.BusyDialog","helpDescription":"BusyDialog is used to indicate that the system is busy and the user has to wait.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireClose(\n\t{\n\t\tcancelPressed: ${bCancelPressed} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.BusyDialog.fireClose","description":"fireClose(mParameters?) : sap.m.BusyDialog","helpDescription":"Fires event <code>close<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.BusyIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tcustomIcon: ${\"\"}, // sap.ui.core.URI\n\t\tcustomIconRotationSpeed: ${1000}, // int\n\t\tcustomIconDensityAware: ${bCustomIconDensityAware}, // boolean\n\t\tcustomIconWidth: ${\"44px\"}, // sap.ui.core.CSSSize\n\t\tcustomIconHeight: ${\"44px\"}, // sap.ui.core.CSSSize\n\t\tsize: ${\"1rem\"}, // sap.ui.core.CSSSize\n\t\tdesign: ${\"auto\"}, // string\n\t\tariaLabelledBy: [${ariaLabelledBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","static":"true","prefix":"BusyIndicator","Experimental":false,"module":"sap/m/BusyIndicator","description":"BusyIndicator(sId?, mSettings?) : sap.m.BusyIndicator","constructorDescription":"Constructor for a new BusyIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getCustomIconRotationSpeed customIconRotationSpeed} : int (default: 1000)<\/li>\n<li>{@link #getCustomIconDensityAware customIconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getCustomIconWidth customIconWidth} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getCustomIconHeight customIconHeight} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize (default: 1rem)<\/li>\n<li>{@link #getDesign design} : string (default: auto)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.BusyIndicator","helpDescription":"Control to indicate that the system is busy with some task and the user has to wait.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Button(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttype: ${sap.m.ButtonType.Default}, // sap.m.ButtonType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonFirst: ${bIconFirst}, // boolean\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Button","Experimental":false,"module":"sap/m/Button","description":"Button(sId?, mSettings?) : sap.m.Button","constructorDescription":"Constructor for a new Button.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getType type} : sap.m.ButtonType (default: Default)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconFirst iconFirst} : boolean (default: true)<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tap tap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Button","helpDescription":"Enables users to trigger actions. For the button UI, you can define some text or an icon, or both.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Carousel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tloop: ${bLoop}, // boolean\n\t\tshowPageIndicator: ${bShowPageIndicator}, // boolean\n\t\tpageIndicatorPlacement: ${sap.m.PlacementType.Bottom}, // sap.m.PlacementType\n\t\tshowBusyIndicator: ${bShowBusyIndicator}, // boolean\n\t\tbusyIndicatorSize: ${\"6em\"}, // sap.ui.core.CSSSize\n\t\tarrowsPlacement: ${sap.m.CarouselArrowsPlacement.Content}, // sap.m.CarouselArrowsPlacement\n\t\tpages: [${pages}], // sap.ui.core.Control[]\n\t\tactivePage: ${activePage}, // (sap.ui.core.Control|string)\n\t\tloadPage: [function (oEvent) {}, this], // function|array\n\t\tunloadPage: [function (oEvent) {}, this], // function|array\n\t\tpageChanged: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Carousel","Experimental":false,"module":"sap/m/Carousel","description":"Carousel(sId?, mSettings?) : sap.m.Carousel","constructorDescription":"Constructor for a new Carousel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getLoop loop} : boolean (default: false)<\/li>\n<li>{@link #getShowPageIndicator showPageIndicator} : boolean (default: true)<\/li>\n<li>{@link #getPageIndicatorPlacement pageIndicatorPlacement} : sap.m.PlacementType (default: Bottom)<\/li>\n<li>{@link #getShowBusyIndicator showBusyIndicator} : boolean (default: true)<\/li>\n<li>{@link #getBusyIndicatorSize busyIndicatorSize} : sap.ui.core.CSSSize (default: 6em)<\/li>\n<li>{@link #getArrowsPlacement arrowsPlacement} : sap.m.CarouselArrowsPlacement (default: Content)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPages pages} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getActivePage activePage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:loadPage loadPage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:unloadPage unloadPage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:pageChanged pageChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Carousel","helpDescription":"The Carousel control can be used to navigate through a list of sap.m controls just like flipping through the pages of a book by swiping right or left. <br>\nAn indicator shows the current position within the control list. If the pages are less than 9, the page indicator is represented with bullets. If the pages are 9 or more, the page indicator is numeric.<br>\nWhen displayed in a desktop browser, a left- and right-arrow button is displayed on the carousel's sides, which can be used to navigate through the carousel.\n\nNote: When displayed in Internet Explorer 9, page changes are not animated.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Since 1.18.7 pages are no longer loaded or unloaded","since":"1.18.7"}},{"template":"fireLoadPage(\n\t{\n\t\tpageId: \"${pageId}\" // string\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Carousel.fireLoadPage","description":"fireLoadPage(mParameters?) : sap.m.Carousel","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Fires event <code>loadPage<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Since 1.18.7 pages are no longer loaded or unloaded","since":"1.18.7"}},{"template":"firePageChanged(\n\t{\n\t\toldActivePageId: \"${oldActivePageId}\", // string\n\t\tnewActivePageId: \"${newActivePageId}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Carousel.firePageChanged","description":"firePageChanged(mParameters?) : sap.m.Carousel","helpDescription":"Fires event <code>pageChanged<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Since 1.18.7 pages are no longer loaded or unloaded","since":"1.18.7"}},{"template":"fireUnloadPage(\n\t{\n\t\tpageId: \"${pageId}\" // string\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Carousel.fireUnloadPage","description":"fireUnloadPage(mParameters?) : sap.m.Carousel","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Fires event <code>unloadPage<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Since 1.18.7 pages are no longer loaded or unloaded","since":"1.18.7"}},{"template":"new sap.m.CheckBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tselected: ${bSelected}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tname: \"${name}\", // string\n\t\ttext: \"${text}\", // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tactiveHandling: ${bActiveHandling}, // boolean\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"CheckBox","Experimental":false,"module":"sap/m/CheckBox","description":"CheckBox(sId?, mSettings?) : sap.m.CheckBox","constructorDescription":"Constructor for a new CheckBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getActiveHandling activeHandling} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.CheckBox","helpDescription":"The CheckBox control allows the user to select one or multiple items from a list. To select each item the user has to select the square box in front of it.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelect(\n\t{\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.CheckBox.fireSelect","description":"fireSelect(mParameters?) : sap.m.CheckBox","helpDescription":"Fires event <code>select<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Column(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\thAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\tvAlign: ${sap.ui.core.VerticalAlign.Inherit}, // sap.ui.core.VerticalAlign\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tvisible: ${bVisible}, // boolean\n\t\tminScreenWidth: \"${minScreenWidth}\", // string\n\t\tdemandPopin: ${bDemandPopin}, // boolean\n\t\tpopinHAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\tpopinDisplay: ${sap.m.PopinDisplay.Block}, // sap.m.PopinDisplay\n\t\tmergeDuplicates: ${bMergeDuplicates}, // boolean\n\t\tmergeFunctionName: ${\"getText\"}, // string\n\t\theader: ${header}, // sap.ui.core.Control\n\t\tfooter: ${footer} // sap.ui.core.Control\n\t}\n)\n","static":"true","prefix":"Column","Experimental":false,"module":"sap/m/Column","description":"Column(sId?, mSettings?) : sap.m.Column","constructorDescription":"Constructor for a new Column.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHAlign hAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getVAlign vAlign} : sap.ui.core.VerticalAlign (default: Inherit)<\/li>\n<li>{@link #getStyleClass styleClass} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMinScreenWidth minScreenWidth} : string<\/li>\n<li>{@link #getDemandPopin demandPopin} : boolean (default: false)<\/li>\n<li>{@link #getPopinHAlign popinHAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getPopinDisplay popinDisplay} : sap.m.PopinDisplay (default: Block)<\/li>\n<li>{@link #getMergeDuplicates mergeDuplicates} : boolean (default: false)<\/li>\n<li>{@link #getMergeFunctionName mergeFunctionName} : string (default: getText)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeader header} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getFooter footer} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.Column","helpDescription":"The <code>sap.m.Column<\/code> allows to define column specific properties that will be applied when rendering the <code>sap.m.Table<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ColumnListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tvAlign: ${sap.ui.core.VerticalAlign.Inherit}, // sap.ui.core.VerticalAlign\n\t\tcells: [${cells}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"ColumnListItem","Experimental":false,"module":"sap/m/ColumnListItem","description":"ColumnListItem(sId?, mSettings?) : sap.m.ColumnListItem","constructorDescription":"Constructor for a new ColumnListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVAlign vAlign} : sap.ui.core.VerticalAlign (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCells cells} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.ColumnListItem","helpDescription":"<code>sap.m.ColumnListItem<\/code> can be used with the <code>cells<\/code> aggregation to create rows for the <code>sap.m.Table<\/code> control.\nThe <code>columns<\/code> aggregation of the <code>sap.m.Table<\/code> should match with the cells aggregation.\n\n<b>Note:<\/b> This control should only be used within the <code>sap.m.Table<\/code> control.\nThe inherited <code>counter<\/code> property of <code>sap.m.ListItemBase<\/code> is not supported.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ComboBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowButton: ${bShowButton}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tloadItems: [function (oEvent) {}, this], // function|array\n\t\tselectedKey: ${\"\"}, // string\n\t\tselectedItemId: ${\"\"}, // string\n\t\tshowSecondaryValues: ${bShowSecondaryValues}, // boolean\n\t\tfilterSecondaryValues: ${bFilterSecondaryValues}, // boolean\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ComboBox","Experimental":false,"module":"sap/m/ComboBox","description":"ComboBox(sId?, mSettings?) : sap.m.ComboBox","constructorDescription":"Constructor for a new ComboBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string (default: )<\/li>\n<li>{@link #getShowSecondaryValues showSecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getFilterSecondaryValues filterSecondaryValues} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBoxBase#constructor sap.m.ComboBoxBase}\ncan be used as well.","extends":"sap.m.ComboBoxBase","Deprecated":false,"name":"sap.m.ComboBox","helpDescription":"A drop-down list for selecting and filtering values.\n<h3>Overview<\/h3>\nThe control represents a drop-down menu with a list of the available options and a text input field to narrow down the options.\n<h3>Structure<\/h3>\nThe combo-box consists of the following elements:\n<ul>\n<li> Input field - displays the selected option or a custom user entry. Users can type to narrow down the list or enter their own value.<\/li>\n<li> Drop-down arrow - expands\\collapses the option list.<\/li>\n<li> Option list - the list of available options.<\/li>\n<\/ul>\nBy setting the <code>showSecondaryValues<\/code> property, the combo box can display an additional value for each option (if there is one). Filtering is done only on the first option.\n<h3>Usage<\/h3>\n<h4>When to use:<\/h4>\n<ul>\n<li>You need to select only one item in a long list of options (between 13 and 200) or your custom user input.<\/li>\n<\/ul>\n<h4>When not to use:<\/h4>\n<ul>\n<li>You need to select between only two options. Use a {@link sap.m.Switch switch} control instead.<\/li>\n<li>You need to select between 12 options. Use a {@link sap.m.Select select} control instead.<\/li>\n<li>You need to select between more than 200 options. Use a {@link sap.m.Input input} control with value help instead.<\/li>\n<\/ul>\n<h3>Responsive Behavior<\/h3>\n<ul>\n<li>The width of the option list adapts to its content. The minimum width is the input field plus the drop-down arrow.<\/li>\n<li>There is no horizontal scrolling in the option list. Entries in the list that are too long will be truncated.<\/li>\n<li>On phone devices the combo box option list opens a dialog.<\/li>\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemPressed: ${bItemPressed} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ComboBox.fireChange","description":"fireChange(mParameters?) : sap.m.ComboBox","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionChange(\n\t{\n\t\tselectedItem: ${selectedItem} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ComboBox.fireSelectionChange","description":"fireSelectionChange(mParameters?) : sap.m.ComboBox","helpDescription":"Fires event <code>selectionChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ComboBoxBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowButton: ${bShowButton}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tloadItems: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ComboBoxBase","Experimental":false,"module":"sap/m/ComboBoxBase","description":"ComboBoxBase(sId?, mSettings?) : sap.m.ComboBoxBase","constructorDescription":"Constructor for a new <code>sap.m.ComboBoxBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:loadItems loadItems} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBoxTextField#constructor sap.m.ComboBoxTextField}\ncan be used as well.","extends":"sap.m.ComboBoxTextField","Deprecated":false,"name":"sap.m.ComboBoxBase","helpDescription":"An abstract class for combo boxes.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ComboBoxTextField(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowButton: ${bShowButton} // boolean\n\t}\n)\n","static":"true","prefix":"ComboBoxTextField","Experimental":false,"module":"sap/m/ComboBoxTextField","description":"ComboBoxTextField(sId?, mSettings?) : sap.m.ComboBoxTextField","constructorDescription":"Constructor for a new <code>sap.m.ComboBoxTextField<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getShowButton showButton} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","extends":"sap.m.InputBase","Deprecated":false,"name":"sap.m.ComboBoxTextField","helpDescription":"The <code>sap.m.ComboBoxTextField<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.CustomListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"CustomListItem","Experimental":false,"module":"sap/m/CustomListItem","description":"CustomListItem(sId?, mSettings?) : sap.m.CustomListItem","constructorDescription":"Constructor for a new CustomListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.CustomListItem","helpDescription":"This control with a content aggregation can be used to customize standard list items that we don't provide. List mode and ListItem type are applied to CustomListItems as well.\n<b>Note:<\/b> Even though the content aggregation allows any control, complex responsive layout controls (e.g. <code>Table, Form<\/code>) should not be aggregated as content.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.CustomTile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tremovable: ${bRemovable}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tcontent: ${content} // sap.ui.core.Control\n\t}\n)\n","static":"true","prefix":"CustomTile","Experimental":false,"module":"sap/m/CustomTile","description":"CustomTile(sId?, mSettings?) : sap.m.CustomTile","constructorDescription":"Constructor for a new CustomTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Tile#constructor sap.m.Tile}\ncan be used as well.","extends":"sap.m.Tile","Deprecated":false,"name":"sap.m.CustomTile","helpDescription":"Use the CustomTile control to display application specific content in the Tile control.\nThe tile width is 8.5em and height is 10em.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.DatePicker(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tdisplayFormatType: ${\"\"}, // string\n\t\tsecondaryCalendarType: ${secondaryCalendarType}, // sap.ui.core.CalendarType\n\t\tminDate: ${minDate}, // object\n\t\tmaxDate: ${maxDate}, // object\n\t\tspecialDates: [${specialDates}], // sap.ui.core.Element[]\n\t\tlegend: ${legend}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DatePicker","Experimental":false,"module":"sap/m/DatePicker","description":"DatePicker(sId?, mSettings?) : sap.m.DatePicker","constructorDescription":"Constructor for a new <code>DatePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getDateValue dateValue} : object<\/li>\n<li>{@link #getDisplayFormatType displayFormatType} : string (default: )<\/li>\n<li>{@link #getSecondaryCalendarType secondaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getMinDate minDate} : object<\/li>\n<li>{@link #getMaxDate maxDate} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSpecialDates specialDates} : sap.ui.core.Element[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getLegend legend} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","extends":"sap.m.InputBase","Deprecated":false,"name":"sap.m.DatePicker","helpDescription":"Enables the users to select a localized date.\n\n<h3>Overview<\/h3>\n\nThe <code>DatePicker<\/code> lets the users select a localized date using touch,\nmouse, or keyboard input. It consists of two parts: the date input field and the\ndate picker.\n\n<b>Note:<\/b> The {@link sap.ui.unified.Calendar} is used internally only if the\n<code>DatePicker<\/code> is opened (not used for the initial rendering). If the\n<code>sap.ui.unified<\/code> library is not loaded before the\n<code>DatePicker<\/code> is opened, it will be loaded upon opening. This could\nlead to a waiting time when the <code>DatePicker<\/code> is opened for the\nfirst time. To prevent this, apps using the <code>DatePicker<\/code> should also\nload the <code>sap.ui.unified<\/code> library.\n\n<h3>Usage<\/h3>\n\nThe user can enter a date by:\n<ul><li>Using the calendar that opens in a popup<\/li>\n<li>Typing it in directly in the input field (not available for mobile devices)<\/li><\/ul>\n\nOn app level, there are two options to provide a date for the\n<code>DatePicker<\/code> - as a string to the <code>value<\/code> property or as\na JavaScript Date object to the <code>dateValue<\/code> property (only one of\nthese properties should be used at a time):\n\n<ul><li>Use the <code>value<\/code> property if you want to bind the\n<code>DatePicker<\/code> to a model using the <code>sap.ui.model.type.Date<\/code><\/li>\n<li>Use the <code>value<\/code> property if the date is provided as a string from\nthe backend or inside the app (for example, as ABAP type DATS field)<\/li>\n<li>Use the <code>dateValue<\/code> property if the date is already provided as a\nJavaScript Date object or you want to work with a JavaScript Date object<\/li><\/ul>\n\n<h3>Formatting<\/h3>\n\nAll formatting and parsing of dates from and to strings is done using the\n{@link sap.ui.core.format.DateFormat}. If a date is entered by typing it into\nthe input field, it must fit to the used date format and locale.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation.\nSee {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>valueFormat<\/code> is \"yyyy-MM-dd\",\nthe <code>displayFormat<\/code> is \"MMM d, y\", and the used locale is English, a\nvalid value string is \"2015-07-30\", which leads to an output of \"Jul 30, 2015\".\n\nIf no placeholder is set to the <code>DatePicker<\/code>, the used\n<code>displayFormat<\/code> is displayed as a placeholder. If another placeholder\nis needed, it must be set.\n\n<b>Note:<\/b> If the string does NOT match the <code>displayFormat<\/code>\n(from user input) or the <code>valueFormat<\/code> (on app level), the\n{@link sap.ui.core.format.DateFormat} makes an attempt to parse it based on the\nlocale settings. For more information, see the respective documentation in the\nAPI Reference.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>DatePicker<\/code> is smaller in compact mode and provides a\ntouch-friendly size in cozy mode.\n\nOn mobile devices, one tap on the input field opens the <code>DatePicker<\/code>\nin full screen. To close the window, the user can select a date (which triggers\nthe close event), or select Cancel.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireNavigate(\n\t{\n\t\tdateRange: ${dateRange} // sap.ui.unified.DateRange\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.DatePicker.fireNavigate","description":"fireNavigate(mParameters?) : sap.m.DatePicker","helpDescription":"Fires event <code>navigate<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.DateRangeSelection(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tdisplayFormatType: ${\"\"}, // string\n\t\tsecondaryCalendarType: ${secondaryCalendarType}, // sap.ui.core.CalendarType\n\t\tminDate: ${minDate}, // object\n\t\tmaxDate: ${maxDate}, // object\n\t\tspecialDates: [${specialDates}], // sap.ui.core.Element[]\n\t\tlegend: ${legend}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tdelimiter: ${\"-\"}, // string\n\t\tsecondDateValue: ${secondDateValue}, // object\n\t\tfrom: ${from}, // object\n\t\tto: ${to} // object\n\t}\n)\n","static":"true","prefix":"DateRangeSelection","Experimental":false,"module":"sap/m/DateRangeSelection","description":"DateRangeSelection(sId?, mSettings?) : sap.m.DateRangeSelection","constructorDescription":"Constructor for a new <code>DateRangeSelection<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelimiter delimiter} : string (default: -)<\/li>\n<li>{@link #getSecondDateValue secondDateValue} : object<\/li>\n<li>{@link #getFrom from} : object<\/li>\n<li>{@link #getTo to} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DatePicker#constructor sap.m.DatePicker}\ncan be used as well.","extends":"sap.m.DatePicker","Deprecated":false,"name":"sap.m.DateRangeSelection","helpDescription":"A single-field input control that enables the users to enter a localized date range.\n\n<h3>Overview<\/h3>\n\nThe <code>DateRangeSelection<\/code> enables the users to enter a localized\ndate range using touch, mouse, keyboard input, or by selecting a date range in\nthe calendar. They can also navigate directly from one month or year to another.\n\n<b>Note:<\/b> The {@link sap.ui.unified.Calendar} is used internally only if the\n<code>DateRangeSelection<\/code> is opened (not used for the initial rendering).\nIf the <code>sap.ui.unified<\/code> library is not loaded before the\n<code>DateRangeSelection<\/code> is opened, it will be loaded upon opening.\nThis could lead to a waiting time when the <code>DateRangeSelection<\/code> is\nopened for the first time. To prevent this, apps using the\n<code>DateRangeSelection<\/code> should also load the <code>sap.ui.unified<\/code>\nlibrary.\n\n<h3>Usage<\/h3>\n\n<i>When to use?<\/i>\n\nIf you need a time range and know that your user is a power user who has to\ninput lots of data. If the keyboard is the primary device used for navigating\nthe app, use two input fields. This allows the user to quickly jump from field\nto field. By selecting a date in one of the fields, the other field should\nrecognize the information and jump to the same selection.\n\n<i>When not to use?<\/i>\n\nIf the user's primary goal is not to select ranges or if you just want to enter\na date and a time. For such cases, use the {@link sap.m.DatePicker} or\n{@link sap.m.TimePicker}.\n\nThe user can enter a date by:\n<ul><li>Using the calendar that opens in a popup<\/li>\n<li>Typing it in directly in the input field (not available for mobile devices)<\/li><\/ul>\n\nOn app level, there are two options to provide a date for the\n<code>DateRangeSelection<\/code> - date range as a string to the\n<code>value<\/code> property or JavaScript Date objects to the\n<code>dateValue<\/code> and <code>secondDateValue<\/code> properties (only one of\nthese options should be used at a time):\n\n<ul><li>Use the <code>value<\/code> property if the date range is already provided as\na formatted string<\/li>\n<li>Use the <code>dateValue<\/code> and <code>secondDateValue<\/code> properties\nif the date range is already provided as JavaScript Date objects or you want to\nwork with JavaScript Date objects<\/li><\/ul>\n\n<h3>Formatting<\/h3>\n\nAll formatting and parsing of dates from and to strings is done using the\n{@link sap.ui.core.format.DateFormat}. If a date is entered by typing it into\nthe input field, it must fit to the used date format and locale.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation.\nSee {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>displayFormat<\/code> is \"MMM d, y\", delimiter is \"-\",\nand the used locale is English, a valid value string is \"Jul 29, 2015 - Jul 31,\n2015\" and it is displayed in the same way in the input field.\n\nIf no placeholder is set to the <code>DateRangeSelection<\/code>, the used\n<code>displayFormat<\/code> is displayed as a placeholder. If another placeholder\nis needed, it must be set.\n\n<b>Note:<\/b> If the string does NOT match the <code>displayFormat<\/code>\n(from user input) or the <code>valueFormat<\/code> (on app level), the\n{@link sap.ui.core.format.DateFormat} makes an attempt to parse it based on the\nlocale settings. For more information, see the respective documentation in the\nAPI Reference.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>DateRangeSelection<\/code> is fully responsive. It is smaller in\ncompact mode and provides a touch-friendly size in cozy mode.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.DateTimeInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\ttype: ${sap.m.DateTimeInputType.Date}, // sap.m.DateTimeInputType\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DateTimeInput","Experimental":false,"module":"sap/m/DateTimeInput","description":"DateTimeInput(sId?, mSettings?) : sap.m.DateTimeInput","constructorDescription":"Constructor for a new DateTimeInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getShowValueStateMessage showValueStateMessage} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getType type} : sap.m.DateTimeInputType (default: Date)<\/li>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getDateValue dateValue} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":true,"name":"sap.m.DateTimeInput","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.8 Instead, use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> controls.<br>Allows end users to interact with date and/or time and select from a date and/or time pad.\n\n<b>Note:<\/b> This control should not be used any longer, instead please use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"Instead, use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> controls.","since":"1.32.8"}},{"template":"fireChange(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tvalid: ${bValid} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.DateTimeInput.fireChange","description":"fireChange(mParameters?) : sap.m.DateTimeInput","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Instead, use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> controls.","since":"1.32.8"}},{"template":"new sap.m.DateTimePicker(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tdisplayFormatType: ${\"\"}, // string\n\t\tsecondaryCalendarType: ${secondaryCalendarType}, // sap.ui.core.CalendarType\n\t\tminDate: ${minDate}, // object\n\t\tmaxDate: ${maxDate}, // object\n\t\tspecialDates: [${specialDates}], // sap.ui.core.Element[]\n\t\tlegend: ${legend}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DateTimePicker","Experimental":false,"module":"sap/m/DateTimePicker","description":"DateTimePicker(sId?, mSettings?) : sap.m.DateTimePicker","constructorDescription":"Constructor for a new <code>DateTimePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DatePicker#constructor sap.m.DatePicker}\ncan be used as well.","extends":"sap.m.DatePicker","Deprecated":false,"name":"sap.m.DateTimePicker","helpDescription":"Enables the users to select date and time values in a combined input.\n\n<h3>Overview<\/h3>\n\nThe <code>DateTimePicker<\/code> control consists of two parts: the input field and the\ndate/time picker.\n\n<b>Note:<\/b> The {@link sap.ui.unified.Calendar} is used internally only if the\n<code>DateTimePicker<\/code> is opened (not used for the initial rendering). If\nthe <code>sap.ui.unified<\/code> library is not loaded before the\n<code>DateTimePicker<\/code> is opened, it will be loaded upon opening. This\ncould lead to a waiting time when the <code>DateTimePicker<\/code> is opened for\nthe first time. To prevent this, apps using the <code>DateTimePicker<\/code>\nshould also load the <code>sap.ui.unified<\/code> library.\n\n<h3>Usage<\/h3>\n\nUse this control if you need a combined date and time input control.\n\nDon't use it if you want to use either a date or a time value. In this case,\nuse the {@link sap.m.DatePicker} or the {@link sap.m.TimePicker} controls\ninstead.\n\nThe user can enter a date by:\n<ul> <li>Using the calendar or a time selector that opens in a popup<\/li>\n<li>Typing it in directly in the input field<\/li><\/ul>\n\nOn app level, there are two options to provide a date for the\n<code>DateTimePicker<\/code> - as a string to the <code>value<\/code> property\nor as a JavaScript Date object to the <code>dateValue<\/code> property (only one\nof these properties should be used at a time):\n\n<ul><li>Use the <code>value<\/code> property if you want to bind the\n<code>DateTimePicker<\/code> to a model using the\n<code>sap.ui.model.type.DateTime<\/code><\/li>\n<li>Use the <code>value<\/code> property if the date is provided as a string from\nthe backend or inside the app (for example, as ABAP type DATS field)<\/li>\n<li>Use the <code>dateValue<\/code> property if the date is already provided as a\nJavaScript Date object or you want to work with a JavaScript Date object<\/li><\/ul>\n\n<h3>Formatting<\/h3>\n\nAll formatting and parsing of dates from and to strings is done using the\n{@link sap.ui.core.format.DateFormat}. If a date is entered by typing it into\nthe input field, it must fit to the used date format and locale.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation.\nSee {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>valueFormat<\/code> is \"yyyy-MM-dd-HH-mm-ss\", the\n<code>displayFormat<\/code> is \"MMM d, y, HH:mm:ss\", and the used locale is\nEnglish, a valid value string is \"2015-07-30-10-30-15\", which leads to an output\nof \"Jul 30, 2015, 10:30:15\".\n\nIf no placeholder is set to the <code>DateTimePicker<\/code>, the used\n<code>displayFormat<\/code> is displayed as a placeholder. If another placeholder\nis needed, it must be set.\n\n<b>Note:<\/b> If the string does NOT match the <code>displayFormat<\/code>\n(from user input) or the <code>valueFormat<\/code> (on app level), the\n{@link sap.ui.core.format.DateFormat} makes an attempt to parse it based on the\nlocale settings. For more information, see the respective documentation in the\nAPI Reference.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>DateTimePicker<\/code> is responsive and fully adapts to all devices.\nFor larger screens, such as tablet or desktop, it opens as a popover. For\nmobile devices, it opens in full screen.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Dialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ttitle: \"${title}\", // string\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\ttype: ${sap.m.DialogType.Standard}, // sap.m.DialogType\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tstretchOnPhone: ${bStretchOnPhone}, // boolean\n\t\tstretch: ${bStretch}, // boolean\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\thorizontalScrolling: ${bHorizontalScrolling}, // boolean\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tresizable: ${bResizable}, // boolean\n\t\tdraggable: ${bDraggable}, // boolean\n\t\tescapeHandler: ${escapeHandler}, // any\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcustomHeader: ${customHeader}, // sap.m.IBar\n\t\tbeginButton: ${beginButton}, // sap.m.Button\n\t\tendButton: ${endButton}, // sap.m.Button\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tleftButton: ${leftButton}, // (sap.m.Button|string)\n\t\trightButton: ${rightButton}, // (sap.m.Button|string)\n\t\tinitialFocus: ${initialFocus}, // (sap.ui.core.Control|string)\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Dialog","Experimental":false,"module":"sap/m/Dialog","description":"Dialog(sId?, mSettings?) : sap.m.Dialog","constructorDescription":"Constructor for a new Dialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getType type} : sap.m.DialogType (default: Standard)<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getStretchOnPhone stretchOnPhone} : boolean (default: false)<\/li>\n<li>{@link #getStretch stretch} : boolean (default: false)<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<li>{@link #getDraggable draggable} : boolean (default: false)<\/li>\n<li>{@link #getEscapeHandler escapeHandler} : any<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.m.IBar<\/li>\n<li>{@link #getBeginButton beginButton} : sap.m.Button<\/li>\n<li>{@link #getEndButton endButton} : sap.m.Button<\/li>\n<li>{@link #getButtons buttons} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getLeftButton leftButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getRightButton rightButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Dialog","helpDescription":"The Dialog control is used to interrupt the current processing of an application to prompt the user for information or a response.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterClose(\n\t{\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Dialog.fireAfterClose","description":"fireAfterClose(mParameters?) : sap.m.Dialog","helpDescription":"Fires event <code>afterClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeClose(\n\t{\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Dialog.fireBeforeClose","description":"fireBeforeClose(mParameters?) : sap.m.Dialog","helpDescription":"Fires event <code>beforeClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.DisplayListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tlabel: \"${label}\", // string\n\t\tvalue: \"${value}\", // string\n\t\tvalueTextDirection: ${sap.ui.core.TextDirection.Inherit} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","prefix":"DisplayListItem","Experimental":false,"module":"sap/m/DisplayListItem","description":"DisplayListItem(sId?, mSettings?) : sap.m.DisplayListItem","constructorDescription":"Constructor for a new DisplayListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueTextDirection valueTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.DisplayListItem","helpDescription":"<code>sap.m.DisplayListItem<\/code> can be used to represent a label and a value.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.FacetFilter(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tshowPersonalization: ${bShowPersonalization}, // boolean\n\t\ttype: ${sap.m.FacetFilterType.Simple}, // sap.m.FacetFilterType\n\t\tliveSearch: ${bLiveSearch}, // boolean\n\t\tshowSummaryBar: ${bShowSummaryBar}, // boolean\n\t\tshowReset: ${bShowReset}, // boolean\n\t\tshowPopoverOKButton: ${bShowPopoverOKButton}, // boolean\n\t\tlists: [${lists}], // sap.m.FacetFilterList[]\n\t\treset: [function (oEvent) {}, this], // function|array\n\t\tconfirm: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"FacetFilter","Experimental":false,"module":"sap/m/FacetFilter","description":"FacetFilter(sId?, mSettings?) : sap.m.FacetFilter","constructorDescription":"Constructor for a new <code>FacetFilter<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowPersonalization showPersonalization} : boolean (default: false)<\/li>\n<li>{@link #getType type} : sap.m.FacetFilterType (default: Simple)<\/li>\n<li>{@link #getLiveSearch liveSearch} : boolean (default: true)<\/li>\n<li>{@link #getShowSummaryBar showSummaryBar} : boolean (default: false)<\/li>\n<li>{@link #getShowReset showReset} : boolean (default: true)<\/li>\n<li>{@link #getShowPopoverOKButton showPopoverOKButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLists lists} : sap.m.FacetFilterList[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:reset reset} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.FacetFilter","helpDescription":"Provides filtering functionality with multiple parameters.\n\n<h3>Overview<\/h3>\n\nThe <code>FacetFilter<\/code> control is used to provide filtering functionality\nwith multiple parameters and supports the users in finding the information they\nneed from potentially very large data sets.\n\nYour app can have dependencies between facets where selection of filter items in\none facet list limits the list of valid filters in another facet list.\n\nThe <code>FacetFilter<\/code> uses {@link sap.m.FacetFilterList FacetFilterList} and\n{@link sap.m.FacetFilterItem FacetFilterItem} to model facets and their associated\nfilters.\n\n<b>Note: <\/b>{@link sap.m.FacetFilterList FacetFilterList} is a subclass of\n{@link sap.m.List} and supports growing enablement feature via the property\n<code>growing<\/code>. When you use this feature, be aware that it only works with\none-way data binding.\nHaving growing feature enabled when the <code>items<\/code> aggregation is bound to\na model with two-way data binding, may lead to unexpected and/or inconsistent\nbehavior across browsers, such as unexpected closing of the list.\n\n<h3>Usage<\/h3>\n\nUse the <code>FacetFilter<\/code> if your app displays a large list of\nitems that can be grouped by multiple parameters, for example products by category\nand supplier. With the <code>FacetFilter<\/code>, you allow the users\nto dynamically filter the list so it only displays products from the categories and\nsuppliers they want to see.\n\nWhile the {@link sap.m.FacetFilterList} popup is opened (when the user selects a button\ncorresponding to the list's name), any other activities leading to focus change will\nclose it. For example, when the popup is opened and the app developer loads a\n{@link sap.m.BusyDialog} or any other dialog that obtains the focus, the popup will\nbe closed.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>FacetFilter<\/code> supports the following two types, which\ncan be configured using the control's <code>type<\/code> property:\n\n<ul><li>Simple type (default) - only available for desktop and tablet screen sizes.\nThe active facets are displayed as individually selectable buttons on the toolbar.<\/li>\n<li>Light type - automatically enabled on smart phone sized devices, but also\navailable for desktop and tablets. The active facets and selected filter items are\ndisplayed in the summary bar. When the user selects the summary bar, a navigable\ndialog list of all facets is displayed. When the user selects a facet, the dialog\nscrolls to show the list of filters that are available for the selected facet.<\/li><\/ul>\n\n<h3>Additional Information<\/h3>\n\nFor more information, go to <b>Developer Guide<\/b> section in the Demo Kit and navigate to\n<b>More&nbsp;About&nbsp;Controls<\/b>&nbsp;>&nbsp;<b>sap.m<\/b>&nbsp;>&nbsp;<b>Facet&nbsp;Filter<\/b>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.FacetFilterItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tkey: \"${key}\", // string\n\t\ttext: \"${text}\", // string\n\t\tcount: ${count} // int\n\t}\n)\n","static":"true","prefix":"FacetFilterItem","Experimental":false,"module":"sap/m/FacetFilterItem","description":"FacetFilterItem(sId?, mSettings?) : sap.m.FacetFilterItem","constructorDescription":"Constructor for a new <code>FacetFilterItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getCount count} : int<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.FacetFilterItem","helpDescription":"Represents a value for the {@link sap.m.FacetfilterList} control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.FacetFilterList(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this], // function|array\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tcolumns: [${columns}], // sap.m.Column[]\n\t\ttitle: \"${title}\", // string\n\t\twordWrap: ${bWordWrap}, // boolean\n\t\tmultiSelect: ${bMultiSelect}, // boolean\n\t\tactive: ${bActive}, // boolean\n\t\tenableCaseInsensitiveSearch: ${bEnableCaseInsensitiveSearch}, // boolean\n\t\tallCount: ${allCount}, // int\n\t\tsequence: ${-1}, // int\n\t\tkey: \"${key}\", // string\n\t\tshowRemoveFacetIcon: ${bShowRemoveFacetIcon}, // boolean\n\t\tretainListSequence: ${bRetainListSequence}, // boolean\n\t\tdataType: ${sap.m.FacetFilterListDataType.String}, // sap.m.FacetFilterListDataType\n\t\tlistOpen: [function (oEvent) {}, this], // function|array\n\t\tlistClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"FacetFilterList","Experimental":false,"module":"sap/m/FacetFilterList","description":"FacetFilterList(sId?, mSettings?) : sap.m.FacetFilterList","constructorDescription":"Constructor for a new <code>FacetFilterList<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getWordWrap wordWrap} : boolean (default: false)<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: true)<\/li>\n<li>{@link #getActive active} : boolean (default: true)<\/li>\n<li>{@link #getEnableCaseInsensitiveSearch enableCaseInsensitiveSearch} : boolean (default: false)<\/li>\n<li>{@link #getAllCount allCount} : int<\/li>\n<li>{@link #getSequence sequence} : int (default: -1)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getShowRemoveFacetIcon showRemoveFacetIcon} : boolean (default: true)<\/li>\n<li>{@link #getRetainListSequence retainListSequence} : boolean (default: false)<\/li>\n<li>{@link #getDataType dataType} : sap.m.FacetFilterListDataType (default: String)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:listOpen listOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:listClose listClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.List#constructor sap.m.List}\ncan be used as well.","extends":"sap.m.List","Deprecated":false,"name":"sap.m.FacetFilterList","helpDescription":"Represents a list of values for the {@link sap.m.FacetFilter} control.\n\n<b>Note: <\/b><code>FacetFilterList<\/code> is a subclass of {@link sap.m.List} and supports\ngrowing enablement feature via the property <code>growing<\/code>. When you use this feature,\nbe aware that it only works with one-way data binding.\nHaving growing feature enabled when the <code>items<\/code> aggregation is bound to\na model with two-way data binding, may lead to unexpected and/or inconsistent\nbehavior across browsers, such as unexpected closing of the list.\n\nWhile the <code>FacetFilterList<\/code> popup is opened (when the user selects a button\ncorresponding to the list's name), any other activities leading to focus change will\nclose it. For example, when the popup is opened and the app developer loads a\n{@link sap.m.BusyDialog} or any other dialog that obtains the focus, the popup will\nbe closed.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireListClose(\n\t{\n\t\tselectedItems: [${selectedItems}], // sap.m.FacetFilterItem[]\n\t\tallSelected: ${bAllSelected}, // boolean\n\t\tselectedKeys: ${selectedKeys} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.FacetFilterList.fireListClose","description":"fireListClose(mParameters?) : sap.m.FacetFilterList","helpDescription":"Fires event <code>listClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.FeedContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tcontentText: \"${contentText}\", // string\n\t\tsubheader: \"${subheader}\", // string\n\t\tvalue: \"${value}\", // string\n\t\tvalueColor: ${valueColor}, // sap.m.ValueColor\n\t\ttruncateValueTo: ${4}, // int\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"FeedContent","Experimental":false,"module":"sap/m/FeedContent","description":"FeedContent(sId?, mSettings?) : sap.m.FeedContent","constructorDescription":"Constructor for a new sap.m.FeedContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getContentText contentText} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueColor<\/li>\n<li>{@link #getTruncateValueTo truncateValueTo} : int (default: 4)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.FeedContent","helpDescription":"Displays a tile containing the text of the feed, a subheader, and a numeric value.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.FeedInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\tmaxLength: ${0}, // int\n\t\tplaceholder: ${\"Post something here\"}, // string\n\t\tvalue: \"${value}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tshowIcon: ${bShowIcon}, // boolean\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tbuttonTooltip: ${sap.ui.core.TooltipBase.Submit}, // sap.ui.core.TooltipBase\n\t\tariaLabelForPicture: \"${ariaLabelForPicture}\", // string\n\t\tpost: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"FeedInput","Experimental":false,"module":"sap/m/FeedInput","description":"FeedInput(sId?, mSettings?) : sap.m.FeedInput","constructorDescription":"Constructor for a new FeedInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: Post something here)<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getButtonTooltip buttonTooltip} : sap.ui.core.TooltipBase (default: Submit)<\/li>\n<li>{@link #getAriaLabelForPicture ariaLabelForPicture} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:post post} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.FeedInput","helpDescription":"The Feed Input allows the user to enter text for a new feed entry and then post it.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"firePost(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.FeedInput.firePost","description":"firePost(mParameters?) : sap.m.FeedInput","helpDescription":"Fires event <code>post<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.FeedListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\tsender: \"${sender}\", // string\n\t\ttext: \"${text}\", // string\n\t\tinfo: \"${info}\", // string\n\t\ttimestamp: \"${timestamp}\", // string\n\t\tsenderActive: ${bSenderActive}, // boolean\n\t\ticonActive: ${bIconActive}, // boolean\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tshowIcon: ${bShowIcon}, // boolean\n\t\tconvertLinksToAnchorTags: ${sap.m.LinkConversion.None}, // sap.m.LinkConversion\n\t\tconvertedLinksDefaultTarget: ${\"_blank\"}, // string\n\t\tmaxCharacters: ${maxCharacters}, // int\n\t\tsenderPress: [function (oEvent) {}, this], // function|array\n\t\ticonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"FeedListItem","Experimental":false,"module":"sap/m/FeedListItem","description":"FeedListItem(sId?, mSettings?) : sap.m.FeedListItem","constructorDescription":"Constructor for a new FeedListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getSender sender} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getTimestamp timestamp} : string<\/li>\n<li>{@link #getSenderActive senderActive} : boolean (default: true)<\/li>\n<li>{@link #getIconActive iconActive} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: true)<\/li>\n<li>{@link #getConvertLinksToAnchorTags convertLinksToAnchorTags} : sap.m.LinkConversion (default: None)<\/li>\n<li>{@link #getConvertedLinksDefaultTarget convertedLinksDefaultTarget} : string (default: _blank)<\/li>\n<li>{@link #getMaxCharacters maxCharacters} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:senderPress senderPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:iconPress iconPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.FeedListItem","helpDescription":"The control provides a set of properties for text, sender information, time stamp.\nBeginning with release 1.23 the new feature expand / collapse was introduced, which uses the property maxCharacters.\nBeginning with release 1.44, sap.m.FormattedText was introduced which allows html formatted text to be displayed","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireIconPress(\n\t{\n\t\tdomRef: \"${domRef}\", // string\n\t\tgetDomRef: ${fn_getDomRef} // function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.FeedListItem.fireIconPress","description":"fireIconPress(mParameters?) : sap.m.FeedListItem","helpDescription":"Fires event <code>iconPress<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSenderPress(\n\t{\n\t\tdomRef: \"${domRef}\", // string\n\t\tgetDomRef: ${fn_getDomRef} // function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.FeedListItem.fireSenderPress","description":"fireSenderPress(mParameters?) : sap.m.FeedListItem","helpDescription":"Fires event <code>senderPress<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.FlexBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdisplayInline: ${bDisplayInline}, // boolean\n\t\tdirection: ${sap.m.FlexDirection.Row}, // sap.m.FlexDirection\n\t\tfitContainer: ${bFitContainer}, // boolean\n\t\trenderType: ${sap.m.FlexRendertype.Div}, // sap.m.FlexRendertype\n\t\tjustifyContent: ${sap.m.FlexJustifyContent.Start}, // sap.m.FlexJustifyContent\n\t\talignItems: ${sap.m.FlexAlignItems.Stretch}, // sap.m.FlexAlignItems\n\t\twrap: ${sap.m.FlexWrap.NoWrap}, // sap.m.FlexWrap\n\t\talignContent: ${sap.m.FlexAlignContent.Stretch}, // sap.m.FlexAlignContent\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Transparent}, // sap.m.BackgroundDesign\n\t\titems: [${items}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"FlexBox","Experimental":false,"module":"sap/m/FlexBox","description":"FlexBox(sId?, mSettings?) : sap.m.FlexBox","constructorDescription":"Constructor for a new <code>sap.m.FlexBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getDisplayInline displayInline} : boolean (default: false)<\/li>\n<li>{@link #getDirection direction} : sap.m.FlexDirection (default: Row)<\/li>\n<li>{@link #getFitContainer fitContainer} : boolean (default: false)<\/li>\n<li>{@link #getRenderType renderType} : sap.m.FlexRendertype (default: Div)<\/li>\n<li>{@link #getJustifyContent justifyContent} : sap.m.FlexJustifyContent (default: Start)<\/li>\n<li>{@link #getAlignItems alignItems} : sap.m.FlexAlignItems (default: Stretch)<\/li>\n<li>{@link #getWrap wrap} : sap.m.FlexWrap (default: NoWrap)<\/li>\n<li>{@link #getAlignContent alignContent} : sap.m.FlexAlignContent (default: Stretch)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.FlexBox","helpDescription":"The <code>sap.m.FlexBox<\/code> control builds the container for a flexible box layout.<br>\n<br>\n<b>Note:<\/b> Be sure to check the <code>renderType<\/code> setting to avoid issues due to browser inconsistencies.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.FlexItemData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\talignSelf: ${sap.m.FlexAlignSelf.Auto}, // sap.m.FlexAlignSelf\n\t\torder: ${0}, // int\n\t\tgrowFactor: ${0}, // float\n\t\tshrinkFactor: ${1}, // float\n\t\tbaseSize: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tminHeight: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxHeight: ${\"\"}, // sap.ui.core.CSSSize\n\t\tminWidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tstyleClass: ${\"\"}, // string\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Transparent} // sap.m.BackgroundDesign\n\t}\n)\n","static":"true","prefix":"FlexItemData","Experimental":false,"module":"sap/m/FlexItemData","description":"FlexItemData(sId?, mSettings?) : sap.m.FlexItemData","constructorDescription":"Constructor for a new <code>sap.m.FlexItemData<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAlignSelf alignSelf} : sap.m.FlexAlignSelf (default: Auto)<\/li>\n<li>{@link #getOrder order} : int (default: 0)<\/li>\n<li>{@link #getGrowFactor growFactor} : float (default: 0)<\/li>\n<li>{@link #getShrinkFactor shrinkFactor} : float (default: 1)<\/li>\n<li>{@link #getBaseSize baseSize} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxHeight maxHeight} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getStyleClass styleClass} : string (default: )<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","extends":"sap.ui.core.LayoutData","Deprecated":false,"name":"sap.m.FlexItemData","helpDescription":"Holds layout data for a FlexBox|HBox|VBox","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.FormattedText(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\thtmlText: ${\"\"}, // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tconvertLinksToAnchorTags: ${sap.m.LinkConversion.None}, // sap.m.LinkConversion\n\t\tconvertedLinksDefaultTarget: ${\"_blank\"}, // string\n\t\theight: ${height} // sap.ui.core.CSSSize\n\t}\n)\n","static":"true","prefix":"FormattedText","Experimental":false,"module":"sap/m/FormattedText","description":"FormattedText(sId?, mSettings?) : sap.m.FormattedText","constructorDescription":"Constructor for a new FormattedText.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHtmlText htmlText} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getConvertLinksToAnchorTags convertLinksToAnchorTags} : sap.m.LinkConversion (default: None)<\/li>\n<li>{@link #getConvertedLinksDefaultTarget convertedLinksDefaultTarget} : string (default: _blank)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.FormattedText","helpDescription":"The FormattedText control allows the usage of a limited set of tags for inline display of formatted text in HTML format.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.GenericTile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tmode: ${sap.m.GenericTileMode.ContentMode}, // sap.m.GenericTileMode\n\t\theader: \"${header}\", // string\n\t\tsubheader: \"${subheader}\", // string\n\t\tfailedText: \"${failedText}\", // string\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tframeType: ${sap.m.FrameType.OneByOne}, // sap.m.FrameType\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\theaderImage: ${headerImage}, // sap.ui.core.URI\n\t\tstate: ${sap.m.LoadState.Loaded}, // sap.m.LoadState\n\t\timageDescription: \"${imageDescription}\", // string\n\t\tscope: ${sap.m.GenericTileScope.Display}, // sap.m.GenericTileScope\n\t\ttileContent: [${tileContent}], // sap.m.TileContent[]\n\t\ticon: ${icon}, // sap.ui.core.Control\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"GenericTile","Experimental":false,"module":"sap/m/GenericTile","description":"GenericTile(sId?, mSettings?) : sap.m.GenericTile","constructorDescription":"Constructor for a new sap.m.GenericTile control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : sap.m.GenericTileMode (default: ContentMode)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<li>{@link #getFailedText failedText} : string<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getFrameType frameType} : sap.m.FrameType (default: OneByOne)<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getHeaderImage headerImage} : sap.ui.core.URI<\/li>\n<li>{@link #getState state} : sap.m.LoadState (default: Loaded)<\/li>\n<li>{@link #getImageDescription imageDescription} : string<\/li>\n<li>{@link #getScope scope} : sap.m.GenericTileScope (default: Display)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTileContent tileContent} : sap.m.TileContent[] (default)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.GenericTile","helpDescription":"Displays header, subheader, and a customizable main area in a tile format. Since 1.44, also an in-line format which contains only header and subheader is supported.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"firePress(\n\t{\n\t\tscope: ${scope}, // sap.m.GenericTileScope\n\t\taction: \"${action}\", // string\n\t\tdomRef: ${domRef} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.GenericTile.firePress","description":"firePress(mParameters?) : sap.m.GenericTile","helpDescription":"Fires event <code>press<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.GroupHeaderListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tcount: \"${count}\", // string\n\t\tupperCase: ${bUpperCase}, // boolean\n\t\ttitleTextDirection: ${sap.ui.core.TextDirection.Inherit} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","prefix":"GroupHeaderListItem","Experimental":false,"module":"sap/m/GroupHeaderListItem","description":"GroupHeaderListItem(sId?, mSettings?) : sap.m.GroupHeaderListItem","constructorDescription":"Constructor for a new GroupHeaderListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getCount count} : string<\/li>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.GroupHeaderListItem","helpDescription":"<code>sap.m.GroupHeaderListItem<\/code> is used to display the title of a group and act as separator between groups in <code>sap.m.List<\/code> and <code>sap.m.Table<\/code>.\n<b>Note:<\/b> The inherited properties <code>unread<\/code>, <code>selected<\/code>, <code>counter<\/code> and <code>press<\/code> event from <code>sap.m.ListItemBase<\/code> are not supported.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.GrowingList(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this], // function|array\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tcolumns: [${columns}], // sap.m.Column[]\n\t\tthreshold: ${20}, // int\n\t\ttriggerText: \"${triggerText}\", // string\n\t\tscrollToLoad: ${bScrollToLoad} // boolean\n\t}\n)\n","static":"true","prefix":"GrowingList","Experimental":false,"module":"sap/m/GrowingList","description":"GrowingList(sId?, mSettings?) : sap.m.GrowingList","constructorDescription":"Constructor for a new GrowingList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getThreshold threshold} : int (default: 20)<\/li>\n<li>{@link #getTriggerText triggerText} : string<\/li>\n<li>{@link #getScrollToLoad scrollToLoad} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.List#constructor sap.m.List}\ncan be used as well.","extends":"sap.m.List","Deprecated":true,"name":"sap.m.GrowingList","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead use \"List\" or \"Table\" control with setting \"growing\" property to \"true\"<br>sap.m.GrowingList control is the container for all list items and inherits from sap.m.List control. Everything like the selection, deletion, unread states and inset style are also maintained here. In addition the control provides a loading mechanism to request data from the model and append the list items to the list. The request is started manually by tapping on the trigger at the end of the list.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Instead use \"List\" or \"Table\" control with setting \"growing\" property to \"true\"","since":"1.16"}},{"template":"new sap.m.HBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdisplayInline: ${bDisplayInline}, // boolean\n\t\tdirection: ${sap.m.FlexDirection.Row}, // sap.m.FlexDirection\n\t\tfitContainer: ${bFitContainer}, // boolean\n\t\trenderType: ${sap.m.FlexRendertype.Div}, // sap.m.FlexRendertype\n\t\tjustifyContent: ${sap.m.FlexJustifyContent.Start}, // sap.m.FlexJustifyContent\n\t\talignItems: ${sap.m.FlexAlignItems.Stretch}, // sap.m.FlexAlignItems\n\t\twrap: ${sap.m.FlexWrap.NoWrap}, // sap.m.FlexWrap\n\t\talignContent: ${sap.m.FlexAlignContent.Stretch}, // sap.m.FlexAlignContent\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Transparent}, // sap.m.BackgroundDesign\n\t\titems: [${items}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"HBox","Experimental":false,"module":"sap/m/HBox","description":"HBox(sId?, mSettings?) : sap.m.HBox","constructorDescription":"Constructor for a new HBox.","extends":"sap.m.FlexBox","Deprecated":false,"name":"sap.m.HBox","helpDescription":"The HBox control builds the container for a horizontal flexible box layout. HBox is a convenience control, as it is just a specialized FlexBox control.<br>\n<br>\n<b>Note:<\/b> Be sure to check the <code>renderType<\/code> setting to avoid issues due to browser inconsistencies.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.HeaderContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tscrollStep: ${300}, // int\n\t\tscrollTime: ${500}, // int\n\t\tshowDividers: ${bShowDividers}, // boolean\n\t\torientation: ${sap.ui.core.Orientation.Horizontal}, // sap.ui.core.Orientation\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.library.BackgroundDesign.Transparent}, // sap.m.BackgroundDesign\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"HeaderContainer","Experimental":false,"module":"sap/m/HeaderContainer","description":"HeaderContainer(sId?, mSettings?) : sap.m.HeaderContainer","constructorDescription":"Constructor for the new HeaderContainer control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getScrollStep scrollStep} : int (default: 300)<\/li>\n<li>{@link #getScrollTime scrollTime} : int (default: 500)<\/li>\n<li>{@link #getShowDividers showDividers} : boolean (default: true)<\/li>\n<li>{@link #getOrientation orientation} : sap.ui.core.Orientation (default: Horizontal)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: library.BackgroundDesign.Transparent)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.HeaderContainer","helpDescription":"The container that provides a horizontal layout. It provides a horizontal scrolling on the mobile devices.\nOn the desktop, it provides scroll left and scroll right buttons. This control supports keyboard navigation.\nYou can use left and right arrow keys to navigate through the inner content. The Home key puts focus on the first control and the End key puts focus on the last control.\nUse Enter or Space key to choose the control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.IconTabBar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tshowSelection: ${bShowSelection}, // boolean\n\t\texpandable: ${bExpandable}, // boolean\n\t\texpanded: ${bExpanded}, // boolean\n\t\tselectedKey: \"${selectedKey}\", // string\n\t\tupperCase: ${bUpperCase}, // boolean\n\t\tstretchContentHeight: ${bStretchContentHeight}, // boolean\n\t\tapplyContentPadding: ${bApplyContentPadding}, // boolean\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\theaderMode: ${sap.m.IconTabHeaderMode.Standard}, // sap.m.IconTabHeaderMode\n\t\tshowOverflowSelectList: ${bShowOverflowSelectList}, // boolean\n\t\theaderBackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tenableTabReordering: ${bEnableTabReordering}, // boolean\n\t\titems: [${items}], // sap.m.IconTab[]\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\texpand: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"IconTabBar","Experimental":false,"module":"sap/m/IconTabBar","description":"IconTabBar(sId?, mSettings?) : sap.m.IconTabBar","constructorDescription":"Constructor for a new IconTabBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowSelection showSelection} : boolean (default: true)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: true)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<li>{@link #getStretchContentHeight stretchContentHeight} : boolean (default: false)<\/li>\n<li>{@link #getApplyContentPadding applyContentPadding} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<li>{@link #getHeaderMode headerMode} : sap.m.IconTabHeaderMode (default: Standard)<\/li>\n<li>{@link #getShowOverflowSelectList showOverflowSelectList} : boolean (default: false)<\/li>\n<li>{@link #getHeaderBackgroundDesign headerBackgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<li>{@link #getEnableTabReordering enableTabReordering} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.IconTab[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.IconTabBar","helpDescription":"The IconTabBar control represents a collection of tabs with associated content.\n\nIconTabBar covers the following use cases:\n- Filter \u2013 There is only one main content for all tabs. The main content can be filtered, based on the selected tab.\n- Normal tab bar - The contents of each tab are independent from each other.\n- Combination of the above - There can be both filtered and independent contents.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireExpand(\n\t{\n\t\texpand: ${bExpand}, // boolean\n\t\tcollapse: ${bCollapse} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.IconTabBar.fireExpand","description":"fireExpand(mParameters?) : sap.m.IconTabBar","helpDescription":"Fires event <code>expand<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelect(\n\t{\n\t\titem: ${item}, // sap.m.IconTabFilter\n\t\tkey: \"${key}\", // string\n\t\tselectedItem: ${selectedItem}, // sap.m.IconTabFilter\n\t\tselectedKey: \"${selectedKey}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.IconTabBar.fireSelect","description":"fireSelect(mParameters?) : sap.m.IconTabBar","helpDescription":"Fires event <code>select<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.IconTabFilter(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tcount: ${\"\"}, // string\n\t\tshowAll: ${bShowAll}, // boolean\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\ticonColor: ${sap.ui.core.IconColor.Default}, // sap.ui.core.IconColor\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tvisible: ${bVisible}, // boolean\n\t\tdesign: ${sap.m.IconTabFilterDesign.Vertical}, // sap.m.IconTabFilterDesign\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"IconTabFilter","Experimental":false,"module":"sap/m/IconTabFilter","description":"IconTabFilter(sId?, mSettings?) : sap.m.IconTabFilter","constructorDescription":"Constructor for a new IconTabFilter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCount count} : string (default: )<\/li>\n<li>{@link #getShowAll showAll} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconColor iconColor} : sap.ui.core.IconColor (default: Default)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getDesign design} : sap.m.IconTabFilterDesign (default: Vertical)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.IconTabFilter","helpDescription":"Represents a selectable item inside an IconTabBar.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.IconTabHeader(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tshowSelection: ${bShowSelection}, // boolean\n\t\tselectedKey: \"${selectedKey}\", // string\n\t\tvisible: ${bVisible}, // boolean\n\t\tmode: ${sap.m.IconTabHeaderMode.Standard}, // sap.m.IconTabHeaderMode\n\t\tshowOverflowSelectList: ${bShowOverflowSelectList}, // boolean\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tenableTabReordering: ${bEnableTabReordering}, // boolean\n\t\titems: [${items}], // sap.m.IconTab[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"IconTabHeader","Experimental":false,"module":"sap/m/IconTabHeader","description":"IconTabHeader(sId?, mSettings?) : sap.m.IconTabHeader","constructorDescription":"Constructor for a new IconTabHeader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowSelection showSelection} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMode mode} : sap.m.IconTabHeaderMode (default: Standard)<\/li>\n<li>{@link #getShowOverflowSelectList showOverflowSelectList} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<li>{@link #getEnableTabReordering enableTabReordering} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.IconTab[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.IconTabHeader","helpDescription":"This control displays a number of IconTabFilters and IconTabSeparators. If the available horizontal\nspace is exceeded, a horizontal scrolling appears.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelect(\n\t{\n\t\titem: ${item}, // sap.m.IconTabFilter\n\t\tkey: \"${key}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.IconTabHeader.fireSelect","description":"fireSelect(mParameters?) : sap.m.IconTabHeader","helpDescription":"Fires event <code>select<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.IconTabSeparator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\tvisible: ${bVisible}, // boolean\n\t\ticonDensityAware: ${bIconDensityAware} // boolean\n\t}\n)\n","static":"true","prefix":"IconTabSeparator","Experimental":false,"module":"sap/m/IconTabSeparator","description":"IconTabSeparator(sId?, mSettings?) : sap.m.IconTabSeparator","constructorDescription":"Constructor for a new IconTabSeparator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.IconTabSeparator","helpDescription":"Represents an Icon used to separate 2 tab filters.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Image(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsrc: ${src}, // sap.ui.core.URI\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tdecorative: ${bDecorative}, // boolean\n\t\talt: \"${alt}\", // string\n\t\tuseMap: \"${useMap}\", // string\n\t\tdensityAware: ${bDensityAware}, // boolean\n\t\tactiveSrc: ${\"\"}, // sap.ui.core.URI\n\t\tmode: ${sap.m.ImageMode.Image}, // sap.m.ImageMode\n\t\tbackgroundSize: ${\"cover\"}, // string\n\t\tbackgroundPosition: ${\"initial\"}, // string\n\t\tbackgroundRepeat: ${\"no-repeat\"}, // string\n\t\tdetailBox: ${detailBox}, // sap.m.LightBox\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tload: [function (oEvent) {}, this], // function|array\n\t\terror: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Image","Experimental":false,"module":"sap/m/Image","description":"Image(sId?, mSettings?) : sap.m.Image","constructorDescription":"Constructor for a new Image.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDecorative decorative} : boolean (default: true)<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<li>{@link #getUseMap useMap} : string<\/li>\n<li>{@link #getDensityAware densityAware} : boolean (default: true)<\/li>\n<li>{@link #getActiveSrc activeSrc} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getMode mode} : sap.m.ImageMode (default: Image)<\/li>\n<li>{@link #getBackgroundSize backgroundSize} : string (default: cover)<\/li>\n<li>{@link #getBackgroundPosition backgroundPosition} : string (default: initial)<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : string (default: no-repeat)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDetailBox detailBox} : sap.m.LightBox<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tap tap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:load load} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:error error} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Image","helpDescription":"A wrapper around the IMG tag. The image can be loaded from a remote or local server.\n\nDensity related image will be loaded if image with density awareness name in format [imageName]@[densityValue].[extension] is provided. The valid desity values are 1, 1.5, 2. If the original devicePixelRatio isn't one of the three valid numbers, it's rounded up to the nearest one.\n\nThere are various size setting options available, and the images can be combined with actions.\n\nFrom version 1.30, new image mode sap.m.ImageMode.Background is added. When this mode is set, the src property is set using the css style 'background-image'. The properties 'backgroundSize', 'backgroundPosition', 'backgroundRepeat' have effect only when image is in sap.m.ImageMode.Background mode. In order to make the high density image correctly displayed, the 'backgroundSize' should be set to the dimension of the normal density version.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ImageContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsrc: ${src}, // sap.ui.core.URI\n\t\tdescription: \"${description}\", // string\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ImageContent","Experimental":false,"module":"sap/m/ImageContent","description":"ImageContent(sId?, mSettings?) : sap.m.ImageContent","constructorDescription":"Constructor for a new sap.m.ImageContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ImageContent","helpDescription":"This control can be displayed as image content in a tile.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Input(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.InputType.Text}, // sap.m.InputType\n\t\tmaxLength: ${0}, // int\n\t\tdateFormat: ${\"YYYY-MM-dd\"}, // string\n\t\tshowValueHelp: ${bShowValueHelp}, // boolean\n\t\tshowSuggestion: ${bShowSuggestion}, // boolean\n\t\tvalueHelpOnly: ${bValueHelpOnly}, // boolean\n\t\tfilterSuggests: ${bFilterSuggests}, // boolean\n\t\tmaxSuggestionWidth: ${maxSuggestionWidth}, // sap.ui.core.CSSSize\n\t\tstartSuggestion: ${1}, // int\n\t\tshowTableSuggestionValueHelp: ${bShowTableSuggestionValueHelp}, // boolean\n\t\tdescription: \"${description}\", // string\n\t\tfieldWidth: ${\"50%\"}, // sap.ui.core.CSSSize\n\t\tvalueLiveUpdate: ${bValueLiveUpdate}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\ttextFormatMode: ${sap.m.InputTextFormatMode.Value}, // sap.m.InputTextFormatMode\n\t\ttextFormatter: ${\"\"}, // any\n\t\tsuggestionRowValidator: ${\"\"}, // any\n\t\tenableSuggestionsHighlighting: ${bEnableSuggestionsHighlighting}, // boolean\n\t\tsuggestionItems: [${suggestionItems}], // sap.ui.core.Item[]\n\t\tsuggestionColumns: [${suggestionColumns}], // sap.m.Column[]\n\t\tsuggestionRows: [${suggestionRows}], // sap.m.ColumnListItem[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tselectedRow: ${selectedRow}, // (sap.m.ColumnListItem|string)\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tvalueHelpRequest: [function (oEvent) {}, this], // function|array\n\t\tsuggest: [function (oEvent) {}, this], // function|array\n\t\tsuggestionItemSelected: [function (oEvent) {}, this], // function|array\n\t\tsubmit: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Input","Experimental":false,"module":"sap/m/Input","description":"Input(sId?, mSettings?) : sap.m.Input","constructorDescription":"Constructor for a new Input.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.m.InputType (default: Text)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getDateFormat dateFormat} : string (default: YYYY-MM-dd)<\/li>\n<li>{@link #getShowValueHelp showValueHelp} : boolean (default: false)<\/li>\n<li>{@link #getShowSuggestion showSuggestion} : boolean (default: false)<\/li>\n<li>{@link #getValueHelpOnly valueHelpOnly} : boolean (default: false)<\/li>\n<li>{@link #getFilterSuggests filterSuggests} : boolean (default: true)<\/li>\n<li>{@link #getMaxSuggestionWidth maxSuggestionWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getStartSuggestion startSuggestion} : int (default: 1)<\/li>\n<li>{@link #getShowTableSuggestionValueHelp showTableSuggestionValueHelp} : boolean (default: true)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getFieldWidth fieldWidth} : sap.ui.core.CSSSize (default: 50%)<\/li>\n<li>{@link #getValueLiveUpdate valueLiveUpdate} : boolean (default: false)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getTextFormatMode textFormatMode} : sap.m.InputTextFormatMode (default: Value)<\/li>\n<li>{@link #getTextFormatter textFormatter} : any (default: )<\/li>\n<li>{@link #getSuggestionRowValidator suggestionRowValidator} : any (default: )<\/li>\n<li>{@link #getEnableSuggestionsHighlighting enableSuggestionsHighlighting} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSuggestionItems suggestionItems} : sap.ui.core.Item[] (default)<\/li>\n<li>{@link #getSuggestionColumns suggestionColumns} : sap.m.Column[]<\/li>\n<li>{@link #getSuggestionRows suggestionRows} : sap.m.ColumnListItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<li>{@link #getSelectedRow selectedRow} : (sap.ui.core.ID | sap.m.ColumnListItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueHelpRequest valueHelpRequest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggestionItemSelected suggestionItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:submit submit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","extends":"sap.m.InputBase","Deprecated":false,"name":"sap.m.Input","helpDescription":"<strong><em>Overview<\/em><\/strong>\n<br /><br />\nA text input field allows you to enter and edit text or numeric values in one line.\nTo easily enter a valid value, you can enable the autocomplete suggestion feature and the value help option.\n<br><br>\n<strong>Guidelines:<\/strong>\n<ul>\n<li> Always provide a meaningful label for any input field <\/li>\n<li> Limit the length of the input field. This will visually emphasise the constraints for the field. <\/li>\n<li> Do not use the <code>placeholder<\/code> property as a label.<\/li>\n<li> Use the <code>description<\/code> property only for small fields with no placeholders (i.e. for currencies).<\/li>\n<\/ul>\n<strong><em>Structure<\/em><\/strong>\n<br><br>\nThe controls inherits from {@link sap.m.InputBase} which controls the core properties like:\n<ul>\n<li> editable / read-only <\/li>\n<li> enabled / disabled<\/li>\n<li> placeholder<\/li>\n<li> text direction<\/li>\n<li> value states<\/li>\n<\/ul>\nTo aid the user during input, you can enable value help (<code>showValueHelp<\/code>) or autocomplete (<code>showSuggestion<\/code>).\n<strong>Value help<\/strong> will open a new dialog where you can refine your input.\n<strong>Autocomplete<\/strong> has three types of suggestions:\n<ul>\n<li> Single value - a list of suggestions of type <code>sap.ui.core.Item<\/code> or <code>sap.ui.core.ListItem<\/code> <\/li>\n<li> Two values - a list of two suggestions (ID and description) of type <code>sap.ui.core.Item<\/code> or <code>sap.ui.core.ListItem<\/code> <\/li>\n<li> Tabular suggestions of type <code>sap.m.ColumnListItem<\/code> <\/li>\n<\/ul>\nThe suggestions are stored in two aggregations <code>suggestionItems<\/code> (for single and double values) and <code>suggestionRows<\/code> (for tabular values).\n\n<br><br>\n<strong><em>Usage<\/em><\/strong>\n<br><br>\n<strong>When to use:<\/strong>\nUse the control for short inputs like emails, phones, passwords, fields for assisted value selection.\n\n<strong>When not to use:<\/strong>\nDon't use the control for long texts, dates, designated search fields, fields for multiple selection.\n<br><br>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireLiveChange(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Input.fireLiveChange","description":"fireLiveChange(mParameters?) : sap.m.Input","helpDescription":"Fires event <code>liveChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSubmit(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Input.fireSubmit","description":"fireSubmit(mParameters?) : sap.m.Input","helpDescription":"Fires event <code>submit<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSuggest(\n\t{\n\t\tsuggestValue: \"${suggestValue}\", // string\n\t\tsuggestionColumns: ${suggestionColumns} // sap.m.ListBase\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Input.fireSuggest","description":"fireSuggest(mParameters?) : sap.m.Input","helpDescription":"Fires event <code>suggest<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSuggestionItemSelected(\n\t{\n\t\tselectedItem: ${selectedItem}, // sap.ui.core.Item\n\t\tselectedRow: ${selectedRow} // sap.m.ColumnListItem\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Input.fireSuggestionItemSelected","description":"fireSuggestionItemSelected(mParameters?) : sap.m.Input","helpDescription":"Fires event <code>suggestionItemSelected<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireValueHelpRequest(\n\t{\n\t\tfromSuggestions: ${bFromSuggestions} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Input.fireValueHelpRequest","description":"fireValueHelpRequest(mParameters?) : sap.m.Input","helpDescription":"Fires event <code>valueHelpRequest<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.InputBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"InputBase","Experimental":false,"module":"sap/m/InputBase","description":"InputBase(sId?, mSettings?) : sap.m.InputBase","constructorDescription":"Constructor for a new <code>sap.m.InputBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getShowValueStateMessage showValueStateMessage} : boolean (default: true)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.InputBase","helpDescription":"The <code>sap.m.InputBase<\/code> control provides a basic functionality for input controls.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.InputBase.fireChange","description":"fireChange(mParameters?) : sap.m.InputBase","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.InputListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tlabel: \"${label}\", // string\n\t\tlabelTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"InputListItem","Experimental":false,"module":"sap/m/InputListItem","description":"InputListItem(sId?, mSettings?) : sap.m.InputListItem","constructorDescription":"Constructor for a new InputListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getLabelTextDirection labelTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.InputListItem","helpDescription":"List item should be used for a label and an input field.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Label(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdesign: ${sap.m.LabelDesign.Standard}, // sap.m.LabelDesign\n\t\ttext: \"${text}\", // string\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\trequired: ${bRequired}, // boolean\n\t\tlabelFor: ${labelFor} // (sap.ui.core.Control|string)\n\t}\n)\n","static":"true","prefix":"Label","Experimental":false,"module":"sap/m/Label","description":"Label(sId?, mSettings?) : sap.m.Label","constructorDescription":"Constructor for a new Label.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDesign design} : sap.m.LabelDesign (default: Standard)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getLabelFor labelFor} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Label","helpDescription":"The Label control is used in a UI5 mobile application to provide label text for other controls. Design such as bold, and text alignment can be specified.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.LightBox(\n\t\"${sId}\", // string\n\t{\n\t\timageContent: [${imageContent}] // sap.m.LightBoxItem[]\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"LightBox","Experimental":false,"module":"sap/m/LightBox","name":"sap.m.LightBox","description":"LightBox(sId?, mSettings?) : sap.m.LightBox","constructorDescription":"Constructor for a new Lightbox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getImageContent imageContent} : sap.m.LightBoxItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>","helpDescription":"<strong><i>Overview<\/i><\/strong>\n<br><br>\nA {@link sap.m.LightBox} control represents a popup containing an image and a footer.\nThe purpose of the control is to display an image in its original size as long as this is possible. On smaller screens, images are scaled down to fit.\n<br><br>\n<strong>Notes:<\/strong>\n<ul>\n    <li>If the image doesn't load in 10 seconds an error is displayed. <\/li>\n    <li>Setting the <code>imageContent<\/code> aggregation of the control as well as the source of the image and the title of the image is <u>mandatory<\/u>.\n         If the image source is not set, the control will not open.<\/li>\n<\/ul>\n<strong><i>Structure<\/i><\/strong>\n<br><br>\nEach LightBox holds a {@link sap.m.LightBoxItem LightBoxItem} which keeps the properties of the image:\n<ul>\n    <li> imageSrc - The source URI of the image <\/li>\n    <li> title - The title of the image <\/li>\n    <li> subtitle - The subtitle of the image <\/li>\n    <li> alt - The alt text of the image <\/li>\n<\/ul>\n<strong><i>Usage<\/i><\/strong>\n<br><br>\nThe most common usecase is to click on an image thumbnail to view it in bigger size.\nWhen the image that should be displayed in the control cannot be loaded, an error is displayed in the popup.\n<br><br>\n<strong><i>Responsive Behavior<\/i><\/strong>\n<br><br>\nOn a mobile device, flipping the device to landscape will flip the lightbox and the image will be adjusted to fit the new dimensions.\n<br><br>\n<strong><i>Additional Information<\/i><\/strong>\n<br><br>\nCheck out the <a href=\"/#docs/api/symbols/sap.m.LightBox.html\" >API Reference<\/a>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.LightBoxItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\timageSrc: ${\"\"}, // sap.ui.core.URI\n\t\talt: ${\"\"}, // string\n\t\ttitle: ${\"\"}, // string\n\t\tsubtitle: ${\"\"} // string\n\t}\n)\n","static":"true","prefix":"LightBoxItem","Experimental":false,"module":"sap/m/LightBoxItem","description":"LightBoxItem(sId?, mSettings?) : sap.m.LightBoxItem","constructorDescription":"Constructor for a new LightBoxItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getImageSrc imageSrc} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getAlt alt} : string (default: )<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getSubtitle subtitle} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.LightBoxItem","helpDescription":"Represents an item which is displayed within a sap.m.LightBox. This item holds all properties of the image as\nwell as the title and subtitle.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Link(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttarget: \"${target}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\thref: ${href}, // sap.ui.core.URI\n\t\twrapping: ${bWrapping}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tsubtle: ${bSubtle}, // boolean\n\t\temphasized: ${bEmphasized}, // boolean\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Link","Experimental":false,"module":"sap/m/Link","description":"Link(sId?, mSettings?) : sap.m.Link","constructorDescription":"Constructor for a new Link.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHref href} : sap.ui.core.URI<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: false)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getSubtle subtle} : boolean (default: false)<\/li>\n<li>{@link #getEmphasized emphasized} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Link","helpDescription":"A hyperlink control which can be used to trigger actions or to navigate to other applications or web pages.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.List(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this], // function|array\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tcolumns: [${columns}] // sap.m.Column[]\n\t}\n)\n","static":"true","prefix":"List","Experimental":false,"module":"sap/m/List","description":"List(sId?, mSettings?) : sap.m.List","constructorDescription":"Constructor for a new List.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.m.Column[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListBase#constructor sap.m.ListBase}\ncan be used as well.","extends":"sap.m.ListBase","Deprecated":false,"name":"sap.m.List","helpDescription":"The List control provides a container for all types of list items.\nFor mobile devices, the recommended limit of list items is 100 to assure proper performance. To improve initial rendering of large lists, use the \"growing\" feature. Please refer to the SAPUI5 Developer Guide for more information..","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ListBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ListBase","Experimental":false,"module":"sap/m/ListBase","description":"ListBase(sId?, mSettings?) : sap.m.ListBase","constructorDescription":"Constructor for a new ListBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInset inset} : boolean (default: false)<\/li>\n<li>{@link #getHeaderText headerText} : string<\/li>\n<li>{@link #getHeaderDesign headerDesign} : sap.m.ListHeaderDesign (default: Standard)<\/li>\n<li>{@link #getFooterText footerText} : string<\/li>\n<li>{@link #getMode mode} : sap.m.ListMode (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getIncludeItemInSelection includeItemInSelection} : boolean (default: false)<\/li>\n<li>{@link #getShowUnread showUnread} : boolean (default: false)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getShowNoData showNoData} : boolean (default: true)<\/li>\n<li>{@link #getEnableBusyIndicator enableBusyIndicator} : boolean (default: true)<\/li>\n<li>{@link #getModeAnimationOn modeAnimationOn} : boolean (default: true)<\/li>\n<li>{@link #getShowSeparators showSeparators} : sap.m.ListSeparators (default: All)<\/li>\n<li>{@link #getSwipeDirection swipeDirection} : sap.m.SwipeDirection (default: Both)<\/li>\n<li>{@link #getGrowing growing} : boolean (default: false)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int (default: 20)<\/li>\n<li>{@link #getGrowingTriggerText growingTriggerText} : string<\/li>\n<li>{@link #getGrowingScrollToLoad growingScrollToLoad} : boolean (default: false)<\/li>\n<li>{@link #getGrowingDirection growingDirection} : sap.m.ListGrowingDirection (default: Downwards)<\/li>\n<li>{@link #getRememberSelections rememberSelections} : boolean (default: true)<\/li>\n<li>{@link #getKeyboardMode keyboardMode} : sap.m.ListKeyboardMode (default: Navigation)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ListItemBase[] (default)<\/li>\n<li>{@link #getSwipeContent swipeContent} : sap.ui.core.Control<\/li>\n<li>{@link #getHeaderToolbar headerToolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getInfoToolbar infoToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:delete delete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:swipe swipe} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:growingStarted growingStarted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:growingFinished growingFinished} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateStarted updateStarted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateFinished updateFinished} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemPress itemPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ListBase","helpDescription":"The <code>sap.m.ListBase<\/code> control provides a base functionality of the <code>sap.m.List<\/code> and <code>sap.m.Table<\/code> controls. Selection, deletion, unread states and inset style are also maintained in <code>sap.m.ListBase<\/code>.\n\n<b>Note:<\/b> The ListBase including all contained items may be completely re-rendered when the data of a bound model is changed. Due to the limited hardware resources of mobile devices this can lead to longer delays for lists that contain many items. As such the usage of a list is not recommended for these use cases.","category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"fireDelete(\n\t{\n\t\tlistItem: ${listItem} // sap.m.ListItemBase\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ListBase.fireDelete","description":"fireDelete(mParameters?) : sap.m.ListBase","helpDescription":"Fires event <code>delete<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"fireGrowingFinished(\n\t{\n\t\tactual: ${actual}, // int\n\t\ttotal: ${total} // int\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ListBase.fireGrowingFinished","description":"fireGrowingFinished(mParameters?) : sap.m.ListBase","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use \"updateFinished\" event.<br>Fires event <code>growingFinished<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"fireGrowingStarted(\n\t{\n\t\tactual: ${actual}, // int\n\t\ttotal: ${total} // int\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ListBase.fireGrowingStarted","description":"fireGrowingStarted(mParameters?) : sap.m.ListBase","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use <code>updateStarted<\/code> event with listening <code>changeReason<\/code>.<br>Fires event <code>growingStarted<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"fireItemPress(\n\t{\n\t\tlistItem: ${listItem}, // sap.m.ListItemBase\n\t\tsrcControl: ${srcControl} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ListBase.fireItemPress","description":"fireItemPress(mParameters?) : sap.m.ListBase","helpDescription":"Fires event <code>itemPress<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"fireSelect(\n\t{\n\t\tlistItem: ${listItem} // sap.m.ListItemBase\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ListBase.fireSelect","description":"fireSelect(mParameters?) : sap.m.ListBase","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Use the <code>selectionChange<\/code> event instead.<br>Fires event <code>select<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"fireSelectionChange(\n\t{\n\t\tlistItem: ${listItem}, // sap.m.ListItemBase\n\t\tlistItems: [${listItems}], // sap.m.ListItemBase[]\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ListBase.fireSelectionChange","description":"fireSelectionChange(mParameters?) : sap.m.ListBase","helpDescription":"Fires event <code>selectionChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"fireSwipe(\n\t{\n\t\tlistItem: ${listItem}, // sap.m.ListItemBase\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\tsrcControl: ${srcControl} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ListBase.fireSwipe","description":"fireSwipe(mParameters?) : boolean","helpDescription":"Fires event <code>swipe<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"fireUpdateFinished(\n\t{\n\t\treason: \"${reason}\", // string\n\t\tactual: ${actual}, // int\n\t\ttotal: ${total} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ListBase.fireUpdateFinished","description":"fireUpdateFinished(mParameters?) : sap.m.ListBase","helpDescription":"Fires event <code>updateFinished<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"fireUpdateStarted(\n\t{\n\t\treason: \"${reason}\", // string\n\t\tactual: ${actual}, // int\n\t\ttotal: ${total} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ListBase.fireUpdateStarted","description":"fireUpdateStarted(mParameters?) : sap.m.ListBase","helpDescription":"Fires event <code>updateStarted<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"}},{"template":"new sap.m.ListItemBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ListItemBase","Experimental":false,"module":"sap/m/ListItemBase","description":"ListItemBase(sId?, mSettings?) : sap.m.ListItemBase","constructorDescription":"Constructor for a new ListItemBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.m.ListType (default: Inactive)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getUnread unread} : boolean (default: false)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getCounter counter} : int<\/li>\n<li>{@link #getHighlight highlight} : sap.ui.core.MessageType (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tap tap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:detailTap detailTap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:detailPress detailPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ListItemBase","helpDescription":"ListItemBase contains the base features of all specific list items.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MaskInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tplaceholderSymbol: ${\"_\"}, // string\n\t\tmask: \"${mask}\", // string\n\t\trules: [${rules}] // sap.m.MaskInputRule[]\n\t}\n)\n","static":"true","prefix":"MaskInput","Experimental":false,"module":"sap/m/MaskInput","description":"MaskInput(sId?, mSettings?) : sap.m.MaskInput","constructorDescription":"Constructor for a new MaskInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlaceholderSymbol placeholderSymbol} : string (default: _)<\/li>\n<li>{@link #getMask mask} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRules rules} : sap.m.MaskInputRule[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","extends":"sap.m.InputBase","Deprecated":false,"name":"sap.m.MaskInput","helpDescription":"The <code>sap.m.MaskInput<\/code> control allows users to easily enter data in a certain format and in a fixed-width input\n(for example: date, time, phone number, credit card number, currency, IP address, MAC address, and others).","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MaskInputRule(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tmaskFormatSymbol: ${\"*\"}, // string\n\t\tregex: ${\"[a-zA-Z0-9]\"} // string\n\t}\n)\n","static":"true","prefix":"MaskInputRule","Experimental":false,"module":"sap/m/MaskInputRule","description":"MaskInputRule(sId?, mSettings?) : sap.m.MaskInputRule","constructorDescription":"Constructor for a new MaskInputRule.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaskFormatSymbol maskFormatSymbol} : string (default: *)<\/li>\n<li>{@link #getRegex regex} : string (default: [a-zA-Z0-9])<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.MaskInputRule","helpDescription":"The <code>sap.m.MaskInputRule<\/code> control holds the mapping of a single <code>maskFormatSymbol<\/code>\nto the regular expression <code>regex<\/code> that defines the allowed characters for the rule.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Menu(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\titems: [${items}], // sap.m.MenuItem[]\n\t\titemSelected: [function (oEvent) {}, this], // function|array\n\t\tclosed: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Menu","Experimental":false,"module":"sap/m/Menu","description":"Menu(sId?, mSettings?) : sap.m.Menu","constructorDescription":"Constructor for a new Menu.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelected itemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Menu","helpDescription":"The <code>sap.m.Menu<\/code> control represents a hierarchical menu.\nWhen opened on mobile devices it occupies the whole screen.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemSelected(\n\t{\n\t\titem: ${item} // sap.m.MenuItem\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Menu.fireItemSelected","description":"fireItemSelected(mParameters?) : sap.m.Menu","helpDescription":"Fires event <code>itemSelected<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MenuButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttype: ${sap.m.ButtonType.Default}, // sap.m.ButtonType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tbuttonMode: ${sap.m.MenuButtonMode.Regular}, // sap.m.MenuButtonMode\n\t\tuseDefaultActionOnly: ${bUseDefaultActionOnly}, // boolean\n\t\tmenu: ${menu}, // sap.m.Menu\n\t\tdefaultAction: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"MenuButton","Experimental":false,"module":"sap/m/MenuButton","description":"MenuButton(sId?, mSettings?) : sap.m.MenuButton","constructorDescription":"Constructor for a new MenuButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getType type} : sap.m.ButtonType (default: Default)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getButtonMode buttonMode} : sap.m.MenuButtonMode (default: Regular)<\/li>\n<li>{@link #getUseDefaultActionOnly useDefaultActionOnly} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenu menu} : sap.m.Menu (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:defaultAction defaultAction} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.MenuButton","helpDescription":"The <code>sap.m.MenuButton<\/code> control enables the user to show a hierarchical menu.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MenuItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: \"${icon}\", // string\n\t\tvisible: ${bVisible}, // boolean\n\t\tstartsSection: ${bStartsSection}, // boolean\n\t\titems: [${items}], // sap.m.MenuItem[]\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpropertyChanged: [function (oEvent) {}, this], // function|array\n\t\taggregationChanged: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"MenuItem","Experimental":false,"module":"sap/m/MenuItem","description":"MenuItem(sId?, mSettings?) : sap.m.MenuItem","constructorDescription":"Constructor for a new <code>MenuItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getStartsSection startsSection} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:propertyChanged propertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:aggregationChanged aggregationChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.MenuItem","helpDescription":"The <code>MenuItem<\/code> control is used for creating items for the <code>sap.m.Menu<\/code>.\nIt is derived from a core <code>sap.ui.core.Item<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAggregationChanged(\n\t{\n\t\taggregationName: ${aggregationName}, // String\n\t\tmethodName: ${methodName}, // String\n\t\tmethodParams: ${methodParams} // Object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MenuItem.fireAggregationChanged","description":"fireAggregationChanged(mParameters?) : sap.m.MenuItem","helpDescription":"Fires event <code>aggregationChanged<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"firePropertyChanged(\n\t{\n\t\tpropertyKey: \"${propertyKey}\", // string\n\t\tpropertyValue: ${propertyValue} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MenuItem.firePropertyChanged","description":"firePropertyChanged(mParameters?) : sap.m.MenuItem","helpDescription":"Fires event <code>propertyChanged<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"alert(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/m/MessageBox","name":"sap.m.MessageBox.alert","description":"alert(vMessage, mOptions?)","helpDescription":"Displays an alert dialog with the given message and an OK button (no icons).\n\n<pre>\nsap.m.MessageBox.alert(\"This message should appear in the alert\", {\n    title: \"Alert\",                                      // default\n    onClose: null,                                       // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n});\n<\/pre>\n\nIf a callback is given, it is called after the alert dialog has been closed\nby the user via the OK button. The callback is called with the following signature:\n\n<pre>\n  function (oAction)\n<\/pre>\n\nwhere <code>oAction<\/code> can be either sap.m.MessageBox.Action.OK when the alert dialog is closed by tapping on the OK button\n   or null when the alert dialog is closed by calling <code>sap.m.InstanceManager.closeAllDialogs()<\/code>.\n\nThe alert dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the alert dialog.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"confirm(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/m/MessageBox","name":"sap.m.MessageBox.confirm","description":"confirm(vMessage, mOptions?)","helpDescription":"Displays a confirmation dialog with the given message, a QUESTION icon, an OK button\nand a Cancel button. If a callback is given, it is called after the confirmation box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.confirm(\"This message should appear in the confirmation\", {\n    title: \"Confirm\",                                    // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\n<pre>\n  function(oAction)\n<\/pre>\n\nwhere oAction is set by one of the following three values:\n1. sap.m.MessageBox.Action.OK: OK (confirmed) button is tapped.\n2. sap.m.MessageBox.Action.Cancel: Cancel (unconfirmed) button is tapped.\n3. null: Confirm dialog is closed by calling <code>sap.m.InstanceManager.closeAllDialogs()<\/code>\n\nThe confirmation dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the confirmation dialog","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"error(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/m/MessageBox","name":"sap.m.MessageBox.error","description":"error(vMessage, mOptions?)","helpDescription":"Displays an error dialog with the given message, an ERROR icon, a CLOSE button..\nIf a callback is given, it is called after the error box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.error(\"This message should appear in the error message box\", {\n    title: \"Error\",                                      // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\n\n<pre>\n  function (oAction)\n<\/pre>\n\nThe error dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the error dialog.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"information(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/m/MessageBox","name":"sap.m.MessageBox.information","description":"information(vMessage, mOptions?)","helpDescription":"Displays an information dialog with the given message, an INFO icon, an OK button.\nIf a callback is given, it is called after the info box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.information(\"This message should appear in the information message box\", {\n    title: \"Information\",                                // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\t\t\t\t *\n<pre>\n  function (oAction)\n<\/pre>\n\nThe information dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the information dialog","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"show(\n\t\"${vMessage}\", // string\n\t{\n\t\ticon: ${icon}, // sap.m.MessageBox.Icon\n\t\ttitle: \"${title}\", // string\n\t\tactions: [${actions}], // sap.m.MessageBox.Action|sap.m.MessageBox.Action[]|string|string[]\n\t\tonClose: ${fn_onClose}, // function\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection}, // sap.ui.core.TextDirection\n\t\tdetails: \"${details}\", // string\n\t\tcontentWidth: ${contentWidth} // sap.ui.core.CSSSize\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/m/MessageBox","name":"sap.m.MessageBox.show","description":"show(vMessage, mOptions?)","helpDescription":"Creates and displays a sap.m.Dialog with type sap.m.DialogType.Message with the given text and buttons, and optionally other parts.\nAfter the user has tapped a button, the <code>onClose<\/code> function is invoked when given.\n\nThe only mandatory parameter is <code>vMessage<\/code>. Either a string with the corresponding text or even\na layout control could be provided.\n\n<pre>\nsap.m.MessageBox.show(\"This message should appear in the message box\", {\n    icon: sap.m.MessageBox.Icon.NONE,                    // default\n    title: \"\",                                           // default\n    actions: sap.m.MessageBox.Action.OK                  // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n});\n<\/pre>\n\nThe created dialog is executed asynchronously. When it has been created and registered for rendering,\nthis function returns without waiting for a user reaction.\n\nWhen applications have to react on the users choice, they have to provide a callback function and\npostpone any reaction on the user choice until that callback is triggered.\n\nThe signature of the callback is\n\n  function (oAction);\n\nwhere <code>oAction<\/code> is the button that the user has tapped. For example, when the user has pressed the close button,\na sap.m.MessageBox.Action.Close is returned.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"success(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/m/MessageBox","name":"sap.m.MessageBox.success","description":"success(vMessage, mOptions?)","helpDescription":"Displays a success dialog with the given message, a SUCCESS icon, an OK button.\nIf a callback is given, it is called after the success box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.success(\"This message should appear in the success message box\", {\n    title: \"Success\",                                    // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\n<pre>\n  function(oAction)\n<\/pre>\n\nThe success dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the success dialog","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"warning(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/m/MessageBox","name":"sap.m.MessageBox.warning","description":"warning(vMessage, mOptions?)","helpDescription":"Displays a warning dialog with the given message, a WARNING icon, an OK button.\nIf a callback is given, it is called after the warning box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.warning(\"This message should appear in the warning message box\", {\n    title: \"Warning\",                                    // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\t\t\t\t *\n<pre>\n  function (oAction)\n<\/pre>\n\nThe warning dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the warning dialog","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MessageItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ttype: ${sap.ui.core.MessageType.Error}, // sap.ui.core.MessageType\n\t\ttitle: ${\"\"}, // string\n\t\tsubtitle: \"${subtitle}\", // string\n\t\tdescription: ${\"\"}, // string\n\t\tmarkupDescription: ${bMarkupDescription}, // boolean\n\t\tlongtextUrl: ${longtextUrl}, // sap.ui.core.URI\n\t\tcounter: ${counter}, // int\n\t\tlink: ${link} // sap.m.Link\n\t}\n)\n","static":"true","prefix":"MessageItem","Experimental":false,"module":"sap/m/MessageItem","description":"MessageItem(sId?, mSettings?) : sap.m.MessageItem","constructorDescription":"Constructor for a new MessageItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.core.MessageType (default: Error)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getSubtitle subtitle} : string<\/li>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<li>{@link #getMarkupDescription markupDescription} : boolean (default: false)<\/li>\n<li>{@link #getLongtextUrl longtextUrl} : sap.ui.core.URI<\/li>\n<li>{@link #getCounter counter} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLink link} : sap.m.Link (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.MessageItem","helpDescription":"A wrapper control used to hold different types of system messages.\n<h3>Structure<\/h3>\nThe message item holds the basic set of properties for a system message:\n<ul>\n<li> Type, title, subtitle and description <\/li>\n<li> If the description contains markup, the <code>markupDescription<\/code> needs to be set to true, to ensure it is interpreted correctly. <\/li>\n<li> If the long text description can be specified by an URL by setting, the <code>longtextUrl<\/code> property. <\/li>\n<li> The message item can have a single {@link sap.m.Link} after the description. It is stored in the <code>link<\/code> aggregation. <\/li>\n<h3>Usage<\/h3>\n<b>Note:<\/b> The MessageItem control replaces {@link sap.m.MessagePopoverItem} as a more generic wrapper for messages.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MessagePage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"No matching items found.\"}, // string\n\t\tdescription: ${\"Check the filter settings.\"}, // string\n\t\ttitle: \"${title}\", // string\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\ticon: ${\"\"}, // \"sap-icon://documents\"\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tcustomText: ${customText}, // sap.m.Link\n\t\tcustomDescription: ${customDescription}, // sap.m.Link\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tnavButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"MessagePage","Experimental":false,"module":"sap/m/MessagePage","description":"MessagePage(sId?, mSettings?) : sap.m.MessagePage","constructorDescription":"Constructor for a new MessagePage.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: No matching items found.)<\/li>\n<li>{@link #getDescription description} : string (default: Check the filter settings.)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: sap-icon://documents)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomText customText} : sap.m.Link<\/li>\n<li>{@link #getCustomDescription customDescription} : sap.m.Link<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonPress navButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.MessagePage","helpDescription":"MessagePage is displayed when there is no data or matching content. There are different use cases where a MessagePage might be visualized, for example:\n\t\t- The search query returned no results\n\t\t- The app contains no items\n\t\t- There are too many items\n\t\t- The application is loading\nThe layout is unchanged but the text varies depending on the use case.\n<br><b>Note:<\/b> The <code>MessagePage<\/code> is not intended to be used as a top-level control,\nbut rather used within controls such as <code>NavContainer<\/code>, <code>App<\/code>, <code>Shell<\/code> or other container controls.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MessagePopover(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tasyncDescriptionHandler: ${asyncDescriptionHandler}, // any\n\t\tasyncURLHandler: ${asyncURLHandler}, // any\n\t\tplacement: ${sap.m.VerticalPlacementType.Vertical}, // sap.m.VerticalPlacementType\n\t\tinitiallyExpanded: ${bInitiallyExpanded}, // boolean\n\t\titems: [${items}], // sap.m.MessagePopoverItem[]\n\t\theaderButton: ${headerButton}, // sap.m.Button\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\titemSelect: [function (oEvent) {}, this], // function|array\n\t\tlistSelect: [function (oEvent) {}, this], // function|array\n\t\tlongtextLoaded: [function (oEvent) {}, this], // function|array\n\t\turlValidated: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"MessagePopover","Experimental":false,"module":"sap/m/MessagePopover","description":"MessagePopover(sId?, mSettings?) : sap.m.MessagePopover","constructorDescription":"Constructor for a new MessagePopover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAsyncDescriptionHandler asyncDescriptionHandler} : any<\/li>\n<li>{@link #getAsyncURLHandler asyncURLHandler} : any<\/li>\n<li>{@link #getPlacement placement} : sap.m.VerticalPlacementType (default: Vertical)<\/li>\n<li>{@link #getInitiallyExpanded initiallyExpanded} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MessagePopoverItem[] (default)<\/li>\n<li>{@link #getHeaderButton headerButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:listSelect listSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:longtextLoaded longtextLoaded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:urlValidated urlValidated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.MessagePopover","helpDescription":"A summarized list of different types of messages.\n<h3>Overview<\/h3>\nA message popover is used to display a summarized list of different types of messages (errors, warnings, success and information).\nIt provides a handy and systemized way to navigate and explore details for every message.\n<h4>Notes:<\/h4>\n<ul>\n<li> Messages can have descriptions pre-formatted with HTML markup. In this case, the <code>markupDescription<\/code> has to be set to <code>true<\/code>.<\/li>\n<li> If the message cannot be fully displayed or includes a long description, the message popover provides navigation to the detailed description.<\/li>\n<\/ul>\n<h3>Structure<\/h3>\nThe message popover stores all messages in an association of type {@link sap.m.MessagePopoverItem} named <code>items<\/code>.\n\nA set of properties determines how the items are rendered:\n<ul>\n<li> counter - An integer that is used to indicate the number of errors for each type <\/li>\n<li> type - The type of message <\/li>\n<li> title/subtitle - The title and subtitle of the message<\/li>\n<li> description - The long text description of the message<\/li>\n<\/ul>\n<h3>Usage<\/h3>\nWith the message concept, MessagePopover provides a way to centrally manage messages and show them to the user without additional work for the developer.\nThe message popover is triggered from a messaging button in the footer toolbar. If an error has occurred at any validation point,\nthe total number of messages should be incremented, but the user's work shouldn't be interrupted.\n<h3>Responsive Behavior<\/h3>\nOn mobile phones, the message popover is automatically shown in full screen mode.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterClose(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessagePopover.fireAfterClose","description":"fireAfterClose(mParameters?) : sap.m.MessagePopover","helpDescription":"Fires event <code>afterClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessagePopover.fireAfterOpen","description":"fireAfterOpen(mParameters?) : sap.m.MessagePopover","helpDescription":"Fires event <code>afterOpen<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeClose(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessagePopover.fireBeforeClose","description":"fireBeforeClose(mParameters?) : sap.m.MessagePopover","helpDescription":"Fires event <code>beforeClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessagePopover.fireBeforeOpen","description":"fireBeforeOpen(mParameters?) : sap.m.MessagePopover","helpDescription":"Fires event <code>beforeOpen<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemSelect(\n\t{\n\t\titem: ${item}, // sap.m.MessagePopoverItem\n\t\tmessageTypeFilter: ${messageTypeFilter} // sap.ui.core.MessageType\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessagePopover.fireItemSelect","description":"fireItemSelect(mParameters?) : sap.m.MessagePopover","helpDescription":"Fires event <code>itemSelect<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireListSelect(\n\t{\n\t\tmessageTypeFilter: ${messageTypeFilter} // sap.ui.core.MessageType\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessagePopover.fireListSelect","description":"fireListSelect(mParameters?) : sap.m.MessagePopover","helpDescription":"Fires event <code>listSelect<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"setDefaultHandlers(\n\t{\n\t\tasyncDescriptionHandler: ${fn_asyncDescriptionHandler}, // function\n\t\tasyncURLHandler: ${fn_asyncURLHandler} // function\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessagePopover.setDefaultHandlers","description":"setDefaultHandlers(mDefaultHandlers)","helpDescription":"Setter for default description and URL validation callbacks across all instances of MessagePopover","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MessagePopoverItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\" // string\n\t}\n)\n","static":"true","prefix":"MessagePopoverItem","Experimental":false,"module":"sap/m/MessagePopoverItem","description":"MessagePopoverItem(sId?, mSettings?) : sap.m.MessagePopoverItem","constructorDescription":"Constructor for a new MessagePopoverItem.","extends":"sap.ui.core.Item","Deprecated":true,"name":"sap.m.MessagePopoverItem","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46 use MessageItem instead<br>Items provide information about Error Messages in the page.","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"use MessageItem instead","since":"1.46"}},{"template":"new sap.m.MessageStrip(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\ttype: ${sap.ui.core.MessageType.Information}, // sap.ui.core.MessageType\n\t\tcustomIcon: ${\"\"}, // sap.ui.core.URI\n\t\tshowIcon: ${bShowIcon}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tlink: ${link}, // sap.m.Link\n\t\tclose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"MessageStrip","Experimental":false,"module":"sap/m/MessageStrip","description":"MessageStrip(sId?, mSettings?) : sap.m.MessageStrip","constructorDescription":"Constructor for a new MessageStrip.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getType type} : sap.ui.core.MessageType (default: Information)<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: false)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLink link} : sap.m.Link (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.MessageStrip","helpDescription":"MessageStrip is a control that enables the embedding of application-related messages in the application.\nThere are 4 types of messages: Information, Success, Warning and Error.\nEach message can have a close button, so that it can be removed from the UI if needed.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"show(\n\t\"${sMessage}\", // string\n\t{\n\t\tduration: ${duration}, // int\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tmy: ${my}, // sap.ui.core.Popup.Dock\n\t\tat: ${at}, // sap.ui.core.Popup.Dock\n\t\tof: ${of}, // sap.ui.core.Control|Element|jQuery|Window|undefined\n\t\toffset: \"${offset}\", // string\n\t\tcollision: \"${collision}\", // string\n\t\tonClose: ${fn_onClose}, // function\n\t\tautoClose: ${bAutoClose}, // boolean\n\t\tanimationTimingFunction: \"${animationTimingFunction}\", // string\n\t\tanimationDuration: ${animationDuration}, // int\n\t\tcloseOnBrowserNavigation: ${bCloseOnBrowserNavigation} // boolean\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"module":"sap/m/MessageToast","name":"sap.m.MessageToast.show","description":"show(sMessage, mOptions?)","helpDescription":"Creates and displays a simple message toast notification message with the given text, and optionally other options.\n\nThe only mandatory parameter is <code>sMessage<\/code>.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MessageView(\n\t\"${sId}\", // string\n\t{\n\t\tasyncDescriptionHandler: ${asyncDescriptionHandler}, // any\n\t\tasyncURLHandler: ${asyncURLHandler}, // any\n\t\titems: [${items}], // sap.m.MessageItem[]\n\t\theaderButton: ${headerButton}, // sap.m.Button\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\titemSelect: [function (oEvent) {}, this], // function|array\n\t\tlistSelect: [function (oEvent) {}, this], // function|array\n\t\tlongtextLoaded: [function (oEvent) {}, this], // function|array\n\t\turlValidated: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"MessageView","Experimental":false,"module":"sap/m/MessageView","name":"sap.m.MessageView","description":"MessageView(sId?, mSettings?) : sap.m.MessageView","constructorDescription":"Constructor for a new MessageView\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAsyncDescriptionHandler asyncDescriptionHandler} : any<\/li>\n<li>{@link #getAsyncURLHandler asyncURLHandler} : any<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MessageItem[] (default)<\/li>\n<li>{@link #getHeaderButton headerButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:listSelect listSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:longtextLoaded longtextLoaded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:urlValidated urlValidated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>","helpDescription":"<strong><i>Overview<\/i><\/strong>\n<br><br>\nA {@link sap.m.MessageView} is used to display a summarized list of different types of messages (errors, warnings, success and information).\nIt provides a handy and systemized way to navigate and explore details for every message.\nIt is meant to be embedded into container controls.\n<br><br>\n<strong>Notes:<\/strong>\n<ul>\n<li> Messages can have descriptions pre-formatted with HTML markup. In this case, the <code>markupDescription<\/code> has to be set to <code>true<\/code>. <\/li>\n<li> If the message cannot be fully displayed or includes a long description, the MessageView provides navigation to the detailed description. <\/li>\n<\/ul>\n<strong><i>Structure<\/i><\/strong>\n<br><br>\nThe MessageView stores all messages in an association of type {@link sap.m.MessageItem} named <code>items<\/code>.\n<br>\nA set of properties determines how the items are rendered:\n<ul>\n<li> counter - An integer that is used to indicate the number of errors for each type <\/li>\n<li> type - The type of message <\/li>\n<li> title/subtitle - The title and subtitle of the message<\/li>\n<li> description - The long text description of the message<\/li>\n<\/ul>\n<strong><i>Usage<\/i><\/strong>\n<br><br>\nAs part of the messaging concept, MessageView provides a way to centrally manage messages and show them to the user without additional work for the developer.\n<br><br>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessageView.fireAfterOpen","description":"fireAfterOpen(mParameters?) : sap.m.MessageView","helpDescription":"Fires event <code>afterOpen<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemSelect(\n\t{\n\t\titem: ${item}, // sap.m.MessageItem\n\t\tmessageTypeFilter: ${messageTypeFilter} // sap.ui.core.MessageType\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessageView.fireItemSelect","description":"fireItemSelect(mParameters?) : sap.m.MessageView","helpDescription":"Fires event <code>itemSelect<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireListSelect(\n\t{\n\t\tmessageTypeFilter: ${messageTypeFilter} // sap.ui.core.MessageType\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessageView.fireListSelect","description":"fireListSelect(mParameters?) : sap.m.MessageView","helpDescription":"Fires event <code>listSelect<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"setDefaultHandlers(\n\t{\n\t\tasyncDescriptionHandler: ${fn_asyncDescriptionHandler}, // function\n\t\tasyncURLHandler: ${fn_asyncURLHandler} // function\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MessageView.setDefaultHandlers","description":"setDefaultHandlers(mDefaultHandlers)","helpDescription":"Setter for default description and URL validation callbacks across all instances of MessageView","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MultiComboBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowButton: ${bShowButton}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tloadItems: [function (oEvent) {}, this], // function|array\n\t\tselectedKeys: ${[]}, // string[]\n\t\tselectedItems: [${selectedItems}], // (sap.ui.core.Item|string)[]\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\tselectionFinish: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"MultiComboBox","Experimental":false,"module":"sap/m/MultiComboBox","description":"MultiComboBox(sId?, mSettings?) : sap.m.MultiComboBox","constructorDescription":"Constructor for a new MultiComboBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedKeys selectedKeys} : string[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItems selectedItems} : (sap.ui.core.ID | sap.ui.core.Item)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionFinish selectionFinish} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBoxBase#constructor sap.m.ComboBoxBase}\ncan be used as well.","extends":"sap.m.ComboBoxBase","Deprecated":false,"name":"sap.m.MultiComboBox","helpDescription":"The MultiComboBox control provides a list box with items and a text field allowing the user to either type a value directly into the control or choose from the list of existing items.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionChange(\n\t{\n\t\tchangedItem: ${changedItem}, // sap.ui.core.Item\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MultiComboBox.fireSelectionChange","description":"fireSelectionChange(mParameters?) : sap.m.MultiComboBox","helpDescription":"Fires event <code>selectionChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionFinish(\n\t{\n\t\tselectedItems: [${selectedItems}] // sap.ui.core.Item[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MultiComboBox.fireSelectionFinish","description":"fireSelectionFinish(mParameters?) : sap.m.MultiComboBox","helpDescription":"Fires event <code>selectionFinish<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.MultiInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.InputType.Text}, // sap.m.InputType\n\t\tmaxLength: ${0}, // int\n\t\tdateFormat: ${\"YYYY-MM-dd\"}, // string\n\t\tshowValueHelp: ${bShowValueHelp}, // boolean\n\t\tshowSuggestion: ${bShowSuggestion}, // boolean\n\t\tvalueHelpOnly: ${bValueHelpOnly}, // boolean\n\t\tfilterSuggests: ${bFilterSuggests}, // boolean\n\t\tmaxSuggestionWidth: ${maxSuggestionWidth}, // sap.ui.core.CSSSize\n\t\tstartSuggestion: ${1}, // int\n\t\tshowTableSuggestionValueHelp: ${bShowTableSuggestionValueHelp}, // boolean\n\t\tdescription: \"${description}\", // string\n\t\tfieldWidth: ${\"50%\"}, // sap.ui.core.CSSSize\n\t\tvalueLiveUpdate: ${bValueLiveUpdate}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\ttextFormatMode: ${sap.m.InputTextFormatMode.Value}, // sap.m.InputTextFormatMode\n\t\ttextFormatter: ${\"\"}, // any\n\t\tsuggestionRowValidator: ${\"\"}, // any\n\t\tenableSuggestionsHighlighting: ${bEnableSuggestionsHighlighting}, // boolean\n\t\tsuggestionItems: [${suggestionItems}], // sap.ui.core.Item[]\n\t\tsuggestionColumns: [${suggestionColumns}], // sap.m.Column[]\n\t\tsuggestionRows: [${suggestionRows}], // sap.m.ColumnListItem[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tselectedRow: ${selectedRow}, // (sap.m.ColumnListItem|string)\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tvalueHelpRequest: [function (oEvent) {}, this], // function|array\n\t\tsuggest: [function (oEvent) {}, this], // function|array\n\t\tsuggestionItemSelected: [function (oEvent) {}, this], // function|array\n\t\tsubmit: [function (oEvent) {}, this], // function|array\n\t\tenableMultiLineMode: ${bEnableMultiLineMode}, // boolean\n\t\tmaxTokens: ${maxTokens}, // int\n\t\ttokens: [${tokens}], // sap.m.Token[]\n\t\ttokenChange: [function (oEvent) {}, this], // function|array\n\t\ttokenUpdate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"MultiInput","Experimental":false,"module":"sap/m/MultiInput","description":"MultiInput(sId?, mSettings?) : sap.m.MultiInput","constructorDescription":"Constructor for a new MultiInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableMultiLineMode enableMultiLineMode} : boolean (default: false)<\/li>\n<li>{@link #getMaxTokens maxTokens} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTokens tokens} : sap.m.Token[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tokenChange tokenChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tokenUpdate tokenUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Input#constructor sap.m.Input}\ncan be used as well.","extends":"sap.m.Input","Deprecated":false,"name":"sap.m.MultiInput","helpDescription":"MultiInput provides functionality to add / remove / enter tokens","category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Please use the new event tokenUpdate.","since":"1.46"}},{"template":"fireTokenChange(\n\t{\n\t\ttype: \"${type}\", // string\n\t\ttoken: ${token}, // sap.m.Token\n\t\ttokens: [${tokens}], // sap.m.Token[]\n\t\taddedTokens: [${addedTokens}], // sap.m.Token[]\n\t\tremovedTokens: [${removedTokens}] // sap.m.Token[]\n\t}\n)\n","Deprecated":true,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.MultiInput.fireTokenChange","description":"fireTokenChange(mParameters?) : sap.m.MultiInput","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46 Please use the new event tokenUpdate.<br>Fires event <code>tokenChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Please use the new event tokenUpdate.","since":"1.46"}},{"template":"new sap.m.NavContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tautoFocus: ${bAutoFocus}, // boolean\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tdefaultTransitionName: ${\"slide\"}, // string\n\t\tpages: [${pages}], // sap.ui.core.Control[]\n\t\tinitialPage: ${initialPage}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"NavContainer","Experimental":false,"module":"sap/m/NavContainer","description":"NavContainer(sId?, mSettings?) : sap.m.NavContainer","constructorDescription":"Constructor for a new NavContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAutoFocus autoFocus} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getDefaultTransitionName defaultTransitionName} : string (default: slide)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPages pages} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialPage initialPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterNavigate afterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.NavContainer","helpDescription":"The NavContainer control handles hierarchic navigation between Pages or other fullscreen controls.\n\nAll children of this control will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.NavContainer.fireAfterNavigate","description":"fireAfterNavigate(mParameters?) : sap.m.NavContainer","helpDescription":"Fires event <code>afterNavigate<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.NavContainer.fireNavigate","description":"fireNavigate(mParameters?) : boolean","helpDescription":"Fires event <code>navigate<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.NewsContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tcontentText: \"${contentText}\", // string\n\t\tsubheader: \"${subheader}\", // string\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"NewsContent","Experimental":false,"module":"sap/m/NewsContent","description":"NewsContent(sId?, mSettings?) : sap.m.NewsContent","constructorDescription":"Constructor for a new sap.m.NewsContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getContentText contentText} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.NewsContent","helpDescription":"This control displays the news content text and subheader in a tile.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.NotificationListBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tpriority: ${sap.ui.core.Priority.None}, // sap.ui.core.Priority\n\t\ttitle: ${\"\"}, // string\n\t\tdatetime: ${\"\"}, // string\n\t\tshowButtons: ${bShowButtons}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tauthorName: ${\"\"}, // string\n\t\tauthorPicture: ${authorPicture}, // sap.ui.core.URI\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tclose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"NotificationListBase","Experimental":false,"module":"sap/m/NotificationListBase","description":"NotificationListBase(sId?, mSettings?) : sap.m.NotificationListBase","constructorDescription":"Constructor for a new NotificationListBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPriority priority} : sap.ui.core.Priority (default: None)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getDatetime datetime} : string (default: )<\/li>\n<li>{@link #getShowButtons showButtons} : boolean (default: true)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: true)<\/li>\n<li>{@link #getAuthorName authorName} : string (default: )<\/li>\n<li>{@link #getAuthorPicture authorPicture} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.NotificationListBase","helpDescription":"The NotificationListBase is the base class for NotificationListItem and NotificationListGroup.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.NotificationListGroup(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tpriority: ${sap.ui.core.Priority.None}, // sap.ui.core.Priority\n\t\ttitle: ${\"\"}, // string\n\t\tdatetime: ${\"\"}, // string\n\t\tshowButtons: ${bShowButtons}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tauthorName: ${\"\"}, // string\n\t\tauthorPicture: ${authorPicture}, // sap.ui.core.URI\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tclose: [function (oEvent) {}, this], // function|array\n\t\tcollapsed: ${bCollapsed}, // boolean\n\t\tautoPriority: ${bAutoPriority}, // boolean\n\t\tshowEmptyGroup: ${bShowEmptyGroup}, // boolean\n\t\tenableCollapseButtonWhenEmpty: ${bEnableCollapseButtonWhenEmpty}, // boolean\n\t\titems: [${items}], // sap.m.NotificationListItem[]\n\t\tonCollapse: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"NotificationListGroup","Experimental":false,"module":"sap/m/NotificationListGroup","description":"NotificationListGroup(sId?, mSettings?) : sap.m.NotificationListGroup","constructorDescription":"Constructor for a new NotificationListGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getAutoPriority autoPriority} : boolean (default: true)<\/li>\n<li>{@link #getShowEmptyGroup showEmptyGroup} : boolean (default: false)<\/li>\n<li>{@link #getEnableCollapseButtonWhenEmpty enableCollapseButtonWhenEmpty} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.NotificationListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:onCollapse onCollapse} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.NotificationListBase#constructor sap.m.NotificationListBase}\ncan be used as well.","extends":"sap.m.NotificationListBase","Deprecated":false,"name":"sap.m.NotificationListGroup","helpDescription":"The NotificationListItemGroup control is used for grouping NotificationListItems of the same type.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireOnCollapse(\n\t{\n\t\tcollapsed: ${bCollapsed} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.NotificationListGroup.fireOnCollapse","description":"fireOnCollapse(mParameters?) : sap.m.NotificationListGroup","helpDescription":"Fires event <code>onCollapse<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.NotificationListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tpriority: ${sap.ui.core.Priority.None}, // sap.ui.core.Priority\n\t\ttitle: ${\"\"}, // string\n\t\tdatetime: ${\"\"}, // string\n\t\tshowButtons: ${bShowButtons}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tauthorName: ${\"\"}, // string\n\t\tauthorPicture: ${authorPicture}, // sap.ui.core.URI\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tclose: [function (oEvent) {}, this], // function|array\n\t\tdescription: ${\"\"}, // string\n\t\ttruncate: ${bTruncate}, // boolean\n\t\thideShowMoreButton: ${bHideShowMoreButton}, // boolean\n\t\tprocessingMessage: ${processingMessage} // sap.m.MessageStrip\n\t}\n)\n","static":"true","prefix":"NotificationListItem","Experimental":false,"module":"sap/m/NotificationListItem","description":"NotificationListItem(sId?, mSettings?) : sap.m.NotificationListItem","constructorDescription":"Constructor for a new NotificationListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<li>{@link #getTruncate truncate} : boolean (default: true)<\/li>\n<li>{@link #getHideShowMoreButton hideShowMoreButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getProcessingMessage processingMessage} : sap.m.MessageStrip<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.NotificationListBase#constructor sap.m.NotificationListBase}\ncan be used as well.","extends":"sap.m.NotificationListBase","Deprecated":false,"name":"sap.m.NotificationListItem","helpDescription":"The NotificationListItem control is suitable for showing notifications to the user.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.NumericContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tanimateTextChange: ${bAnimateTextChange}, // boolean\n\t\tformatterValue: ${bFormatterValue}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonDescription: \"${iconDescription}\", // string\n\t\tindicator: ${sap.m.DeviationIndicator.None}, // sap.m.DeviationIndicator\n\t\tnullifyValue: ${bNullifyValue}, // boolean\n\t\tscale: \"${scale}\", // string\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\ttruncateValueTo: ${4}, // int\n\t\tvalue: \"${value}\", // string\n\t\tvalueColor: ${sap.m.ValueColor.Neutral}, // sap.m.ValueColor\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\twithMargin: ${bWithMargin}, // boolean\n\t\tstate: ${sap.m.LoadState.Loaded}, // sap.m.LoadState\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"NumericContent","Experimental":false,"module":"sap/m/NumericContent","description":"NumericContent(sId?, mSettings?) : sap.m.NumericContent","constructorDescription":"Constructor for a new sap.m.GenericTile control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAnimateTextChange animateTextChange} : boolean (default: true)<\/li>\n<li>{@link #getFormatterValue formatterValue} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDescription iconDescription} : string<\/li>\n<li>{@link #getIndicator indicator} : sap.m.DeviationIndicator (default: None)<\/li>\n<li>{@link #getNullifyValue nullifyValue} : boolean (default: true)<\/li>\n<li>{@link #getScale scale} : string<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getTruncateValueTo truncateValueTo} : int (default: 4)<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWithMargin withMargin} : boolean (default: true)<\/li>\n<li>{@link #getState state} : sap.m.LoadState (default: Loaded)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.NumericContent","helpDescription":"Shows numeric values used for example in tiles colored according to their meaning and displays deviations.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ObjectAttribute(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttext: \"${text}\", // string\n\t\tactive: ${bActive}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tcustomContent: ${customContent}, // sap.ui.core.Control\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ObjectAttribute","Experimental":false,"module":"sap/m/ObjectAttribute","description":"ObjectAttribute(sId?, mSettings?) : sap.m.ObjectAttribute","constructorDescription":"Constructor for a new ObjectAttribute.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getActive active} : boolean<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomContent customContent} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ObjectAttribute","helpDescription":"The ObjectAttribute control displays a text field that can be normal or active. The ObjectAttribute fires a press event when the user selects active text.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"firePress(\n\t{\n\t\tdomRef: \"${domRef}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ObjectAttribute.firePress","description":"firePress(mParameters?) : sap.m.ObjectAttribute","helpDescription":"Fires event <code>press<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ObjectHeader(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tnumber: \"${number}\", // string\n\t\tnumberUnit: \"${numberUnit}\", // string\n\t\tintro: \"${intro}\", // string\n\t\tintroActive: ${bIntroActive}, // boolean\n\t\ttitleActive: ${bTitleActive}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonActive: ${bIconActive}, // boolean\n\t\ticonAlt: \"${iconAlt}\", // string\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tmarkFavorite: ${bMarkFavorite}, // boolean\n\t\tmarkFlagged: ${bMarkFlagged}, // boolean\n\t\tshowMarkers: ${bShowMarkers}, // boolean\n\t\tshowTitleSelector: ${bShowTitleSelector}, // boolean\n\t\tnumberState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tcondensed: ${bCondensed}, // boolean\n\t\tbackgroundDesign: ${backgroundDesign}, // sap.m.BackgroundDesign\n\t\tresponsive: ${bResponsive}, // boolean\n\t\tfullScreenOptimized: ${bFullScreenOptimized}, // boolean\n\t\ttitleHref: ${titleHref}, // sap.ui.core.URI\n\t\ttitleTarget: \"${titleTarget}\", // string\n\t\tintroHref: ${introHref}, // sap.ui.core.URI\n\t\tintroTarget: \"${introTarget}\", // string\n\t\ttitleTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tintroTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tnumberTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\ttitleSelectorTooltip: ${\"Options\"}, // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.H1}, // sap.ui.core.TitleLevel\n\t\tattributes: [${attributes}], // sap.m.ObjectAttribute[]\n\t\tfirstStatus: ${firstStatus}, // sap.m.ObjectStatus\n\t\tsecondStatus: ${secondStatus}, // sap.m.ObjectStatus\n\t\tstatuses: [${statuses}], // sap.ui.core.Control[]\n\t\tadditionalNumbers: [${additionalNumbers}], // sap.m.ObjectNumber[]\n\t\theaderContainer: ${headerContainer}, // sap.m.ObjectHeaderContainer\n\t\tmarkers: [${markers}], // sap.m.ObjectMarker[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttitlePress: [function (oEvent) {}, this], // function|array\n\t\tintroPress: [function (oEvent) {}, this], // function|array\n\t\ticonPress: [function (oEvent) {}, this], // function|array\n\t\ttitleSelectorPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ObjectHeader","Experimental":false,"module":"sap/m/ObjectHeader","description":"ObjectHeader(sId?, mSettings?) : sap.m.ObjectHeader","constructorDescription":"Constructor for a new <\/code>ObjectHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getIntro intro} : string<\/li>\n<li>{@link #getIntroActive introActive} : boolean<\/li>\n<li>{@link #getTitleActive titleActive} : boolean<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconActive iconActive} : boolean<\/li>\n<li>{@link #getIconAlt iconAlt} : string<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getMarkFavorite markFavorite} : boolean (default: false)<\/li>\n<li>{@link #getMarkFlagged markFlagged} : boolean (default: false)<\/li>\n<li>{@link #getShowMarkers showMarkers} : boolean (default: false)<\/li>\n<li>{@link #getShowTitleSelector showTitleSelector} : boolean (default: false)<\/li>\n<li>{@link #getNumberState numberState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getCondensed condensed} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign<\/li>\n<li>{@link #getResponsive responsive} : boolean (default: false)<\/li>\n<li>{@link #getFullScreenOptimized fullScreenOptimized} : boolean (default: false)<\/li>\n<li>{@link #getTitleHref titleHref} : sap.ui.core.URI<\/li>\n<li>{@link #getTitleTarget titleTarget} : string<\/li>\n<li>{@link #getIntroHref introHref} : sap.ui.core.URI<\/li>\n<li>{@link #getIntroTarget introTarget} : string<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getIntroTextDirection introTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getNumberTextDirection numberTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getTitleSelectorTooltip titleSelectorTooltip} : string (default: Options)<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: H1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.m.ObjectAttribute[] (default)<\/li>\n<li>{@link #getFirstStatus firstStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getSecondStatus secondStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getStatuses statuses} : sap.ui.core.Control[]<\/li>\n<li>{@link #getAdditionalNumbers additionalNumbers} : sap.m.ObjectNumber[]<\/li>\n<li>{@link #getHeaderContainer headerContainer} : sap.m.ObjectHeaderContainer<\/li>\n<li>{@link #getMarkers markers} : sap.m.ObjectMarker[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titlePress titlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:introPress introPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:iconPress iconPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:titleSelectorPress titleSelectorPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ObjectHeader","helpDescription":"<code>ObjectHeader<\/code> is a display control that enables the user to easily identify\na specific object. The object header title is the key identifier of the object and\nadditional text and icons can be used to further distinguish it from other objects.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireIconPress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ObjectHeader.fireIconPress","description":"fireIconPress(mParameters?) : sap.m.ObjectHeader","helpDescription":"Fires event <code>iconPress<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireIntroPress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ObjectHeader.fireIntroPress","description":"fireIntroPress(mParameters?) : sap.m.ObjectHeader","helpDescription":"Fires event <code>introPress<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireTitlePress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ObjectHeader.fireTitlePress","description":"fireTitlePress(mParameters?) : sap.m.ObjectHeader","helpDescription":"Fires event <code>titlePress<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireTitleSelectorPress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ObjectHeader.fireTitleSelectorPress","description":"fireTitleSelectorPress(mParameters?) : sap.m.ObjectHeader","helpDescription":"Fires event <code>titleSelectorPress<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ObjectIdentifier(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttext: \"${text}\", // string\n\t\tbadgeNotes: ${bBadgeNotes}, // boolean\n\t\tbadgePeople: ${bBadgePeople}, // boolean\n\t\tbadgeAttachments: ${bBadgeAttachments}, // boolean\n\t\tvisible: ${bVisible}, // boolean\n\t\ttitleActive: ${bTitleActive}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttitlePress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ObjectIdentifier","Experimental":false,"module":"sap/m/ObjectIdentifier","description":"ObjectIdentifier(sId?, mSettings?) : sap.m.ObjectIdentifier","constructorDescription":"Constructor for a new ObjectIdentifier.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getBadgeNotes badgeNotes} : boolean<\/li>\n<li>{@link #getBadgePeople badgePeople} : boolean<\/li>\n<li>{@link #getBadgeAttachments badgeAttachments} : boolean<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getTitleActive titleActive} : boolean (default: false)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titlePress titlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ObjectIdentifier","helpDescription":"The ObjectIdentifier is a display control that enables the user to easily identify a specific object. The ObjectIdentifier title is the key identifier of the object and additional text and icons can be used to further distinguish it from other objects.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireTitlePress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ObjectIdentifier.fireTitlePress","description":"fireTitlePress(mParameters?) : sap.m.ObjectIdentifier","helpDescription":"Fires event <code>titlePress<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ObjectListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tnumber: \"${number}\", // string\n\t\tnumberUnit: \"${numberUnit}\", // string\n\t\tintro: \"${intro}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tmarkFavorite: ${bMarkFavorite}, // boolean\n\t\tmarkFlagged: ${bMarkFlagged}, // boolean\n\t\tshowMarkers: ${bShowMarkers}, // boolean\n\t\tnumberState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\ttitleTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tintroTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tnumberTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tmarkLocked: ${bMarkLocked}, // boolean\n\t\tattributes: [${attributes}], // sap.m.ObjectAttribute[]\n\t\tfirstStatus: ${firstStatus}, // sap.m.ObjectStatus\n\t\tsecondStatus: ${secondStatus}, // sap.m.ObjectStatus\n\t\tmarkers: [${markers}] // sap.m.ObjectMarker[]\n\t}\n)\n","static":"true","prefix":"ObjectListItem","Experimental":false,"module":"sap/m/ObjectListItem","description":"ObjectListItem(sId?, mSettings?) : sap.m.ObjectListItem","constructorDescription":"Constructor for a new ObjectListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getIntro intro} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getMarkFavorite markFavorite} : boolean<\/li>\n<li>{@link #getMarkFlagged markFlagged} : boolean<\/li>\n<li>{@link #getShowMarkers showMarkers} : boolean<\/li>\n<li>{@link #getNumberState numberState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getIntroTextDirection introTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getNumberTextDirection numberTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getMarkLocked markLocked} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.m.ObjectAttribute[] (default)<\/li>\n<li>{@link #getFirstStatus firstStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getSecondStatus secondStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getMarkers markers} : sap.m.ObjectMarker[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.ObjectListItem","helpDescription":"ObjectListItem is a display control that provides summary information about an object as a list item. The ObjectListItem title is the key identifier of the object. Additional text and icons can be used to further distinguish it from other objects. Attributes and statuses can be used to provide additional meaning about the object to the user.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ObjectMarker(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${type}, // sap.m.ObjectMarkerType\n\t\tvisibility: ${visibility}, // sap.m.ObjectMarkerVisibility\n\t\tadditionalInfo: ${\"\"}, // string\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ObjectMarker","Experimental":false,"module":"sap/m/ObjectMarker","description":"ObjectMarker(sId?, mSettings?) : sap.m.ObjectMarker","constructorDescription":"Constructor for a new ObjectMarker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.m.ObjectMarkerType<\/li>\n<li>{@link #getVisibility visibility} : sap.m.ObjectMarkerVisibility<\/li>\n<li>{@link #getAdditionalInfo additionalInfo} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ObjectMarker","helpDescription":"The <code>sap.m.ObjectMarker<\/code> control represents one of the following predefined types:\n<ul>\n<li><code>Flagged<\/code>\n<li><code>Favorite<\/code>\n<li><code>Draft<\/code>\n<li><code>Locked<\/code>\n<li><code>LockedBy<\/code>\n<li><code>Unsaved<\/code>\n<li><code>UnsavedBy<\/code>\n<\/ul>\n<b>Note<\/b>: Use the <code>LockedBy/UnsavedBy<\/code> type along with the <code>additionalInfo<\/code> property to display the name of the user who locked/changed the object.\nIf <code>additionalInfo<\/code> property is not set when using <code>LockedBy/UnsavedBy<\/code> types, the string \"Locked by another user\"/\"Unsaved changes by another user\" will be displayed.\nIf you don't want to display name of the user, simply use the <code>Locked/Unsaved<\/code> types.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ObjectNumber(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tnumber: \"${number}\", // string\n\t\tnumberUnit: \"${numberUnit}\", // string\n\t\temphasized: ${bEmphasized}, // boolean\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tunit: \"${unit}\", // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\tariaDescribedBy: [${ariaDescribedBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","static":"true","prefix":"ObjectNumber","Experimental":false,"module":"sap/m/ObjectNumber","description":"ObjectNumber(sId?, mSettings?) : sap.m.ObjectNumber","constructorDescription":"Constructor for a new ObjectNumber.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getEmphasized emphasized} : boolean (default: true)<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ObjectNumber","helpDescription":"The ObjectNumber control displays number and number unit properties for an object. The number can be displayed using semantic\ncolors to provide additional meaning about the object to the user.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ObjectStatus(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttext: \"${text}\", // string\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","static":"true","prefix":"ObjectStatus","Experimental":false,"module":"sap/m/ObjectStatus","description":"ObjectStatus(sId?, mSettings?) : sap.m.ObjectStatus","constructorDescription":"Constructor for a new ObjectStatus.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ObjectStatus","helpDescription":"Status information that can be either text with a value state, or an icon.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.OverflowToolbar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tactive: ${bActive}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdesign: ${sap.m.ToolbarDesign.Auto}, // sap.m.ToolbarDesign\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"OverflowToolbar","Experimental":false,"module":"sap/m/OverflowToolbar","description":"OverflowToolbar(sId?, mSettings?) : sap.m.OverflowToolbar","constructorDescription":"Constructor for a new <code>OverflowToolbar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Toolbar#constructor sap.m.Toolbar}\ncan be used as well.","extends":"sap.m.Toolbar","Deprecated":false,"name":"sap.m.OverflowToolbar","helpDescription":"A container control based on {@link sap.m.Toolbar}, that provides overflow when\nits content does not fit in the visible area.\n\n<h3>Overview<\/h3>\n\nThe content of the <code>OverflowToolbar<\/code> moves into the overflow area from\nright to left when the the available space is not enough in the visible area of\nthe container. It can be accessed by the user through the overflow button that\nopens it in a popover.\n\n<b>Note:<\/b> It is recommended that you use <code>OverflowToolbar<\/code> over\n{@link sap.m.Toolbar}, unless you want to avoid overflow in favor of shrinking.\n\n<h3>Usage<\/h3>\n\nDifferent behavior and priorities can be set for each control inside the\n<code>OverflowToolbar<\/code>, such as certain actions to appear only in the\noverflow area or to never move there. For more information, see\n{@link sap.m.OverflowToolbarLayoutData} and {@link sap.m.OverflowToolbarPriority}.\n\nOnly the following controls can be moved in the overflow area:\n\n<ul><li>{@link sap.m.Button}<\/li>\n<li>{@link sap.m.CheckBox}<\/li>\n<li>{@link sap.m.ComboBox}<\/li>\n<li>{@link sap.m.DatePicker}<\/li>\n<li>{@link sap.m.DateTimeInput}<\/li>\n<li>{@link sap.m.DateTimePicker}<\/li>\n<li>{@link sap.m.Input}<\/li>\n<li>{@link sap.m.OverflowToolbarButton}<\/li>\n<li>{@link sap.m.SearchField}<\/li>\n<li>{@link sap.m.SegmentedButton}<\/li>\n<li>{@link sap.m.Select}<\/li>\n<li>{@link sap.m.TimePicker}<\/li>\n<li>{@link sap.m.ToggleButton}<\/li>\n<li>{@link sap.ui.comp.smartfield.SmartField}<\/li>\n<li>{@link sap.ui.comp.smartfield.SmartLabel}<\/li><\/ul>\n\n<h3>Responsive behavior<\/h3>\n\nThe height of the toolbar changes on desktop, tablet, and smartphones.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.OverflowToolbarButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttype: ${sap.m.ButtonType.Default}, // sap.m.ButtonType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonFirst: ${bIconFirst}, // boolean\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"OverflowToolbarButton","Experimental":false,"module":"sap/m/OverflowToolbarButton","description":"OverflowToolbarButton(sId?, mSettings?) : sap.m.OverflowToolbarButton","constructorDescription":"Constructor for a new OverflowToolbarButton.","extends":"sap.m.Button","Deprecated":false,"name":"sap.m.OverflowToolbarButton","helpDescription":"OverflowToolbarButton is a version of Button that shows its text only when in the overflow area of a sap.m.OverflowToolbar.\nThis control is intended to be used exclusively in the context of OverflowToolbar, when it is required to have buttons that show only\nan icon in the toolbar, but icon and text in the overflow menu.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.OverflowToolbarLayoutData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tshrinkable: ${bShrinkable}, // boolean\n\t\tminWidth: ${minWidth}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${maxWidth}, // sap.ui.core.CSSSize\n\t\tmoveToOverflow: ${bMoveToOverflow}, // boolean\n\t\tstayInOverflow: ${bStayInOverflow}, // boolean\n\t\tpriority: ${sap.m.OverflowToolbarPriority.High}, // sap.m.OverflowToolbarPriority\n\t\tgroup: ${0}, // int\n\t\tcloseOverflowOnInteraction: ${bCloseOverflowOnInteraction} // boolean\n\t}\n)\n","static":"true","prefix":"OverflowToolbarLayoutData","Experimental":false,"module":"sap/m/OverflowToolbarLayoutData","description":"OverflowToolbarLayoutData(sId?, mSettings?) : sap.m.OverflowToolbarLayoutData","constructorDescription":"Constructor for a new OverflowToolbarLayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMoveToOverflow moveToOverflow} : boolean (default: true)<\/li>\n<li>{@link #getStayInOverflow stayInOverflow} : boolean (default: false)<\/li>\n<li>{@link #getPriority priority} : sap.m.OverflowToolbarPriority (default: High)<\/li>\n<li>{@link #getGroup group} : int (default: 0)<\/li>\n<li>{@link #getCloseOverflowOnInteraction closeOverflowOnInteraction} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ToolbarLayoutData#constructor sap.m.ToolbarLayoutData}\ncan be used as well.","extends":"sap.m.ToolbarLayoutData","Deprecated":false,"name":"sap.m.OverflowToolbarLayoutData","helpDescription":"Holds layout data for the OverflowToolbar items.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nColumnsItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\tindex: ${index}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\twidth: \"${width}\", // string\n\t\ttotal: ${bTotal} // boolean\n\t}\n)\n","static":"true","prefix":"P13nColumnsItem","Experimental":false,"module":"sap/m/P13nColumnsItem","description":"P13nColumnsItem(sId?, mSettings?) : sap.m.P13nColumnsItem","constructorDescription":"Constructor for a new P13nColumnsItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getIndex index} : int<\/li>\n<li>{@link #getVisible visible} : boolean<\/li>\n<li>{@link #getWidth width} : string<\/li>\n<li>{@link #getTotal total} : boolean<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.P13nColumnsItem","helpDescription":"Type for <code>columnsItems<\/code> aggregation in <code>P13nColumnsPanel<\/code> control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nColumnsPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tvisibleItemsThreshold: ${-1}, // int\n\t\tcolumnsItems: [${columnsItems}], // sap.m.P13nColumnsItem[]\n\t\taddColumnsItem: [function (oEvent) {}, this], // function|array\n\t\tchangeColumnsItems: [function (oEvent) {}, this], // function|array\n\t\tsetData: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"P13nColumnsPanel","Experimental":false,"module":"sap/m/P13nColumnsPanel","description":"P13nColumnsPanel(sId?, mSettings?) : sap.m.P13nColumnsPanel","constructorDescription":"Constructor for a new P13nColumnsPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleItemsThreshold visibleItemsThreshold} : int (default: -1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumnsItems columnsItems} : sap.m.P13nColumnsItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addColumnsItem addColumnsItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:changeColumnsItems changeColumnsItems} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:setData setData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","extends":"sap.m.P13nPanel","Deprecated":false,"name":"sap.m.P13nColumnsPanel","helpDescription":"The <code>P13nColumnsPanel<\/code> control is used to define column-specific settings for table personalization.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAddColumnsItem(\n\t{\n\t\tnewItem: ${newItem} // sap.m.P13nColumnsItem\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.P13nColumnsPanel.fireAddColumnsItem","description":"fireAddColumnsItem(mParameters?) : sap.m.P13nColumnsPanel","helpDescription":"Fires event <code>addColumnsItem<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChangeColumnsItems(\n\t{\n\t\tnewItems: [${newItems}], // sap.m.P13nColumnsItem[]\n\t\texistingItems: [${existingItems}] // sap.m.P13nColumnsItem[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.P13nColumnsPanel.fireChangeColumnsItems","description":"fireChangeColumnsItems(mParameters?) : sap.m.P13nColumnsPanel","helpDescription":"Fires event <code>changeColumnsItems<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nConditionPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tmaxConditions: ${\"-1\"}, // string\n\t\texclude: ${bExclude}, // boolean\n\t\tcontainerQuery: ${bContainerQuery}, // boolean\n\t\tautoAddNewRow: ${bAutoAddNewRow}, // boolean\n\t\tdisableFirstRemoveIcon: ${bDisableFirstRemoveIcon}, // boolean\n\t\talwaysShowAddIcon: ${bAlwaysShowAddIcon}, // boolean\n\t\tusePrevConditionSetting: ${bUsePrevConditionSetting}, // boolean\n\t\tautoReduceKeyFieldItems: ${bAutoReduceKeyFieldItems}, // boolean\n\t\tlayoutMode: \"${layoutMode}\", // string\n\t\tshowLabel: ${bShowLabel}, // boolean\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tdataChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"P13nConditionPanel","Experimental":true,"module":"sap/m/P13nConditionPanel","description":"P13nConditionPanel(sId?, mSettings?) : sap.m.P13nConditionPanel","constructorDescription":"Constructor for a new P13nConditionPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxConditions maxConditions} : string (default: -1)<\/li>\n<li>{@link #getExclude exclude} : boolean (default: false)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getAutoAddNewRow autoAddNewRow} : boolean (default: false)<\/li>\n<li>{@link #getDisableFirstRemoveIcon disableFirstRemoveIcon} : boolean (default: false)<\/li>\n<li>{@link #getAlwaysShowAddIcon alwaysShowAddIcon} : boolean (default: true)<\/li>\n<li>{@link #getUsePrevConditionSetting usePrevConditionSetting} : boolean (default: true)<\/li>\n<li>{@link #getAutoReduceKeyFieldItems autoReduceKeyFieldItems} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: false)<\/li>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValidationExecutor validationExecutor} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dataChange dataChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.P13nConditionPanel","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ttitle: \"${title}\", // string\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\ttype: ${sap.m.DialogType.Standard}, // sap.m.DialogType\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tstretchOnPhone: ${bStretchOnPhone}, // boolean\n\t\tstretch: ${bStretch}, // boolean\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\thorizontalScrolling: ${bHorizontalScrolling}, // boolean\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tresizable: ${bResizable}, // boolean\n\t\tdraggable: ${bDraggable}, // boolean\n\t\tescapeHandler: ${escapeHandler}, // any\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcustomHeader: ${customHeader}, // sap.m.IBar\n\t\tbeginButton: ${beginButton}, // sap.m.Button\n\t\tendButton: ${endButton}, // sap.m.Button\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tleftButton: ${leftButton}, // (sap.m.Button|string)\n\t\trightButton: ${rightButton}, // (sap.m.Button|string)\n\t\tinitialFocus: ${initialFocus}, // (sap.ui.core.Control|string)\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tinitialVisiblePanelType: \"${initialVisiblePanelType}\", // string\n\t\tshowReset: ${bShowReset}, // boolean\n\t\tshowResetEnabled: ${bShowResetEnabled}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tpanels: [${panels}], // sap.m.P13nPanel[]\n\t\tok: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this], // function|array\n\t\treset: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"P13nDialog","Experimental":false,"module":"sap/m/P13nDialog","description":"P13nDialog(sId?, mSettings?) : sap.m.P13nDialog","constructorDescription":"Constructor for a new P13nDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInitialVisiblePanelType initialVisiblePanelType} : string<\/li>\n<li>{@link #getShowReset showReset} : boolean (default: false)<\/li>\n<li>{@link #getShowResetEnabled showResetEnabled} : boolean (default: false)<\/li>\n<li>{@link #getValidationExecutor validationExecutor} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPanels panels} : sap.m.P13nPanel[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:ok ok} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:reset reset} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Dialog#constructor sap.m.Dialog}\ncan be used as well.","extends":"sap.m.Dialog","Deprecated":false,"name":"sap.m.P13nDialog","helpDescription":"The P13nDialog control provides a dialog that contains one or more panels. On each of the panels, one or more changes with regards to a\n       table can be processed. For example, a panel to set a column to invisible, change the order of the columns or a panel to sort or filter\n       tables.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nDimMeasureItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\tindex: ${-1}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\trole: \"${role}\" // string\n\t}\n)\n","static":"true","prefix":"P13nDimMeasureItem","Experimental":false,"module":"sap/m/P13nDimMeasureItem","description":"P13nDimMeasureItem(sId?, mSettings?) : sap.m.P13nDimMeasureItem","constructorDescription":"Constructor for a new P13nDimMeasureItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getIndex index} : int (default: -1)<\/li>\n<li>{@link #getVisible visible} : boolean<\/li>\n<li>{@link #getRole role} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.P13nDimMeasureItem","helpDescription":"Type for <code>columnsItems<\/code> aggregation in <code>P13nDimMeasurePanel<\/code> control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nDimMeasurePanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tchartTypeKey: ${\"\"}, // string\n\t\tdimMeasureItems: [${dimMeasureItems}], // sap.m.P13nDimMeasureItem[]\n\t\tavailableChartTypes: [${availableChartTypes}] // sap.ui.core.Item[]\n\t}\n)\n","static":"true","prefix":"P13nDimMeasurePanel","Experimental":false,"module":"sap/m/P13nDimMeasurePanel","description":"P13nDimMeasurePanel(sId?, mSettings?) : sap.m.P13nDimMeasurePanel","constructorDescription":"Constructor for a new P13nDimMeasurePanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getChartTypeKey chartTypeKey} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDimMeasureItems dimMeasureItems} : sap.m.P13nDimMeasureItem[]<\/li>\n<li>{@link #getAvailableChartTypes availableChartTypes} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","extends":"sap.m.P13nPanel","Deprecated":false,"name":"sap.m.P13nDimMeasurePanel","helpDescription":"The P13nDimMeasurePanel control is used to define chart-specific settings like chart type, the visibility, the order and roles of\n       dimensions and measures for table personalization.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nFilterItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\toperation: \"${operation}\", // string\n\t\tvalue1: \"${value1}\", // string\n\t\tvalue2: \"${value2}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\texclude: ${bExclude} // boolean\n\t}\n)\n","static":"true","prefix":"P13nFilterItem","Experimental":false,"module":"sap/m/P13nFilterItem","description":"P13nFilterItem(sId?, mSettings?) : sap.m.P13nFilterItem","constructorDescription":"Constructor for a new P13nFilterItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperation operation} : string<\/li>\n<li>{@link #getValue1 value1} : string<\/li>\n<li>{@link #getValue2 value2} : string<\/li>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getExclude exclude} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.P13nFilterItem","helpDescription":"Type for <code>filterItems<\/code> aggregation in P13nFilterPanel control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nFilterPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tmaxIncludes: ${\"-1\"}, // string\n\t\tmaxExcludes: ${\"-1\"}, // string\n\t\tcontainerQuery: ${bContainerQuery}, // boolean\n\t\tlayoutMode: \"${layoutMode}\", // string\n\t\tfilterItems: [${filterItems}], // sap.m.P13nFilterItem[]\n\t\taddFilterItem: [function (oEvent) {}, this], // function|array\n\t\tremoveFilterItem: [function (oEvent) {}, this], // function|array\n\t\tupdateFilterItem: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"P13nFilterPanel","Experimental":false,"module":"sap/m/P13nFilterPanel","description":"P13nFilterPanel(sId?, mSettings?) : sap.m.P13nFilterPanel","constructorDescription":"Constructor for a new P13nFilterPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxIncludes maxIncludes} : string (default: -1)<\/li>\n<li>{@link #getMaxExcludes maxExcludes} : string (default: -1)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterItems filterItems} : sap.m.P13nFilterItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addFilterItem addFilterItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeFilterItem removeFilterItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateFilterItem updateFilterItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","extends":"sap.m.P13nPanel","Deprecated":false,"name":"sap.m.P13nFilterPanel","helpDescription":"The P13nFilterPanel control is used to define filter-specific settings for table personalization.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nGroupItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\toperation: \"${operation}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\tshowIfGrouped: ${bShowIfGrouped} // boolean\n\t}\n)\n","static":"true","prefix":"P13nGroupItem","Experimental":false,"module":"sap/m/P13nGroupItem","description":"P13nGroupItem(sId?, mSettings?) : sap.m.P13nGroupItem","constructorDescription":"Constructor for a new P13nGroupItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperation operation} : string<\/li>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getShowIfGrouped showIfGrouped} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.P13nGroupItem","helpDescription":"Type for <code>groupItems<\/code> aggregation in P13nGroupPanel control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nGroupPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tmaxGroups: ${\"-1\"}, // string\n\t\tcontainerQuery: ${bContainerQuery}, // boolean\n\t\tlayoutMode: \"${layoutMode}\", // string\n\t\tgroupItems: [${groupItems}], // sap.m.P13nGroupItem[]\n\t\taddGroupItem: [function (oEvent) {}, this], // function|array\n\t\tremoveGroupItem: [function (oEvent) {}, this], // function|array\n\t\tupdateGroupItem: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"P13nGroupPanel","Experimental":false,"module":"sap/m/P13nGroupPanel","description":"P13nGroupPanel(sId?, mSettings?) : sap.m.P13nGroupPanel","constructorDescription":"Constructor for a new P13nGroupPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxGroups maxGroups} : string (default: -1)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroupItems groupItems} : sap.m.P13nGroupItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addGroupItem addGroupItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeGroupItem removeGroupItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateGroupItem updateGroupItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","extends":"sap.m.P13nPanel","Deprecated":false,"name":"sap.m.P13nGroupPanel","helpDescription":"The P13nGroupPanel control is used to define group-specific settings for table personalization.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\ttext: ${\"\"}, // string\n\t\tvisible: ${bVisible}, // boolean\n\t\ttype: ${\"text\"}, // string\n\t\tprecision: \"${precision}\", // string\n\t\tscale: \"${scale}\", // string\n\t\tmaxLength: \"${maxLength}\", // string\n\t\twidth: \"${width}\", // string\n\t\tisDefault: ${bIsDefault}, // boolean\n\t\tvalues: [${values}], // string[]\n\t\trole: \"${role}\", // string\n\t\taggregationRole: \"${aggregationRole}\", // string\n\t\thref: \"${href}\", // string\n\t\ttarget: \"${target}\", // string\n\t\tpress: ${press} // object\n\t}\n)\n","static":"true","prefix":"P13nItem","Experimental":false,"module":"sap/m/P13nItem","description":"P13nItem(sId?, mSettings?) : sap.m.P13nItem","constructorDescription":"Constructor for a new P13nItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getVisible visible} : boolean<\/li>\n<li>{@link #getType type} : string (default: text)<\/li>\n<li>{@link #getPrecision precision} : string<\/li>\n<li>{@link #getScale scale} : string<\/li>\n<li>{@link #getMaxLength maxLength} : string<\/li>\n<li>{@link #getWidth width} : string<\/li>\n<li>{@link #getIsDefault isDefault} : boolean (default: false)<\/li>\n<li>{@link #getValues values} : string[]<\/li>\n<li>{@link #getRole role} : string<\/li>\n<li>{@link #getAggregationRole aggregationRole} : string<\/li>\n<li>{@link #getHref href} : string<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<li>{@link #getPress press} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.P13nItem","helpDescription":"Base type for <code>items<\/code> aggregation in <code>P13nPanel<\/code> control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"P13nPanel","Experimental":false,"module":"sap/m/P13nPanel","description":"P13nPanel(sId?, mSettings?) : sap.m.P13nPanel","constructorDescription":"Constructor for a new P13nPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLarge titleLarge} : string<\/li>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getValidationExecutor validationExecutor} : object<\/li>\n<li>{@link #getValidationListener validationListener} : object<\/li>\n<li>{@link #getChangeNotifier changeNotifier} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.P13nItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeNavigationTo beforeNavigationTo} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.P13nPanel","helpDescription":"Base type for <code>panels<\/code> aggregation in <code>P13nDialog<\/code> control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nSortItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\toperation: \"${operation}\", // string\n\t\tcolumnKey: \"${columnKey}\" // string\n\t}\n)\n","static":"true","prefix":"P13nSortItem","Experimental":false,"module":"sap/m/P13nSortItem","description":"P13nSortItem(sId?, mSettings?) : sap.m.P13nSortItem","constructorDescription":"Constructor for a new P13nSortItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperation operation} : string<\/li>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.P13nSortItem","helpDescription":"Type for <code>sortItems<\/code> aggregation in P13nSortPanel control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.P13nSortPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tcontainerQuery: ${bContainerQuery}, // boolean\n\t\tlayoutMode: \"${layoutMode}\", // string\n\t\tsortItems: [${sortItems}], // sap.m.P13nSortItem[]\n\t\taddSortItem: [function (oEvent) {}, this], // function|array\n\t\tremoveSortItem: [function (oEvent) {}, this], // function|array\n\t\tupdateSortItem: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"P13nSortPanel","Experimental":false,"module":"sap/m/P13nSortPanel","description":"P13nSortPanel(sId?, mSettings?) : sap.m.P13nSortPanel","constructorDescription":"Constructor for a new P13nSortPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSortItems sortItems} : sap.m.P13nSortItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addSortItem addSortItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeSortItem removeSortItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateSortItem updateSortItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","extends":"sap.m.P13nPanel","Deprecated":false,"name":"sap.m.P13nSortPanel","helpDescription":"The P13nSortPanel control is used to define settings for sorting in table personalization.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Page(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tnavButtonText: \"${navButtonText}\", // string\n\t\tnavButtonTooltip: \"${navButtonTooltip}\", // string\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tbackgroundDesign: ${sap.m.PageBackgroundDesign.Standard}, // sap.m.PageBackgroundDesign\n\t\tnavButtonType: ${sap.m.ButtonType.Back}, // sap.m.ButtonType\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tcontentOnlyBusy: ${bContentOnlyBusy}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeader: ${customHeader}, // sap.m.IBar\n\t\tfooter: ${footer}, // sap.m.IBar\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\theaderContent: [${headerContent}], // sap.ui.core.Control[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonTap: [function (oEvent) {}, this], // function|array\n\t\tnavButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Page","Experimental":false,"module":"sap/m/Page","description":"Page(sId?, mSettings?) : sap.m.Page","constructorDescription":"Constructor for a new Page.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getShowSubHeader showSubHeader} : boolean (default: true)<\/li>\n<li>{@link #getNavButtonText navButtonText} : string<\/li>\n<li>{@link #getNavButtonTooltip navButtonTooltip} : string<\/li>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.PageBackgroundDesign (default: Standard)<\/li>\n<li>{@link #getNavButtonType navButtonType} : sap.m.ButtonType (default: Back)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: true)<\/li>\n<li>{@link #getContentOnlyBusy contentOnlyBusy} : boolean (default: false)<\/li>\n<li>{@link #getFloatingFooter floatingFooter} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.m.IBar<\/li>\n<li>{@link #getFooter footer} : sap.m.IBar<\/li>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getLandmarkInfo landmarkInfo} : sap.m.PageAccessibleLandmarkInfo<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonTap navButtonTap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navButtonPress navButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Page","helpDescription":"A container control that holds one whole screen of an application.\n\n<h3>Overview<\/h3>\nThe sap.m.Page is a container control that holds one whole screen of an application.\nThe page has three distinct areas that can hold content - a header, content area and a footer.\n<h3>Structure<\/h3>\n<h4>Header<\/h4>\nThe top most area of the page is occupied by the header. The standard header includes a navigation button and a title.\nAlternatively, you can create your own custom header, which is defined in the <code>customHeader<\/code> aggregation.\n<h4>Content<\/h4>\nThe content occupies the main part of the page. Only the content area is scrollable by default.\nThis can be prevented by setting  <code>enableScrolling<\/code> to <code>false<\/code>.\n<h4>Footer<\/h4>\nThe footer is optional and occupies the fixed bottom part of the page. Alternatively, the footer can be floating above the bottom part of the content.\nThis is enabled with the <code>floatingFooter<\/code> property.\n\n<b>Note:<\/b> All accessibility information for the different areas and their corresponding ARIA roles is set in the aggregation <code>landmarkInfo<\/code> of type {@link sap.m.PageAccessibleLandmarkInfo}","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.PageAccessibleLandmarkInfo(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\trootRole: ${sap.ui.core.AccessibleLandmarkRole.Region}, // sap.ui.core.AccessibleLandmarkRole\n\t\trootLabel: \"${rootLabel}\", // string\n\t\tcontentRole: ${sap.ui.core.AccessibleLandmarkRole.Main}, // sap.ui.core.AccessibleLandmarkRole\n\t\tcontentLabel: \"${contentLabel}\", // string\n\t\theaderRole: ${sap.ui.core.AccessibleLandmarkRole.Region}, // sap.ui.core.AccessibleLandmarkRole\n\t\theaderLabel: \"${headerLabel}\", // string\n\t\tsubHeaderRole: ${subHeaderRole}, // sap.ui.core.AccessibleLandmarkRole\n\t\tsubHeaderLabel: \"${subHeaderLabel}\", // string\n\t\tfooterRole: ${sap.ui.core.AccessibleLandmarkRole.Region}, // sap.ui.core.AccessibleLandmarkRole\n\t\tfooterLabel: \"${footerLabel}\" // string\n\t}\n)\n","static":"true","prefix":"PageAccessibleLandmarkInfo","Experimental":false,"module":"sap/m/PageAccessibleLandmarkInfo","description":"PageAccessibleLandmarkInfo(sId?, mSettings?) : sap.m.PageAccessibleLandmarkInfo","constructorDescription":"Constructor for a new <code>sap.m.PageAccessibleLandmarkInfo<\/code> element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRootRole rootRole} : sap.ui.core.AccessibleLandmarkRole (default: Region)<\/li>\n<li>{@link #getRootLabel rootLabel} : string<\/li>\n<li>{@link #getContentRole contentRole} : sap.ui.core.AccessibleLandmarkRole (default: Main)<\/li>\n<li>{@link #getContentLabel contentLabel} : string<\/li>\n<li>{@link #getHeaderRole headerRole} : sap.ui.core.AccessibleLandmarkRole (default: Region)<\/li>\n<li>{@link #getHeaderLabel headerLabel} : string<\/li>\n<li>{@link #getSubHeaderRole subHeaderRole} : sap.ui.core.AccessibleLandmarkRole<\/li>\n<li>{@link #getSubHeaderLabel subHeaderLabel} : string<\/li>\n<li>{@link #getFooterRole footerRole} : sap.ui.core.AccessibleLandmarkRole (default: Region)<\/li>\n<li>{@link #getFooterLabel footerLabel} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.PageAccessibleLandmarkInfo","helpDescription":"Settings for accessible landmarks which can be applied to the container elements of a <code>sap.m.Page<\/code> control.\nThese landmarks are e.g. used by assistive technologies (like screenreaders) to provide a meaningful page overview.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.PagingButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcount: ${1}, // int\n\t\tposition: ${1}, // int\n\t\tnextButtonTooltip: ${\"\"}, // string\n\t\tpreviousButtonTooltip: ${\"\"}, // string\n\t\tpositionChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"PagingButton","Experimental":false,"module":"sap/m/PagingButton","description":"PagingButton(sId?, mSettings?) : sap.m.PagingButton","constructorDescription":"Constructor for a new PagingButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCount count} : int (default: 1)<\/li>\n<li>{@link #getPosition position} : int (default: 1)<\/li>\n<li>{@link #getNextButtonTooltip nextButtonTooltip} : string (default: )<\/li>\n<li>{@link #getPreviousButtonTooltip previousButtonTooltip} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:positionChange positionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.PagingButton","helpDescription":"Enables users to navigate between items/entities.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"firePositionChange(\n\t{\n\t\tnewPosition: ${newPosition}, // int\n\t\toldPosition: ${oldPosition} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.PagingButton.firePositionChange","description":"firePositionChange(mParameters?) : sap.m.PagingButton","helpDescription":"Fires event <code>positionChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Panel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theaderText: ${\"\"}, // string\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\texpandable: ${bExpandable}, // boolean\n\t\texpanded: ${bExpanded}, // boolean\n\t\texpandAnimation: ${bExpandAnimation}, // boolean\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Translucent}, // sap.m.BackgroundDesign\n\t\taccessibleRole: ${sap.m.PanelAccessibleRole.Form}, // sap.m.PanelAccessibleRole\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\texpand: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Panel","Experimental":false,"module":"sap/m/Panel","description":"Panel(sId?, mSettings?) : sap.m.Panel","constructorDescription":"Constructor for a new Panel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderText headerText} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: false)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: false)<\/li>\n<li>{@link #getExpandAnimation expandAnimation} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Translucent)<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : sap.m.PanelAccessibleRole (default: Form)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getHeaderToolbar headerToolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getInfoToolbar infoToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Panel","helpDescription":"A container control which has a header and content.\n<h3>Overview<\/h3>\nThe panel is a container for grouping and displaying information. It can be collapsed to save space on the screen.\n<h4>Guidelines:<\/h4>\n<ul>\n<li>Nesting two or more panels is not recommended.<\/li>\n<li>Do not stack too many panels on one page.<\/li>\n<\/ul>\n<h3>Structure<\/h3>\nA panel consists of a title bar with a header text or header toolbar, an info toolbar (optional), and a content area.\nUsing the <code>headerToolbar<\/code> aggregation, you can add a toolbar with any toolbar content (i.e. custom buttons, spacers, titles) inside the title bar.\n\nThere are two types of panels: fixed and expandable. Expendable panels are enabled by the <code>expandable<\/code> property.\nFurthermore you can define an expand animation with the property <code>expandAnimation<\/code>.\n<h3>Usage<\/h3>\n<h4>When to use:<\/h4>\n<ul>\n<li>You need to group or display information and want to give users the option of hiding this information.<\/li>\n<li>You want to show additional information on demand (for example, a panel could show optional input fields for an advanced search).<\/li>\n<li>You want to create a panel with controls that do not require user interaction and are not part of a form. Depending on the usage, change the <code>accessibleRole<\/code> property from the default <code>{@link sap.m.PanelAccessibleRole Form}<\/code> to <code>{@link sap.m.PanelAccessibleRole Region}<\/code> or <code>{@link sap.m.PanelAccessibleRole Complementary}<\/code>.<\/li>\n<\/ul>\n<h3>Responsive Behavior<\/h3>\n<ul>\n<li>If the width of the panel is set to 100% (default), the panel and its children are resized responsively, depending on its parent container.<\/li>\n<li>If the panel has a fixed defined height, it will take up the space, even if the panel is collapsed.<\/li>\n<li>When the panel is expandable, an arrow icon (pointing to the right) appears in front of the header.<\/li>\n<li>When the animation is activated, expand/collapse uses a smooth animation to open or close the content area.<\/li>\n<li>When the panel expands/collapses, the arrow icon rotates 90 degrees clockwise/counter-clockwise.<\/li>\n<li>When the height uses the default property <code>auto<\/code>, the height of the content area is automatically adjusted to match the height of its content.<\/li>\n<li>When the height of the panel is set to a fixed size, the content area can be scrolled through.<\/li>\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireExpand(\n\t{\n\t\texpand: ${bExpand} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Panel.fireExpand","description":"fireExpand(mParameters?) : sap.m.Panel","helpDescription":"Fires event <code>expand<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.PlanningCalendar(\n\t\"${sID}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tstartDate: ${startDate}, // object\n\t\tviewKey: ${\"sap.ui.unified.CalendarIntervalType.Hour\"}, // string\n\t\tsingleSelection: ${bSingleSelection}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tshowIntervalHeaders: ${bShowIntervalHeaders}, // boolean\n\t\tshowEmptyIntervalHeaders: ${bShowEmptyIntervalHeaders}, // boolean\n\t\tshowRowHeaders: ${bShowRowHeaders}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tappointmentsReducedHeight: ${bAppointmentsReducedHeight}, // boolean\n\t\tappointmentsVisualization: ${sap.ui.unified.CalendarAppointmentVisualization.Standard}, // sap.ui.unified.CalendarAppointmentVisualization\n\t\tminDate: ${minDate}, // object\n\t\tmaxDate: ${maxDate}, // object\n\t\trows: [${rows}], // sap.m.PlanningCalendarRow[]\n\t\tviews: [${views}], // sap.m.PlanningCalendarView[]\n\t\tspecialDates: [${specialDates}], // sap.ui.unified.DateTypeRange[]\n\t\ttoolbarContent: [${toolbarContent}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tlegend: ${legend}, // (sap.ui.unified.CalendarLegend|string)\n\t\tappointmentSelect: [function (oEvent) {}, this], // function|array\n\t\tintervalSelect: [function (oEvent) {}, this], // function|array\n\t\trowSelectionChange: [function (oEvent) {}, this], // function|array\n\t\tstartDateChange: [function (oEvent) {}, this], // function|array\n\t\tviewChange: [function (oEvent) {}, this], // function|array\n\t\trowHeaderClick: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"PlanningCalendar","Experimental":false,"module":"sap/m/PlanningCalendar","description":"PlanningCalendar(sID?, mSettings?) : sap.m.PlanningCalendar","constructorDescription":"Constructor for a new <code>PlanningCalendar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getViewKey viewKey} : string (default: sap.ui.unified.CalendarIntervalType.Hour)<\/li>\n<li>{@link #getSingleSelection singleSelection} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getShowIntervalHeaders showIntervalHeaders} : boolean (default: true)<\/li>\n<li>{@link #getShowEmptyIntervalHeaders showEmptyIntervalHeaders} : boolean (default: true)<\/li>\n<li>{@link #getShowRowHeaders showRowHeaders} : boolean (default: true)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getAppointmentsReducedHeight appointmentsReducedHeight} : boolean (default: false)<\/li>\n<li>{@link #getAppointmentsVisualization appointmentsVisualization} : sap.ui.unified.CalendarAppointmentVisualization (default: Standard)<\/li>\n<li>{@link #getMinDate minDate} : object<\/li>\n<li>{@link #getMaxDate maxDate} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRows rows} : sap.m.PlanningCalendarRow[]<\/li>\n<li>{@link #getViews views} : sap.m.PlanningCalendarView[]<\/li>\n<li>{@link #getSpecialDates specialDates} : sap.ui.unified.DateTypeRange[]<\/li>\n<li>{@link #getToolbarContent toolbarContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getLegend legend} : (sap.ui.core.ID | sap.ui.unified.CalendarLegend)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:appointmentSelect appointmentSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:intervalSelect intervalSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:rowSelectionChange rowSelectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:startDateChange startDateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:viewChange viewChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:rowHeaderClick rowHeaderClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.PlanningCalendar","helpDescription":"Displays rows with appointments for different entities (such as persons or teams) for the selected time interval.\n\n<h3>Overview<\/h3>\n\nYou can use the <code>PlanningCalendar<\/code> to represent a calendar containing multiple rows with\nappointments, where each row represents a different person.\n\nYou can configure different time-interval views that the user can switch between, such as hours or days, and even\na whole week/month. The available navigation allows the user to select a specific interval using a picker, or\nmove to the previous/next interval using arrows.\n\n<b>Note:<\/b> The <code>PlanningCalendar<\/code> uses parts of the <code>sap.ui.unified<\/code> library.\nIf the <code>sap.ui.unified<\/code> library is not loaded before the <code>PlanningCalendar<\/code>\nis loaded, it will be loaded after the <code>PlanningCalendar<\/code> is loaded.\nThis could lead to a waiting time before a <code>PlanningCalendar<\/code> is used for the first time.\nTo prevent this, applications using the <code>PlanningCalendar<\/code> should also load the\n<code>sap.ui.unified<\/code> library.\n\n<h3>Usage<\/h3>\n\nThe <code>PlanningCalendar<\/code> has the following structure from top to bottom:\n\n<ul>\n<li>A toolbar where you can add your own buttons or other controls using the <code>toolbarContent<\/code> aggregation.<\/li>\n<li>A header containing a drop-down menu for selecting the {@link sap.m.PlanningCalendarView PlanningCalendarViews},\nand navigation for moving through the intervals using arrows or selecting a specific interval with a picker.\nCustom views can be configured using the <code>views<\/code> aggregation. If not configured, the following set of default\nbuilt-in views is available - Hours, Days, 1 Week, 1 Month, and Months. Setting a custom view(s) replaces the built-in ones.<\/li>\n<li>The rows of the <code>PlanningCalendar<\/code> that contain the the assigned appointments.\nThey can be configured with the <code>rows<\/code> aggregation, which is of type\n{@link sap.m.PlanningCalendarRow PlanningCalendarRow}.<\/li>\n<\/ul>\n\n<h3>Responsive behavior<\/h3>\n\nYou can define the number of displayed intervals based on the size of the <code>PlanningCalendar<\/code> using the\n{@link sap.m.PlanningCalendarView PlanningCalendarView}'s properties.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAppointmentSelect(\n\t{\n\t\tappointment: ${appointment}, // sap.ui.unified.CalendarAppointment\n\t\tappointments: [${appointments}], // sap.ui.unified.CalendarAppointment[]\n\t\tmultiSelect: ${bMultiSelect} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.PlanningCalendar.fireAppointmentSelect","description":"fireAppointmentSelect(mParameters?) : sap.m.PlanningCalendar","helpDescription":"Fires event <code>appointmentSelect<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireIntervalSelect(\n\t{\n\t\tstartDate: ${startDate}, // object\n\t\tendDate: ${endDate}, // object\n\t\tsubInterval: ${bSubInterval}, // boolean\n\t\trow: ${row} // sap.m.PlanningCalendarRow\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.PlanningCalendar.fireIntervalSelect","description":"fireIntervalSelect(mParameters?) : sap.m.PlanningCalendar","helpDescription":"Fires event <code>intervalSelect<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireRowSelectionChange(\n\t{\n\t\trows: [${rows}] // sap.m.PlanningCalendarRow[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.PlanningCalendar.fireRowSelectionChange","description":"fireRowSelectionChange(mParameters?) : sap.m.PlanningCalendar","helpDescription":"Fires event <code>rowSelectionChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.PlanningCalendarRow(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttitle: \"${title}\", // string\n\t\ttext: \"${text}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tnonWorkingDays: [${nonWorkingDays}], // int[]\n\t\tnonWorkingHours: [${nonWorkingHours}], // int[]\n\t\tselected: ${bSelected}, // boolean\n\t\tkey: \"${key}\", // string\n\t\tappointments: [${appointments}], // sap.ui.unified.CalendarAppointment[]\n\t\tintervalHeaders: [${intervalHeaders}] // sap.ui.unified.CalendarAppointment[]\n\t}\n)\n","static":"true","prefix":"PlanningCalendarRow","Experimental":false,"module":"sap/m/PlanningCalendarRow","description":"PlanningCalendarRow(sId?, mSettings?) : sap.m.PlanningCalendarRow","constructorDescription":"Constructor for a new <code>PlanningCalendarRow<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getNonWorkingDays nonWorkingDays} : int[]<\/li>\n<li>{@link #getNonWorkingHours nonWorkingHours} : int[]<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAppointments appointments} : sap.ui.unified.CalendarAppointment[]<\/li>\n<li>{@link #getIntervalHeaders intervalHeaders} : sap.ui.unified.CalendarAppointment[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.PlanningCalendarRow","helpDescription":"Row in the @link sap.m.PlanningCalendar}.\n\nThis element holds the data of one row in the @link sap.m.PlanningCalendar}. Once the header information (e.g. person information)\nis assigned, the appointments are assigned.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.PlanningCalendarView(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tkey: \"${key}\", // string\n\t\tintervalType: ${sap.ui.unified.CalendarIntervalType.Hour}, // sap.ui.unified.CalendarIntervalType\n\t\tdescription: \"${description}\", // string\n\t\tintervalsS: ${6}, // int\n\t\tintervalsM: ${8}, // int\n\t\tintervalsL: ${12}, // int\n\t\tshowSubIntervals: ${bShowSubIntervals} // boolean\n\t}\n)\n","static":"true","prefix":"PlanningCalendarView","Experimental":false,"module":"sap/m/PlanningCalendarView","description":"PlanningCalendarView(sId?, mSettings?) : sap.m.PlanningCalendarView","constructorDescription":"Constructor for a new <code>PlanningCalendarView<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getIntervalType intervalType} : sap.ui.unified.CalendarIntervalType (default: Hour)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIntervalsS intervalsS} : int (default: 6)<\/li>\n<li>{@link #getIntervalsM intervalsM} : int (default: 8)<\/li>\n<li>{@link #getIntervalsL intervalsL} : int (default: 12)<\/li>\n<li>{@link #getShowSubIntervals showSubIntervals} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.PlanningCalendarView","helpDescription":"View of the {@link sap.m.PlanningCalendar}.\n\nThe <code>PlanningCalendarView<\/code> defines the type of the intervals (hours, days, months)\nand how many intervals are displayed.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Popover(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tplacement: ${sap.m.PlacementType.Right}, // sap.m.PlacementType\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\ttitle: \"${title}\", // string\n\t\tmodal: ${bModal}, // boolean\n\t\toffsetX: ${0}, // int\n\t\toffsetY: ${0}, // int\n\t\tshowArrow: ${bShowArrow}, // boolean\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentMinWidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\thorizontalScrolling: ${bHorizontalScrolling}, // boolean\n\t\tbounce: ${bBounce}, // boolean\n\t\tresizable: ${bResizable}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeader: ${customHeader}, // sap.ui.core.Control\n\t\tsubHeader: ${subHeader}, // sap.ui.core.Control\n\t\tfooter: ${footer}, // sap.ui.core.Control\n\t\tbeginButton: ${beginButton}, // sap.ui.core.Control\n\t\tendButton: ${endButton}, // sap.ui.core.Control\n\t\tleftButton: ${leftButton}, // (sap.m.Button|string)\n\t\trightButton: ${rightButton}, // (sap.m.Button|string)\n\t\tinitialFocus: ${initialFocus}, // (sap.ui.core.Control|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Popover","Experimental":false,"module":"sap/m/Popover","description":"Popover(sId?, mSettings?) : sap.m.Popover","constructorDescription":"Constructor for a new Popover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Right)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getModal modal} : boolean (default: false)<\/li>\n<li>{@link #getOffsetX offsetX} : int (default: 0)<\/li>\n<li>{@link #getOffsetY offsetY} : int (default: 0)<\/li>\n<li>{@link #getShowArrow showArrow} : boolean (default: true)<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentMinWidth contentMinWidth} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getBounce bounce} : boolean<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.ui.core.Control<\/li>\n<li>{@link #getSubHeader subHeader} : sap.ui.core.Control<\/li>\n<li>{@link #getFooter footer} : sap.ui.core.Control<\/li>\n<li>{@link #getBeginButton beginButton} : sap.ui.core.Control<\/li>\n<li>{@link #getEndButton endButton} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getLeftButton leftButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getRightButton rightButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Popover","helpDescription":"Displays additional information for an object in a compact way.\n\n<h3>Overview<\/h3>\nThe popover displays additional information for an object in a compact way and without leaving the page. The popover can contain various UI elements such as fields, tables, images, and charts. It can also include actions in the footer.\n<h3>Structure<\/h3>\nThe popover has three main areas:\n<ul>\n<li>Header (optional) - with a back button and a title<\/li>\n<li>Content - holds all the controls<\/li>\n<li>Footer (optional) - with additional action buttons<\/li>\n<\/ul>\n<h4>Guidelines<\/h4>\n<ul>\n<li>Do not overlap popovers.<\/li>\n<li>You can determine the {@link sap.m.PlacementType placement} of the popover relative to the control that opens it.<\/li>\n<li>Ensure that the content has a basic design and shows only the most important information.<\/li>\n<\/ul>\n<h3>Usage<\/h3>\n<h4>When to use:<\/h4>\n<ul>\n<li>You need to define your own structure of controls within the popover.<\/li>\n<\/ul>\n<h4>When not to use:<\/h4>\n<ul>\n<li>The {@link sap.m.QuickView QuickView} is more appropriate for your use case.<\/li>\n<\/ul>\n<h3>Responsive Behavior<\/h3>\nThe popover is closed when the user clicks or taps outside the popover or selects an action within the popover. You can prevent this with the <code>modal<\/code> property.\nThe popover can be resized when the <code>resizable<\/code> property is enabled.\n\n<ul>\n<li>{@link sap.m.Popover} is <u>not<\/u> responsive on mobile devices - it will always be rendered as a popover and you have to take care of its size and position.<\/li>\n<li>{@link sap.m.ResponsivePopover} is adaptive and responsive. It renders as a dialog with a close button in the header on phones, and as a popover on tablets.<\/li>\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterClose(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Popover.fireAfterClose","description":"fireAfterClose(mParameters?) : sap.m.Popover","helpDescription":"Fires event <code>afterClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Popover.fireAfterOpen","description":"fireAfterOpen(mParameters?) : sap.m.Popover","helpDescription":"Fires event <code>afterOpen<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeClose(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Popover.fireBeforeClose","description":"fireBeforeClose(mParameters?) : sap.m.Popover","helpDescription":"Fires event <code>beforeClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Popover.fireBeforeOpen","description":"fireBeforeOpen(mParameters?) : sap.m.Popover","helpDescription":"Fires event <code>beforeOpen<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ProgressIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tdisplayValue: \"${displayValue}\", // string\n\t\tpercentValue: ${0}, // float\n\t\tshowValue: ${bShowValue}, // boolean\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","prefix":"ProgressIndicator","Experimental":false,"module":"sap/m/ProgressIndicator","description":"ProgressIndicator(sId?, mSettings?) : sap.m.ProgressIndicator","constructorDescription":"Constructor for a new ProgressIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getDisplayValue displayValue} : string<\/li>\n<li>{@link #getPercentValue percentValue} : float (default: 0)<\/li>\n<li>{@link #getShowValue showValue} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ProgressIndicator","helpDescription":"Shows the progress of a process in a graphical way. To indicate the progress, the inside of the ProgressIndicator is filled with a color.\nAdditionally, a user-defined string can be displayed on the ProgressIndicator.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.PullToRefresh(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdescription: \"${description}\", // string\n\t\tshowIcon: ${bShowIcon}, // boolean\n\t\tcustomIcon: ${customIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\trefresh: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"PullToRefresh","Experimental":false,"module":"sap/m/PullToRefresh","description":"PullToRefresh(sId?, mSettings?) : sap.m.PullToRefresh","constructorDescription":"Constructor for a new PullToRefresh.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: false)<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:refresh refresh} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.PullToRefresh","helpDescription":"PullToRefresh control. Put it as the first control in contents of a scroll container or a scrollable page. Do not place it into a page with disabled scrolling.\nOn touch devices it gets hidden by default and when the user pulls down the page far enough, it gets visible and triggers the \"refresh\" event.\nIn non-touch browsers where scrollbars are used for scrolling, it is always visible and triggers the \"refresh\" event when clicked.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.QuickView(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpages: [${pages}], // sap.m.QuickViewPage[]\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this], // function|array\n\t\tplacement: ${sap.m.PlacementType.Right}, // sap.m.PlacementType\n\t\twidth: ${\"320px\"}, // sap.ui.core.CSSSize\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"QuickView","Experimental":false,"module":"sap/m/QuickView","description":"QuickView(sId?, mSettings?) : sap.m.QuickView","constructorDescription":"Constructor for a new QuickView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Right)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 320px)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.QuickViewBase#constructor sap.m.QuickViewBase}\ncan be used as well.","extends":"sap.m.QuickViewBase","Deprecated":false,"name":"sap.m.QuickView","helpDescription":"The QuickView control renders a responsive popover (sap.m.Popover or sap.m.Dialog)\nand displays information of an object in a business-card format. It also allows this object to be linked to\nanother object using one of the links in the responsive popover. Clicking that link updates the information in the\npopover with the data of the linked object. Unlimited number of objects can be linked.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterClose(\n\t{\n\t\topenBy: ${openBy}, // sap.ui.core.Control\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.QuickView.fireAfterClose","description":"fireAfterClose(mParameters?) : sap.m.QuickView","helpDescription":"Fires event <code>afterClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.QuickView.fireAfterOpen","description":"fireAfterOpen(mParameters?) : sap.m.QuickView","helpDescription":"Fires event <code>afterOpen<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeClose(\n\t{\n\t\topenBy: ${openBy}, // sap.ui.core.Control\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.QuickView.fireBeforeClose","description":"fireBeforeClose(mParameters?) : sap.m.QuickView","helpDescription":"Fires event <code>beforeClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.QuickView.fireBeforeOpen","description":"fireBeforeOpen(mParameters?) : sap.m.QuickView","helpDescription":"Fires event <code>beforeOpen<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.QuickViewBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpages: [${pages}], // sap.m.QuickViewPage[]\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"QuickViewBase","Experimental":false,"module":"sap/m/QuickViewBase","description":"QuickViewBase(sId?, mSettings?) : sap.m.QuickViewBase","constructorDescription":"Constructor for a new QuickViewBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getPages pages} : sap.m.QuickViewPage[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterNavigate afterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.QuickViewBase","helpDescription":"QuickViewBase class provides base functionality for QuickView and QuickViewCard.\nDo not use it directly.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\", // string\n\t\tisTopPage: ${bIsTopPage}, // boolean\n\t\tnavOrigin: ${navOrigin} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.QuickViewBase.fireAfterNavigate","description":"fireAfterNavigate(mParameters?) : sap.m.QuickViewBase","helpDescription":"Fires event <code>afterNavigate<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\", // string\n\t\tnavOrigin: ${navOrigin} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.QuickViewBase.fireNavigate","description":"fireNavigate(mParameters?) : boolean","helpDescription":"Fires event <code>navigate<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.QuickViewCard(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpages: [${pages}], // sap.m.QuickViewPage[]\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this], // function|array\n\t\tshowVerticalScrollBar: ${bShowVerticalScrollBar} // boolean\n\t}\n)\n","static":"true","prefix":"QuickViewCard","Experimental":false,"module":"sap/m/QuickViewCard","description":"QuickViewCard(sId?, mSettings?) : sap.m.QuickViewCard","constructorDescription":"Constructor for a new QuickViewCard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowVerticalScrollBar showVerticalScrollBar} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.QuickViewBase#constructor sap.m.QuickViewBase}\ncan be used as well.","extends":"sap.m.QuickViewBase","Deprecated":false,"name":"sap.m.QuickViewCard","helpDescription":"The QuickViewCard control displays information of an object in a business-card format.\nIt also allows this object to be linked to another object using one of the links.\nClicking that link updates the information with the data of the linked object.\nUnlimited number of objects can be linked.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.QuickViewGroup(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\theading: ${\"\"}, // string\n\t\telements: [${elements}] // sap.m.QuickViewGroupElement[]\n\t}\n)\n","static":"true","prefix":"QuickViewGroup","Experimental":false,"module":"sap/m/QuickViewGroup","description":"QuickViewGroup(sId?, mSettings?) : sap.m.QuickViewGroup","constructorDescription":"Constructor for a new QuickViewGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getHeading heading} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getElements elements} : sap.m.QuickViewGroupElement[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.QuickViewGroup","helpDescription":"QuickViewGroup consists of a title (optional) and an entity of group elements.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.QuickViewGroupElement(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tlabel: ${\"\"}, // string\n\t\tvalue: ${\"\"}, // string\n\t\turl: ${\"\"}, // string\n\t\ttarget: ${\"_blank\"}, // string\n\t\ttype: ${sap.m.QuickViewGroupElementType.GroupElementType.text}, // sap.m.QuickViewGroupElementType\n\t\tpageLinkId: ${\"\"}, // string\n\t\temailSubject: ${\"\"} // string\n\t}\n)\n","static":"true","prefix":"QuickViewGroupElement","Experimental":false,"module":"sap/m/QuickViewGroupElement","description":"QuickViewGroupElement(sId?, mSettings?) : sap.m.QuickViewGroupElement","constructorDescription":"Constructor for a new QuickViewGroupElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getUrl url} : string (default: )<\/li>\n<li>{@link #getTarget target} : string (default: _blank)<\/li>\n<li>{@link #getType type} : sap.m.QuickViewGroupElementType (default: GroupElementType.text)<\/li>\n<li>{@link #getPageLinkId pageLinkId} : string (default: )<\/li>\n<li>{@link #getEmailSubject emailSubject} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.QuickViewGroupElement","helpDescription":"QuickViewGroupElement is a combination of one label and another control (Link or Text) associated to this label.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.QuickViewPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpageId: ${\"\"}, // string\n\t\theader: ${\"\"}, // string\n\t\ttitle: ${\"\"}, // string\n\t\ttitleUrl: ${\"\"}, // string\n\t\tcrossAppNavCallback: ${crossAppNavCallback}, // object\n\t\tdescription: ${\"\"}, // string\n\t\ticon: ${\"\"}, // string\n\t\tgroups: [${groups}] // sap.m.QuickViewGroup[]\n\t}\n)\n","static":"true","prefix":"QuickViewPage","Experimental":false,"module":"sap/m/QuickViewPage","description":"QuickViewPage(sId?, mSettings?) : sap.m.QuickViewPage","constructorDescription":"Constructor for a new QuickViewPage.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPageId pageId} : string (default: )<\/li>\n<li>{@link #getHeader header} : string (default: )<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getTitleUrl titleUrl} : string (default: )<\/li>\n<li>{@link #getCrossAppNavCallback crossAppNavCallback} : object<\/li>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<li>{@link #getIcon icon} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroups groups} : sap.m.QuickViewGroup[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.QuickViewPage","helpDescription":"QuickViewPage consists of  a page header, an object icon or image,\nan object name with short description, and an object information divided in groups.\nThe control uses the sap.m.SimpleForm control to display information.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.RadioButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tgroupName: ${\"sapMRbDefaultGroup\"}, // string\n\t\ttext: \"${text}\", // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tuseEntireWidth: ${bUseEntireWidth}, // boolean\n\t\tactiveHandling: ${bActiveHandling}, // boolean\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"RadioButton","Experimental":false,"module":"sap/m/RadioButton","description":"RadioButton(sId?, mSettings?) : sap.m.RadioButton","constructorDescription":"Constructor for a new RadioButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getGroupName groupName} : string (default: sapMRbDefaultGroup)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getUseEntireWidth useEntireWidth} : boolean (default: false)<\/li>\n<li>{@link #getActiveHandling activeHandling} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.RadioButton","helpDescription":"RadioButton is a control similar to CheckBox, but it allows the user to choose only one of the predefined set of options.\n\nUsually, RadioButton is used in a group with other RadioButtons (with the groupName property or by using sap.m.RadioButtonGroup), thus providing a limited choice for the user.\nAn event is triggered when the user makes a change of the selection.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelect(\n\t{\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.RadioButton.fireSelect","description":"fireSelect(mParameters?) : sap.m.RadioButton","helpDescription":"Fires event <code>select<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.RadioButtonGroup(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tcolumns: ${1}, // int\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tselectedIndex: ${0}, // int\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tbuttons: [${buttons}], // sap.m.RadioButton[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"RadioButtonGroup","Experimental":false,"module":"sap/m/RadioButtonGroup","description":"RadioButtonGroup(sId?, mSettings?) : sap.m.RadioButtonGroup","constructorDescription":"Constructor for a new RadioButtonGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getColumns columns} : int (default: 1)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getSelectedIndex selectedIndex} : int (default: 0)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.RadioButton[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.RadioButtonGroup","helpDescription":"This control is used as a wrapper for a group of sap.m.RadioButton controls, which then can be used as a single UI element.\nYou can select only one of the grouped radio buttons at a time.\nThe RadioButtonGroup lets you do things like attach a single event handler on a group of buttons, rather than on each individual button.\nThe grouped radio buttons can be arranged within different number of columns.\nBased on the number of specified columns and the number of radio buttons used, different layout types can be achieved - as a 'matrix',\nhorizontally or vertically aligned radio buttons.<br/>\n<b>Note:<\/b> Design guidelines recommend application developers create radio button groups with only one row or only one column.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelect(\n\t{\n\t\tselectedIndex: ${selectedIndex} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.RadioButtonGroup.fireSelect","description":"fireSelect(mParameters?) : sap.m.RadioButtonGroup","helpDescription":"Fires event <code>select<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.RangeSlider(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tname: ${\"\"}, // string\n\t\tmin: ${0}, // float\n\t\tmax: ${100}, // float\n\t\tstep: ${1}, // float\n\t\tprogress: ${bProgress}, // boolean\n\t\tvalue: ${0}, // float\n\t\tshowHandleTooltip: ${bShowHandleTooltip}, // boolean\n\t\tshowAdvancedTooltip: ${bShowAdvancedTooltip}, // boolean\n\t\tinputsAsTooltips: ${bInputsAsTooltips}, // boolean\n\t\tenableTickmarks: ${bEnableTickmarks}, // boolean\n\t\tscale: ${scale}, // sap.m.IScale\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tvalue2: ${100}, // float\n\t\trange: ${[]} // float[]\n\t}\n)\n","static":"true","prefix":"RangeSlider","Experimental":false,"module":"sap/m/RangeSlider","description":"RangeSlider(sId?, mSettings?) : sap.m.RangeSlider","constructorDescription":"Constructor for a new <code>RangeSlider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue2 value2} : float (default: 100)<\/li>\n<li>{@link #getRange range} : float[] (default: [0,100])<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Slider#constructor sap.m.Slider}\ncan be used as well.","extends":"sap.m.Slider","Deprecated":false,"name":"sap.m.RangeSlider","helpDescription":"<strong><i>Overview<\/i><\/strong>\n\nA {@link sap.m.RangeSlider} control represents a numerical interval and two handles to select a sub-range within it.\nThe purpose of the control is to enable visual selection of sub-ranges within a given interval.\n\n<strong>Notes:<\/strong>\n<ul>\n<li>The RangeSlider extends the functionality of the {@link sap.m.Slider Slider}<\/li>\n<li>The right and left handle can be moved individually and their positions could therefore switch.<\/li>\n<li>The entire range can be moved along the interval.<\/li>\n<li>The right and left handle can select the same value<\/li>\n<\/ul>\n<strong><i>Usage<\/i><\/strong>\n\nThe most common usecase is to select and move sub-ranges on a continuous numerical scale.\n\n<strong><i>Responsive Behavior<\/i><\/strong>\n\nYou can move the currently selected range by clicking on it and dragging it along the interval.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.RatingIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\tmaxValue: ${5}, // int\n\t\tvalue: ${0}, // float\n\t\ticonSize: ${iconSize}, // sap.ui.core.CSSSize\n\t\ticonSelected: ${iconSelected}, // sap.ui.core.URI\n\t\ticonUnselected: ${iconUnselected}, // sap.ui.core.URI\n\t\ticonHovered: ${iconHovered}, // sap.ui.core.URI\n\t\tvisualMode: ${sap.m.RatingIndicatorVisualMode.Half}, // sap.m.RatingIndicatorVisualMode\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"RatingIndicator","Experimental":false,"module":"sap/m/RatingIndicator","description":"RatingIndicator(sId?, mSettings?) : sap.m.RatingIndicator","constructorDescription":"Constructor for a new RatingIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMaxValue maxValue} : int (default: 5)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getIconSize iconSize} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconUnselected iconUnselected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI<\/li>\n<li>{@link #getVisualMode visualMode} : sap.m.RatingIndicatorVisualMode (default: Half)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.RatingIndicator","helpDescription":"Is used to rate content. The amount of rating symbols can be specified, as well as the URIs to the\nimage icons which shall be used as rating symbols. When the user performs a rating, an event is fired.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tvalue: ${value} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.RatingIndicator.fireChange","description":"fireChange(mParameters?) : sap.m.RatingIndicator","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireLiveChange(\n\t{\n\t\tvalue: ${value} // float\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.RatingIndicator.fireLiveChange","description":"fireLiveChange(mParameters?) : sap.m.RatingIndicator","helpDescription":"Fires event <code>liveChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ResponsivePopover(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tplacement: ${sap.m.PlacementType.Right}, // sap.m.PlacementType\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\ttitle: \"${title}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tmodal: ${bModal}, // boolean\n\t\toffsetX: ${offsetX}, // int\n\t\toffsetY: ${offsetY}, // int\n\t\tshowArrow: ${bShowArrow}, // boolean\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\thorizontalScrolling: ${bHorizontalScrolling}, // boolean\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tresizable: ${bResizable}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeader: ${customHeader}, // sap.m.IBar\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tbeginButton: ${beginButton}, // sap.m.Button\n\t\tendButton: ${endButton}, // sap.m.Button\n\t\tinitialFocus: ${initialFocus}, // (sap.ui.core.Control|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ResponsivePopover","Experimental":false,"module":"sap/m/ResponsivePopover","description":"ResponsivePopover(sId?, mSettings?) : sap.m.ResponsivePopover","constructorDescription":"Constructor for a new ResponsivePopover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Right)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getModal modal} : boolean<\/li>\n<li>{@link #getOffsetX offsetX} : int<\/li>\n<li>{@link #getOffsetY offsetY} : int<\/li>\n<li>{@link #getShowArrow showArrow} : boolean (default: true)<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: true)<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.m.IBar<\/li>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getBeginButton beginButton} : sap.m.Button<\/li>\n<li>{@link #getEndButton endButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ResponsivePopover","helpDescription":"This control acts responsively to the type of device. It acts as a sap.m.Popover on desktop and tablet, while on phone it acts as a sap.m.Dialog with stretch set to true.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterClose(\n\t{\n\t\topenBy: ${openBy}, // sap.ui.core.Control\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ResponsivePopover.fireAfterClose","description":"fireAfterClose(mParameters?) : sap.m.ResponsivePopover","helpDescription":"Fires event <code>afterClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ResponsivePopover.fireAfterOpen","description":"fireAfterOpen(mParameters?) : sap.m.ResponsivePopover","helpDescription":"Fires event <code>afterOpen<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeClose(\n\t{\n\t\topenBy: ${openBy}, // sap.ui.core.Control\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ResponsivePopover.fireBeforeClose","description":"fireBeforeClose(mParameters?) : sap.m.ResponsivePopover","helpDescription":"Fires event <code>beforeClose<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ResponsivePopover.fireBeforeOpen","description":"fireBeforeOpen(mParameters?) : sap.m.ResponsivePopover","helpDescription":"Fires event <code>beforeOpen<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ResponsiveScale(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttickmarksBetweenLabels: ${0} // int\n\t}\n)\n","static":"true","prefix":"ResponsiveScale","Experimental":false,"module":"sap/m/ResponsiveScale","description":"ResponsiveScale(sId?, mSettings?) : sap.m.ResponsiveScale","constructorDescription":"Constructor for a new <code>ResponsiveScale<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTickmarksBetweenLabels tickmarksBetweenLabels} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.ResponsiveScale","helpDescription":"<strong><i>Overview<\/i><\/strong>\n\nA {@link sap.m.Slider} element represents a scale with tickmarks and labels.\nThe purpose of the element is to decouple the scale logic from other controls i.e. Slider / RangeSlider\n\n\nThe most important properties of the ResponsiveScale are:\n<ul>\n<li> tickmarksBetweenLabels - Puts a label on every N-th tickmark.<\/li>\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ScrollContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\theight: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\thorizontal: ${bHorizontal}, // boolean\n\t\tvertical: ${bVertical}, // boolean\n\t\tfocusable: ${bFocusable}, // boolean\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"ScrollContainer","Experimental":false,"module":"sap/m/ScrollContainer","description":"ScrollContainer(sId?, mSettings?) : sap.m.ScrollContainer","constructorDescription":"Constructor for a new ScrollContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHorizontal horizontal} : boolean (default: true)<\/li>\n<li>{@link #getVertical vertical} : boolean (default: false)<\/li>\n<li>{@link #getFocusable focusable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ScrollContainer","helpDescription":"The ScrollContainer is a control that can display arbitrary content within a limited screen area and provides touch scrolling to make all content accessible.\n\nNote that it is not recommended to have nested scrolling areas that scroll into the same direction (e.g. a ScrollContainer that scrolls vertically inside a Page control with scrolling enabled). This is currently not considered a valid use-case of a good UI and the behavior will feel wrong.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.SearchField(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvisible: ${bVisible}, // boolean\n\t\tmaxLength: ${0}, // int\n\t\tplaceholder: \"${placeholder}\", // string\n\t\tshowMagnifier: ${bShowMagnifier}, // boolean\n\t\tshowRefreshButton: ${bShowRefreshButton}, // boolean\n\t\trefreshButtonTooltip: \"${refreshButtonTooltip}\", // string\n\t\tshowSearchButton: ${bShowSearchButton}, // boolean\n\t\tenableSuggestions: ${bEnableSuggestions}, // boolean\n\t\tselectOnFocus: ${bSelectOnFocus}, // boolean\n\t\tsuggestionItems: [${suggestionItems}], // sap.m.SuggestionItem[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tsearch: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tsuggest: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SearchField","Experimental":false,"module":"sap/m/SearchField","description":"SearchField(sId?, mSettings?) : sap.m.SearchField","constructorDescription":"Constructor for a new SearchField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getShowMagnifier showMagnifier} : boolean (default: true)<\/li>\n<li>{@link #getShowRefreshButton showRefreshButton} : boolean (default: false)<\/li>\n<li>{@link #getRefreshButtonTooltip refreshButtonTooltip} : string<\/li>\n<li>{@link #getShowSearchButton showSearchButton} : boolean (default: true)<\/li>\n<li>{@link #getEnableSuggestions enableSuggestions} : boolean (default: false)<\/li>\n<li>{@link #getSelectOnFocus selectOnFocus} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSuggestionItems suggestionItems} : sap.m.SuggestionItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.SearchField","helpDescription":"Enables users to input a search string.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireLiveChange(\n\t{\n\t\tnewValue: \"${newValue}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SearchField.fireLiveChange","description":"fireLiveChange(mParameters?) : sap.m.SearchField","helpDescription":"Fires event <code>liveChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSearch(\n\t{\n\t\tquery: \"${query}\", // string\n\t\tsuggestionItem: ${suggestionItem}, // sap.m.SuggestionItem\n\t\trefreshButtonPressed: ${bRefreshButtonPressed}, // boolean\n\t\tclearButtonPressed: ${bClearButtonPressed} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SearchField.fireSearch","description":"fireSearch(mParameters?) : sap.m.SearchField","helpDescription":"Fires event <code>search<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSuggest(\n\t{\n\t\tsuggestValue: \"${suggestValue}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SearchField.fireSuggest","description":"fireSuggest(mParameters?) : sap.m.SearchField","helpDescription":"Fires event <code>suggest<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.SegmentedButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\titems: [${items}], // sap.m.SegmentedButtonItem[]\n\t\tselectedButton: ${selectedButton}, // (sap.m.Button|string)\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SegmentedButton","Experimental":false,"module":"sap/m/SegmentedButton","description":"SegmentedButton(sId?, mSettings?) : sap.m.SegmentedButton","constructorDescription":"Constructor for a new SegmentedButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.Button[] (default)<\/li>\n<li>{@link #getItems items} : sap.m.SegmentedButtonItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedButton selectedButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.SegmentedButton","helpDescription":"SegmentedButton is a horizontal control made of multiple buttons, which can display a title or an image. It automatically resizes the buttons to fit proportionally within the control. When no width is set, the control uses the available width.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelect(\n\t{\n\t\tbutton: ${button}, // sap.m.Button\n\t\tid: \"${id}\", // string\n\t\tkey: \"${key}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SegmentedButton.fireSelect","description":"fireSelect(mParameters?) : sap.m.SegmentedButton","helpDescription":"Fires event <code>select<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.SegmentedButtonItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: \"${icon}\", // string\n\t\tvisible: ${bVisible}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SegmentedButtonItem","Experimental":false,"module":"sap/m/SegmentedButtonItem","description":"SegmentedButtonItem(sId?, mSettings?) : sap.m.SegmentedButtonItem","constructorDescription":"Constructor for a new SegmentedButtonItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.SegmentedButtonItem","helpDescription":"The SegmentedButtonItem control is used for creating buttons for the sap.m.SegmentedButton.\nIt is derived from a core sap.ui.core.Item.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Select(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tname: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tselectedKey: ${\"\"}, // string\n\t\tselectedItemId: ${\"\"}, // string\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\ttype: ${sap.m.SelectType.Default}, // sap.m.SelectType\n\t\tautoAdjustWidth: ${bAutoAdjustWidth}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tvalueStateText: ${\"\"}, // string\n\t\tshowSecondaryValues: ${bShowSecondaryValues}, // boolean\n\t\tforceSelection: ${bForceSelection}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Select","Experimental":false,"module":"sap/m/Select","description":"Select(sId?, mSettings?) : sap.m.Select","constructorDescription":"Constructor for a new <code>sap.m.Select<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getType type} : sap.m.SelectType (default: Default)<\/li>\n<li>{@link #getAutoAdjustWidth autoAdjustWidth} : boolean (default: false)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string (default: )<\/li>\n<li>{@link #getShowSecondaryValues showSecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getForceSelection forceSelection} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Select","helpDescription":"The <code>sap.m.Select<\/code> control provides a list of items that allows users to select an item.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tselectedItem: ${selectedItem} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Select.fireChange","description":"fireChange(mParameters?) : sap.m.Select","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.SelectDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tmultiSelect: ${bMultiSelect}, // boolean\n\t\tgrowingThreshold: ${growingThreshold}, // int\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tconfirm: [function (oEvent) {}, this], // function|array\n\t\tsearch: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SelectDialog","Experimental":false,"module":"sap/m/SelectDialog","description":"SelectDialog(sId?, mSettings?) : sap.m.SelectDialog","constructorDescription":"Constructor for a new SelectDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: false)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRememberSelections rememberSelections} : boolean (default: false)<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ListItemBase[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.SelectDialog","helpDescription":"A SelectDialog is a dialog containing a list, search functionality to filter it and a confirmation/cancel button. The control can be used when the user should select one or multiple items out of many.\n\nThe list used in the SelectDialog is a growing list and can be filled with a any kind of list item. The search field triggers the events \"search\" and \"liveChange\" where a filter function can be applied to the list binding.\n\nAfter selecting an item in single selection mode or after confirming in multi selection mode, the dialog will be closed and the event \"confirm\" is fired with the items that have been selected. By default, the selection will also be reset to allow for a new selection when opening the dialog again.\n\nWhen cancelling the selection, the event \"change\" will be fired and the selection is restored to the state when the dialog was opened.\n\nNOTE: The growing functionality of the list does not support two-way Binding, so if you use this control with a JSON model make sure the binding mode is set to \"OneWay\" and that you update the selection model manually with the items passed in the \"confirm\" event.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireConfirm(\n\t{\n\t\tselectedItem: ${selectedItem}, // sap.m.StandardListItem\n\t\tselectedItems: [${selectedItems}], // sap.m.StandardListItem[]\n\t\tselectedContexts: \"${selectedContexts}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SelectDialog.fireConfirm","description":"fireConfirm(mParameters?) : sap.m.SelectDialog","helpDescription":"Fires event <code>confirm<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireLiveChange(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemsBinding: ${itemsBinding} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SelectDialog.fireLiveChange","description":"fireLiveChange(mParameters?) : sap.m.SelectDialog","helpDescription":"Fires event <code>liveChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSearch(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemsBinding: ${itemsBinding} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SelectDialog.fireSearch","description":"fireSearch(mParameters?) : sap.m.SelectDialog","helpDescription":"Fires event <code>search<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.SelectList(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tselectedKey: ${\"\"}, // string\n\t\tselectedItemId: ${\"\"}, // string\n\t\tshowSecondaryValues: ${bShowSecondaryValues}, // boolean\n\t\tkeyboardNavigationMode: ${sap.m.SelectListKeyboardNavigationMode.Delimited}, // sap.m.SelectListKeyboardNavigationMode\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SelectList","Experimental":false,"module":"sap/m/SelectList","description":"SelectList(sId?, mSettings?) : sap.m.SelectList","constructorDescription":"Constructor for a new <code>sap.m.SelectList<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string (default: )<\/li>\n<li>{@link #getShowSecondaryValues showSecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getKeyboardNavigationMode keyboardNavigationMode} : sap.m.SelectListKeyboardNavigationMode (default: Delimited)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemPress itemPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.SelectList","helpDescription":"The <code>sap.m.SelectList<\/code> displays a list of items that allows the user to select an item.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemPress(\n\t{\n\t\titem: ${item} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SelectList.fireItemPress","description":"fireItemPress(mParameters?) : sap.m.SelectList","helpDescription":"Fires event <code>itemPress<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionChange(\n\t{\n\t\tselectedItem: ${selectedItem} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SelectList.fireSelectionChange","description":"fireSelectionChange(mParameters?) : sap.m.SelectList","helpDescription":"Fires event <code>selectionChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Shell(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tlogo: ${logo}, // sap.ui.core.URI\n\t\tshowLogout: ${bShowLogout}, // boolean\n\t\theaderRightText: \"${headerRightText}\", // string\n\t\tappWidthLimited: ${bAppWidthLimited}, // boolean\n\t\tbackgroundColor: ${backgroundColor}, // sap.ui.core.CSSColor\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\tbackgroundRepeat: ${bBackgroundRepeat}, // boolean\n\t\tbackgroundOpacity: ${1}, // float\n\t\thomeIcon: ${homeIcon}, // object\n\t\tapp: ${app}, // sap.ui.core.Control\n\t\tlogout: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Shell","Experimental":false,"module":"sap/m/Shell","description":"Shell(sId?, mSettings?) : sap.m.Shell","constructorDescription":"Constructor for a new Shell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getLogo logo} : sap.ui.core.URI<\/li>\n<li>{@link #getShowLogout showLogout} : boolean (default: true)<\/li>\n<li>{@link #getHeaderRightText headerRightText} : string<\/li>\n<li>{@link #getAppWidthLimited appWidthLimited} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : sap.ui.core.CSSColor<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundOpacity backgroundOpacity} : float (default: 1)<\/li>\n<li>{@link #getHomeIcon homeIcon} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getApp app} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:logout logout} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Shell","helpDescription":"The Shell control can be used as root element of applications. It can contain an App or a <code>SplitApp<\/code> control.\nThe Shell provides some overarching functionality for the overall application and takes care of visual adaptation, such as a frame around the App, on desktop browser platforms.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.SlideTile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdisplayTime: ${5000}, // int\n\t\ttransitionTime: ${500}, // int\n\t\tscope: ${sap.m.GenericTileScope.Display}, // sap.m.GenericTileScope\n\t\ttiles: [${tiles}], // sap.m.GenericTile[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SlideTile","Experimental":false,"module":"sap/m/SlideTile","description":"SlideTile(sId?, mSettings?) : sap.m.SlideTile","constructorDescription":"Constructor for a new sap.m.SlideTile control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayTime displayTime} : int (default: 5000)<\/li>\n<li>{@link #getTransitionTime transitionTime} : int (default: 500)<\/li>\n<li>{@link #getScope scope} : sap.m.GenericTileScope (default: Display)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTiles tiles} : sap.m.GenericTile[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.SlideTile","helpDescription":"The control that displays multiple GenericTile controls as changing slides.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"firePress(\n\t{\n\t\tscope: ${scope}, // sap.m.GenericTileScope\n\t\taction: \"${action}\", // string\n\t\tdomRef: ${domRef} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SlideTile.firePress","description":"firePress(mParameters?) : sap.m.SlideTile","helpDescription":"Fires event <code>press<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Slider(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tname: ${\"\"}, // string\n\t\tmin: ${0}, // float\n\t\tmax: ${100}, // float\n\t\tstep: ${1}, // float\n\t\tprogress: ${bProgress}, // boolean\n\t\tvalue: ${0}, // float\n\t\tshowHandleTooltip: ${bShowHandleTooltip}, // boolean\n\t\tshowAdvancedTooltip: ${bShowAdvancedTooltip}, // boolean\n\t\tinputsAsTooltips: ${bInputsAsTooltips}, // boolean\n\t\tenableTickmarks: ${bEnableTickmarks}, // boolean\n\t\tscale: ${scale}, // sap.m.IScale\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Slider","Experimental":false,"module":"sap/m/Slider","description":"Slider(sId?, mSettings?) : sap.m.Slider","constructorDescription":"Constructor for a new <code>Slider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getMin min} : float (default: 0)<\/li>\n<li>{@link #getMax max} : float (default: 100)<\/li>\n<li>{@link #getStep step} : float (default: 1)<\/li>\n<li>{@link #getProgress progress} : boolean (default: true)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getShowHandleTooltip showHandleTooltip} : boolean (default: true)<\/li>\n<li>{@link #getShowAdvancedTooltip showAdvancedTooltip} : boolean (default: false)<\/li>\n<li>{@link #getInputsAsTooltips inputsAsTooltips} : boolean (default: false)<\/li>\n<li>{@link #getEnableTickmarks enableTickmarks} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getScale scale} : sap.m.IScale (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Slider","helpDescription":"<strong><i>Overview<\/i><\/strong>\n\nA {@link sap.m.Slider} control represents a numerical range and a handle.\nThe purpose of the control is to enable visual selection of а value in a continuous numerical range by moving an adjustable handle.\n\n<strong>Notes:<\/strong>\n<ul><li>Only horizontal sliders are possible. <\/li>\n<li>The handle can be moved in steps of predefined size. This is done with the <code>step<\/code> property. <\/li>\n<li>Setting the property <code>showAdvancedTooltips<\/code> shows an input field above the handle<\/li>\n<li>Setting the property <code>inputsAsTooltips<\/code> enables the user to enter a specific value in the handle's tooltip. <\/li>\n<\/ul>\n<strong><i>Structure<\/i><\/strong>\n\nThe most important properties of the Slider are:\n<ul>\n<li> min - The minimum value of the slider range <\/li>\n<li> max - The maximum value of the slider range <\/li>\n<li> value - The current value of the slider<\/li>\n<li> progress - Determines if a progress bar will be shown on the slider range<\/li>\n<li> step - Determines the increments in which the slider will move<\/li>\n<\/ul>\nThese properties determine the visualization of the tooltips:\n<ul>\n<li> showAdvancedTooltips - Determines if a tooltip should be displayed above the handle<\/li>\n<li> inputsAsTooltips - Determines if the tooltip displayed above the slider's handle should include an input field<\/li>\n<\/ul>\n<strong><i>Usage<\/i><\/strong>\n\nThe most common usecase is to select values on a continuous numerical scale (e.g. temperature, volume, etc. ).\n\n<strong><i>Responsive Behavior<\/i><\/strong>\n\nThe <code>sap.m.Slider<\/code> control adjusts to the size of its parent container by recalculating and resizing the width of the control.\nYou can move the slider handle in several different ways:\n<ul>\n<li> Drag and drop to the desired value<\/li>\n<li> Click/tap on the range bar to move the handle to that location <\/li>\n<li> Enter the desired value in the input field (if available) <\/li>\n<li> Keyboard (Arrow keys, \"+\" and \"-\") <\/li>\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tvalue: ${value} // float\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Slider.fireChange","description":"fireChange(mParameters?) : sap.m.Slider","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireLiveChange(\n\t{\n\t\tvalue: ${value} // float\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Slider.fireLiveChange","description":"fireLiveChange(mParameters?) : sap.m.Slider","helpDescription":"Fires event <code>liveChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.SplitApp(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdefaultTransitionNameDetail: ${\"slide\"}, // string\n\t\tdefaultTransitionNameMaster: ${\"slide\"}, // string\n\t\tmode: ${sap.m.SplitAppMode.ShowHideMode}, // sap.m.SplitAppMode\n\t\tmasterButtonText: \"${masterButtonText}\", // string\n\t\tbackgroundColor: \"${backgroundColor}\", // string\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\tbackgroundRepeat: ${bBackgroundRepeat}, // boolean\n\t\tbackgroundOpacity: ${1}, // float\n\t\tmasterPages: [${masterPages}], // sap.ui.core.Control[]\n\t\tdetailPages: [${detailPages}], // sap.ui.core.Control[]\n\t\tinitialDetail: ${initialDetail}, // (sap.ui.core.Control|string)\n\t\tinitialMaster: ${initialMaster}, // (sap.ui.core.Control|string)\n\t\tmasterNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterMasterNavigate: [function (oEvent) {}, this], // function|array\n\t\tmasterButton: [function (oEvent) {}, this], // function|array\n\t\tbeforeMasterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterMasterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeMasterClose: [function (oEvent) {}, this], // function|array\n\t\tafterMasterClose: [function (oEvent) {}, this], // function|array\n\t\tdetailNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterDetailNavigate: [function (oEvent) {}, this], // function|array\n\t\thomeIcon: ${homeIcon}, // any\n\t\torientationChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SplitApp","Experimental":false,"module":"sap/m/SplitApp","description":"SplitApp(sId?, mSettings?) : sap.m.SplitApp","constructorDescription":"Constructor for a new SplitApp.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHomeIcon homeIcon} : any<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:orientationChange orientationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.SplitContainer#constructor sap.m.SplitContainer}\ncan be used as well.","extends":"sap.m.SplitContainer","Deprecated":false,"name":"sap.m.SplitApp","helpDescription":"SplitApp is another root element of a UI5 mobile application besides App control. It maintains two NavContainers if running on tablet and one - on phone.\nThe display of master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitApp.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireOrientationChange(\n\t{\n\t\tlandscape: ${bLandscape} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SplitApp.fireOrientationChange","description":"fireOrientationChange(mParameters?) : sap.m.SplitApp","helpDescription":"Fires event <code>orientationChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.SplitContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdefaultTransitionNameDetail: ${\"slide\"}, // string\n\t\tdefaultTransitionNameMaster: ${\"slide\"}, // string\n\t\tmode: ${sap.m.SplitAppMode.ShowHideMode}, // sap.m.SplitAppMode\n\t\tmasterButtonText: \"${masterButtonText}\", // string\n\t\tbackgroundColor: \"${backgroundColor}\", // string\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\tbackgroundRepeat: ${bBackgroundRepeat}, // boolean\n\t\tbackgroundOpacity: ${1}, // float\n\t\tmasterPages: [${masterPages}], // sap.ui.core.Control[]\n\t\tdetailPages: [${detailPages}], // sap.ui.core.Control[]\n\t\tinitialDetail: ${initialDetail}, // (sap.ui.core.Control|string)\n\t\tinitialMaster: ${initialMaster}, // (sap.ui.core.Control|string)\n\t\tmasterNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterMasterNavigate: [function (oEvent) {}, this], // function|array\n\t\tmasterButton: [function (oEvent) {}, this], // function|array\n\t\tbeforeMasterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterMasterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeMasterClose: [function (oEvent) {}, this], // function|array\n\t\tafterMasterClose: [function (oEvent) {}, this], // function|array\n\t\tdetailNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterDetailNavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SplitContainer","Experimental":false,"module":"sap/m/SplitContainer","description":"SplitContainer(sId?, mSettings?) : sap.m.SplitContainer","constructorDescription":"Constructor for a new SplitContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDefaultTransitionNameDetail defaultTransitionNameDetail} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameMaster defaultTransitionNameMaster} : string (default: slide)<\/li>\n<li>{@link #getMode mode} : sap.m.SplitAppMode (default: ShowHideMode)<\/li>\n<li>{@link #getMasterButtonText masterButtonText} : string<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundOpacity backgroundOpacity} : float (default: 1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMasterPages masterPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getDetailPages detailPages} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialDetail initialDetail} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialMaster initialMaster} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:masterNavigate masterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMasterNavigate afterMasterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:masterButton masterButton} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeMasterOpen beforeMasterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMasterOpen afterMasterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeMasterClose beforeMasterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMasterClose afterMasterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:detailNavigate detailNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterDetailNavigate afterDetailNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.SplitContainer","helpDescription":"SplitContainer maintains two NavContainers if running on tablet or desktop and one NavContainer - on phone.\nThe display of the master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitContainer.\n\nNOTE: This control must be rendered as a full screen control in order to make the show/hide master area work properly.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterDetailNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SplitContainer.fireAfterDetailNavigate","description":"fireAfterDetailNavigate(mParameters?) : sap.m.SplitContainer","helpDescription":"Fires event <code>afterDetailNavigate<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireAfterMasterNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SplitContainer.fireAfterMasterNavigate","description":"fireAfterMasterNavigate(mParameters?) : sap.m.SplitContainer","helpDescription":"Fires event <code>afterMasterNavigate<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireDetailNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SplitContainer.fireDetailNavigate","description":"fireDetailNavigate(mParameters?) : boolean","helpDescription":"Fires event <code>detailNavigate<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireMasterNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.SplitContainer.fireMasterNavigate","description":"fireMasterNavigate(mParameters?) : boolean","helpDescription":"Fires event <code>masterNavigate<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.StandardListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tdescription: \"${description}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonInset: ${bIconInset}, // boolean\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\tinfo: \"${info}\", // string\n\t\tinfoState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tadaptTitleSize: ${bAdaptTitleSize}, // boolean\n\t\ttitleTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tinfoTextDirection: ${sap.ui.core.TextDirection.Inherit} // sap.ui.core.TextDirection\n\t}\n)\n","static":"true","prefix":"StandardListItem","Experimental":false,"module":"sap/m/StandardListItem","description":"StandardListItem(sId?, mSettings?) : sap.m.StandardListItem","constructorDescription":"Constructor for a new StandardListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconInset iconInset} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getInfoState infoState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getAdaptTitleSize adaptTitleSize} : boolean (default: true)<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getInfoTextDirection infoTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.StandardListItem","helpDescription":"<code>sap.m.StandardListItem<\/code> is a list item providing the most common use cases, e.g. image, title and description.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.StandardTile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tremovable: ${bRemovable}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tinfo: \"${info}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\tnumber: \"${number}\", // string\n\t\tnumberUnit: \"${numberUnit}\", // string\n\t\tinfoState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\ttype: ${sap.m.StandardTileType.None}, // sap.m.StandardTileType\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tariaDescribedBy: [${ariaDescribedBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","static":"true","prefix":"StandardTile","Experimental":false,"module":"sap/m/StandardTile","description":"StandardTile(sId?, mSettings?) : sap.m.StandardTile","constructorDescription":"Constructor for a new StandardTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getInfoState infoState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getType type} : sap.m.StandardTileType (default: None)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Tile#constructor sap.m.Tile}\ncan be used as well.","extends":"sap.m.Tile","Deprecated":false,"name":"sap.m.StandardTile","helpDescription":"The StandardTile control is displayed in the tile container.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.StandardTreeItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttitle: ${\"\"}, // string\n\t\ticon: ${icon} // sap.ui.core.URI\n\t}\n)\n","static":"true","prefix":"StandardTreeItem","Experimental":false,"module":"sap/m/StandardTreeItem","description":"StandardTreeItem(sId?, mSettings?) : sap.m.StandardTreeItem","constructorDescription":"Constructor for a new StandardTreeItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.TreeItemBase#constructor sap.m.TreeItemBase}\ncan be used as well.","extends":"sap.m.TreeItemBase","Deprecated":false,"name":"sap.m.StandardTreeItem","helpDescription":"The <code>sap.m.StandardTreeItem<\/code> is a tree item providing a title, image, etc.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.StepInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tmin: ${min}, // float\n\t\tmax: ${max}, // float\n\t\tstep: ${1}, // float\n\t\tlargerStep: ${2}, // float\n\t\tvalue: ${0}, // float\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\teditable: ${bEditable}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tdisplayValuePrecision: ${0}, // int\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"StepInput","Experimental":false,"module":"sap/m/StepInput","description":"StepInput(sId?, mSettings?) : sap.m.StepInput","constructorDescription":"Constructor for a new StepInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMin min} : float<\/li>\n<li>{@link #getMax max} : float<\/li>\n<li>{@link #getStep step} : float (default: 1)<\/li>\n<li>{@link #getLargerStep largerStep} : float (default: 2)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getDisplayValuePrecision displayValuePrecision} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.StepInput","helpDescription":"The <code>StepInput<\/code> control allows the user to change the input values with predefined increments (steps).","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.StepInput.fireChange","description":"fireChange(mParameters?) : sap.m.StepInput","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.SuggestionItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: ${\"\"}, // string\n\t\tdescription: ${\"\"} // string\n\t}\n)\n","static":"true","prefix":"SuggestionItem","Experimental":false,"module":"sap/m/SuggestionItem","description":"SuggestionItem(sId?, mSettings?) : sap.m.SuggestionItem","constructorDescription":"Constructor for a new SuggestionItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string (default: )<\/li>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.SuggestionItem","helpDescription":"Display suggestion list items.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Switch(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tstate: ${bState}, // boolean\n\t\tcustomTextOn: ${\"\"}, // string\n\t\tcustomTextOff: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\tname: ${\"\"}, // string\n\t\ttype: ${sap.m.SwitchType.Default}, // sap.m.SwitchType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Switch","Experimental":false,"module":"sap/m/Switch","description":"Switch(sId?, mSettings?) : sap.m.Switch","constructorDescription":"Constructor for a new Switch.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getState state} : boolean (default: false)<\/li>\n<li>{@link #getCustomTextOn customTextOn} : string (default: )<\/li>\n<li>{@link #getCustomTextOff customTextOff} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getType type} : sap.m.SwitchType (default: Default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Switch","helpDescription":"A switch is a user interface control on mobile devices that is used for change between binary states. The user can also drag the button handle or tap to change the state.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tstate: ${bState} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Switch.fireChange","description":"fireChange(mParameters?) : sap.m.Switch","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TabContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tshowAddNewButton: ${bShowAddNewButton}, // boolean\n\t\titems: [${items}], // sap.m.TabContainerItem[]\n\t\tselectedItem: ${selectedItem}, // (sap.m.TabContainerItem|string)\n\t\titemClose: [function (oEvent) {}, this], // function|array\n\t\titemSelect: [function (oEvent) {}, this], // function|array\n\t\taddNewButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TabContainer","Experimental":false,"module":"sap/m/TabContainer","description":"TabContainer(sId?, mSettings?) : sap.m.TabContainer","constructorDescription":"Constructor for a new <code>TabContainer<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowAddNewButton showAddNewButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.TabContainerItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.m.TabContainerItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemClose itemClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:addNewButtonPress addNewButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.TabContainer","helpDescription":"The <code>TabContainer<\/code> control represents a collection of tabs with associated content.\n\nThe <code>TabContainer<\/code> is a full-page container that takes 100% of the parent width and height.\nAs the control is expected to occupy the the whole parent, it should be the only child of its parent.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemClose(\n\t{\n\t\titem: ${item} // sap.m.TabContainerItem\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.TabContainer.fireItemClose","description":"fireItemClose(mParameters?) : boolean","helpDescription":"Fires event <code>itemClose<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemSelect(\n\t{\n\t\titem: ${item} // sap.m.TabContainerItem\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.TabContainer.fireItemSelect","description":"fireItemSelect(mParameters?) : boolean","helpDescription":"Fires event <code>itemSelect<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TabContainerItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tname: ${\"\"}, // string\n\t\tkey: \"${key}\", // string\n\t\tmodified: ${bModified}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\titemPropertyChanged: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TabContainerItem","Experimental":false,"module":"sap/m/TabContainerItem","description":"TabContainerItem(sId?, mSettings?) : sap.m.TabContainerItem","constructorDescription":"Constructor for a new <code>TabContainerItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getModified modified} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemPropertyChanged itemPropertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.TabContainerItem","helpDescription":"An item to be used in a TabContainer.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemPropertyChanged(\n\t{\n\t\titemChanged: ${itemChanged}, // sap.m.TabContainerItem\n\t\tpropertyKey: \"${propertyKey}\", // string\n\t\tpropertyValue: ${propertyValue} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.TabContainerItem.fireItemPropertyChanged","description":"fireItemPropertyChanged(mParameters?) : sap.m.TabContainerItem","helpDescription":"Fires event <code>itemPropertyChanged<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TabStripSelectList(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tselectedKey: ${\"\"}, // string\n\t\tselectedItemId: ${\"\"}, // string\n\t\tshowSecondaryValues: ${bShowSecondaryValues}, // boolean\n\t\tkeyboardNavigationMode: ${sap.m.SelectListKeyboardNavigationMode.Delimited}, // sap.m.SelectListKeyboardNavigationMode\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TabStripSelectList","Experimental":false,"module":"sap/m/TabStripSelectList","description":"TabStripSelectList(sId?, mSettings?) : sap.m.TabStripSelectList","constructorDescription":"Constructor for a new <code>TabStripSelectList<\/code>.","extends":"sap.m.SelectList","Deprecated":false,"name":"sap.m.TabStripSelectList","helpDescription":"The <code>sap.m.TabStripSelectList<\/code> displays a list of items that allows the user to select an item.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Table(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this], // function|array\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Translucent}, // sap.m.BackgroundDesign\n\t\tfixedLayout: ${bFixedLayout}, // boolean\n\t\tshowOverlay: ${bShowOverlay}, // boolean\n\t\tcolumns: [${columns}] // sap.m.Column[]\n\t}\n)\n","static":"true","prefix":"Table","Experimental":false,"module":"sap/m/Table","description":"Table(sId?, mSettings?) : sap.m.Table","constructorDescription":"Constructor for a new Table.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Translucent)<\/li>\n<li>{@link #getFixedLayout fixedLayout} : boolean (default: true)<\/li>\n<li>{@link #getShowOverlay showOverlay} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.m.Column[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListBase#constructor sap.m.ListBase}\ncan be used as well.","extends":"sap.m.ListBase","Deprecated":false,"name":"sap.m.Table","helpDescription":"<code>sap.m.Table<\/code> control provides a set of sophisticated and convenience functions for responsive table design.\nTo render the <code>sap.m.Table<\/code> properly, the order of the <code>columns<\/code> aggregation should match with the order of the items <code>cells<\/code> aggregation. Also <code>sap.m.Table<\/code> requires at least one visible <code>sap.m.Column<\/code> in <code>columns<\/code> aggregation.\nFor mobile devices, the recommended limit of table rows is 100 (based on 4 columns) to assure proper performance. To improve initial rendering on large tables, use the <code>growing<\/code> feature.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TablePersoController(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${\"20rem\"}, // sap.ui.core.CSSSize\n\t\tcomponentName: \"${componentName}\", // string\n\t\thasGrouping: ${bHasGrouping}, // boolean\n\t\tshowSelectAll: ${bShowSelectAll}, // boolean\n\t\tshowResetAll: ${bShowResetAll}, // boolean\n\t\tpersoService: ${persoService}, // Object\n\t\ttable: ${table}, // (sap.m.Table|string)\n\t\ttables: [${tables}], // (sap.m.Table|string)[]\n\t\tpersonalizationsDone: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TablePersoController","Experimental":false,"module":"sap/m/TablePersoController","description":"TablePersoController(sId?, mSettings?) : sap.m.TablePersoController","constructorDescription":"The TablePersoController can be used to connect a table that you want to provide\na personalization dialog for, with a persistence service such as one provided by\nthe unified shell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize (default: 20rem)<\/li>\n<li>{@link #getComponentName componentName} : string<\/li>\n<li>{@link #getHasGrouping hasGrouping} : boolean (default: false)<\/li>\n<li>{@link #getShowSelectAll showSelectAll} : boolean (default: true)<\/li>\n<li>{@link #getShowResetAll showResetAll} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPersoService persoService} : Object<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTable table} : (sap.ui.core.ID | sap.m.Table)<\/li>\n<li>{@link #getTables tables} : (sap.ui.core.ID | sap.m.Table)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:personalizationsDone personalizationsDone} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extends":"sap.ui.base.ManagedObject","Deprecated":false,"name":"sap.m.TablePersoController","helpDescription":"Table Personalization Controller","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TablePersoDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\tpersoMap: ${persoMap}, // object\n\t\tcolumnInfoCallback: ${columnInfoCallback}, // object\n\t\tinitialColumnState: ${initialColumnState}, // object\n\t\thasGrouping: ${bHasGrouping}, // boolean\n\t\tshowSelectAll: ${bShowSelectAll}, // boolean\n\t\tshowResetAll: ${bShowResetAll}, // boolean\n\t\tpersoService: ${persoService}, // Object\n\t\tpersoDialogFor: ${persoDialogFor}, // (sap.m.Table|string)\n\t\tconfirm: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TablePersoDialog","Experimental":false,"module":"sap/m/TablePersoDialog","description":"TablePersoDialog(sId?, mSettings?) : sap.m.TablePersoDialog","constructorDescription":"The TablePersoDialog can be used to display and allow modification of personalization settings relating to a Table. It displays the columns of the table that it refers to by using\n<ul><li>The result of calling sap.m.TablePersoProvider's 'getCaption' callback if it is implemented and delivers a non-null value for a column<\/li>\n<li>the column header control's 'text' property if no caption property is available<\/li>\n<li>the column header control's 'title' property if neither 'text' nor 'caption' property are available<\/li>\n<li>the column id is displayed as last fallback, if none of the above is at hand. In that case, a warning is logged. <\/li><\/ul>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getPersoMap persoMap} : object<\/li>\n<li>{@link #getColumnInfoCallback columnInfoCallback} : object<\/li>\n<li>{@link #getInitialColumnState initialColumnState} : object<\/li>\n<li>{@link #getHasGrouping hasGrouping} : boolean<\/li>\n<li>{@link #getShowSelectAll showSelectAll} : boolean<\/li>\n<li>{@link #getShowResetAll showResetAll} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPersoService persoService} : Object<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getPersoDialogFor persoDialogFor} : (sap.ui.core.ID | sap.m.Table)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","extends":"sap.ui.base.ManagedObject","Deprecated":false,"name":"sap.m.TablePersoDialog","helpDescription":"Table Personalization Dialog","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TableSelectDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tmultiSelect: ${bMultiSelect}, // boolean\n\t\tgrowingThreshold: ${growingThreshold}, // int\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\titems: [${items}], // sap.m.ColumnListItem[]\n\t\tcolumns: [${columns}], // sap.m.Column[]\n\t\tconfirm: [function (oEvent) {}, this], // function|array\n\t\tsearch: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TableSelectDialog","Experimental":false,"module":"sap/m/TableSelectDialog","description":"TableSelectDialog(sId?, mSettings?) : sap.m.TableSelectDialog","constructorDescription":"Constructor for a new TableSelectDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: false)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRememberSelections rememberSelections} : boolean (default: false)<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ColumnListItem[] (default)<\/li>\n<li>{@link #getColumns columns} : sap.m.Column[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.TableSelectDialog","helpDescription":"A dialog to select items in a table containing multiple values and attributes.\n<h3>Overview<\/h3>\nThe table select dialog helps users select items in a table-like structure with several attributes and values per item. A search fields helps narrow down the results.\n<h3>Structure<\/h3>\nThe table select dialog consists of the following elements:\n<ul>\n<li> Search field - used to search enter search terms for a specific item.<\/li>\n<li> Infobar (optional) - shows additional information for the current selection (i.e. total number of selected items).<\/li>\n<li> Content - the table with the items.<\/li>\n<li> Footer (optional) - a toolbar for actions.<\/li>\n<\/ul>\nTable select dialog supports multi-selection when the <code>multiSelect<\/code> property is set.\n\nThe selected items can be stored for later editing when the <code>rememberSelections<\/code> property is set.\n<b>Note:<b> This property has to be set before the dialog is opened.\n<h3>Usage<\/h3>\n<h4>When to use:<\/h4>\n<ul>\n<li>You need to select one or more items from a comprehensive list that contains multiple attributes or values.<\/li>\n<\/ul>\n<h4>When not to use:<\/h4>\n<ul>\n<li>You need to select one item from a predefined set of options that contains only one value. Use a {@link sap.m.Select switch} control instead.<\/li>\n<li>You need to select items within a query-based range. Use a {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog value help} control instead.<\/li>\n<li>You need to only filter a set of items. Use a {@link sap.ui.comp.filterbar.FilterBar filter bar} control instead.<\/li>\n<\/ul>\n<h3>Responsive Behavior<\/h3>\n<ul>\n<li>On smaller screens, the columns of the table wrap and build a list that shows all the information.<\/li>\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireConfirm(\n\t{\n\t\tselectedItem: ${selectedItem}, // sap.m.StandardListItem\n\t\tselectedItems: [${selectedItems}], // sap.m.StandardListItem[]\n\t\tselectedContexts: \"${selectedContexts}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.TableSelectDialog.fireConfirm","description":"fireConfirm(mParameters?) : sap.m.TableSelectDialog","helpDescription":"Fires event <code>confirm<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireLiveChange(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemsBinding: ${itemsBinding} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.TableSelectDialog.fireLiveChange","description":"fireLiveChange(mParameters?) : sap.m.TableSelectDialog","helpDescription":"Fires event <code>liveChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSearch(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemsBinding: ${itemsBinding} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.TableSelectDialog.fireSearch","description":"fireSearch(mParameters?) : sap.m.TableSelectDialog","helpDescription":"Fires event <code>search<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Text(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\twrapping: ${bWrapping}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tmaxLines: ${maxLines} // int\n\t}\n)\n","static":"true","prefix":"Text","Experimental":false,"module":"sap/m/Text","description":"Text(sId?, mSettings?) : sap.m.Text","constructorDescription":"Constructor for a new Text.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: true)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLines maxLines} : int<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Text","helpDescription":"The <code>Text<\/code> control can be used for embedding longer text paragraphs, that need text wrapping, into your app.\nIf the configured text value contains HTML code or script tags, those will be escaped.<br>\n<b>Note: <\/b>Line breaks (\\r\\n, \\n\\r, \\r, \\n) will always be visualized except when the <code>wrapping<\/code> property is set to <code>false<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TextArea(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\trows: ${2}, // int\n\t\tcols: ${20}, // int\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tmaxLength: ${0}, // int\n\t\twrapping: ${sap.ui.core.Wrapping.None}, // sap.ui.core.Wrapping\n\t\tvalueLiveUpdate: ${bValueLiveUpdate}, // boolean\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingMaxLines: ${0}, // int\n\t\tliveChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TextArea","Experimental":false,"module":"sap/m/TextArea","description":"TextArea(sId?, mSettings?) : sap.m.TextArea","constructorDescription":"Constructor for a new TextArea.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRows rows} : int (default: 2)<\/li>\n<li>{@link #getCols cols} : int (default: 20)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getWrapping wrapping} : sap.ui.core.Wrapping (default: None)<\/li>\n<li>{@link #getValueLiveUpdate valueLiveUpdate} : boolean (default: false)<\/li>\n<li>{@link #getGrowing growing} : boolean (default: false)<\/li>\n<li>{@link #getGrowingMaxLines growingMaxLines} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","extends":"sap.m.InputBase","Deprecated":false,"name":"sap.m.TextArea","helpDescription":"The <code>sap.m.TextArea<\/code> enables multi-line text input.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireLiveChange(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.TextArea.fireLiveChange","description":"fireLiveChange(mParameters?) : sap.m.TextArea","helpDescription":"Fires event <code>liveChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Tile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tremovable: ${bRemovable}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Tile","Experimental":false,"module":"sap/m/Tile","description":"Tile(sId?, mSettings?) : sap.m.Tile","constructorDescription":"Constructor for a new Tile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRemovable removable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Tile","helpDescription":"A tile to be displayed in the tile container. Use this\ntile as the base class for specialized tile implementations.\nUse the renderer _addOuterClass methods to add a style class to the main\nsurface of the Tile. In this class set the background color, gradients\nor background images.\nInstead of implementing the default render method in the renderer, implement\nyour content HTML in the _renderContent method of the specialized tile.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TileContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\teditable: ${bEditable}, // boolean\n\t\tallowAdd: ${bAllowAdd}, // boolean\n\t\ttiles: [${tiles}], // sap.m.Tile[]\n\t\ttileMove: [function (oEvent) {}, this], // function|array\n\t\ttileDelete: [function (oEvent) {}, this], // function|array\n\t\ttileAdd: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TileContainer","Experimental":false,"module":"sap/m/TileContainer","description":"TileContainer(sId?, mSettings?) : sap.m.TileContainer","constructorDescription":"Constructor for a new TileContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEditable editable} : boolean<\/li>\n<li>{@link #getAllowAdd allowAdd} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTiles tiles} : sap.m.Tile[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tileMove tileMove} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tileDelete tileDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tileAdd tileAdd} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.TileContainer","helpDescription":"A container that arranges same-size tiles nicely on carousel pages.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireTileDelete(\n\t{\n\t\ttile: ${tile} // sap.m.Tile\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.TileContainer.fireTileDelete","description":"fireTileDelete(mParameters?) : sap.m.TileContainer","helpDescription":"Fires event <code>tileDelete<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireTileMove(\n\t{\n\t\ttile: ${tile}, // sap.m.Tile\n\t\tnewIndex: ${newIndex} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.TileContainer.fireTileMove","description":"fireTileMove(mParameters?) : sap.m.TileContainer","helpDescription":"Fires event <code>tileMove<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TileContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tfooter: \"${footer}\", // string\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tunit: \"${unit}\", // string\n\t\tdisabled: ${bDisabled}, // boolean\n\t\tframeType: ${sap.m.FrameType.Auto}, // sap.m.FrameType\n\t\tcontent: ${content} // sap.ui.core.Control\n\t}\n)\n","static":"true","prefix":"TileContent","Experimental":false,"module":"sap/m/TileContent","description":"TileContent(sId?, mSettings?) : sap.m.TileContent","constructorDescription":"Constructor for a new sap.m.TileContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFooter footer} : string<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<li>{@link #getDisabled disabled} : boolean (default: false)<\/li>\n<li>{@link #getFrameType frameType} : sap.m.FrameType (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.TileContent","helpDescription":"This control is used within the GenericTile control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TimePicker(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tplaceholderSymbol: ${\"_\"}, // string\n\t\tmask: \"${mask}\", // string\n\t\trules: [${rules}], // sap.m.MaskInputRule[]\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tlocaleId: \"${localeId}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\ttitle: \"${title}\", // string\n\t\tminutesStep: ${1}, // int\n\t\tsecondsStep: ${1} // int\n\t}\n)\n","static":"true","prefix":"TimePicker","Experimental":false,"module":"sap/m/TimePicker","description":"TimePicker(sId?, mSettings?) : sap.m.TimePicker","constructorDescription":"Constructor for a new <code>TimePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getLocaleId localeId} : string<\/li>\n<li>{@link #getDateValue dateValue} : object<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getMinutesStep minutesStep} : int (default: 1)<\/li>\n<li>{@link #getSecondsStep secondsStep} : int (default: 1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.MaskInput#constructor sap.m.MaskInput}\ncan be used as well.","extends":"sap.m.MaskInput","Deprecated":false,"name":"sap.m.TimePicker","helpDescription":"A single-field input control that enables the users to fill time related input fields.\n\n<h3>Overview<\/h3>\n\nThe <code>TimePicker<\/code> control enables the users to fill time related input\nfields using touch, mouse, or keyboard input.\n\n<h3>Usage<\/h3>\n\nUse this control if you want the user to select a time. If you want the user to\nselect a duration (1 hour), use the {@link sap.m.Select} control instead.\n\nThe user can enter a date by:\n\n<ul><li>Using the <code>TimePicker<\/code> dropdown that opens in a popup<\/li>\n<li>Typing it in directly in the input field<\/li><\/ul>\n\nOn app level, there are two options to provide value for the\n<code>TimePicker<\/code> - as a string to the <code>value<\/code> property or as a\nJavaScript Date object to the <code>dateValue<\/code> property (only one of these\nproperties should be used at a time):\n\n<ul><li>Use the <code>value<\/code> property if you want to bind the\n<code>TimePicker<\/code> to a model using the\n<code>sap.ui.model.type.Time<\/code><\/li>\n<li>Use the <code>value<\/code> property if the date is provided as a string from\nthe backend or inside the app (for example, as ABAP type DATS field)<\/li>\n<li>Use the <code>dateValue<\/code> property if the date is already provided as a\nJavaScript Date object or you want to work with a JavaScript Date object<\/li><\/ul>\n\n<h3>Formatting<\/h3>\n\nAll formatting and parsing of values from and to strings is done using the\n{@link sap.ui.core.format.DateFormat}. If a value is entered by typing it into\nthe input field, it must fit to the used time format and locale.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation.\nSee {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nA time format must be specified, otherwise the default \"HH:mm:ss a\" will be\nused. For example, if the <code>valueFormat<\/code> is \"HH-mm-ss a\", the\n<code>displayFormat<\/code> is \"HH:mm:ss a\", and the used locale is English, a\nvalid value string is \"10-30-15 AM\", which leads to an output of \"10:30:15 AM\".\n\nIf no placeholder is set to the <code>TimePicker<\/code>, the used\n<code>displayFormat<\/code> is displayed as a placeholder. If another placeholder\nis needed, it must be set.\n\n<b>Note:<\/b> If the string does NOT match the <code>displayFormat<\/code>\n(from user input) or the <code>valueFormat<\/code> (on app level), the\n{@link sap.ui.core.format.DateFormat} makes an attempt to parse it based on the\nlocale settings. For more information, see the respective documentation in the\nAPI Reference.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>TimePicker<\/code> is responsive and fully adapts to all device types.\nFor larger screens, such as tablet or desktop, it opens as a popover. For\nmobile devices, it opens in full screen.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Title(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\tlevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\ttitleStyle: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttitle: ${title} // (sap.ui.core.Title|string)\n\t}\n)\n","static":"true","prefix":"Title","Experimental":false,"module":"sap/m/Title","description":"Title(sId?, mSettings?) : sap.m.Title","constructorDescription":"Constructor for a new Title control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getLevel level} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getTitleStyle titleStyle} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTitle title} : (sap.ui.core.ID | sap.ui.core.Title)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Title","helpDescription":"The Title control represents a single line of text with explicit header / title semantics.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ToggleButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttype: ${sap.m.ButtonType.Default}, // sap.m.ButtonType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonFirst: ${bIconFirst}, // boolean\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","static":"true","prefix":"ToggleButton","Experimental":false,"module":"sap/m/ToggleButton","description":"ToggleButton(sId?, mSettings?) : sap.m.ToggleButton","constructorDescription":"Constructor for a new ToggleButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","extends":"sap.m.Button","Deprecated":false,"name":"sap.m.ToggleButton","helpDescription":"The ToggleButton Control is a Button that can be toggled between pressed and normal state","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Token(\n\t\"${sId}\", // string\n\t{\n\t\tselected: ${bSelected}, // boolean\n\t\tkey: ${\"\"}, // string\n\t\ttext: ${\"\"}, // string\n\t\teditable: ${bEditable}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tdeselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"Token","Experimental":false,"module":"sap/m/Token","name":"sap.m.Token","description":"Token(sId?, mSettings?) : sap.m.Token","constructorDescription":"Constructor for a new Token.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string (default: )<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:delete delete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:deselect deselect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>","helpDescription":"<h3>Overview<\/h3>\nTokens are small items of information (similar to tags) that mainly serve to visualize previously selected items.\nTokens are manipulated by a {@link sap.m.Tokenizer Tokenizer}.\n<h3>Structure<\/h3>\nThe tokens store single text items or sometimes key-value pairs, such as \"John Miller (ID1234567)\".\nEach token also contains a delete icon, which is invisible if the token is in edit mode.\n\n<h3>Usage<\/h3>\n<h4>When to use:<\/h4>\nTokens can only be used with the Tokenizer as a container.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Tokenizer(\n\t\"${sId}\", // string\n\t{\n\t\teditable: ${bEditable}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\ttokens: [${tokens}], // sap.m.Token[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttokenChange: [function (oEvent) {}, this], // function|array\n\t\ttokenUpdate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","Deprecated":false,"prefix":"Tokenizer","Experimental":false,"module":"sap/m/Tokenizer","name":"sap.m.Tokenizer","description":"Tokenizer(sId?, mSettings?) : sap.m.Tokenizer","constructorDescription":"Constructor for a new Tokenizer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTokens tokens} : sap.m.Token[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tokenChange tokenChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tokenUpdate tokenUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>","helpDescription":"<h3>Overview<\/h3>\nA tokenizer is a container for {@link sap.m.Token Tokens}. It also handles all actions associated with the tokens like adding, deleting, selecting and editing.\n<h3>Structure<\/h3>\nThe tokens are stored in the <code>tokens<\/code> aggregation.\nThe tokenizer can determine, by setting the <code>editable<\/code> property, whether the tokens in it are editable.\nStill the Token itself can determine if it is <code>editable<\/code>. This allows you to have non-editable Tokens in an editable Tokenizer.\n\n<h3>Usage<\/h3>\n<h4>When to use:<\/h4>\nThe tokenizer can only be used as part of {@link sap.m.MultiComboBox MultiComboBox},{@link sap.m.MultiInput MultiInput} or {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog ValueHelpDialog}","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireTokenChange(\n\t{\n\t\ttype: \"${type}\", // string\n\t\ttoken: ${token}, // sap.m.Token\n\t\ttokens: [${tokens}], // sap.m.Token[]\n\t\taddedTokens: [${addedTokens}], // sap.m.Token[]\n\t\tremovedTokens: [${removedTokens}] // sap.m.Token[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Tokenizer.fireTokenChange","description":"fireTokenChange(mParameters?) : sap.m.Tokenizer","helpDescription":"Fires event <code>tokenChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Toolbar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tactive: ${bActive}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdesign: ${sap.m.ToolbarDesign.Auto}, // sap.m.ToolbarDesign\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Toolbar","Experimental":false,"module":"sap/m/Toolbar","description":"Toolbar(sId?, mSettings?) : sap.m.Toolbar","constructorDescription":"Constructor for a new Toolbar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getActive active} : boolean (default: false)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getDesign design} : sap.m.ToolbarDesign (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Toolbar","helpDescription":"The Toolbar control is a horizontal container that is most commonly used to display buttons, labels, selects and various other input controls.\n\nBy default, Toolbar items are shrinkable if they have percent-based width (e.g. Input, Slider) or implement the {@link sap.ui.core.IShrinkable} interface (e.g. Text, Label). This behavior can be overridden by providing {@link sap.m.ToolbarLayoutData} for the Toolbar items.\n\nNote: It is recommended that you use {@link sap.m.OverflowToolbar} over Toolbar, unless you want to avoid overflow in favor of shrinking.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"firePress(\n\t{\n\t\tsrcControl: ${srcControl} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Toolbar.firePress","description":"firePress(mParameters?) : sap.m.Toolbar","helpDescription":"Fires event <code>press<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ToolbarLayoutData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tshrinkable: ${bShrinkable}, // boolean\n\t\tminWidth: ${minWidth}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${maxWidth} // sap.ui.core.CSSSize\n\t}\n)\n","static":"true","prefix":"ToolbarLayoutData","Experimental":false,"module":"sap/m/ToolbarLayoutData","description":"ToolbarLayoutData(sId?, mSettings?) : sap.m.ToolbarLayoutData","constructorDescription":"Constructor for a new ToolbarLayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShrinkable shrinkable} : boolean (default: false)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","extends":"sap.ui.core.LayoutData","Deprecated":false,"name":"sap.m.ToolbarLayoutData","helpDescription":"Defines layout data for the toolbar items.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ToolbarSeparator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ToolbarSeparator","Experimental":false,"module":"sap/m/ToolbarSeparator","description":"ToolbarSeparator(sId?, mSettings?) : sap.m.ToolbarSeparator","constructorDescription":"Constructor for a new ToolbarSeparator.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ToolbarSeparator","helpDescription":"Creates a visual separator (theme dependent: padding, margin, line) between the preceding and succeeding toolbar item.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ToolbarSpacer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"\"} // sap.ui.core.CSSSize\n\t}\n)\n","static":"true","prefix":"ToolbarSpacer","Experimental":false,"module":"sap/m/ToolbarSpacer","description":"ToolbarSpacer(sId?, mSettings?) : sap.m.ToolbarSpacer","constructorDescription":"Constructor for a new ToolbarSpacer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ToolbarSpacer","helpDescription":"This control can be used to add horizontal space between toolbar items.\nNote: ToolbarLayoutData should not be used with this control.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Tree(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Tree","Experimental":false,"module":"sap/m/Tree","description":"Tree(sId?, mSettings?) : sap.m.Tree","constructorDescription":"Constructor for a new Tree.","extends":"sap.m.ListBase","Deprecated":false,"name":"sap.m.Tree","helpDescription":"The <code>Tree<\/code> control provides a tree structure for displaying data in a hierarchy.\n<b>Note:<\/b> Growing feature is not supported by <code>Tree<\/code>.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.TreeItemBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"TreeItemBase","Experimental":false,"module":"sap/m/TreeItemBase","description":"TreeItemBase(sId?, mSettings?) : sap.m.TreeItemBase","constructorDescription":"Constructor for a new TreeItemBase.","extends":"sap.m.ListItemBase","Deprecated":false,"name":"sap.m.TreeItemBase","helpDescription":"The <code>sap.m.TreeItemBase<\/code> contains the basic features of all specific tree items.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.UploadCollection(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tfileType: [${fileType}], // string[]\n\t\tmaximumFilenameLength: ${maximumFilenameLength}, // int\n\t\tmaximumFileSize: ${maximumFileSize}, // float\n\t\tmimeType: [${mimeType}], // string[]\n\t\tmultiple: ${bMultiple}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tnoDataDescription: \"${noDataDescription}\", // string\n\t\tsameFilenameAllowed: ${bSameFilenameAllowed}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tuploadEnabled: ${bUploadEnabled}, // boolean\n\t\tuploadUrl: ${\"../../../upload\"}, // string\n\t\tinstantUpload: ${bInstantUpload}, // boolean\n\t\tnumberOfAttachmentsText: \"${numberOfAttachmentsText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\tuploadButtonInvisible: ${bUploadButtonInvisible}, // boolean\n\t\tterminationEnabled: ${bTerminationEnabled}, // boolean\n\t\titems: [${items}], // sap.m.UploadCollectionItem[]\n\t\theaderParameters: [${headerParameters}], // sap.m.UploadCollectionParameter[]\n\t\tparameters: [${parameters}], // sap.m.UploadCollectionParameter[]\n\t\ttoolbar: ${toolbar}, // sap.m.OverflowToolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tfileDeleted: [function (oEvent) {}, this], // function|array\n\t\tfilenameLengthExceed: [function (oEvent) {}, this], // function|array\n\t\tfileRenamed: [function (oEvent) {}, this], // function|array\n\t\tfileSizeExceed: [function (oEvent) {}, this], // function|array\n\t\ttypeMissmatch: [function (oEvent) {}, this], // function|array\n\t\tuploadComplete: [function (oEvent) {}, this], // function|array\n\t\tuploadTerminated: [function (oEvent) {}, this], // function|array\n\t\tbeforeUploadStarts: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"UploadCollection","Experimental":false,"module":"sap/m/UploadCollection","description":"UploadCollection(sId?, mSettings?) : sap.m.UploadCollection","constructorDescription":"Constructor for a new UploadCollection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFileType fileType} : string[]<\/li>\n<li>{@link #getMaximumFilenameLength maximumFilenameLength} : int<\/li>\n<li>{@link #getMaximumFileSize maximumFileSize} : float<\/li>\n<li>{@link #getMimeType mimeType} : string[]<\/li>\n<li>{@link #getMultiple multiple} : boolean (default: false)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getNoDataDescription noDataDescription} : string<\/li>\n<li>{@link #getSameFilenameAllowed sameFilenameAllowed} : boolean (default: false)<\/li>\n<li>{@link #getShowSeparators showSeparators} : sap.m.ListSeparators (default: All)<\/li>\n<li>{@link #getUploadEnabled uploadEnabled} : boolean (default: true)<\/li>\n<li>{@link #getUploadUrl uploadUrl} : string (default: ../../../upload)<\/li>\n<li>{@link #getInstantUpload instantUpload} : boolean (default: true)<\/li>\n<li>{@link #getNumberOfAttachmentsText numberOfAttachmentsText} : string<\/li>\n<li>{@link #getMode mode} : sap.m.ListMode (default: None)<\/li>\n<li>{@link #getUploadButtonInvisible uploadButtonInvisible} : boolean (default: false)<\/li>\n<li>{@link #getTerminationEnabled terminationEnabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.UploadCollectionItem[] (default)<\/li>\n<li>{@link #getHeaderParameters headerParameters} : sap.m.UploadCollectionParameter[]<\/li>\n<li>{@link #getParameters parameters} : sap.m.UploadCollectionParameter[]<\/li>\n<li>{@link #getToolbar toolbar} : sap.m.OverflowToolbar<\/li>\n<li>{@link #getInfoToolbar infoToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileDeleted fileDeleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filenameLengthExceed filenameLengthExceed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileRenamed fileRenamed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileSizeExceed fileSizeExceed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:typeMissmatch typeMissmatch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadComplete uploadComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadTerminated uploadTerminated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeUploadStarts beforeUploadStarts} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.UploadCollection","helpDescription":"This control allows you to upload single or multiple files from your devices (desktop, tablet or phone) and attach them to the application.\n\nThe consuming application needs to take into account that the consistency checks of the model during the upload of the file need to be performed, for example, if the user is editing or deleting a file.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireBeforeUploadStarts(\n\t{\n\t\tfileName: \"${fileName}\", // string\n\t\taddHeaderParameter: ${fn_addHeaderParameter}, // function\n\t\tgetHeaderParameter: ${fn_getHeaderParameter} // function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireBeforeUploadStarts","description":"fireBeforeUploadStarts(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>beforeUploadStarts<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfiles: [${files}] // object[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireChange","description":"fireChange(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireFileDeleted(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\titem: ${item} // sap.m.UploadCollectionItem\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireFileDeleted","description":"fireFileDeleted(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>fileDeleted<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireFilenameLengthExceed(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfiles: [${files}] // object[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireFilenameLengthExceed","description":"fireFilenameLengthExceed(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>filenameLengthExceed<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireFileRenamed(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfileName: \"${fileName}\", // string\n\t\titem: ${item} // sap.m.UploadCollectionItem\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireFileRenamed","description":"fireFileRenamed(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>fileRenamed<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireFileSizeExceed(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfileSize: \"${fileSize}\", // string\n\t\tfiles: [${files}] // object[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireFileSizeExceed","description":"fireFileSizeExceed(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>fileSizeExceed<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireSelectionChange(\n\t{\n\t\tselectedItem: ${selectedItem}, // sap.m.UploadCollectionItem\n\t\tselectedItems: [${selectedItems}], // sap.m.UploadCollectionItem[]\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireSelectionChange","description":"fireSelectionChange(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>selectionChange<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireTypeMissmatch(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfileType: \"${fileType}\", // string\n\t\tmimeType: \"${mimeType}\", // string\n\t\tfiles: [${files}] // object[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireTypeMissmatch","description":"fireTypeMissmatch(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>typeMissmatch<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireUploadComplete(\n\t{\n\t\treadyStateXHR: \"${readyStateXHR}\", // string\n\t\tresponse: \"${response}\", // string\n\t\tstatus: \"${status}\", // string\n\t\tfiles: [${files}] // object[]\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireUploadComplete","description":"fireUploadComplete(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>uploadComplete<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireUploadTerminated(\n\t{\n\t\tfileName: \"${fileName}\", // string\n\t\tgetHeaderParameter: ${fn_getHeaderParameter} // function\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.UploadCollection.fireUploadTerminated","description":"fireUploadTerminated(mParameters?) : sap.m.UploadCollection","helpDescription":"Fires event <code>uploadTerminated<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.UploadCollectionItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tcontributor: \"${contributor}\", // string\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfileName: \"${fileName}\", // string\n\t\tfileSize: ${fileSize}, // float\n\t\tmimeType: \"${mimeType}\", // string\n\t\tthumbnailUrl: \"${thumbnailUrl}\", // string\n\t\tuploadedDate: \"${uploadedDate}\", // string\n\t\turl: \"${url}\", // string\n\t\tenableEdit: ${bEnableEdit}, // boolean\n\t\tenableDelete: ${bEnableDelete}, // boolean\n\t\tvisibleEdit: ${bVisibleEdit}, // boolean\n\t\tvisibleDelete: ${bVisibleDelete}, // boolean\n\t\tariaLabelForPicture: \"${ariaLabelForPicture}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\tattributes: [${attributes}], // sap.m.ObjectAttribute[]\n\t\tstatuses: [${statuses}], // sap.m.ObjectStatus[]\n\t\tmarkers: [${markers}], // sap.m.ObjectMarker[]\n\t\tfileUploader: ${fileUploader} // (sap.ui.unified.FileUploader|string)\n\t}\n)\n","static":"true","prefix":"UploadCollectionItem","Experimental":false,"module":"sap/m/UploadCollectionItem","description":"UploadCollectionItem(sId?, mSettings?) : sap.m.UploadCollectionItem","constructorDescription":"Constructor for a new UploadCollectionItem\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContributor contributor} : string<\/li>\n<li>{@link #getDocumentId documentId} : string<\/li>\n<li>{@link #getFileName fileName} : string<\/li>\n<li>{@link #getFileSize fileSize} : float<\/li>\n<li>{@link #getMimeType mimeType} : string<\/li>\n<li>{@link #getThumbnailUrl thumbnailUrl} : string<\/li>\n<li>{@link #getUploadedDate uploadedDate} : string<\/li>\n<li>{@link #getUrl url} : string<\/li>\n<li>{@link #getEnableEdit enableEdit} : boolean (default: true)<\/li>\n<li>{@link #getEnableDelete enableDelete} : boolean (default: true)<\/li>\n<li>{@link #getVisibleEdit visibleEdit} : boolean (default: true)<\/li>\n<li>{@link #getVisibleDelete visibleDelete} : boolean (default: true)<\/li>\n<li>{@link #getAriaLabelForPicture ariaLabelForPicture} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.m.ObjectAttribute[] (default)<\/li>\n<li>{@link #getStatuses statuses} : sap.m.ObjectStatus[]<\/li>\n<li>{@link #getMarkers markers} : sap.m.ObjectMarker[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFileUploader fileUploader} : (sap.ui.core.ID | sap.ui.unified.FileUploader)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.UploadCollectionItem","helpDescription":"Items provide information about the uploaded files.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.UploadCollectionParameter(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tname: \"${name}\", // string\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","static":"true","prefix":"UploadCollectionParameter","Experimental":false,"module":"sap/m/UploadCollectionParameter","description":"UploadCollectionParameter(sId?, mSettings?) : sap.m.UploadCollectionParameter","constructorDescription":"Constructor for a new UploadCollectionParameter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.UploadCollectionParameter","helpDescription":"Represents a parameter for the UploadCollection.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.UploadCollectionToolbarPlaceholder(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"UploadCollectionToolbarPlaceholder","Experimental":false,"module":"sap/m/UploadCollectionToolbarPlaceholder","description":"UploadCollectionToolbarPlaceholder(sId?, mSettings?) : sap.m.UploadCollectionToolbarPlaceholder","constructorDescription":"Constructor for a new UploadCollectionToolbarPlaceholder.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.UploadCollectionToolbarPlaceholder","helpDescription":"This control needs to be used when you would like to create a customizable toolbar for the UploadCollection. Always a FileUploader instance is\nrequired in the toolbar, the FileUploader will be placed in the position defined by the application.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.VBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdisplayInline: ${bDisplayInline}, // boolean\n\t\tdirection: ${sap.m.FlexDirection.Row}, // sap.m.FlexDirection\n\t\tfitContainer: ${bFitContainer}, // boolean\n\t\trenderType: ${sap.m.FlexRendertype.Div}, // sap.m.FlexRendertype\n\t\tjustifyContent: ${sap.m.FlexJustifyContent.Start}, // sap.m.FlexJustifyContent\n\t\talignItems: ${sap.m.FlexAlignItems.Stretch}, // sap.m.FlexAlignItems\n\t\twrap: ${sap.m.FlexWrap.NoWrap}, // sap.m.FlexWrap\n\t\talignContent: ${sap.m.FlexAlignContent.Stretch}, // sap.m.FlexAlignContent\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Transparent}, // sap.m.BackgroundDesign\n\t\titems: [${items}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"VBox","Experimental":false,"module":"sap/m/VBox","description":"VBox(sId?, mSettings?) : sap.m.VBox","constructorDescription":"Constructor for a new VBox.","extends":"sap.m.FlexBox","Deprecated":false,"name":"sap.m.VBox","helpDescription":"The VBox control builds the container for a vertical flexible box layout. VBox is a convenience control, as it is just a specialized FlexBox control.<br>\n<br>\n<b>Note:<\/b> Be sure to check the <code>renderType<\/code> setting to avoid issues due to browser inconsistencies.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ViewSettingsCustomItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\titemPropertyChanged: [function (oEvent) {}, this], // function|array\n\t\tfilterCount: ${0}, // int\n\t\tcustomControl: ${customControl} // sap.ui.core.Control\n\t}\n)\n","static":"true","prefix":"ViewSettingsCustomItem","Experimental":false,"module":"sap/m/ViewSettingsCustomItem","description":"ViewSettingsCustomItem(sId?, mSettings?) : sap.m.ViewSettingsCustomItem","constructorDescription":"Constructor for a new ViewSettingsCustomItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFilterCount filterCount} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomControl customControl} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ViewSettingsItem#constructor sap.m.ViewSettingsItem}\ncan be used as well.","extends":"sap.m.ViewSettingsItem","Deprecated":false,"name":"sap.m.ViewSettingsCustomItem","helpDescription":"The ViewSettingsCustomItem control is used for modelling custom filters in the ViewSettingsDialog.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ViewSettingsCustomTab(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: ${\"\"}, // \"sap-icon://competitor\"\n\t\ttitle: ${\"\"}, // string\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","static":"true","prefix":"ViewSettingsCustomTab","Experimental":false,"module":"sap/m/ViewSettingsCustomTab","description":"ViewSettingsCustomTab(sId?, mSettings?) : sap.m.ViewSettingsCustomTab","constructorDescription":"Constructor for a new ViewSettingsCustomTab.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: sap-icon://competitor)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.ViewSettingsCustomTab","helpDescription":"The ViewSettingsCustomTab control is used for adding custom tabs in the ViewSettingsDialog.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ViewSettingsDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tsortDescending: ${bSortDescending}, // boolean\n\t\tgroupDescending: ${bGroupDescending}, // boolean\n\t\tfilterSearchOperator: ${sap.m.StringFilterOperator.StartsWith}, // sap.m.StringFilterOperator\n\t\tsortItems: [${sortItems}], // sap.m.ViewSettingsItem[]\n\t\tgroupItems: [${groupItems}], // sap.m.ViewSettingsItem[]\n\t\tfilterItems: [${filterItems}], // sap.m.ViewSettingsItem[]\n\t\tpresetFilterItems: [${presetFilterItems}], // sap.m.ViewSettingsItem[]\n\t\tcustomTabs: [${customTabs}], // sap.m.ViewSettingsCustomTab[]\n\t\tselectedSortItem: ${selectedSortItem}, // (sap.m.ViewSettingsItem|string)\n\t\tselectedGroupItem: ${selectedGroupItem}, // (sap.m.ViewSettingsItem|string)\n\t\tselectedPresetFilterItem: ${selectedPresetFilterItem}, // (sap.m.ViewSettingsItem|string)\n\t\tconfirm: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this], // function|array\n\t\tresetFilters: [function (oEvent) {}, this], // function|array\n\t\tfilterDetailPageOpened: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ViewSettingsDialog","Experimental":false,"module":"sap/m/ViewSettingsDialog","description":"ViewSettingsDialog(sId?, mSettings?) : sap.m.ViewSettingsDialog","constructorDescription":"Constructor for a new <code>ViewSettingsDialog<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSortDescending sortDescending} : boolean (default: false)<\/li>\n<li>{@link #getGroupDescending groupDescending} : boolean (default: false)<\/li>\n<li>{@link #getFilterSearchOperator filterSearchOperator} : sap.m.StringFilterOperator (default: StartsWith)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSortItems sortItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getGroupItems groupItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getFilterItems filterItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getPresetFilterItems presetFilterItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getCustomTabs customTabs} : sap.m.ViewSettingsCustomTab[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedSortItem selectedSortItem} : (sap.ui.core.ID | sap.m.ViewSettingsItem)<\/li>\n<li>{@link #getSelectedGroupItem selectedGroupItem} : (sap.ui.core.ID | sap.m.ViewSettingsItem)<\/li>\n<li>{@link #getSelectedPresetFilterItem selectedPresetFilterItem} : (sap.ui.core.ID | sap.m.ViewSettingsItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:resetFilters resetFilters} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filterDetailPageOpened filterDetailPageOpened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.ViewSettingsDialog","helpDescription":"Helps the user to sort, filter, or group data within a (master) {@link sap.m.List} or a\n{@link sap.m.Table}. The dialog is triggered by icon buttons in the table toolbar. Each\nbutton shows a dropdown list icon.\n\n<h3>Overview<\/h3>\n\nThe <code>ViewSettingsDialog<\/code> is a composite control,\nconsisting of a modal {@link sap.m.Popover} and several internal lists.\nThere are three different tabs (Sort, Group, Filter) in the dialog that can be\nactivated by filling the respective associations. If only one association is\nfilled, the other tabs are automatically hidden. The selected options can be used\nto create sorters and filters for the table.\n\n<b>Note:<\/b> If the app does not offer all three sorting, filtering, and grouping\nfunctionalities, but only one of these (such as sort), we recommend placing the\nicon button directly in the toolbar. Do not place sort, filter, or group buttons in\nthe footer toolbar if they refer to a table. Place group, sort, and filter buttons\nin the footer toolbar if they refer to a master list.\n\n<h3>Usage<\/h3>\n\n<i>When to use?<\/i>\n<ul><li>If you need to allow the user to sort line items in a manageable list or\ntable (up to 20 columns)<\/li>\n<li>If you need to offer custom filter settings in a manageable list or table\n(up to 20 columns)<\/li>\n<li>If you need to allow the user to group line items in a manageable list or\ntable (up to 20 columns)<\/li><\/ul>\n\n<i>When not to use?<\/i>\n<ul><li>If you have complex tables (more than 20 columns)<\/li>\n<li>If you need to rearrange columns within your table (use the\n{@link sap.m.TablePersoDialog} instead)<\/li>\n<li>If you need very specific sort, filter, or column sorting options within\ncomplex tables (use the {@link sap.m.P13nDialog} instead)<\/li><\/ul>\n\n<h3>Responsive behavior<\/h3>\n\nThe popover dialog appears as a modal window on desktop and tablet screen sizes,\nbut full screen on smartphones.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireConfirm(\n\t{\n\t\tsortItem: ${sortItem}, // sap.m.ViewSettingsItem\n\t\tsortDescending: ${bSortDescending}, // boolean\n\t\tgroupItem: ${groupItem}, // sap.m.ViewSettingsItem\n\t\tgroupDescending: ${bGroupDescending}, // boolean\n\t\tpresetFilterItem: ${presetFilterItem}, // sap.m.ViewSettingsItem\n\t\tfilterItems: [${filterItems}], // sap.m.ViewSettingsItem[]\n\t\tfilterKeys: ${filterKeys}, // object\n\t\tfilterCompoundKeys: ${filterCompoundKeys}, // object\n\t\tfilterString: \"${filterString}\" // string\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ViewSettingsDialog.fireConfirm","description":"fireConfirm(mParameters?) : sap.m.ViewSettingsDialog","helpDescription":"Fires event <code>confirm<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireFilterDetailPageOpened(\n\t{\n\t\tparentFilterItem: ${parentFilterItem} // sap.m.ViewSettingsFilterItem\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ViewSettingsDialog.fireFilterDetailPageOpened","description":"fireFilterDetailPageOpened(mParameters?) : sap.m.ViewSettingsDialog","helpDescription":"Fires event <code>filterDetailPageOpened<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ViewSettingsFilterItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\titemPropertyChanged: [function (oEvent) {}, this], // function|array\n\t\tmultiSelect: ${bMultiSelect}, // boolean\n\t\titems: [${items}], // sap.m.ViewSettingsItem[]\n\t\tfilterDetailItemsAggregationChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ViewSettingsFilterItem","Experimental":false,"module":"sap/m/ViewSettingsFilterItem","description":"ViewSettingsFilterItem(sId?, mSettings?) : sap.m.ViewSettingsFilterItem","constructorDescription":"Constructor for a new ViewSettingsFilterItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ViewSettingsItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:filterDetailItemsAggregationChange filterDetailItemsAggregationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ViewSettingsItem#constructor sap.m.ViewSettingsItem}\ncan be used as well.","extends":"sap.m.ViewSettingsItem","Deprecated":false,"name":"sap.m.ViewSettingsFilterItem","helpDescription":"A ViewSettingsFilterItem control is used for modelling filter behaviour in the ViewSettingsDialog.\nIt is derived from a core Item, but does not support the base class properties like textDirection and enabled.\nSetting these properties will not have any effects.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.ViewSettingsItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\titemPropertyChanged: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ViewSettingsItem","Experimental":false,"module":"sap/m/ViewSettingsItem","description":"ViewSettingsItem(sId?, mSettings?) : sap.m.ViewSettingsItem","constructorDescription":"Constructor for a new ViewSettingsItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemPropertyChanged itemPropertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","extends":"sap.ui.core.Item","Deprecated":false,"name":"sap.m.ViewSettingsItem","helpDescription":"ViewSettingsItem is used for modelling filter behaviour in the ViewSettingsDialog.\nIt is derived from a core Item, but does not support the base class properties \"textDirection\" and \"enabled\", setting these properties will not have any effects.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireItemPropertyChanged(\n\t{\n\t\tchangedItem: ${changedItem}, // sap.m.ViewSettingsItem\n\t\tpropertyKey: \"${propertyKey}\", // string\n\t\tpropertyValue: ${propertyValue} // any\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.ViewSettingsItem.fireItemPropertyChanged","description":"fireItemPropertyChanged(mParameters?) : sap.m.ViewSettingsItem","helpDescription":"Fires event <code>itemPropertyChanged<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.Wizard(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowNextButton: ${bShowNextButton}, // boolean\n\t\tfinishButtonText: ${\"Review\"}, // string\n\t\tenableBranching: ${bEnableBranching}, // boolean\n\t\tsteps: [${steps}], // sap.m.WizardStep[]\n\t\tstepActivate: [function (oEvent) {}, this], // function|array\n\t\tcomplete: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"Wizard","Experimental":false,"module":"sap/m/Wizard","description":"Wizard(sId?, mSettings?) : sap.m.Wizard","constructorDescription":"Constructor for a new Wizard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getShowNextButton showNextButton} : boolean (default: true)<\/li>\n<li>{@link #getFinishButtonText finishButtonText} : string (default: Review)<\/li>\n<li>{@link #getEnableBranching enableBranching} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSteps steps} : sap.m.WizardStep[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stepActivate stepActivate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:complete complete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.Wizard","helpDescription":"Enables users to accomplish a single goal which consists of multiple dependable sub-tasks.\n<h3>Overview<\/h3>\nThe sap.m.Wizard helps users complete a complex and unfamiliar task by dividing it into sections and guiding the user through it.\nThe wizard has two main areas - a navigation area at the top showing the step sequence and a content area below it.\n<h3>Structure<\/h3>\n<h4>Navigation Area<\/h4>\nThe top most area of the wizard is occupied by the navigation area. It shows the sequence of {@link sap.m.WizardStep wizard steps}.\n<ul>\n<li>The minimum number of steps is 3 and the maximum is 8 and are stored in the <code>steps<\/code> aggregation.<\/li>\n<li>Steps can be branching depending on choices the user made in their input - this is set by the <code>enableBranching<\/code> property. <\/li>\n<li>Steps can have different visual representations - numbers or icons. You can add labels for better readability <\/li>\n<\/ul>\n<h4>Content<\/h4>\nThe content occupies the main part of the page. It can hold any type of input controls. The content is kept in {@link sap.m.WizardStep wizard steps}.\n<h4>Next Step Button<\/h4>\nThe next step button is displayed below the content. It can be hidden by setting <code>showNextButton<\/code> to <code>false<\/code> and displayed, for example,\nonly after the user has filled all mandatory fields.\n<h3>Usage<\/h3>\n<h4>When to use:<\/h4>\nWhen the user has to accomplish a long or unfamiliar task.\n<h4>When not to use:<\/h4>\nWhen the user has to accomplish a routine task that is clear and familiar.\nWhen the task has only two steps or less.\n<h3>Responsive Behavior<\/h3>\nOn mobile devices the steps in the StepNavigator are grouped together and overlap. Tapping on them will show a popover to select the step to navigate to.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireStepActivate(\n\t{\n\t\tindex: ${index} // int\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.Wizard.fireStepActivate","description":"fireStepActivate(mParameters?) : sap.m.Wizard","helpDescription":"Fires event <code>stepActivate<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.WizardStep(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: ${\"\"}, // string\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\tvalidated: ${bValidated}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tsubsequentSteps: [${subsequentSteps}], // (sap.m.WizardStep|string)[]\n\t\tnextStep: ${nextStep}, // (sap.m.WizardStep|string)\n\t\tcomplete: [function (oEvent) {}, this], // function|array\n\t\tactivate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"WizardStep","Experimental":false,"module":"sap/m/WizardStep","description":"WizardStep(sId?, mSettings?) : sap.m.WizardStep","constructorDescription":"Constructor for a new WizardStep.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getValidated validated} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSubsequentSteps subsequentSteps} : (sap.ui.core.ID | sap.m.WizardStep)[]<\/li>\n<li>{@link #getNextStep nextStep} : (sap.ui.core.ID | sap.m.WizardStep)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:complete complete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:activate activate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.WizardStep","helpDescription":"A container control used to aggregate user input controls as part of a sap.m.Wizard.\n<h3>Overview<\/h3>\nWizardStep gives the developer the ability to validate, invalidate the step and define subsequent steps.\nThe WizardStep control control is supposed to be used only as an aggregation of the {@link sap.m.Wizard Wizard} control,\nand should not be used as a standalone one.\n<h3>Structure<\/h3>\n<ul>\n<li>Each wizard step has a title. Additionally it can have an icon.<\/li>\n<li>Each wizard step can be validated by setting the <code>validated<\/code> property. This action will trigger the rendering of the Next step button.<\/li>\n<li>If the execution needs to branch after a given step, you should set all possible next steps in the <code>subsequentSteps<\/code> aggregation.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.routing.Router(\n\t\"${oRoutes}\", // object|object[]\n\t{\n\t\tasync: ${bAsync} // boolean\n\t},\n\t\"${oOwner}\", // sap.ui.core.UIComponent\n\t\"${oTargetsConfig}\" // object\n)\n","static":"true","extends":"sap.ui.core.routing.Router","Deprecated":false,"prefix":"Router","Experimental":false,"module":"sap/m/routing/Router","name":"sap.m.routing.Router","description":"Router(oRoutes?, oConfig?, oOwner?, oTargetsConfig?) : sap.m.routing.Router","constructorDescription":"Instantiates a SAPUI5 mobile Router see {@link sap.ui.core.routing.Router} for the constructor arguments\nThe difference to the {@link sap.ui.core.routing.Router} are the properties viewLevel, transition and transitionParameters you can specify in every Route or Target created by this router.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.routing.Targets(\n\t{\n\t\tviews: ${views}, // sap.ui.core.routing.Views\n\t\tconfig: ${config}, // object\n\t\ttargets: ${targets} // object\n\t}\n)\n","static":"true","extends":"sap.ui.core.routing.Targets","Deprecated":false,"prefix":"Targets","Experimental":false,"module":"sap/m/routing/Targets","name":"sap.m.routing.Targets","description":"Targets(oOptions) : sap.m.routing.Targets","constructorDescription":"Provides a convenient way for placing views into the correct containers of your application.\nThe mobile extension of Targets also handles the triggering of page navigation when the target control is a {@link sap.m.SplitContainer}, a {@link sap.m.NavContainer} or a control which extends one of these.\nOther controls are also allowed, but the extra parameters viewLevel, transition and transitionParameters are ignored and it will behave like {@link sap.ui.core.routing.Targets}.\nWhen a target is displayed, dialogs will be closed. To change this use {@link #getTargetHandler} and {@link sap.m.routing.TargetHandler#setCloseDialogs}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.AddAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"AddAction","Experimental":false,"module":"sap/m/semantic/AddAction","description":"AddAction(sId?, mSettings?) : sap.m.semantic.AddAction","constructorDescription":"Constructor for a new AddAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.AddAction","helpDescription":"An AddAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nSee {@link sap.m.semantic.MasterPage#addAction}, {@link sap.m.semantic.FullscreenPage#addAction}, {@link sap.m.semantic.DetailPage#addAction}","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.CancelAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"CancelAction","Experimental":false,"module":"sap/m/semantic/CancelAction","description":"CancelAction(sId?, mSettings?) : sap.m.semantic.CancelAction","constructorDescription":"Constructor for a new CancelAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.CancelAction","helpDescription":"A CancelAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.DeleteAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DeleteAction","Experimental":false,"module":"sap/m/semantic/DeleteAction","description":"DeleteAction(sId?, mSettings?) : sap.m.semantic.DeleteAction","constructorDescription":"Constructor for a new DeleteAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.DeleteAction","helpDescription":"A DeleteAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.DetailPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this], // function|array\n\t\tcustomShareMenuContent: [${customShareMenuContent}], // sap.m.Button[]\n\t\taddAction: ${addAction}, // sap.m.semantic.AddAction\n\t\tmainAction: ${mainAction}, // sap.m.semantic.MainAction\n\t\tpositiveAction: ${positiveAction}, // sap.m.semantic.PositiveAction\n\t\tnegativeAction: ${negativeAction}, // sap.m.semantic.NegativeAction\n\t\tforwardAction: ${forwardAction}, // sap.m.semantic.ForwardAction\n\t\teditAction: ${editAction}, // sap.m.semantic.EditAction\n\t\tsaveAction: ${saveAction}, // sap.m.semantic.SaveAction\n\t\tdeleteAction: ${deleteAction}, // sap.m.semantic.DeleteAction\n\t\tcancelAction: ${cancelAction}, // sap.m.semantic.CancelAction\n\t\tflagAction: ${flagAction}, // sap.m.semantic.FlagAction\n\t\tfavoriteAction: ${favoriteAction}, // sap.m.semantic.FavoriteAction\n\t\topenInAction: ${openInAction}, // sap.m.semantic.OpenInAction\n\t\tdiscussInJamAction: ${discussInJamAction}, // sap.m.semantic.DiscussInJamAction\n\t\tshareInJamAction: ${shareInJamAction}, // sap.m.semantic.ShareInJamAction\n\t\tsendEmailAction: ${sendEmailAction}, // sap.m.semantic.SendEmailAction\n\t\tsendMessageAction: ${sendMessageAction}, // sap.m.semantic.SendMessageAction\n\t\tprintAction: ${printAction}, // sap.m.semantic.PrintAction\n\t\tmessagesIndicator: ${messagesIndicator}, // sap.m.semantic.MessagesIndicator\n\t\tsaveAsTileAction: ${saveAsTileAction}, // sap.m.Button\n\t\tpagingAction: ${pagingAction}, // sap.m.PagingButton\n\t\tdraftIndicator: ${draftIndicator} // sap.m.DraftIndicator\n\t}\n)\n","static":"true","prefix":"DetailPage","Experimental":false,"module":"sap/m/semantic/DetailPage","description":"DetailPage(sId?, mSettings?) : sap.m.semantic.DetailPage","constructorDescription":"Constructor for a new DetailPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getAddAction addAction} : sap.m.semantic.AddAction<\/li>\n<li>{@link #getMainAction mainAction} : sap.m.semantic.MainAction<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.m.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.m.semantic.NegativeAction<\/li>\n<li>{@link #getForwardAction forwardAction} : sap.m.semantic.ForwardAction<\/li>\n<li>{@link #getEditAction editAction} : sap.m.semantic.EditAction<\/li>\n<li>{@link #getSaveAction saveAction} : sap.m.semantic.SaveAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.m.semantic.DeleteAction<\/li>\n<li>{@link #getCancelAction cancelAction} : sap.m.semantic.CancelAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.m.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.m.semantic.FavoriteAction<\/li>\n<li>{@link #getOpenInAction openInAction} : sap.m.semantic.OpenInAction<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.m.semantic.DiscussInJamAction<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.m.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.m.semantic.SendEmailAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.m.semantic.SendMessageAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.m.semantic.PrintAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.m.semantic.MessagesIndicator<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getPagingAction pagingAction} : sap.m.PagingButton<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.ShareMenuPage#constructor sap.m.semantic.ShareMenuPage}\ncan be used as well.","extends":"sap.m.semantic.ShareMenuPage","Deprecated":false,"name":"sap.m.semantic.DetailPage","helpDescription":"A DetailPage is a {@link sap.m.semantic.ShareMenuPage} that supports semantic content of the following types:\n\n<ul>\n\t<li>{@link sap.m.semantic.AddAction}<\/li>\n\t<li>{@link sap.m.semantic.MainAction}<\/li>\n\t<li>{@link sap.m.semantic.PositiveAction}<\/li>\n\t<li>{@link sap.m.semantic.NegativeAction}<\/li>\n\t<li>{@link sap.m.semantic.ForwardAction}<\/li>\n\t<li>{@link sap.m.semantic.EditAction}<\/li>\n\t<li>{@link sap.m.semantic.SaveAction}<\/li>\n\t<li>{@link sap.m.semantic.DeleteAction}<\/li>\n\t<li>{@link sap.m.semantic.CancelAction}<\/li>\n\t<li>{@link sap.m.semantic.FlagAction}<\/li>\n\t<li>{@link sap.m.semantic.FavoriteAction}<\/li>\n\t<li>{@link sap.m.semantic.OpenInAction}<\/li>\n\t<li>{@link sap.m.semantic.DiscussInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.ShareInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.SendEmailAction}<\/li>\n\t<li>{@link sap.m.semantic.SendMessageAction}<\/li>\n\t<li>{@link sap.m.semantic.PrintAction}<\/li>\n\t<li>{@link sap.m.semantic.MessagesIndicator}<\/li>\n\t<li>{@link sap.m.DraftIndicator}<\/li>\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.DiscussInJamAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"DiscussInJamAction","Experimental":false,"module":"sap/m/semantic/DiscussInJamAction","description":"DiscussInJamAction(sId?, mSettings?) : sap.m.semantic.DiscussInJamAction","constructorDescription":"Constructor for a new DiscussInJamAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.DiscussInJamAction","helpDescription":"A DiscussInJamAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.EditAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"EditAction","Experimental":false,"module":"sap/m/semantic/EditAction","description":"EditAction(sId?, mSettings?) : sap.m.semantic.EditAction","constructorDescription":"Constructor for a new EditAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.EditAction","helpDescription":"An EditAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.FavoriteAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","static":"true","prefix":"FavoriteAction","Experimental":false,"module":"sap/m/semantic/FavoriteAction","description":"FavoriteAction(sId?, mSettings?) : sap.m.semantic.FavoriteAction","constructorDescription":"Constructor for a new FavoriteAction.","extends":"sap.m.semantic.SemanticToggleButton","Deprecated":false,"name":"sap.m.semantic.FavoriteAction","helpDescription":"A FavoriteAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.FilterAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"FilterAction","Experimental":false,"module":"sap/m/semantic/FilterAction","description":"FilterAction(sId?, mSettings?) : sap.m.semantic.FilterAction","constructorDescription":"Constructor for a new FilterAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.FilterAction","helpDescription":"A FilterAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.FilterSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"FilterSelect","Experimental":false,"module":"sap/m/semantic/FilterSelect","description":"FilterSelect(sId?, mSettings?) : sap.m.semantic.FilterSelect","constructorDescription":"Constructor for a new FilterSelect.","extends":"sap.m.semantic.SemanticSelect","Deprecated":false,"name":"sap.m.semantic.FilterSelect","helpDescription":"A FilterSelect button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.FlagAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","static":"true","prefix":"FlagAction","Experimental":false,"module":"sap/m/semantic/FlagAction","description":"FlagAction(sId?, mSettings?) : sap.m.semantic.FlagAction","constructorDescription":"Constructor for a new FlagAction.","extends":"sap.m.semantic.SemanticToggleButton","Deprecated":false,"name":"sap.m.semantic.FlagAction","helpDescription":"A FlagAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.ForwardAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ForwardAction","Experimental":false,"module":"sap/m/semantic/ForwardAction","description":"ForwardAction(sId?, mSettings?) : sap.m.semantic.ForwardAction","constructorDescription":"Constructor for a new ForwardAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.ForwardAction","helpDescription":"A ForwardAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.FullscreenPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this], // function|array\n\t\tcustomShareMenuContent: [${customShareMenuContent}], // sap.m.Button[]\n\t\taddAction: ${addAction}, // sap.m.semantic.AddAction\n\t\tmainAction: ${mainAction}, // sap.m.semantic.MainAction\n\t\tpositiveAction: ${positiveAction}, // sap.m.semantic.PositiveAction\n\t\tnegativeAction: ${negativeAction}, // sap.m.semantic.NegativeAction\n\t\tforwardAction: ${forwardAction}, // sap.m.semantic.ForwardAction\n\t\teditAction: ${editAction}, // sap.m.semantic.EditAction\n\t\tsaveAction: ${saveAction}, // sap.m.semantic.SaveAction\n\t\tdeleteAction: ${deleteAction}, // sap.m.semantic.DeleteAction\n\t\tcancelAction: ${cancelAction}, // sap.m.semantic.CancelAction\n\t\tflagAction: ${flagAction}, // sap.m.semantic.FlagAction\n\t\tfavoriteAction: ${favoriteAction}, // sap.m.semantic.FavoriteAction\n\t\topenInAction: ${openInAction}, // sap.m.semantic.OpenInAction\n\t\tdiscussInJamAction: ${discussInJamAction}, // sap.m.semantic.DiscussInJamAction\n\t\tshareInJamAction: ${shareInJamAction}, // sap.m.semantic.ShareInJamAction\n\t\tsendEmailAction: ${sendEmailAction}, // sap.m.semantic.SendEmailAction\n\t\tsendMessageAction: ${sendMessageAction}, // sap.m.semantic.SendMessageAction\n\t\tprintAction: ${printAction}, // sap.m.semantic.PrintAction\n\t\tmessagesIndicator: ${messagesIndicator}, // sap.m.semantic.MessagesIndicator\n\t\tsaveAsTileAction: ${saveAsTileAction}, // sap.m.Button\n\t\tpagingAction: ${pagingAction}, // sap.m.PagingButton\n\t\tdraftIndicator: ${draftIndicator} // sap.m.DraftIndicator\n\t}\n)\n","static":"true","prefix":"FullscreenPage","Experimental":false,"module":"sap/m/semantic/FullscreenPage","description":"FullscreenPage(sId?, mSettings?) : sap.m.semantic.FullscreenPage","constructorDescription":"Constructor for a new FullscreenPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getAddAction addAction} : sap.m.semantic.AddAction<\/li>\n<li>{@link #getMainAction mainAction} : sap.m.semantic.MainAction<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.m.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.m.semantic.NegativeAction<\/li>\n<li>{@link #getForwardAction forwardAction} : sap.m.semantic.ForwardAction<\/li>\n<li>{@link #getEditAction editAction} : sap.m.semantic.EditAction<\/li>\n<li>{@link #getSaveAction saveAction} : sap.m.semantic.SaveAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.m.semantic.DeleteAction<\/li>\n<li>{@link #getCancelAction cancelAction} : sap.m.semantic.CancelAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.m.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.m.semantic.FavoriteAction<\/li>\n<li>{@link #getOpenInAction openInAction} : sap.m.semantic.OpenInAction<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.m.semantic.DiscussInJamAction<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.m.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.m.semantic.SendEmailAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.m.semantic.SendMessageAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.m.semantic.PrintAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.m.semantic.MessagesIndicator<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getPagingAction pagingAction} : sap.m.PagingButton<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.ShareMenuPage#constructor sap.m.semantic.ShareMenuPage}\ncan be used as well.","extends":"sap.m.semantic.ShareMenuPage","Deprecated":false,"name":"sap.m.semantic.FullscreenPage","helpDescription":"A FullscreenPage is a {@link sap.m.semantic.ShareMenuPage} that supports semantic content of the following types:\n\n<ul>\n <li>{@link sap.m.semantic.AddAction}<\/li>\n\t<li>{@link sap.m.semantic.MainAction}<\/li>\n\t<li>{@link sap.m.semantic.PositiveAction}<\/li>\n\t<li>{@link sap.m.semantic.NegativeAction}<\/li>\n\t<li>{@link sap.m.semantic.ForwardAction}<\/li>\n\t<li>{@link sap.m.semantic.EditAction}<\/li>\n\t<li>{@link sap.m.semantic.SaveAction}<\/li>\n\t<li>{@link sap.m.semantic.DeleteAction}<\/li>\n\t<li>{@link sap.m.semantic.CancelAction}<\/li>\n\t<li>{@link sap.m.semantic.FlagAction}<\/li>\n\t<li>{@link sap.m.semantic.FavoriteAction}<\/li>\n\t<li>{@link sap.m.semantic.OpenInAction}<\/li>\n\t<li>{@link sap.m.semantic.DiscussInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.ShareInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.SendEmailAction}<\/li>\n\t<li>{@link sap.m.semantic.SendMessageAction}<\/li>\n\t<li>{@link sap.m.semantic.PrintAction}<\/li>\n\t<li>{@link sap.m.semantic.MessagesIndicator}<\/li>\n\t<li>{@link sap.m.DraftIndicator}<\/li>\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.GroupAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"GroupAction","Experimental":false,"module":"sap/m/semantic/GroupAction","description":"GroupAction(sId?, mSettings?) : sap.m.semantic.GroupAction","constructorDescription":"Constructor for a new GroupAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.GroupAction","helpDescription":"A GroupAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.GroupSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"GroupSelect","Experimental":false,"module":"sap/m/semantic/GroupSelect","description":"GroupSelect(sId?, mSettings?) : sap.m.semantic.GroupSelect","constructorDescription":"Constructor for a new GroupSelect.","extends":"sap.m.semantic.SemanticSelect","Deprecated":false,"name":"sap.m.semantic.GroupSelect","helpDescription":"A GroupSelect button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.MainAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","static":"true","prefix":"MainAction","Experimental":false,"module":"sap/m/semantic/MainAction","description":"MainAction(sId?, mSettings?) : sap.m.semantic.MainAction","constructorDescription":"Constructor for a new MainAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.MainAction","helpDescription":"A MainAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.MasterPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this], // function|array\n\t\taddAction: ${addAction}, // sap.m.semantic.AddAction\n\t\tmainAction: ${mainAction}, // sap.m.semantic.MainAction\n\t\tpositiveAction: ${positiveAction}, // sap.m.semantic.PositiveAction\n\t\tnegativeAction: ${negativeAction}, // sap.m.semantic.NegativeAction\n\t\tmultiSelectAction: ${multiSelectAction}, // sap.m.semantic.MultiSelectAction\n\t\tforwardAction: ${forwardAction}, // sap.m.semantic.ForwardAction\n\t\teditAction: ${editAction}, // sap.m.semantic.EditAction\n\t\tsaveAction: ${saveAction}, // sap.m.semantic.SaveAction\n\t\tdeleteAction: ${deleteAction}, // sap.m.semantic.DeleteAction\n\t\tcancelAction: ${cancelAction}, // sap.m.semantic.CancelAction\n\t\tsort: ${sort}, // sap.m.semantic.ISort\n\t\tfilter: ${filter}, // sap.m.semantic.IFilter\n\t\tgroup: ${group}, // sap.m.semantic.IGroup\n\t\tmessagesIndicator: ${messagesIndicator} // sap.m.semantic.MessagesIndicator\n\t}\n)\n","static":"true","prefix":"MasterPage","Experimental":false,"module":"sap/m/semantic/MasterPage","description":"MasterPage(sId?, mSettings?) : sap.m.semantic.MasterPage","constructorDescription":"Constructor for a new MasterPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getAddAction addAction} : sap.m.semantic.AddAction<\/li>\n<li>{@link #getMainAction mainAction} : sap.m.semantic.MainAction<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.m.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.m.semantic.NegativeAction<\/li>\n<li>{@link #getMultiSelectAction multiSelectAction} : sap.m.semantic.MultiSelectAction<\/li>\n<li>{@link #getForwardAction forwardAction} : sap.m.semantic.ForwardAction<\/li>\n<li>{@link #getEditAction editAction} : sap.m.semantic.EditAction<\/li>\n<li>{@link #getSaveAction saveAction} : sap.m.semantic.SaveAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.m.semantic.DeleteAction<\/li>\n<li>{@link #getCancelAction cancelAction} : sap.m.semantic.CancelAction<\/li>\n<li>{@link #getSort sort} : sap.m.semantic.ISort<\/li>\n<li>{@link #getFilter filter} : sap.m.semantic.IFilter<\/li>\n<li>{@link #getGroup group} : sap.m.semantic.IGroup<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.m.semantic.MessagesIndicator<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticPage#constructor sap.m.semantic.SemanticPage}\ncan be used as well.","extends":"sap.m.semantic.SemanticPage","Deprecated":false,"name":"sap.m.semantic.MasterPage","helpDescription":"A MasterPage is a {@link sap.m.semantic.SemanticPage} that supports semantic content of the following types:\n\n<ul>\n\t<li>{@link sap.m.semantic.AddAction}<\/li>\n\t<li>{@link sap.m.semantic.MainAction}<\/li>\n\t<li>{@link sap.m.semantic.PositiveAction}<\/li>\n\t<li>{@link sap.m.semantic.NegativeAction}<\/li>\n\t<li>{@link sap.m.semantic.ForwardAction}<\/li>\n\t<li>{@link sap.m.semantic.EditAction}<\/li>\n\t<li>{@link sap.m.semantic.SaveAction}<\/li>\n\t<li>{@link sap.m.semantic.DeleteAction}<\/li>\n\t<li>{@link sap.m.semantic.CancelAction}<\/li>\n\t<li>{@link sap.m.semantic.MultiSelectAction}<\/li>\n\t<li>{@link sap.m.semantic.FlagAction}<\/li>\n\t<li>{@link sap.m.semantic.FavoriteAction}<\/li>\n\t<li>{@link sap.m.semantic.SortAction}<\/li>\n\t<li>{@link sap.m.semantic.SortSelect}<\/li>\n\t<li>{@link sap.m.semantic.FilterAction}<\/li>\n\t<li>{@link sap.m.semantic.FilterSelect}<\/li>\n\t<li>{@link sap.m.semantic.GroupAction}<\/li>\n\t<li>{@link sap.m.semantic.GroupSelect}<\/li>\n\t<li>{@link sap.m.semantic.MessagesIndicator}<\/li>\n<\/ul>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.MessagesIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"MessagesIndicator","Experimental":false,"module":"sap/m/semantic/MessagesIndicator","description":"MessagesIndicator(sId?, mSettings?) : sap.m.semantic.MessagesIndicator","constructorDescription":"Constructor for a new MessagesIndicator.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.MessagesIndicator","helpDescription":"A MessagesIndicator button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.MultiSelectAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","static":"true","prefix":"MultiSelectAction","Experimental":false,"module":"sap/m/semantic/MultiSelectAction","description":"MultiSelectAction(sId?, mSettings?) : sap.m.semantic.MultiSelectAction","constructorDescription":"Constructor for a new MultiSelectAction.","extends":"sap.m.semantic.SemanticToggleButton","Deprecated":false,"name":"sap.m.semantic.MultiSelectAction","helpDescription":"A MultiSelectAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.NegativeAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","static":"true","prefix":"NegativeAction","Experimental":false,"module":"sap/m/semantic/NegativeAction","description":"NegativeAction(sId?, mSettings?) : sap.m.semantic.NegativeAction","constructorDescription":"Constructor for a new NegativeAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.NegativeAction","helpDescription":"A NegativeAction button has default semantic-specific properties and\nis eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.OpenInAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"OpenInAction","Experimental":false,"module":"sap/m/semantic/OpenInAction","description":"OpenInAction(sId?, mSettings?) : sap.m.semantic.OpenInAction","constructorDescription":"Constructor for a new OpenInAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.OpenInAction","helpDescription":"An OpenInAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.PositiveAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","static":"true","prefix":"PositiveAction","Experimental":false,"module":"sap/m/semantic/PositiveAction","description":"PositiveAction(sId?, mSettings?) : sap.m.semantic.PositiveAction","constructorDescription":"Constructor for a new PositiveAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.PositiveAction","helpDescription":"A PositiveAction button has default semantic-specific properties and\nis eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.PrintAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"PrintAction","Experimental":false,"module":"sap/m/semantic/PrintAction","description":"PrintAction(sId?, mSettings?) : sap.m.semantic.PrintAction","constructorDescription":"Constructor for a new PrintAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.PrintAction","helpDescription":"A PrintAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SaveAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SaveAction","Experimental":false,"module":"sap/m/semantic/SaveAction","description":"SaveAction(sId?, mSettings?) : sap.m.semantic.SaveAction","constructorDescription":"Constructor for a new SaveAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.SaveAction","helpDescription":"A SaveAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SemanticButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SemanticButton","Experimental":false,"module":"sap/m/semantic/SemanticButton","description":"SemanticButton(sId?, mSettings?) : sap.m.semantic.SemanticButton","constructorDescription":"Constructor for a new SemanticButton.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticControl#constructor sap.m.semantic.SemanticControl}\ncan be used as well.","extends":"sap.m.semantic.SemanticControl","Deprecated":false,"name":"sap.m.semantic.SemanticButton","helpDescription":"A semantic button is either a {@link sap.m.Button} or {@link sap.m.semantic.SemanticOverflowToolbarButton} ,\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SemanticControl(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible} // boolean\n\t}\n)\n","static":"true","prefix":"SemanticControl","Experimental":false,"module":"sap/m/semantic/SemanticControl","description":"SemanticControl(sId?, mSettings?) : sap.m.semantic.SemanticControl","constructorDescription":"Constructor for a new SemanticControl.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","extends":"sap.ui.core.Element","Deprecated":false,"name":"sap.m.semantic.SemanticControl","helpDescription":"A semantic control is an abstraction for either a {@link sap.m.semantic.SemanticButton} or {@link sap.m.semantic.SemanticSelect} ,\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SemanticPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SemanticPage","Experimental":false,"module":"sap/m/semantic/SemanticPage","description":"SemanticPage(sId?, mSettings?) : sap.m.semantic.SemanticPage","constructorDescription":"Constructor for a new SemanticPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getShowSubHeader showSubHeader} : boolean (default: true)<\/li>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: true)<\/li>\n<li>{@link #getFloatingFooter floatingFooter} : boolean (default: false)<\/li>\n<li>{@link #getSemanticRuleSet semanticRuleSet} : sap.m.semantic.SemanticRuleSetType (default: Classic)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getCustomHeaderContent customHeaderContent} : sap.m.Button[]<\/li>\n<li>{@link #getCustomFooterContent customFooterContent} : sap.m.Button[]<\/li>\n<li>{@link #getLandmarkInfo landmarkInfo} : sap.m.PageAccessibleLandmarkInfo<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonPress navButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","extends":"sap.ui.core.Control","Deprecated":false,"name":"sap.m.semantic.SemanticPage","helpDescription":"A semantic page is an enhanced {@link sap.m.Page}, that can contain controls with semantic meaning, see {@link sap.m.semantic.SemanticControl}.\n\n<b>Note:<\/b> This control implements the SAP Fiori 1.0 design guidelines. For SAP Fiori 2.0, see the {@link sap.f.semantic.SemanticPage}.\n\nContent specified in the {@link sap.m.semantic.SemanticPage#semanticControls} aggregations will be automatically positioned in dedicated sections of the footer or the header of the page, depending on the control's semantics.<br>\nFor example, a semantic button of type {@link sap.m.semantic.PositiveAction} will be positioned in the right side of the footer, and in logically correct sequence order with respect to any other included semantic controls.<br>\n\nThe full list of what we internally define for semantic content is:\n <ul>\n     <li>Visual properties (e.g. AddAction will be styled as an icon button)<\/li>\n     <li>Position in the page (UX guidelines specify that some buttons should be in the header only, while others are in the footer or the \"share\" menu, so we do the correct positioning)<\/li>\n     <li>Sequence order (UX guidelines define a specific sequence order of semantic controls with respect to each other)<\/li>\n     <li>Default localized tooltip for icon-only buttons<\/li>\n     <li>Overflow behavior (UX quidelines define which buttons are allowed to go to the overflow of the toolbar when the screen gets narrower). For icon buttons, we ensure that the text label of the button appears when the button is in overflow, as specified by UX.<\/li>\n     <li>Screen reader support (invisible text for reading the semantic type)<\/li>\n <\/ul>\n\nIn addition to the predefined semantic controls, the SemanticPage can host also custom application-provided controls. It preserves most of the API of {@link sap.m.Page} for specifying page content.<br>","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SemanticSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SemanticSelect","Experimental":false,"module":"sap/m/semantic/SemanticSelect","description":"SemanticSelect(sId?, mSettings?) : sap.m.semantic.SemanticSelect","constructorDescription":"Constructor for a new SemanticSelect.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticControl#constructor sap.m.semantic.SemanticControl}\ncan be used as well.","extends":"sap.m.semantic.SemanticControl","Deprecated":false,"name":"sap.m.semantic.SemanticSelect","helpDescription":"A semantic select is a {@link sap.m.Select} eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"fireChange(\n\t{\n\t\tselectedItem: ${selectedItem} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"prefix":"^withoutprefix","Experimental":false,"name":"sap.m.semantic.SemanticSelect.fireChange","description":"fireChange(mParameters?) : sap.m.semantic.SemanticSelect","helpDescription":"Fires event <code>change<\/code> to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SemanticToggleButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","static":"true","prefix":"SemanticToggleButton","Experimental":false,"module":"sap/m/semantic/SemanticToggleButton","description":"SemanticToggleButton(sId?, mSettings?) : sap.m.semantic.SemanticToggleButton","constructorDescription":"Constructor for a new SemanticToggleButton.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.SemanticToggleButton","helpDescription":"A SemanticToggleButton is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SendEmailAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SendEmailAction","Experimental":false,"module":"sap/m/semantic/SendEmailAction","description":"SendEmailAction(sId?, mSettings?) : sap.m.semantic.SendEmailAction","constructorDescription":"Constructor for a new SendEmailAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.SendEmailAction","helpDescription":"A SendEmailAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SendMessageAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SendMessageAction","Experimental":false,"module":"sap/m/semantic/SendMessageAction","description":"SendMessageAction(sId?, mSettings?) : sap.m.semantic.SendMessageAction","constructorDescription":"Constructor for a new SendMessageAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.SendMessageAction","helpDescription":"A SendMessageAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.ShareInJamAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"ShareInJamAction","Experimental":false,"module":"sap/m/semantic/ShareInJamAction","description":"ShareInJamAction(sId?, mSettings?) : sap.m.semantic.ShareInJamAction","constructorDescription":"Constructor for a new ShareInJamAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.ShareInJamAction","helpDescription":"A ShareInJamAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.ShareMenuPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this], // function|array\n\t\tcustomShareMenuContent: [${customShareMenuContent}] // sap.m.Button[]\n\t}\n)\n","static":"true","prefix":"ShareMenuPage","Experimental":false,"module":"sap/m/semantic/ShareMenuPage","description":"ShareMenuPage(sId?, mSettings?) : sap.m.semantic.ShareMenuPage","constructorDescription":"Constructor for a new ShareMenuPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomShareMenuContent customShareMenuContent} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticPage#constructor sap.m.semantic.SemanticPage}\ncan be used as well.","extends":"sap.m.semantic.SemanticPage","Deprecated":false,"name":"sap.m.semantic.ShareMenuPage","helpDescription":"A ShareMenuPage is a {@link sap.m.semantic.SemanticPage} with support for \"share\" menu in the footer.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SortAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SortAction","Experimental":false,"module":"sap/m/semantic/SortAction","description":"SortAction(sId?, mSettings?) : sap.m.semantic.SortAction","constructorDescription":"Constructor for a new SortAction.","extends":"sap.m.semantic.SemanticButton","Deprecated":false,"name":"sap.m.semantic.SortAction","helpDescription":"A SortAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}},{"template":"new sap.m.semantic.SortSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","static":"true","prefix":"SortSelect","Experimental":false,"module":"sap/m/semantic/SortSelect","description":"SortSelect(sId?, mSettings?) : sap.m.semantic.SortSelect","constructorDescription":"Constructor for a new SortSelect.","extends":"sap.m.semantic.SemanticSelect","Deprecated":false,"name":"sap.m.semantic.SortSelect","helpDescription":"A SortSelect button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","category":"constructor","DeprecatedInfo":{"isDeprecated":false}}],"!version":"1.18.0"}