{"!name":"sap.f","!version":"1.18.0","!define":{"sap.f.FlexibleColumnLayoutSemanticHelper_obj":{"!type":"fn(oFlexibleColumnLayout: sap.f.FlexibleColumnLayout, oSettings: Object)","prototype":"sap.f.FlexibleColumnLayoutSemanticHelper"},"sap.f.semantic.CloseAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.CloseAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.CloseAction"},"sap.f.AvatarType":{"!description":"Types of {@link sap.f.Avatar} based on the displayed content.","!module":"sap/f/library","!category":"static class","Icon":{"!description":"The displayed content is an icon.","!category":"enum","!type":"String"},"Image":{"!description":"The displayed content is an image.","!category":"enum","!type":"String"},"Initials":{"!description":"The displayed content is initials.","!category":"enum","!type":"String"}},"sap.f.DynamicPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPage with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPage"},"sap.f.routing.Router_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.Router with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Router.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oRoutes?: [Object | Object], oOwner?: sap.ui.core.UIComponent, oTargetsConfig?: Object)","prototype":"sap.f.routing.Router"},"sap.f.semantic.AddAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.AddAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.AddAction"},"sap.f.semantic.PositiveAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.PositiveAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.PositiveAction"},"sap.f.semantic.SemanticPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticPage with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticPage"},"sap.f.FlexibleColumnLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.FlexibleColumnLayout with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.FlexibleColumnLayout"},"sap.f.routing":{"TargetHandler":"sap.f.routing.TargetHandler_obj","Router":"sap.f.routing.Router_obj","Targets":"sap.f.routing.Targets_obj","!category":"namespace"},"sap.f.semantic.DiscussInJamAction":{"!description":"A semantic-specific button, eligible for the <code>discussInJamAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.DiscussInJamAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.DiscussInJamAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>DiscussInJamAction<\/code>.","!module":"sap/f/semantic/DiscussInJamAction","!helpDescription":"A semantic-specific button, eligible for the <code>discussInJamAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.semantic.SendEmailAction":{"!description":"A semantic-specific button, eligible for the <code>sendEmailAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendEmailAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SendEmailAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SendEmailAction<\/code>.","!module":"sap/f/semantic/SendEmailAction","!helpDescription":"A semantic-specific button, eligible for the <code>sendEmailAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.DynamicPageHeader":{"!description":"Header of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageHeader<\/code> control is part of the {@link sap.f.DynamicPage} family\nand is used to serve as header of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageHeader<\/code> can hold any layout control and has  two states - expanded\nand collapsed (snapped). The switching between these states happens when:\n\n<ul><li>the user scrolls below its bottom margin<\/li>\n<li>the user clicks on the {@link sap.f.DynamicPageTitle DynamicPageTitle}<\/li>\n<li>through the {@link sap.f.DynamicPage DynamicPage} property <code>headerExpanded<\/code><\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageHeader<\/code> depends on the behavior of the\ncontent that is displayed.","setPinnable":{"!description":"Sets a new value for property <code>pinnable<\/code>.\r\rDetermines whether the header is pinnable.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bPinnable: Boolean) -> sap.f.DynamicPageHeader","parameters":{"bPinnable":"type: boolean, description: New value for property <code>pinnable<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPageHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\r\rThe content of the header.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.DynamicPageHeader","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageHeader with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>DynamicPageHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPinnable pinnable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/f/DynamicPageHeader","!helpDescription":"Header of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageHeader<\/code> control is part of the {@link sap.f.DynamicPage} family\nand is used to serve as header of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageHeader<\/code> can hold any layout control and has  two states - expanded\nand collapsed (snapped). The switching between these states happens when:\n\n<ul><li>the user scrolls below its bottom margin<\/li>\n<li>the user clicks on the {@link sap.f.DynamicPageTitle DynamicPageTitle}<\/li>\n<li>through the {@link sap.f.DynamicPage DynamicPage} property <code>headerExpanded<\/code><\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageHeader<\/code> depends on the behavior of the\ncontent that is displayed.","getPinnable":{"!description":"Gets current value of property <code>pinnable<\/code>.\r\rDetermines whether the header is pinnable.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageHeader","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\r             greater than the current size of the aggregation, the content is inserted at\r             the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageHeader"}},"sap.f.semantic.ShareInJamAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.ShareInJamAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.ShareInJamAction"},"sap.f.FlexibleColumnLayout":{"setDefaultTransitionNameBeginColumn":{"!description":"Sets a new value for property <code>defaultTransitionNameBeginColumn<\/code>.\r\rDetermines the type of the transition/animation to apply for the <code>Begin<\/code> column when <code>to()<\/code> is called without defining the\ntransition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameBeginColumn: String) -> sap.f.FlexibleColumnLayout","parameters":{"sDefaultTransitionNameBeginColumn":"type: string, description: New value for property <code>defaultTransitionNameBeginColumn<\/code>"}},"backToPage":{"!description":"Navigates back to a page in the <code>FlexibleColumnLayout<\/code>.\nColumns are scanned for the page in the following order: <code>Begin<\/code>, <code>Mid<\/code>, <code>End<\/code>.\n\nCalling this navigation method, first triggers the (cancelable) navigate event on the SplitContainer,\nthen the beforeHide pseudo event on the source page, beforeFirstShow (if applicable),\nand beforeShow on the target page. Later, after the transition has completed,\nthe afterShow pseudo event is triggered on the target page and afterHide - on the page, which has been left.\nThe given backData object is available in the beforeFirstShow, beforeShow, and afterShow event objects as data\nproperty. The original \"data\" object from the \"to\" navigation is also available in these event objects.","!static":false,"!category":"function","!type":"fn(sPageId: String, oBackData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","sPageId":"type: string, description: The screen to which is being navigated to. The ID or the control itself can be given.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation.\n        The event on the target page will contain this data object as backData property. (the original data from the to() navigation will still be available as data property).\n\n        In scenarios, where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used, for example, when returning from a detail page to transfer any settings done there.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."}},"getDefaultTransitionNameEndColumn":{"!description":"Gets current value of property <code>defaultTransitionNameEndColumn<\/code>.\r\rDetermines the type of the transition/animation to apply for the <code>End<\/code> column when <code>to()<\/code> is called without defining the\ntransition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\r\rDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setInitialEndColumnPage":{"!description":"Sets the associated <code>initialEndColumnPage<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialEndColumnPage: sap.ui.core.ID | sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oInitialEndColumnPage":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialEndColumnPage association; alternatively, an element instance may be given"}},"setLayout":{"!description":"Sets a new value for property <code>layout<\/code>.\r\rDetermines the layout of the control - number of visible columns and their relative sizes\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>OneColumn<\/code>.","!static":false,"!category":"function","!type":"fn(sLayout: sap.f.LayoutType) -> sap.f.FlexibleColumnLayout","parameters":{"sLayout":"type: sap.f.LayoutType, description: New value for property <code>layout<\/code>"}},"backToTopBeginColumn":{"!description":"Navigates back to the initial/top level of Begin column (this is the element aggregated as \"initialPage\", or the first added element).\nNOTE: If already on the initial page, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameter: Object) -> sap.ui.core.Control","parameters":{"oTransitionParameter":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"detachEndColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>endColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllBeginColumnPages":{"!description":"Removes all the controls from the aggregation <code>beginColumnPages<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireAfterEndColumnNavigate":{"!description":"Fires event <code>afterEndColumnNavigate<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireEndColumnNavigate":{"!description":"Fires event <code>endColumnNavigate<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMaxColumnsCount":{"!description":"Returns the maximum number of columns that can be displayed at once based on the control width","!static":false,"!category":"function","!type":"fn() -> Number"},"setInitialBeginColumnPage":{"!description":"Sets the associated <code>initialBeginColumnPage<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialBeginColumnPage: sap.ui.core.ID | sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oInitialBeginColumnPage":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialBeginColumnPage association; alternatively, an element instance may be given"}},"removeAllMidColumnPages":{"!description":"Removes all the controls from the aggregation <code>midColumnPages<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.\n\n<h3>Overview<\/h3>\n\nThe control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling\nthree columns (referred to as <code>Begin<\/code>, <code>Mid<\/code> and <code>End<\/code>) rather than two\n(<code>Master<\/code>, <code>Detail<\/code>). The width of the three columns is variable.\n\nThere are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows.\n\nInternally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.\n\n<h3>Usage<\/h3>\n\nUse this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.).\nThe control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.\n\nThe columns are accessible with the <code>beginColumnPages<\/code>, <code>midColumnPages<\/code> and <code>endColumnPages<\/code> aggregations.\n\nThe relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.\n\nChanges to the layout due to user interaction are communicated to the app with the <code>stateChange<\/code> event.\n\n<ul><b>Notes:<\/b>\n<li>To easily implement the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app,\nyou can use the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class.<\/li>\n<li>To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} <\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe control automatically displays the maximum possible number of columns based on the device size and current <code>layout<\/code>.\nThe app does not need to take into consideration the current device/screen size, but only to add content to the\ncolumns and change the value of the <code>layout<\/code> property.\n\nFor detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.","getMetadata":{"!description":"Returns a metadata object for class sap.f.FlexibleColumnLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachStateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>stateChange<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachAfterMidColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterMidColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachStateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>stateChange<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\r\rFired when there is a change in the <code>layout<\/code> property or in the maximum number of columns that can be displayed at once.\n<br/><\/br>\n<ul>The interactions that may lead to a state change are:\n <li>the property <code>layout<\/code> was changed indirectly by the user clicking a layout arrow<\/li>\n <li>the user resized the browser beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.<\/li><\/ul>\n<br/><br/>\n<b>Note: <\/b>The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDefaultTransitionNameBeginColumn":{"!description":"Gets current value of property <code>defaultTransitionNameBeginColumn<\/code>.\r\rDetermines the type of the transition/animation to apply for the <code>Begin<\/code> column when <code>to()<\/code> is called without defining the\ntransition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\r\rDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllEndColumnPages":{"!description":"Removes all the controls from the aggregation <code>endColumnPages<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"indexOfBeginColumnPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>beginColumnPages<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBeginColumnPage: sap.ui.core.Control) -> Number","parameters":{"oBeginColumnPage":"type: sap.ui.core.Control, description: The beginColumnPage whose index is looked for"}},"indexOfEndColumnPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>endColumnPages<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oEndColumnPage: sap.ui.core.Control) -> Number","parameters":{"oEndColumnPage":"type: sap.ui.core.Control, description: The endColumnPage whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.f.FlexibleColumnLayout with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getDefaultTransitionNameMidColumn":{"!description":"Gets current value of property <code>defaultTransitionNameMidColumn<\/code>.\r\rDetermines the type of the transition/animation to apply for the <code>Mid<\/code> column when <code>to()<\/code> is called without defining the\ntransition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\r\rDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"toMidColumnPage":{"!description":"Navigates to a given Mid column page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"removeBeginColumnPage":{"!description":"Removes a beginColumnPage from the aggregation <code>beginColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn(vBeginColumnPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vBeginColumnPage":"type: int|string|sap.ui.core.Control, description: The beginColumnPage to remove or its index or id"}},"!module":"sap/f/FlexibleColumnLayout","fireMidColumnNavigate":{"!description":"Fires event <code>midColumnNavigate<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!helpDescription":"Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.\n\n<h3>Overview<\/h3>\n\nThe control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling\nthree columns (referred to as <code>Begin<\/code>, <code>Mid<\/code> and <code>End<\/code>) rather than two\n(<code>Master<\/code>, <code>Detail<\/code>). The width of the three columns is variable.\n\nThere are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows.\n\nInternally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.\n\n<h3>Usage<\/h3>\n\nUse this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.).\nThe control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.\n\nThe columns are accessible with the <code>beginColumnPages<\/code>, <code>midColumnPages<\/code> and <code>endColumnPages<\/code> aggregations.\n\nThe relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.\n\nChanges to the layout due to user interaction are communicated to the app with the <code>stateChange<\/code> event.\n\n<ul><b>Notes:<\/b>\n<li>To easily implement the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app,\nyou can use the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class.<\/li>\n<li>To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} <\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe control automatically displays the maximum possible number of columns based on the device size and current <code>layout<\/code>.\nThe app does not need to take into consideration the current device/screen size, but only to add content to the\ncolumns and change the value of the <code>layout<\/code> property.\n\nFor detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.","insertMidColumnPage":{"!description":"Inserts a midColumnPage into the aggregation <code>midColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn(oMidColumnPage: sap.ui.core.Control, iIndex: Number) -> sap.f.FlexibleColumnLayout","parameters":{"oMidColumnPage":"type: sap.ui.core.Control, description: the midColumnPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the midColumnPage should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the midColumnPage is inserted at position 0; for a value\r             greater than the current size of the aggregation, the midColumnPage is inserted at\r             the last position"}},"destroyMidColumnPages":{"!description":"Destroys all the midColumnPages in the aggregation <code>midColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.FlexibleColumnLayout"},"getEndColumnPages":{"!description":"Gets content of aggregation <code>endColumnPages<\/code>.\r\rThe content entities between which the <code>FlexibleColumnLayout<\/code> navigates in the <code>End<\/code> column.\n\nThese should be any control with page semantics.\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getBeginColumnPages":{"!description":"Gets content of aggregation <code>beginColumnPages<\/code>.\r\rThe content entities between which the <code>FlexibleColumnLayout<\/code> navigates in the <code>Begin<\/code> column.\n\nThese should be any control with page semantics.\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachBeginColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beginColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\r\rFires when navigation between two pages in the <code>Begin<\/code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireStateChange":{"!description":"Fires event <code>stateChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachMidColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>midColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addMidColumnPage":{"!description":"Adds some midColumnPage to the aggregation <code>midColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn(oMidColumnPage: sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oMidColumnPage":"type: sap.ui.core.Control, description: the midColumnPage to add; if empty, nothing is inserted"}},"getCurrentEndColumnPage":{"!description":"Returns the currently displayed End column page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Control","fireAfterMidColumnNavigate":{"!description":"Fires event <code>afterMidColumnNavigate<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"backToTopMidColumn":{"!description":"Navigates back to the initial/top level of Mid column (this is the element aggregated as \"initialPage\", or the first added element).\nNOTE: If already on the initial page, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameter: Object) -> sap.ui.core.Control","parameters":{"oTransitionParameter":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"!category":"class","insertBeginColumnPage":{"!description":"Inserts a beginColumnPage into the aggregation <code>beginColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn(oBeginColumnPage: sap.ui.core.Control, iIndex: Number) -> sap.f.FlexibleColumnLayout","parameters":{"oBeginColumnPage":"type: sap.ui.core.Control, description: the beginColumnPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the beginColumnPage should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the beginColumnPage is inserted at position 0; for a value\r             greater than the current size of the aggregation, the beginColumnPage is inserted at\r             the last position"}},"getInitialBeginColumnPage":{"!description":"ID of the element which is the current target of the association <code>initialBeginColumnPage<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"destroyEndColumnPages":{"!description":"Destroys all the endColumnPages in the aggregation <code>endColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.FlexibleColumnLayout"},"getLayout":{"!description":"Gets current value of property <code>layout<\/code>.\r\rDetermines the layout of the control - number of visible columns and their relative sizes\r\rDefault value is <code>OneColumn<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.LayoutType"},"!constructorDescription":"Constructor for a new <code>sap.f.FlexibleColumnLayout<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLayout layout} : sap.f.LayoutType (default: OneColumn)<\/li>\n<li>{@link #getDefaultTransitionNameBeginColumn defaultTransitionNameBeginColumn} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameMidColumn defaultTransitionNameMidColumn} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameEndColumn defaultTransitionNameEndColumn} : string (default: slide)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBeginColumnPages beginColumnPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getMidColumnPages midColumnPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getEndColumnPages endColumnPages} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialBeginColumnPage initialBeginColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialMidColumnPage initialMidColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialEndColumnPage initialEndColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stateChange stateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beginColumnNavigate beginColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:midColumnNavigate midColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMidColumnNavigate afterMidColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:endColumnNavigate endColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterEndColumnNavigate afterEndColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachAfterMidColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterMidColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\r\rFires when navigation between two pages in the <code>Mid<\/code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getInitialEndColumnPage":{"!description":"ID of the element which is the current target of the association <code>initialEndColumnPage<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"attachAfterBeginColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterBeginColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\r\rFires when navigation between two pages in the <code>Begin<\/code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachEndColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>endColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\r\rFires when navigation between two pages in the <code>End<\/code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeMidColumnPage":{"!description":"Removes a midColumnPage from the aggregation <code>midColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn(vMidColumnPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vMidColumnPage":"type: int|string|sap.ui.core.Control, description: The midColumnPage to remove or its index or id"}},"getInitialMidColumnPage":{"!description":"ID of the element which is the current target of the association <code>initialMidColumnPage<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"backToTopEndColumn":{"!description":"Navigates back to the initial/top level of End column (this is the element aggregated as \"initialPage\", or the first added element).\nNOTE: If already on the initial page, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameter: Object) -> sap.ui.core.Control","parameters":{"oTransitionParameter":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"indexOfMidColumnPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>midColumnPages<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMidColumnPage: sap.ui.core.Control) -> Number","parameters":{"oMidColumnPage":"type: sap.ui.core.Control, description: The midColumnPage whose index is looked for"}},"setDefaultTransitionNameMidColumn":{"!description":"Sets a new value for property <code>defaultTransitionNameMidColumn<\/code>.\r\rDetermines the type of the transition/animation to apply for the <code>Mid<\/code> column when <code>to()<\/code> is called without defining the\ntransition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameMidColumn: String) -> sap.f.FlexibleColumnLayout","parameters":{"sDefaultTransitionNameMidColumn":"type: string, description: New value for property <code>defaultTransitionNameMidColumn<\/code>"}},"destroyBeginColumnPages":{"!description":"Destroys all the beginColumnPages in the aggregation <code>beginColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.FlexibleColumnLayout"},"toBeginColumnPage":{"!description":"Navigates to a given Begin column page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"toEndColumnPage":{"!description":"Navigates to a given End column page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"getMidColumnPages":{"!description":"Gets content of aggregation <code>midColumnPages<\/code>.\r\rThe content entities between which the <code>FlexibleColumnLayout<\/code> navigates in the <code>Mid<\/code> column.\n\nThese should be any control with page semantics.\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"insertEndColumnPage":{"!description":"Inserts a endColumnPage into the aggregation <code>endColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn(oEndColumnPage: sap.ui.core.Control, iIndex: Number) -> sap.f.FlexibleColumnLayout","parameters":{"oEndColumnPage":"type: sap.ui.core.Control, description: the endColumnPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the endColumnPage should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the endColumnPage is inserted at position 0; for a value\r             greater than the current size of the aggregation, the endColumnPage is inserted at\r             the last position"}},"removeEndColumnPage":{"!description":"Removes a endColumnPage from the aggregation <code>endColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn(vEndColumnPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vEndColumnPage":"type: int|string|sap.ui.core.Control, description: The endColumnPage to remove or its index or id"}},"fireAfterBeginColumnNavigate":{"!description":"Fires event <code>afterBeginColumnNavigate<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachAfterBeginColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterBeginColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setDefaultTransitionNameEndColumn":{"!description":"Sets a new value for property <code>defaultTransitionNameEndColumn<\/code>.\r\rDetermines the type of the transition/animation to apply for the <code>End<\/code> column when <code>to()<\/code> is called without defining the\ntransition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameEndColumn: String) -> sap.f.FlexibleColumnLayout","parameters":{"sDefaultTransitionNameEndColumn":"type: string, description: New value for property <code>defaultTransitionNameEndColumn<\/code>"}},"getCurrentMidColumnPage":{"!description":"Returns the currently displayed Mid column page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"detachAfterEndColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterEndColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setInitialMidColumnPage":{"!description":"Sets the associated <code>initialMidColumnPage<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialMidColumnPage: sap.ui.core.ID | sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oInitialMidColumnPage":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialMidColumnPage association; alternatively, an element instance may be given"}},"attachAfterEndColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterEndColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\r\rFires when navigation between two pages in the <code>End<\/code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachMidColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>midColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\r\rFires when navigation between two pages in the <code>Mid<\/code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireBeginColumnNavigate":{"!description":"Fires event <code>beginColumnNavigate<\/code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getCurrentBeginColumnPage":{"!description":"Returns the currently displayed Begin column page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"addBeginColumnPage":{"!description":"Adds some beginColumnPage to the aggregation <code>beginColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn(oBeginColumnPage: sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oBeginColumnPage":"type: sap.ui.core.Control, description: the beginColumnPage to add; if empty, nothing is inserted"}},"addEndColumnPage":{"!description":"Adds some endColumnPage to the aggregation <code>endColumnPages<\/code>.","!static":false,"!category":"function","!type":"fn(oEndColumnPage: sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oEndColumnPage":"type: sap.ui.core.Control, description: the endColumnPage to add; if empty, nothing is inserted"}},"to":{"!description":"Navigates to the given page inside the FlexibleColumnLayout.\nColumns are scanned for the page in the following order: <code>Begin<\/code>, <code>Mid<\/code>, <code>End<\/code>.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the \"data\" parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: It depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which we are navigating to. The ID or the control itself can be given."}},"detachBeginColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beginColumnNavigate<\/code> event of this <code>sap.f.FlexibleColumnLayout<\/code>.\r\rThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.f.semantic.NegativeAction":{"!description":"A semantic-specific button, eligible for the <code>negativeAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.NegativeAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.NegativeAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>NegativeAction<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link <code>sap.f.semantic.SemanticButton<\/code>#constructor <code>sap.f.semantic.SemanticButton<\/code>}\ncan be used as well.","!module":"sap/f/semantic/NegativeAction","!helpDescription":"A semantic-specific button, eligible for the <code>negativeAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.","getText":{"!description":"Gets current value of property <code>text<\/code>.\r\rDefines <code>NegativeAction<\/code> text.\n<b>Note:<\/b> the default text is \"Reject\"","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class","setText":{"!description":"Sets a new value for property <code>text<\/code>.\r\rDefines <code>NegativeAction<\/code> text.\n<b>Note:<\/b> the default text is \"Reject\"\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.f.semantic.NegativeAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.f.Avatar":{"setCustomFontSize":{"!description":"Sets a new value for property <code>customFontSize<\/code>.\r\rSpecifies custom font size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>1.125rem<\/code>.","!static":false,"!category":"function","!type":"fn(sCustomFontSize: sap.ui.core.CSSSize) -> sap.f.Avatar","parameters":{"sCustomFontSize":"type: sap.ui.core.CSSSize, description: New value for property <code>customFontSize<\/code>"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"setImageFitType":{"!description":"Sets a new value for property <code>imageFitType<\/code>.\r\rSpecifies how an image would fit in the <code>Avatar<\/code>.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>Cover<\/code>.","!static":false,"!category":"function","!type":"fn(sImageFitType: sap.f.AvatarImageFitType) -> sap.f.Avatar","parameters":{"sImageFitType":"type: sap.f.AvatarImageFitType, description: New value for property <code>imageFitType<\/code>"}},"getInitials":{"!description":"Gets current value of property <code>initials<\/code>.\r\rDefines the displayed initials.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","getImageFitType":{"!description":"Gets current value of property <code>imageFitType<\/code>.\r\rSpecifies how an image would fit in the <code>Avatar<\/code>.\r\rDefault value is <code>Cover<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.AvatarImageFitType"},"setDisplaySize":{"!description":"Sets a new value for property <code>displaySize<\/code>.\r\rSets a predefined display size of the <code>Avatar<\/code>.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>S<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplaySize: sap.f.AvatarSize) -> sap.f.Avatar","parameters":{"sDisplaySize":"type: sap.f.AvatarSize, description: New value for property <code>displaySize<\/code>"}},"!category":"class","setDisplayShape":{"!description":"Sets a new value for property <code>displayShape<\/code>.\r\rDefines the shape of the <code>Avatar<\/code>.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>Circle<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayShape: sap.f.AvatarShape) -> sap.f.Avatar","parameters":{"sDisplayShape":"type: sap.f.AvatarShape, description: New value for property <code>displayShape<\/code>"}},"!constructorDescription":"Constructor for a new <code>Avatar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getInitials initials} : string<\/li>\n<li>{@link #getDisplayShape displayShape} : sap.f.AvatarShape (default: Circle)<\/li>\n<li>{@link #getDisplaySize displaySize} : sap.f.AvatarSize (default: S)<\/li>\n<li>{@link #getCustomDisplaySize customDisplaySize} : sap.ui.core.CSSSize (default: 3rem)<\/li>\n<li>{@link #getCustomFontSize customFontSize} : sap.ui.core.CSSSize (default: 1.125rem)<\/li>\n<li>{@link #getImageFitType imageFitType} : sap.f.AvatarImageFitType (default: Cover)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getCustomDisplaySize":{"!description":"Gets current value of property <code>customDisplaySize<\/code>.\r\rSpecifies custom display size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.\r\rDefault value is <code>3rem<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.f.Avatar<\/code>.\r\rWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \rotherwise it will be bound to this <code>sap.f.Avatar<\/code> itself.\r\rFired when the user selects the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.Avatar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.Avatar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"An image-like control that has different display options for representing images, initials,\nand icons.\n\n<h3>Overview<\/h3>\n\nThe <code>Avatar<\/code> control allows the usage of different content, shapes, and sizes\ndepending on the use case.\n\nThe content types that can be displayed are either images, icons, or initials. The shape\ncan be circular or square. There are several predefined sizes, as well as an option to\nset a custom size.\n\n<h3>Usage<\/h3>\n\nUp to two Latin letters can be displayed as initials in an <code>Avatar<\/code>. If there\nare more than two letters, or if there's a non-Latin character present, a default image\nplaceholder will be created.\n\nThere are two options for how the displayed image can fit inside the\navailable area:\n<ul>\n<li>Cover - the image is scaled to cover all of the available area<\/li>\n<li>Contain - the image is scaled as large as possible while both\nits height and width fit inside the avalable area<\/li>\n<\/ul>\n<b>Note:<\/b> To set a custom size for the <code>Avatar<\/code>, you have to choose the <code>Custom<\/code>\nvalue for the <code>displaySize<\/code> property. Then, you have to set both the\n<code>customDisplaySize<\/code> and <code>customFontSize<\/code> properties.","setSrc":{"!description":"Sets a new value for property <code>src<\/code>.\r\rDetermines the path to the desired image or icon.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSrc: sap.ui.core.URI) -> sap.f.Avatar","parameters":{"sSrc":"type: sap.ui.core.URI, description: New value for property <code>src<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.Avatar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSrc":{"!description":"Gets current value of property <code>src<\/code>.\r\rDetermines the path to the desired image or icon.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getDisplaySize":{"!description":"Gets current value of property <code>displaySize<\/code>.\r\rSets a predefined display size of the <code>Avatar<\/code>.\r\rDefault value is <code>S<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.AvatarSize"},"setInitials":{"!description":"Sets a new value for property <code>initials<\/code>.\r\rDefines the displayed initials.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitials: String) -> sap.f.Avatar","parameters":{"sInitials":"type: string, description: New value for property <code>initials<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.f.Avatar with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.f.Avatar<\/code>.\r\rThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.Avatar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.Avatar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setCustomDisplaySize":{"!description":"Sets a new value for property <code>customDisplaySize<\/code>.\r\rSpecifies custom display size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>3rem<\/code>.","!static":false,"!category":"function","!type":"fn(sCustomDisplaySize: sap.ui.core.CSSSize) -> sap.f.Avatar","parameters":{"sCustomDisplaySize":"type: sap.ui.core.CSSSize, description: New value for property <code>customDisplaySize<\/code>"}},"!module":"sap/f/Avatar","!helpDescription":"An image-like control that has different display options for representing images, initials,\nand icons.\n\n<h3>Overview<\/h3>\n\nThe <code>Avatar<\/code> control allows the usage of different content, shapes, and sizes\ndepending on the use case.\n\nThe content types that can be displayed are either images, icons, or initials. The shape\ncan be circular or square. There are several predefined sizes, as well as an option to\nset a custom size.\n\n<h3>Usage<\/h3>\n\nUp to two Latin letters can be displayed as initials in an <code>Avatar<\/code>. If there\nare more than two letters, or if there's a non-Latin character present, a default image\nplaceholder will be created.\n\nThere are two options for how the displayed image can fit inside the\navailable area:\n<ul>\n<li>Cover - the image is scaled to cover all of the available area<\/li>\n<li>Contain - the image is scaled as large as possible while both\nits height and width fit inside the avalable area<\/li>\n<\/ul>\n<b>Note:<\/b> To set a custom size for the <code>Avatar<\/code>, you have to choose the <code>Custom<\/code>\nvalue for the <code>displaySize<\/code> property. Then, you have to set both the\n<code>customDisplaySize<\/code> and <code>customFontSize<\/code> properties.","getCustomFontSize":{"!description":"Gets current value of property <code>customFontSize<\/code>.\r\rSpecifies custom font size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.\r\rDefault value is <code>1.125rem<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getDisplayShape":{"!description":"Gets current value of property <code>displayShape<\/code>.\r\rDefines the shape of the <code>Avatar<\/code>.\r\rDefault value is <code>Circle<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.AvatarShape"}},"sap.f.semantic.MainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.MainAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.MainAction"},"sap.f.semantic.CopyAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.CopyAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.CopyAction"},"sap.f.semantic.ShareInJamAction":{"!description":"A semantic-specific button, eligible for the <code>shareInJamAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.ShareInJamAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.ShareInJamAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ShareInJamAction<\/code>.","!module":"sap/f/semantic/ShareInJamAction","!helpDescription":"A semantic-specific button, eligible for the <code>shareInJamAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.semantic.FavoriteAction":{"!description":"A semantic-specific button, eligible for the <code>favoriteAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FavoriteAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FavoriteAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FavoriteAction<\/code>.","!module":"sap/f/semantic/FavoriteAction","!helpDescription":"A semantic-specific button, eligible for the <code>favoriteAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.semantic.SemanticControl":{"!description":"The base class for the {@link sap.f.semantic.SemanticButton}.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticControl with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\r\rDetermines whether the <code>SemanticControl<\/code> is visible.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.f.semantic.SemanticControl","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticControl.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SemanticControl<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\r\rDetermines whether the <code>SemanticControl<\/code> is visible.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/f/semantic/SemanticControl","!helpDescription":"The base class for the {@link sap.f.semantic.SemanticButton}.","!proto":"sap.ui.core.Element","!category":"class"},"sap.f.Avatar_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.Avatar with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.Avatar"},"sap.f.semantic.FullScreenAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FullScreenAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FullScreenAction"},"sap.f.semantic.PrintAction":{"!description":"A semantic-specific button, eligible for the <code>printAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.PrintAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.PrintAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>PrintAction<\/code>.","!module":"sap/f/semantic/PrintAction","!helpDescription":"A semantic-specific button, eligible for the <code>printAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.DynamicPage":{"setContent":{"!description":"Sets the aggregated <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.DynamicPage","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\r\r<code>DynamicPage<\/code> content.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getToggleHeaderOnTitleClick":{"!description":"Gets current value of property <code>toggleHeaderOnTitleClick<\/code>.\r\rDetermines whether the the user can switch between the expanded/collapsed states of the\n<code>DynamicPageHeader<\/code> by clicking on the <code>DynamicPageTitle<\/code>. If set to\n<code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable and the application\nmust provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","destroyFooter":{"!description":"Destroys the footer in the aggregation <code>footer<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"setHeader":{"!description":"Sets the aggregated <code>header<\/code>.","!static":false,"!category":"function","!type":"fn(oHeader: sap.f.DynamicPageHeader) -> sap.f.DynamicPage","parameters":{"oHeader":"type: sap.f.DynamicPageHeader, description: The header to set"}},"getHeader":{"!description":"Gets content of aggregation <code>header<\/code>.\r\r<code>DynamicPage<\/code> header.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageHeader"},"setHeaderExpanded":{"!description":"Sets a new value for property <code>headerExpanded<\/code>.\r\rDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware that initially collapsed header state is not supported, so <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderExpanded: Boolean) -> sap.f.DynamicPage","parameters":{"bHeaderExpanded":"type: boolean, description: New value for property <code>headerExpanded<\/code>"}},"!constructorDescription":"Constructor for a new <code>DynamicPage<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll} : boolean (default: false)<\/li>\n<li>{@link #getHeaderExpanded headerExpanded} : boolean (default: true)<\/li>\n<li>{@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: false)<\/li>\n<li>{@link #getFitContent fitContent} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitle title} : sap.f.DynamicPageTitle<\/li>\n<li>{@link #getHeader header} : sap.f.DynamicPageHeader<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<li>{@link #getFooter footer} : sap.m.IBar<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getFitContent":{"!description":"Gets current value of property <code>fitContent<\/code>.\r\rOptimizes <code>DynamicPage<\/code> responsiveness on small screens and behavior\nwhen expanding/collapsing the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content\nof adaptive controls that stretch to fill the available space,\nsuch as {@link sap.ui.table.Table} and  {@link sap.ui.table.AnalyticalTable}.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle":{"!description":"Gets content of aggregation <code>title<\/code>.\r\r<code>DynamicPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"getShowFooter":{"!description":"Gets current value of property <code>showFooter<\/code>.\r\rDetermines whether the footer is visible.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFitContent":{"!description":"Sets a new value for property <code>fitContent<\/code>.\r\rOptimizes <code>DynamicPage<\/code> responsiveness on small screens and behavior\nwhen expanding/collapsing the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content\nof adaptive controls that stretch to fill the available space,\nsuch as {@link sap.ui.table.Table} and  {@link sap.ui.table.AnalyticalTable}.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFitContent: Boolean) -> sap.f.DynamicPage","parameters":{"bFitContent":"type: boolean, description: New value for property <code>fitContent<\/code>"}},"setToggleHeaderOnTitleClick":{"!description":"Sets a new value for property <code>toggleHeaderOnTitleClick<\/code>.\r\rDetermines whether the the user can switch between the expanded/collapsed states of the\n<code>DynamicPageHeader<\/code> by clicking on the <code>DynamicPageTitle<\/code>. If set to\n<code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable and the application\nmust provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bToggleHeaderOnTitleClick: Boolean) -> sap.f.DynamicPage","parameters":{"bToggleHeaderOnTitleClick":"type: boolean, description: New value for property <code>toggleHeaderOnTitleClick<\/code>"}},"getHeaderExpanded":{"!description":"Gets current value of property <code>headerExpanded<\/code>.\r\rDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware that initially collapsed header state is not supported, so <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"getPreserveHeaderStateOnScroll":{"!description":"Gets current value of property <code>preserveHeaderStateOnScroll<\/code>.\r\rPreserves the current header state when scrolling.\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n<br><b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the control`s title and header\nare with height larger than the given threshold.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.\n\n<h3>Overview<\/h3>\n\nThe control consist of several components:\n\n<ul><li>{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading\non the left side, content in the middle, and actions on the right. The displayed\ncontent changes based on the current mode of the {@link sap.f.DynamicPageHeader\nDynamicPageHeader}.<\/li>\n<li>{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which\ncan contain a single layout control and does not care about the content alignment\nand responsiveness. The header works in two modes - expanded and snapped and its\nbehavior can be adjusted with the help of different properties.<\/li>\n<li>Content area - a generic container, which can have a single UI5 layout control\nand does not care about the content alignment and responsiveness.<\/li>\n<li>Footer - positioned at the bottom with a small offset and used for additional\nactions, the footer floats above the content. It can be any {@link sap.m.IBar}\ncontrol.<\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUse the <code>DynamicPage<\/code> if you need to have a title, that is always visible\nand a header, that has configurable Expanding/Snapping functionality.\nIf you don't need the Expanding/Snapping functionality it is better to use the\n{@link sap.m.Page} as a lighter control.\n\n<ul><b>Notes:<\/b>\n<li>If you're displaying a {@link sap.m.FlexBox} with non-adaptive content\n(doesn't stretch to fill the available space), it is recommended to set the\n<code>fitContainer<\/code> property of the {@link sap.m.FlexBox FlexBox} to\n<code>false<\/code>.<\/li>\n<li>If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is\nnon-adaptive and may cause unpredicted behavior for the <code>DynamicPage<\/code>\non smaller screen sizes, such as mobile.<\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPage<\/code> depends on the behavior of\nthe content that is displayed.","setShowFooter":{"!description":"Sets a new value for property <code>showFooter<\/code>.\r\rDetermines whether the footer is visible.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFooter: Boolean) -> sap.f.DynamicPage","parameters":{"bShowFooter":"type: boolean, description: New value for property <code>showFooter<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFooter":{"!description":"Gets content of aggregation <code>footer<\/code>.\r\r<code>DynamicPage<\/code> floating footer.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"setTitle":{"!description":"Sets the aggregated <code>title<\/code>.","!static":false,"!category":"function","!type":"fn(oTitle: sap.f.DynamicPageTitle) -> sap.f.DynamicPage","parameters":{"oTitle":"type: sap.f.DynamicPageTitle, description: The title to set"}},"setPreserveHeaderStateOnScroll":{"!description":"Sets a new value for property <code>preserveHeaderStateOnScroll<\/code>.\r\rPreserves the current header state when scrolling.\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n<br><b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the control`s title and header\nare with height larger than the given threshold.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreserveHeaderStateOnScroll: Boolean) -> sap.f.DynamicPage","parameters":{"bPreserveHeaderStateOnScroll":"type: boolean, description: New value for property <code>preserveHeaderStateOnScroll<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPage with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/f/DynamicPage","!helpDescription":"A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.\n\n<h3>Overview<\/h3>\n\nThe control consist of several components:\n\n<ul><li>{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading\non the left side, content in the middle, and actions on the right. The displayed\ncontent changes based on the current mode of the {@link sap.f.DynamicPageHeader\nDynamicPageHeader}.<\/li>\n<li>{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which\ncan contain a single layout control and does not care about the content alignment\nand responsiveness. The header works in two modes - expanded and snapped and its\nbehavior can be adjusted with the help of different properties.<\/li>\n<li>Content area - a generic container, which can have a single UI5 layout control\nand does not care about the content alignment and responsiveness.<\/li>\n<li>Footer - positioned at the bottom with a small offset and used for additional\nactions, the footer floats above the content. It can be any {@link sap.m.IBar}\ncontrol.<\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUse the <code>DynamicPage<\/code> if you need to have a title, that is always visible\nand a header, that has configurable Expanding/Snapping functionality.\nIf you don't need the Expanding/Snapping functionality it is better to use the\n{@link sap.m.Page} as a lighter control.\n\n<ul><b>Notes:<\/b>\n<li>If you're displaying a {@link sap.m.FlexBox} with non-adaptive content\n(doesn't stretch to fill the available space), it is recommended to set the\n<code>fitContainer<\/code> property of the {@link sap.m.FlexBox FlexBox} to\n<code>false<\/code>.<\/li>\n<li>If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is\nnon-adaptive and may cause unpredicted behavior for the <code>DynamicPage<\/code>\non smaller screen sizes, such as mobile.<\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPage<\/code> depends on the behavior of\nthe content that is displayed.","setFooter":{"!description":"Sets the aggregated <code>footer<\/code>.","!static":false,"!category":"function","!type":"fn(oFooter: sap.m.IBar) -> sap.f.DynamicPage","parameters":{"oFooter":"type: sap.m.IBar, description: The footer to set"}},"destroyHeader":{"!description":"Destroys the header in the aggregation <code>header<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"destroyTitle":{"!description":"Destroys the title in the aggregation <code>title<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"}},"sap.f.semantic.SemanticPage":{"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setDeleteAction":{"!description":"Sets the aggregated <code>deleteAction<\/code>.","!static":false,"!category":"function","!type":"fn(oDeleteAction: sap.f.semantic.DeleteAction) -> sap.f.semantic.SemanticPage","parameters":{"oDeleteAction":"type: sap.f.semantic.DeleteAction, description: The deleteAction to set"}},"insertTitleCustomTextAction":{"!description":"Inserts a titleCustomTextAction into the aggregation <code>titleCustomTextActions<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleCustomTextAction: sap.m.Button, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomTextAction":"type: sap.m.Button, description: the titleCustomTextAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the titleCustomTextAction should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the titleCustomTextAction is inserted at position 0; for a value\r             greater than the current size of the aggregation, the titleCustomTextAction is inserted at\r             the last position"}},"setExitFullScreenAction":{"!description":"Sets the aggregated <code>exitFullScreenAction<\/code>.","!static":false,"!category":"function","!type":"fn(oExitFullScreenAction: sap.f.semantic.ExitFullScreenAction) -> sap.f.semantic.SemanticPage","parameters":{"oExitFullScreenAction":"type: sap.f.semantic.ExitFullScreenAction, description: The exitFullScreenAction to set"}},"setTitleMainAction":{"!description":"Sets the aggregated <code>titleMainAction<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleMainAction: sap.f.semantic.TitleMainAction) -> sap.f.semantic.SemanticPage","parameters":{"oTitleMainAction":"type: sap.f.semantic.TitleMainAction, description: The titleMainAction to set"}},"destroyTitleCustomIconActions":{"!description":"Destroys all the titleCustomIconActions in the aggregation <code>titleCustomIconActions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleSnappedContent":{"!description":"Gets content of aggregation <code>titleSnappedContent<\/code>.\r\rThe content, displayed in the title, when the header is in collapsed state.\n\n<b>Note:<\/b> The controls will be placed in the title`s middle area.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addHeaderContent":{"!description":"Adds some headerContent to the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: the headerContent to add; if empty, nothing is inserted"}},"getPositiveAction":{"!description":"Gets content of aggregation <code>positiveAction<\/code>.\r\rA semantic-specific button which is placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code>\nfooter with default text value set to <code>Accept<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.PositiveAction"},"removeAllTitleCustomIconActions":{"!description":"Removes all the controls from the aggregation <code>titleCustomIconActions<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.OverflowToolbarButton]"},"getSendEmailAction":{"!description":"Gets content of aggregation <code>sendEmailAction<\/code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SendEmailAction"},"setShareInJamAction":{"!description":"Sets the aggregated <code>shareInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn(oShareInJamAction: sap.f.semantic.ShareInJamAction) -> sap.f.semantic.SemanticPage","parameters":{"oShareInJamAction":"type: sap.f.semantic.ShareInJamAction, description: The shareInJamAction to set"}},"removeTitleCustomTextAction":{"!description":"Removes a titleCustomTextAction from the aggregation <code>titleCustomTextActions<\/code>.","!static":false,"!category":"function","!type":"fn(vTitleCustomTextAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vTitleCustomTextAction":"type: int|string|sap.m.Button, description: The titleCustomTextAction to remove or its index or id"}},"destroyTitleMainAction":{"!description":"Destroys the titleMainAction in the aggregation <code>titleMainAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setToggleHeaderOnTitleClick":{"!description":"Sets a new value for property <code>toggleHeaderOnTitleClick<\/code>.\r\rDetermines whether the the user can switch between the expanded/collapsed states of the\nheader by clicking on the title.\n\nIf set to <code>false<\/code>, the title is not clickable and the application\nmust provide other means for expanding/collapsing the header, if necessary.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bToggleHeaderOnTitleClick: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bToggleHeaderOnTitleClick":"type: boolean, description: New value for property <code>toggleHeaderOnTitleClick<\/code>"}},"indexOfFooterCustomAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>footerCustomActions<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFooterCustomAction: sap.m.Button) -> Number","parameters":{"oFooterCustomAction":"type: sap.m.Button, description: The footerCustomAction whose index is looked for"}},"getTitleCustomIconActions":{"!description":"Gets content of aggregation <code>titleCustomIconActions<\/code>.\r\rThe <code>titleCustomIconActions<\/code> are placed in the <code>IconActions<\/code> area of the\n<code>SemanticPage<\/code> title, right before the semantic icon action.","!static":false,"!category":"function","!type":"fn() -> [sap.m.OverflowToolbarButton]"},"setPositiveAction":{"!description":"Sets the aggregated <code>positiveAction<\/code>.","!static":false,"!category":"function","!type":"fn(oPositiveAction: sap.f.semantic.PositiveAction) -> sap.f.semantic.SemanticPage","parameters":{"oPositiveAction":"type: sap.f.semantic.PositiveAction, description: The positiveAction to set"}},"!description":"An enhanced {@link sap.f.DynamicPage}, that contains controls with semantic-specific meaning.\n\n<h3>Overview<\/h3>\n\nContent specified in the <code>sap.f.semantic.SemanticPage<\/code> aggregations is automatically\npositioned in dedicated sections of the title or the footer of the page, depending on\nthe control's semantics.\n\nThe actions in the <code>SemanticPage<\/code> title are grouped to text actions or icon actions.\nWhen an aggregation is set, the actions appear in the following predefined order (from left to right):\n\n<ul>Text actions:\n<li>The main semantic text action - <code>titleMainAction<\/code><\/li>\n<li>Any custom text actions - <code>titleCustomTextActions<\/code><\/li>\n<li>The semantic text actions - <code>addAction<\/code>, <code>deleteAction<\/code>, and <code>copyAction<\/code><\/li><\/ul>\n\n<ul>Icon actions:\n<li>Any custom icon actions - <code>titleCustomIconActions<\/code><\/li>\n<li>The simple semantic icon actions - <code>favoriteAction<\/code> and <code>flagAction<\/code><\/li>\n<li>The share menu semantic icon actions as a drop-down list with the following order:\n\t<ul><li><code>sendEmailAction<\/code><\/li>\n\t<li><code>discussInJamAction<\/code><\/li>\n\t<li><code>shareInJamAction<\/code><\/li>\n\t<li><code>sendMessageAction<\/code><\/li>\n\t<li><code>printAction<\/code><\/li>\n\t<li>Any <code>customShareActions<\/code><\/li><\/ul><\/li>\n<li>The navigation semantic actions - <code>fullScreenAction<\/code>, <code>exitFullScreenAction<\/code>,\nand <code>closeAction<\/li><\/code><\/ul>\n\nThe actions in the <code>SemanticPage<\/code> footer are positioned either on its left or right area and have the following predefined order:\n\n<ul>Footer left area:\n<li>The semantic text action - <code>messagesIndicator<\/code><\/li>\n<li>The semantic label - <code>draftIndicator<\/code><\/li><\/ul>\n\n<ul>Footer right area:\n<li>The main semantic text action - <code>footerMainAction<\/code><\/li>\n<li>The semantic text actions - <code>positiveAction<\/code> and <code>negativeAction<\/code><\/li>\n<li>Any custom text actions - <code>footerCustomActions<\/code><\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUsing the <code>SemanticPage<\/code> facilitates the implementation of the SAP Fiori 2.0 design guidelines.\n\n<h3>Responsive behavior<\/h3>\n\nThe responsive behavior of the <code>SemanticPage<\/code> depends on the behavior of the content that is displayed.","setFavoriteAction":{"!description":"Sets the aggregated <code>favoriteAction<\/code>.","!static":false,"!category":"function","!type":"fn(oFavoriteAction: sap.f.semantic.FavoriteAction) -> sap.f.semantic.SemanticPage","parameters":{"oFavoriteAction":"type: sap.f.semantic.FavoriteAction, description: The favoriteAction to set"}},"setSaveAsTileAction":{"!description":"Sets the aggregated <code>saveAsTileAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSaveAsTileAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oSaveAsTileAction":"type: sap.m.Button, description: The saveAsTileAction to set"}},"getShareInJamAction":{"!description":"Gets content of aggregation <code>shareInJamAction<\/code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.ShareInJamAction"},"setTitleHeading":{"!description":"Sets the aggregated <code>titleHeading<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleHeading: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleHeading":"type: sap.ui.core.Control, description: The titleHeading to set"}},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn(vHeaderContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vHeaderContent":"type: int|string|sap.ui.core.Control, description: The headerContent to remove or its index or id"}},"indexOfCustomShareAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>customShareActions<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCustomShareAction: sap.m.Button) -> Number","parameters":{"oCustomShareAction":"type: sap.m.Button, description: The customShareAction whose index is looked for"}},"insertFooterCustomAction":{"!description":"Inserts a footerCustomAction into the aggregation <code>footerCustomActions<\/code>.","!static":false,"!category":"function","!type":"fn(oFooterCustomAction: sap.m.Button, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oFooterCustomAction":"type: sap.m.Button, description: the footerCustomAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the footerCustomAction should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the footerCustomAction is inserted at position 0; for a value\r             greater than the current size of the aggregation, the footerCustomAction is inserted at\r             the last position"}},"setHeaderPinnable":{"!description":"Sets a new value for property <code>headerPinnable<\/code>.\r\rDetermines whether the header is pinnable.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderPinnable: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bHeaderPinnable":"type: boolean, description: New value for property <code>headerPinnable<\/code>"}},"getDraftIndicator":{"!description":"Gets content of aggregation <code>draftIndicator<\/code>.\r\rA semantic-specific button which is placed in the <code>FooterLeft<\/code> area of the <code>SemanticPage<\/code>\nfooter as a second action.","!static":false,"!category":"function","!type":"fn() -> sap.m.DraftIndicator"},"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticPage with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getSaveAsTileAction":{"!description":"Gets content of aggregation <code>saveAsTileAction<\/code>.\r\rA button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"setDraftIndicator":{"!description":"Sets the aggregated <code>draftIndicator<\/code>.","!static":false,"!category":"function","!type":"fn(oDraftIndicator: sap.m.DraftIndicator) -> sap.f.semantic.SemanticPage","parameters":{"oDraftIndicator":"type: sap.m.DraftIndicator, description: The draftIndicator to set"}},"removeAllFooterCustomActions":{"!description":"Removes all the controls from the aggregation <code>footerCustomActions<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"destroyTitleExpandedContent":{"!description":"Destroys all the titleExpandedContent in the aggregation <code>titleExpandedContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"!module":"sap/f/semantic/SemanticPage","destroyPositiveAction":{"!description":"Destroys the positiveAction in the aggregation <code>positiveAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyTitleSnappedContent":{"!description":"Destroys all the titleSnappedContent in the aggregation <code>titleSnappedContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeAllHeaderContent":{"!description":"Removes all the controls from the aggregation <code>headerContent<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getFavoriteAction":{"!description":"Gets content of aggregation <code>favoriteAction<\/code>.\r\rA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FavoriteAction"},"setPrintAction":{"!description":"Sets the aggregated <code>printAction<\/code>.","!static":false,"!category":"function","!type":"fn(oPrintAction: sap.f.semantic.PrintAction) -> sap.f.semantic.SemanticPage","parameters":{"oPrintAction":"type: sap.f.semantic.PrintAction, description: The printAction to set"}},"addCustomShareAction":{"!description":"Adds some customShareAction to the aggregation <code>customShareActions<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomShareAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oCustomShareAction":"type: sap.m.Button, description: the customShareAction to add; if empty, nothing is inserted"}},"getCopyAction":{"!description":"Gets content of aggregation <code>copyAction<\/code>.\r\rA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.CopyAction"},"removeAllTitleExpandedContent":{"!description":"Removes all the controls from the aggregation <code>titleExpandedContent<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyAddAction":{"!description":"Destroys the addAction in the aggregation <code>addAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setContent":{"!description":"Sets the aggregated <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"addTitleCustomIconAction":{"!description":"Adds some titleCustomIconAction to the aggregation <code>titleCustomIconActions<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleCustomIconAction: sap.m.OverflowToolbarButton) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomIconAction":"type: sap.m.OverflowToolbarButton, description: the titleCustomIconAction to add; if empty, nothing is inserted"}},"getHeaderContent":{"!description":"Gets content of aggregation <code>headerContent<\/code>.\r\rThe header content.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyCustomShareActions":{"!description":"Destroys all the customShareActions in the aggregation <code>customShareActions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFullScreenAction":{"!description":"Gets content of aggregation <code>fullScreenAction<\/code>.\r\rA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FullScreenAction"},"removeTitleExpandedContent":{"!description":"Removes a titleExpandedContent from the aggregation <code>titleExpandedContent<\/code>.","!static":false,"!category":"function","!type":"fn(vTitleExpandedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vTitleExpandedContent":"type: int|string|sap.ui.core.Control, description: The titleExpandedContent to remove or its index or id"}},"removeFooterCustomAction":{"!description":"Removes a footerCustomAction from the aggregation <code>footerCustomActions<\/code>.","!static":false,"!category":"function","!type":"fn(vFooterCustomAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vFooterCustomAction":"type: int|string|sap.m.Button, description: The footerCustomAction to remove or its index or id"}},"destroyTitleCustomTextActions":{"!description":"Destroys all the titleCustomTextActions in the aggregation <code>titleCustomTextActions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFlagAction":{"!description":"Gets content of aggregation <code>flagAction<\/code>.\r\rA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FlagAction"},"getAddAction":{"!description":"Gets content of aggregation <code>addAction<\/code>.\r\rA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.AddAction"},"getFooterCustomActions":{"!description":"Gets content of aggregation <code>footerCustomActions<\/code>.\r\rThe <code>footerCustomActions<\/code> are placed in the <code>FooterRight<\/code> area of the\n<code>SemanticPage<\/code> footer, right after the semantic footer actions.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"indexOfTitleCustomTextAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>titleCustomTextActions<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleCustomTextAction: sap.m.Button) -> Number","parameters":{"oTitleCustomTextAction":"type: sap.m.Button, description: The titleCustomTextAction whose index is looked for"}},"setFullScreenAction":{"!description":"Sets the aggregated <code>fullScreenAction<\/code>.","!static":false,"!category":"function","!type":"fn(oFullScreenAction: sap.f.semantic.FullScreenAction) -> sap.f.semantic.SemanticPage","parameters":{"oFullScreenAction":"type: sap.f.semantic.FullScreenAction, description: The fullScreenAction to set"}},"setDiscussInJamAction":{"!description":"Sets the aggregated <code>discussInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn(oDiscussInJamAction: sap.f.semantic.DiscussInJamAction) -> sap.f.semantic.SemanticPage","parameters":{"oDiscussInJamAction":"type: sap.f.semantic.DiscussInJamAction, description: The discussInJamAction to set"}},"getPreserveHeaderStateOnScroll":{"!description":"Gets current value of property <code>preserveHeaderStateOnScroll<\/code>.\r\rPreserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title\nand then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the title and the header\nare with height larger than a given threshold.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getPrintAction":{"!description":"Gets content of aggregation <code>printAction<\/code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.PrintAction"},"setShowFooter":{"!description":"Sets a new value for property <code>showFooter<\/code>.\r\rDetermines whether the footer is visible.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFooter: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bShowFooter":"type: boolean, description: New value for property <code>showFooter<\/code>"}},"destroyCloseAction":{"!description":"Destroys the closeAction in the aggregation <code>closeAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setCloseAction":{"!description":"Sets the aggregated <code>closeAction<\/code>.","!static":false,"!category":"function","!type":"fn(oCloseAction: sap.f.semantic.CloseAction) -> sap.f.semantic.SemanticPage","parameters":{"oCloseAction":"type: sap.f.semantic.CloseAction, description: The closeAction to set"}},"setSendEmailAction":{"!description":"Sets the aggregated <code>sendEmailAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSendEmailAction: sap.f.semantic.SendEmailAction) -> sap.f.semantic.SemanticPage","parameters":{"oSendEmailAction":"type: sap.f.semantic.SendEmailAction, description: The sendEmailAction to set"}},"setCopyAction":{"!description":"Sets the aggregated <code>copyAction<\/code>.","!static":false,"!category":"function","!type":"fn(oCopyAction: sap.f.semantic.CopyAction) -> sap.f.semantic.SemanticPage","parameters":{"oCopyAction":"type: sap.f.semantic.CopyAction, description: The copyAction to set"}},"removeAllTitleSnappedContent":{"!description":"Removes all the controls from the aggregation <code>titleSnappedContent<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyFooterCustomActions":{"!description":"Destroys all the footerCustomActions in the aggregation <code>footerCustomActions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeAllCustomShareActions":{"!description":"Removes all the controls from the aggregation <code>customShareActions<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"getNegativeAction":{"!description":"Gets content of aggregation <code>negativeAction<\/code>.\r\rA semantic-specific button which is placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code>\nfooter with default text value set to <code>Reject<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.NegativeAction"},"indexOfTitleExpandedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>titleExpandedContent<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleExpandedContent: sap.ui.core.Control) -> Number","parameters":{"oTitleExpandedContent":"type: sap.ui.core.Control, description: The titleExpandedContent whose index is looked for"}},"insertTitleExpandedContent":{"!description":"Inserts a titleExpandedContent into the aggregation <code>titleExpandedContent<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleExpandedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleExpandedContent":"type: sap.ui.core.Control, description: the titleExpandedContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the titleExpandedContent should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the titleExpandedContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the titleExpandedContent is inserted at\r             the last position"}},"setSendMessageAction":{"!description":"Sets the aggregated <code>sendMessageAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSendMessageAction: sap.f.semantic.SendMessageAction) -> sap.f.semantic.SemanticPage","parameters":{"oSendMessageAction":"type: sap.f.semantic.SendMessageAction, description: The sendMessageAction to set"}},"destroyPrintAction":{"!description":"Destroys the printAction in the aggregation <code>printAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyFooterMainAction":{"!description":"Destroys the footerMainAction in the aggregation <code>footerMainAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleExpandedContent":{"!description":"Gets content of aggregation <code>titleExpandedContent<\/code>.\r\rThe content,displayed in the title, when the header is in expanded state.\n\n<b>Note:<\/b> The controls will be placed in the title`s middle area.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getCloseAction":{"!description":"Gets content of aggregation <code>closeAction<\/code>.\r\rA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.CloseAction"},"addTitleCustomTextAction":{"!description":"Adds some titleCustomTextAction to the aggregation <code>titleCustomTextActions<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleCustomTextAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomTextAction":"type: sap.m.Button, description: the titleCustomTextAction to add; if empty, nothing is inserted"}},"getShowFooter":{"!description":"Gets current value of property <code>showFooter<\/code>.\r\rDetermines whether the footer is visible.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyDiscussInJamAction":{"!description":"Destroys the discussInJamAction in the aggregation <code>discussInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyCopyAction":{"!description":"Destroys the copyAction in the aggregation <code>copyAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getSendMessageAction":{"!description":"Gets content of aggregation <code>sendMessageAction<\/code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SendMessageAction"},"indexOfTitleCustomIconAction":{"!description":"Checks for the provided <code>sap.m.OverflowToolbarButton<\/code> in the aggregation <code>titleCustomIconActions<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleCustomIconAction: sap.m.OverflowToolbarButton) -> Number","parameters":{"oTitleCustomIconAction":"type: sap.m.OverflowToolbarButton, description: The titleCustomIconAction whose index is looked for"}},"getHeaderExpanded":{"!description":"Gets current value of property <code>headerExpanded<\/code>.\r\rDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware, that initially collapsed header state is not supported,\nso <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"insertCustomShareAction":{"!description":"Inserts a customShareAction into the aggregation <code>customShareActions<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomShareAction: sap.m.Button, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oCustomShareAction":"type: sap.m.Button, description: the customShareAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the customShareAction should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the customShareAction is inserted at position 0; for a value\r             greater than the current size of the aggregation, the customShareAction is inserted at\r             the last position"}},"destroyTitleHeading":{"!description":"Destroys the titleHeading in the aggregation <code>titleHeading<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTitleMainAction":{"!description":"Gets content of aggregation <code>titleMainAction<\/code>.\r\rA semantic-specific button which is placed in the <code>SemanticPage<\/code> title as first action.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.TitleMainAction"},"destroyNegativeAction":{"!description":"Destroys the negativeAction in the aggregation <code>negativeAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroySendMessageAction":{"!description":"Destroys the sendMessageAction in the aggregation <code>sendMessageAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFooterMainAction":{"!description":"Gets content of aggregation <code>footerMainAction<\/code>.\r\rA semantic-specific button which is placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code>\nfooter with default text value set to <code>Save<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FooterMainAction"},"!helpDescription":"An enhanced {@link sap.f.DynamicPage}, that contains controls with semantic-specific meaning.\n\n<h3>Overview<\/h3>\n\nContent specified in the <code>sap.f.semantic.SemanticPage<\/code> aggregations is automatically\npositioned in dedicated sections of the title or the footer of the page, depending on\nthe control's semantics.\n\nThe actions in the <code>SemanticPage<\/code> title are grouped to text actions or icon actions.\nWhen an aggregation is set, the actions appear in the following predefined order (from left to right):\n\n<ul>Text actions:\n<li>The main semantic text action - <code>titleMainAction<\/code><\/li>\n<li>Any custom text actions - <code>titleCustomTextActions<\/code><\/li>\n<li>The semantic text actions - <code>addAction<\/code>, <code>deleteAction<\/code>, and <code>copyAction<\/code><\/li><\/ul>\n\n<ul>Icon actions:\n<li>Any custom icon actions - <code>titleCustomIconActions<\/code><\/li>\n<li>The simple semantic icon actions - <code>favoriteAction<\/code> and <code>flagAction<\/code><\/li>\n<li>The share menu semantic icon actions as a drop-down list with the following order:\n\t<ul><li><code>sendEmailAction<\/code><\/li>\n\t<li><code>discussInJamAction<\/code><\/li>\n\t<li><code>shareInJamAction<\/code><\/li>\n\t<li><code>sendMessageAction<\/code><\/li>\n\t<li><code>printAction<\/code><\/li>\n\t<li>Any <code>customShareActions<\/code><\/li><\/ul><\/li>\n<li>The navigation semantic actions - <code>fullScreenAction<\/code>, <code>exitFullScreenAction<\/code>,\nand <code>closeAction<\/li><\/code><\/ul>\n\nThe actions in the <code>SemanticPage<\/code> footer are positioned either on its left or right area and have the following predefined order:\n\n<ul>Footer left area:\n<li>The semantic text action - <code>messagesIndicator<\/code><\/li>\n<li>The semantic label - <code>draftIndicator<\/code><\/li><\/ul>\n\n<ul>Footer right area:\n<li>The main semantic text action - <code>footerMainAction<\/code><\/li>\n<li>The semantic text actions - <code>positiveAction<\/code> and <code>negativeAction<\/code><\/li>\n<li>Any custom text actions - <code>footerCustomActions<\/code><\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUsing the <code>SemanticPage<\/code> facilitates the implementation of the SAP Fiori 2.0 design guidelines.\n\n<h3>Responsive behavior<\/h3>\n\nThe responsive behavior of the <code>SemanticPage<\/code> depends on the behavior of the content that is displayed.","destroyFlagAction":{"!description":"Destroys the flagAction in the aggregation <code>flagAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroySendEmailAction":{"!description":"Destroys the sendEmailAction in the aggregation <code>sendEmailAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyFullScreenAction":{"!description":"Destroys the fullScreenAction in the aggregation <code>fullScreenAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setFooterMainAction":{"!description":"Sets the aggregated <code>footerMainAction<\/code>.","!static":false,"!category":"function","!type":"fn(oFooterMainAction: sap.f.semantic.FooterMainAction) -> sap.f.semantic.SemanticPage","parameters":{"oFooterMainAction":"type: sap.f.semantic.FooterMainAction, description: The footerMainAction to set"}},"insertTitleCustomIconAction":{"!description":"Inserts a titleCustomIconAction into the aggregation <code>titleCustomIconActions<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleCustomIconAction: sap.m.OverflowToolbarButton, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomIconAction":"type: sap.m.OverflowToolbarButton, description: the titleCustomIconAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the titleCustomIconAction should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the titleCustomIconAction is inserted at position 0; for a value\r             greater than the current size of the aggregation, the titleCustomIconAction is inserted at\r             the last position"}},"addTitleSnappedContent":{"!description":"Adds some titleSnappedContent to the aggregation <code>titleSnappedContent<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleSnappedContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleSnappedContent":"type: sap.ui.core.Control, description: the titleSnappedContent to add; if empty, nothing is inserted"}},"removeAllTitleCustomTextActions":{"!description":"Removes all the controls from the aggregation <code>titleCustomTextActions<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"removeTitleCustomIconAction":{"!description":"Removes a titleCustomIconAction from the aggregation <code>titleCustomIconActions<\/code>.","!static":false,"!category":"function","!type":"fn(vTitleCustomIconAction: Number | String | sap.m.OverflowToolbarButton) -> sap.m.OverflowToolbarButton","parameters":{"vTitleCustomIconAction":"type: int|string|sap.m.OverflowToolbarButton, description: The titleCustomIconAction to remove or its index or id"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\r\rThe <code>SemanticPage<\/code> content.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getToggleHeaderOnTitleClick":{"!description":"Gets current value of property <code>toggleHeaderOnTitleClick<\/code>.\r\rDetermines whether the the user can switch between the expanded/collapsed states of the\nheader by clicking on the title.\n\nIf set to <code>false<\/code>, the title is not clickable and the application\nmust provide other means for expanding/collapsing the header, if necessary.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getDeleteAction":{"!description":"Gets content of aggregation <code>deleteAction<\/code>.\r\rA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.DeleteAction"},"!category":"class","getCustomShareActions":{"!description":"Gets content of aggregation <code>customShareActions<\/code>.\r\rThe <code>customShareActions<\/code> are placed in the <code>ShareMenu<\/code> area of the\n<code>SemanticPage<\/code> title, right after the the semantic actions.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"setFlagAction":{"!description":"Sets the aggregated <code>flagAction<\/code>.","!static":false,"!category":"function","!type":"fn(oFlagAction: sap.f.semantic.FlagAction) -> sap.f.semantic.SemanticPage","parameters":{"oFlagAction":"type: sap.f.semantic.FlagAction, description: The flagAction to set"}},"getExitFullScreenAction":{"!description":"Gets content of aggregation <code>exitFullScreenAction<\/code>.\r\rA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.ExitFullScreenAction"},"getMessagesIndicator":{"!description":"Gets content of aggregation <code>messagesIndicator<\/code>.\r\rA semantic-specific button which is placed in the <code>FooterLeft<\/code> area of the <code>SemanticPage<\/code>\nfooter as a first action.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.MessagesIndicator"},"addFooterCustomAction":{"!description":"Adds some footerCustomAction to the aggregation <code>footerCustomActions<\/code>.","!static":false,"!category":"function","!type":"fn(oFooterCustomAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oFooterCustomAction":"type: sap.m.Button, description: the footerCustomAction to add; if empty, nothing is inserted"}},"getHeaderPinnable":{"!description":"Gets current value of property <code>headerPinnable<\/code>.\r\rDetermines whether the header is pinnable.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySaveAsTileAction":{"!description":"Destroys the saveAsTileAction in the aggregation <code>saveAsTileAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setHeaderExpanded":{"!description":"Sets a new value for property <code>headerExpanded<\/code>.\r\rDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware, that initially collapsed header state is not supported,\nso <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderExpanded: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bHeaderExpanded":"type: boolean, description: New value for property <code>headerExpanded<\/code>"}},"insertTitleSnappedContent":{"!description":"Inserts a titleSnappedContent into the aggregation <code>titleSnappedContent<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleSnappedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleSnappedContent":"type: sap.ui.core.Control, description: the titleSnappedContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the titleSnappedContent should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the titleSnappedContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the titleSnappedContent is inserted at\r             the last position"}},"!constructorDescription":"Constructor for a new <code>SemanticPage<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderExpanded headerExpanded} : boolean (default: true)<\/li>\n<li>{@link #getHeaderPinnable headerPinnable} : boolean (default: true)<\/li>\n<li>{@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll} : boolean (default: false)<\/li>\n<li>{@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitleHeading titleHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getTitleSnappedContent titleSnappedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleExpandedContent titleExpandedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleMainAction titleMainAction} : sap.f.semantic.TitleMainAction<\/li>\n<li>{@link #getAddAction addAction} : sap.f.semantic.AddAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.f.semantic.DeleteAction<\/li>\n<li>{@link #getCopyAction copyAction} : sap.f.semantic.CopyAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.f.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.f.semantic.FavoriteAction<\/li>\n<li>{@link #getFullScreenAction fullScreenAction} : sap.f.semantic.FullScreenAction<\/li>\n<li>{@link #getExitFullScreenAction exitFullScreenAction} : sap.f.semantic.ExitFullScreenAction<\/li>\n<li>{@link #getCloseAction closeAction} : sap.f.semantic.CloseAction<\/li>\n<li>{@link #getTitleCustomTextActions titleCustomTextActions} : sap.m.Button[]<\/li>\n<li>{@link #getTitleCustomIconActions titleCustomIconActions} : sap.m.OverflowToolbarButton[]<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getFooterMainAction footerMainAction} : sap.f.semantic.FooterMainAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.f.semantic.MessagesIndicator<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.f.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.f.semantic.NegativeAction<\/li>\n<li>{@link #getFooterCustomActions footerCustomActions} : sap.m.Button[]<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.f.semantic.DiscussInJamAction<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.f.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.f.semantic.SendMessageAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.f.semantic.SendEmailAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.f.semantic.PrintAction<\/li>\n<li>{@link #getCustomShareActions customShareActions} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setMessagesIndicator":{"!description":"Sets the aggregated <code>messagesIndicator<\/code>.","!static":false,"!category":"function","!type":"fn(oMessagesIndicator: sap.f.semantic.MessagesIndicator) -> sap.f.semantic.SemanticPage","parameters":{"oMessagesIndicator":"type: sap.f.semantic.MessagesIndicator, description: The messagesIndicator to set"}},"destroyExitFullScreenAction":{"!description":"Destroys the exitFullScreenAction in the aggregation <code>exitFullScreenAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyDraftIndicator":{"!description":"Destroys the draftIndicator in the aggregation <code>draftIndicator<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeCustomShareAction":{"!description":"Removes a customShareAction from the aggregation <code>customShareActions<\/code>.","!static":false,"!category":"function","!type":"fn(vCustomShareAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vCustomShareAction":"type: int|string|sap.m.Button, description: The customShareAction to remove or its index or id"}},"getDiscussInJamAction":{"!description":"Gets content of aggregation <code>discussInJamAction<\/code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.DiscussInJamAction"},"getTitleHeading":{"!description":"Gets content of aggregation <code>titleHeading<\/code>.\r\rThe <code>SemanticPage<\/code> heading.\n\nA typical usage is the <code>sap.m.Title<\/code> or any other UI5 control,\nthat serves as a heading for an object.\n\n<b>Note:<\/b> The control will be placed in the title`s leftmost area.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setAddAction":{"!description":"Sets the aggregated <code>addAction<\/code>.","!static":false,"!category":"function","!type":"fn(oAddAction: sap.f.semantic.AddAction) -> sap.f.semantic.SemanticPage","parameters":{"oAddAction":"type: sap.f.semantic.AddAction, description: The addAction to set"}},"addTitleExpandedContent":{"!description":"Adds some titleExpandedContent to the aggregation <code>titleExpandedContent<\/code>.","!static":false,"!category":"function","!type":"fn(oTitleExpandedContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleExpandedContent":"type: sap.ui.core.Control, description: the titleExpandedContent to add; if empty, nothing is inserted"}},"destroyFavoriteAction":{"!description":"Destroys the favoriteAction in the aggregation <code>favoriteAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>headerContent<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> Number","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent whose index is looked for"}},"setPreserveHeaderStateOnScroll":{"!description":"Sets a new value for property <code>preserveHeaderStateOnScroll<\/code>.\r\rPreserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title\nand then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the title and the header\nare with height larger than a given threshold.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreserveHeaderStateOnScroll: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bPreserveHeaderStateOnScroll":"type: boolean, description: New value for property <code>preserveHeaderStateOnScroll<\/code>"}},"destroyMessagesIndicator":{"!description":"Destroys the messagesIndicator in the aggregation <code>messagesIndicator<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: the headerContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the headerContent should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the headerContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the headerContent is inserted at\r             the last position"}},"destroyDeleteAction":{"!description":"Destroys the deleteAction in the aggregation <code>deleteAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeTitleSnappedContent":{"!description":"Removes a titleSnappedContent from the aggregation <code>titleSnappedContent<\/code>.","!static":false,"!category":"function","!type":"fn(vTitleSnappedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vTitleSnappedContent":"type: int|string|sap.ui.core.Control, description: The titleSnappedContent to remove or its index or id"}},"setNegativeAction":{"!description":"Sets the aggregated <code>negativeAction<\/code>.","!static":false,"!category":"function","!type":"fn(oNegativeAction: sap.f.semantic.NegativeAction) -> sap.f.semantic.SemanticPage","parameters":{"oNegativeAction":"type: sap.f.semantic.NegativeAction, description: The negativeAction to set"}},"destroyShareInJamAction":{"!description":"Destroys the shareInJamAction in the aggregation <code>shareInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleCustomTextActions":{"!description":"Gets content of aggregation <code>titleCustomTextActions<\/code>.\r\rThe <code>titleCustomTextActions<\/code> are placed in the <code>TextActions<\/code> area of the\n<code>SemanticPage<\/code> title, right before the semantic text action.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"indexOfTitleSnappedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>titleSnappedContent<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleSnappedContent: sap.ui.core.Control) -> Number","parameters":{"oTitleSnappedContent":"type: sap.ui.core.Control, description: The titleSnappedContent whose index is looked for"}}},"sap.f.semantic.TitleMainAction":{"!description":"A semantic-specific button, eligible for the <code>titleMainAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.TitleMainAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.TitleMainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TitleMainAction<\/code>.","!module":"sap/f/semantic/TitleMainAction","!helpDescription":"A semantic-specific button, eligible for the <code>titleMainAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.routing.TargetHandler_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.TargetHandler with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(closeDialogs: Boolean)","prototype":"sap.f.routing.TargetHandler"},"sap.f.semantic.ExitFullScreenAction":{"!description":"A semantic-specific button, eligible for the <code>exitFullScreenAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.ExitFullScreenAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.ExitFullScreenAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ExitFullScreenAction<\/code>.","!module":"sap/f/semantic/ExitFullScreenAction","!helpDescription":"A semantic-specific button, eligible for the <code>exitFullScreenAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.semantic.DiscussInJamAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.DiscussInJamAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.DiscussInJamAction"},"sap.f.semantic.SemanticToggleButton":{"!description":"A base class for the {@link sap.f.semantic.FavoriteAction} and {@link sap.f.semantic.FlagAction}.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticToggleButton with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticToggleButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SemanticToggleButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link <code>sap.f.semantic.SemanticButton<\/code>#constructor <code>sap.f.semantic.SemanticButton<\/code>}\ncan be used as well.","!module":"sap/f/semantic/SemanticToggleButton","!helpDescription":"A base class for the {@link sap.f.semantic.FavoriteAction} and {@link sap.f.semantic.FlagAction}.","setPressed":{"!description":"Sets a new value for property <code>pressed<\/code>.\r\rDefines the <code>SemanticToggleButton<\/code> pressed state.\n\nThe property is set to <code>true<\/code> when the control is toggled (default is <code>false<\/code>).\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPressed: Boolean) -> sap.f.semantic.SemanticToggleButton","parameters":{"bPressed":"type: boolean, description: New value for property <code>pressed<\/code>"}},"!proto":"<code>sap.f.semantic.SemanticButton<\/code>","getPressed":{"!description":"Gets current value of property <code>pressed<\/code>.\r\rDefines the <code>SemanticToggleButton<\/code> pressed state.\n\nThe property is set to <code>true<\/code> when the control is toggled (default is <code>false<\/code>).\r\rDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class"},"sap.f.semantic.PrintAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.PrintAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.PrintAction"},"sap.f.semantic.FlagAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FlagAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FlagAction"},"sap.f.semantic.FooterMainAction":{"!description":"A semantic-specific button, eligible for the <code>footerMainAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FooterMainAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FooterMainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FooterMainAction<\/code>.","!module":"sap/f/semantic/FooterMainAction","!helpDescription":"A semantic-specific button, eligible for the <code>footerMainAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.AvatarSize":{"!description":"Predefined sizes for the {@link sap.f.Avatar} control.","S":{"!description":"Control size - 3rem\nFont size - 1.125rem","!category":"enum","!type":"String"},"!module":"sap/f/library","XL":{"!description":"Control size - 7rem\nFont size - 2.75rem","!category":"enum","!type":"String"},"!category":"static class","Custom":{"!description":"Custom size","!category":"enum","!type":"String"},"XS":{"!description":"Control size - 2rem\nFont size - 0.75rem","!category":"enum","!type":"String"},"L":{"!description":"Control size - 5rem\nFont size - 2rem","!category":"enum","!type":"String"},"M":{"!description":"Control size - 4rem\nFont size - 1.625rem","!category":"enum","!type":"String"}},"sap.f.semantic.FullScreenAction":{"!description":"A semantic-specific button, eligible for the <code>fullScreenAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FullScreenAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FullScreenAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FullScreenAction<\/code>.","!module":"sap/f/semantic/FullScreenAction","!helpDescription":"A semantic-specific button, eligible for the <code>fullScreenAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.semantic.SendMessageAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendMessageAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SendMessageAction"},"sap.f.semantic.NegativeAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.NegativeAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.NegativeAction"},"sap.f.routing.Targets_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.Targets with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Targets.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oOptions: Object)","prototype":"sap.f.routing.Targets"},"sap.f.semantic.MessagesIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.MessagesIndicator with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.MessagesIndicator"},"sap.f.semantic.SemanticToggleButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticToggleButton with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticToggleButton"},"sap.f.DynamicPageTitle_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageTitle with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPageTitle"},"sap.f.semantic.SendEmailAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendEmailAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SendEmailAction"},"sap.f":{"semantic":"sap.f.semantic","AvatarShape":"sap.f.AvatarShape","customDisplaySize":{"!description":"Specifies custom display size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!category":"namespace","LayoutType":"sap.f.LayoutType","imageFitType":{"!description":"Specifies how an image would fit in the <code>Avatar<\/code>.","!category":"enum","!type":"sap.f.AvatarImageFitType"},"headerExpanded":{"!description":"Determines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware that initially collapsed header state is not supported, so <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.","!category":"enum","!type":"Boolean"},"displaySize":{"!description":"Sets a predefined display size of the <code>Avatar<\/code>.","!category":"enum","!type":"sap.f.AvatarSize"},"showFooter":{"!description":"Determines whether the footer is visible.","!category":"enum","!type":"Boolean"},"routing":"sap.f.routing","AvatarSize":"sap.f.AvatarSize","DynamicPageTitle":"sap.f.DynamicPageTitle_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"DynamicPageHeader":"sap.f.DynamicPageHeader_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!category":"enum","!type":"[String]"},"AvatarType":"sap.f.AvatarType","defaultTransitionNameEndColumn":{"!description":"Determines the type of the transition/animation to apply for the <code>End<\/code> column when <code>to()<\/code> is called without defining the\ntransition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>show<\/code>, and the names of any registered custom transitions.","!category":"enum","!type":"String"},"FlexibleColumnLayoutSemanticHelper":"sap.f.FlexibleColumnLayoutSemanticHelper_obj","defaultTransitionNameBeginColumn":{"!description":"Determines the type of the transition/animation to apply for the <code>Begin<\/code> column when <code>to()<\/code> is called without defining the\ntransition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>show<\/code>, and the names of any registered custom transitions.","!category":"enum","!type":"String"},"!description":"SAPUI5 library with controls specialized for Fiori applications.","visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"fitContent":{"!description":"Optimizes <code>DynamicPage<\/code> responsiveness on small screens and behavior\nwhen expanding/collapsing the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content\nof adaptive controls that stretch to fill the available space,\nsuch as {@link sap.ui.table.Table} and  {@link sap.ui.table.AnalyticalTable}.","!category":"enum","!type":"Boolean"},"src":{"!description":"Determines the path to the desired image or icon.","!category":"enum","!type":"sap.ui.core.URI"},"toggleHeaderOnTitleClick":{"!description":"Determines whether the the user can switch between the expanded/collapsed states of the\n<code>DynamicPageHeader<\/code> by clicking on the <code>DynamicPageTitle<\/code>. If set to\n<code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable and the application\nmust provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.","!category":"enum","!type":"Boolean"},"initials":{"!description":"Defines the displayed initials.","!category":"enum","!type":"String"},"displayShape":{"!description":"Defines the shape of the <code>Avatar<\/code>.","!category":"enum","!type":"sap.f.AvatarShape"},"Avatar":"sap.f.Avatar_obj","layout":{"!description":"Determines the layout of the control - number of visible columns and their relative sizes","!category":"enum","!type":"sap.f.LayoutType"},"pinnable":{"!description":"Determines whether the header is pinnable.","!category":"enum","!type":"Boolean"},"DynamicPage":"sap.f.DynamicPage_obj","!module":"sap/f/library","customFontSize":{"!description":"Specifies custom font size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!helpDescription":"SAPUI5 library with controls specialized for Fiori applications.","defaultTransitionNameMidColumn":{"!description":"Determines the type of the transition/animation to apply for the <code>Mid<\/code> column when <code>to()<\/code> is called without defining the\ntransition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>show<\/code>, and the names of any registered custom transitions.","!category":"enum","!type":"String"},"FlexibleColumnLayout":"sap.f.FlexibleColumnLayout_obj","AvatarImageFitType":"sap.f.AvatarImageFitType","preserveHeaderStateOnScroll":{"!description":"Preserves the current header state when scrolling.\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n<br><b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the control`s title and header\nare with height larger than the given threshold.","!category":"enum","!type":"Boolean"}},"sap.f.semantic.SemanticButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticButton with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticControl<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticButton"},"sap.f.semantic.TitleMainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.TitleMainAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.TitleMainAction"},"sap.f.semantic.MessagesIndicator":{"!description":"A semantic-specific button, eligible for the <code>messagesIndicator<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.MessagesIndicator with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.MessagesIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>MessagesIndicator<\/code>.","!module":"sap/f/semantic/MessagesIndicator","!helpDescription":"A semantic-specific button, eligible for the <code>messagesIndicator<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.AvatarImageFitType":{"!description":"Types of image size and position that determine how an image fits in the {@link sap.f.Avatar} control area.","Cover":{"!description":"The image is scaled to be large enough so that the control area is completely covered.","!category":"enum","!type":"String"},"!module":"sap/f/library","!category":"static class","Contain":{"!description":"The image is scaled to the largest size so that both its width and height can fit in the control area.","!category":"enum","!type":"String"}},"sap.f.semantic.SemanticButton":{"!description":"A base class for the available semantic actions, such as {@link sap.f.semantic.AddAction AddAction},\n{@link sap.f.semantic.CloseAction CloseAction}, etc.","getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"<code>sap.f.semantic.SemanticControl<\/code>","!category":"class","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticButton with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticControl<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.f.semantic.SemanticButton<\/code>.\r\rThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.semantic.SemanticButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.semantic.SemanticButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\r\rDetermines whether the <code>SemanticButton<\/code> is enabled.\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.f.semantic.SemanticButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new <code>SemanticButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link <code>sap.f.semantic.SemanticControl<\/code>#constructor <code>sap.f.semantic.SemanticControl<\/code>}\ncan be used as well.","!module":"sap/f/semantic/SemanticButton","!helpDescription":"A base class for the available semantic actions, such as {@link sap.f.semantic.AddAction AddAction},\n{@link sap.f.semantic.CloseAction CloseAction}, etc.","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\r\rDetermines whether the <code>SemanticButton<\/code> is enabled.\r\rDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.f.semantic.SemanticButton<\/code>.\r\rWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \rotherwise it will be bound to this <code>sap.f.semantic.SemanticButton<\/code> itself.\r\rFired when the user selects the <code>SemanticButton<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.semantic.SemanticButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.semantic.SemanticButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.f.semantic.DeleteAction":{"!description":"A semantic-specific button, eligible for the <code>deleteAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.DeleteAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.DeleteAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>DeleteAction<\/code>.","!module":"sap/f/semantic/DeleteAction","!helpDescription":"A semantic-specific button, eligible for the <code>deleteAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.semantic.SemanticControl_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticControl with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticControl"},"sap.f.AvatarShape":{"!description":"Types of shape for the {@link sap.f.Avatar} control.","Circle":{"!description":"Circular shape.","!category":"enum","!type":"String"},"!module":"sap/f/library","!category":"static class","Square":{"!description":"Square shape.","!category":"enum","!type":"String"}},"sap":{"sap":"sap","f":"sap.f","!category":"namespace"},"sap.f.semantic.AddAction":{"!description":"A semantic-specific button, eligible for the <code>addAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.AddAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.AddAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>AddAction<\/code>.","!module":"sap/f/semantic/AddAction","!helpDescription":"A semantic-specific button, eligible for the <code>addAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.DynamicPageTitle":{"getSnappedContent":{"!description":"Gets content of aggregation <code>snappedContent<\/code>.\r\rThe content that is displayed in the <code>DynamicPageTitle<\/code> in collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"insertAction":{"!description":"Inserts a action into the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the action should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value\r             greater than the current size of the aggregation, the action is inserted at\r             the last position","oAction":"type: sap.ui.core.Control, description: the action to insert; if empty, nothing is inserted"}},"removeAllSnappedContent":{"!description":"Removes all the controls from the aggregation <code>snappedContent<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyExpandedContent":{"!description":"Destroys all the expandedContent in the aggregation <code>expandedContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"!proto":"sap.ui.core.Control","!category":"class","getActions":{"!description":"Gets content of aggregation <code>actions<\/code>.\r\rThe <code>DynamicPageTitle<\/code> actions.\n<br><b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s recommended to use controls,\nsuitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addAction":{"!description":"Adds some action to the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oAction":"type: sap.ui.core.Control, description: the action to add; if empty, nothing is inserted"}},"indexOfSnappedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>snappedContent<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSnappedContent: sap.ui.core.Control) -> Number","parameters":{"oSnappedContent":"type: sap.ui.core.Control, description: The snappedContent whose index is looked for"}},"!constructorDescription":"Constructor for a new <code>DynamicPageTitle<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getHeading heading} : sap.ui.core.Control<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #getSnappedContent snappedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getExpandedContent expandedContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addSnappedContent":{"!description":"Adds some snappedContent to the aggregation <code>snappedContent<\/code>.","!static":false,"!category":"function","!type":"fn(oSnappedContent: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oSnappedContent":"type: sap.ui.core.Control, description: the snappedContent to add; if empty, nothing is inserted"}},"insertSnappedContent":{"!description":"Inserts a snappedContent into the aggregation <code>snappedContent<\/code>.","!static":false,"!category":"function","!type":"fn(oSnappedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the snappedContent should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the snappedContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the snappedContent is inserted at\r             the last position","oSnappedContent":"type: sap.ui.core.Control, description: the snappedContent to insert; if empty, nothing is inserted"}},"destroyHeading":{"!description":"Destroys the heading in the aggregation <code>heading<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>actions<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"removeAllActions":{"!description":"Removes all the controls from the aggregation <code>actions<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"Title of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageTitle<\/code> control is part of the {@link sap.f.DynamicPage}\nfamily and is used to serve as title of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageTitle<\/code> can hold any control and displays the most important\ninformation regarding the object that will always remain visible while scrolling.\n\n<b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s\nrecommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.\n\nIf the <code>toggleHeaderOnTitleClick<\/code> property of the {@link sap.f.DynamicPage DynamicPage}\nis set to <code>true<\/code>, the user can switch between the expanded/collapsed states of the\n{@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the <code>DynamicPageTitle<\/code>.\nIf set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable and the app must\nprovide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageTitle<\/code> depends on the behavior of the\ncontent that is displayed.","removeAction":{"!description":"Removes a action from the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPageTitle.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setHeading":{"!description":"Sets the aggregated <code>heading<\/code>.","!static":false,"!category":"function","!type":"fn(oHeading: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oHeading":"type: sap.ui.core.Control, description: The heading to set"}},"removeAllExpandedContent":{"!description":"Removes all the controls from the aggregation <code>expandedContent<\/code>.\r\rAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyActions":{"!description":"Destroys all the actions in the aggregation <code>actions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"addExpandedContent":{"!description":"Adds some expandedContent to the aggregation <code>expandedContent<\/code>.","!static":false,"!category":"function","!type":"fn(oExpandedContent: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oExpandedContent":"type: sap.ui.core.Control, description: the expandedContent to add; if empty, nothing is inserted"}},"removeSnappedContent":{"!description":"Removes a snappedContent from the aggregation <code>snappedContent<\/code>.","!static":false,"!category":"function","!type":"fn(vSnappedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vSnappedContent":"type: int|string|sap.ui.core.Control, description: The snappedContent to remove or its index or id"}},"getExpandedContent":{"!description":"Gets content of aggregation <code>expandedContent<\/code>.\r\rThe content that is displayed in the <code>DynamicPageTitle<\/code> in expanded state.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeExpandedContent":{"!description":"Removes a expandedContent from the aggregation <code>expandedContent<\/code>.","!static":false,"!category":"function","!type":"fn(vExpandedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vExpandedContent":"type: int|string|sap.ui.core.Control, description: The expandedContent to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageTitle with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"indexOfExpandedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>expandedContent<\/code>.\rand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oExpandedContent: sap.ui.core.Control) -> Number","parameters":{"oExpandedContent":"type: sap.ui.core.Control, description: The expandedContent whose index is looked for"}},"!module":"sap/f/DynamicPageTitle","insertExpandedContent":{"!description":"Inserts a expandedContent into the aggregation <code>expandedContent<\/code>.","!static":false,"!category":"function","!type":"fn(oExpandedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"oExpandedContent":"type: sap.ui.core.Control, description: the expandedContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the expandedContent should be inserted at; for\r             a negative value of <code>iIndex<\/code>, the expandedContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the expandedContent is inserted at\r             the last position"}},"!helpDescription":"Title of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageTitle<\/code> control is part of the {@link sap.f.DynamicPage}\nfamily and is used to serve as title of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageTitle<\/code> can hold any control and displays the most important\ninformation regarding the object that will always remain visible while scrolling.\n\n<b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s\nrecommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.\n\nIf the <code>toggleHeaderOnTitleClick<\/code> property of the {@link sap.f.DynamicPage DynamicPage}\nis set to <code>true<\/code>, the user can switch between the expanded/collapsed states of the\n{@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the <code>DynamicPageTitle<\/code>.\nIf set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable and the app must\nprovide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageTitle<\/code> depends on the behavior of the\ncontent that is displayed.","getHeading":{"!description":"Gets content of aggregation <code>heading<\/code>.\r\rThe title or any other UI5 control that serves as a heading for the object.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"destroySnappedContent":{"!description":"Destroys all the snappedContent in the aggregation <code>snappedContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"}},"sap.f.semantic.CopyAction":{"!description":"A semantic-specific button, eligible for the <code>copyAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.CopyAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.CopyAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>CopyAction<\/code>.","!module":"sap/f/semantic/CopyAction","!helpDescription":"A semantic-specific button, eligible for the <code>copyAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.DynamicPageHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageHeader with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPageHeader"},"sap.f.routing.Router":{"!description":"See {@link sap.ui.core.routing.Router} for the constructor arguments.\n\nThe <code>sap.f.routing.Router<\/code> is intended to be used with {@link sap.f.FlexibleColumnLayout} as a root control.\n\nThe difference to the {@link sap.ui.core.routing.Router} are the properties viewLevel, transition and transitionParameters you can specify in every Route or Target created by this router.\n\nAdditionally, the <code>layout<\/code> property can be specified in every Route, in which case it will be applied to the root control.","extend":{"!description":"Creates a new subclass of class sap.f.routing.Router with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Router.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.routing.Router.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Instantiates a <code>sap.f.routing.Router<\/code>.","!module":"sap/f/routing/Router","!helpDescription":"See {@link sap.ui.core.routing.Router} for the constructor arguments.\n\nThe <code>sap.f.routing.Router<\/code> is intended to be used with {@link sap.f.FlexibleColumnLayout} as a root control.\n\nThe difference to the {@link sap.ui.core.routing.Router} are the properties viewLevel, transition and transitionParameters you can specify in every Route or Target created by this router.\n\nAdditionally, the <code>layout<\/code> property can be specified in every Route, in which case it will be applied to the root control.","!proto":"sap.ui.core.routing.Router","!category":"class","getTargetHandler":{"!description":"Returns the TargetHandler instance.","!static":false,"!category":"function","!type":"fn() -> sap.f.routing.TargetHandler"}},"sap.f.semantic.FavoriteAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FavoriteAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FavoriteAction"},"sap.f.semantic.MainAction":{"!description":"Serves as a base class for the {@link sap.f.semantic.TitleMainAction} and {@link sap.f.semantic.FooterMainAction} controls.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.MainAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.MainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new MainAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link <code>sap.f.semantic.SemanticButton<\/code>#constructor <code>sap.f.semantic.SemanticButton<\/code>}\ncan be used as well.","!module":"sap/f/semantic/MainAction","!helpDescription":"Serves as a base class for the {@link sap.f.semantic.TitleMainAction} and {@link sap.f.semantic.FooterMainAction} controls.","getText":{"!description":"Gets current value of property <code>text<\/code>.\r\rDefines <code>MainAction<\/code> text","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class","setText":{"!description":"Sets a new value for property <code>text<\/code>.\r\rDefines <code>MainAction<\/code> text\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.f.semantic.MainAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.f.routing.TargetHandler":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.TargetHandler with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setCloseDialogs":{"!description":"Sets if a navigation should close dialogs","!static":false,"!category":"function","!type":"fn(bCloseDialogs: Boolean) -> sap.f.routing.TargetHandler","parameters":{"bCloseDialogs":"type: boolean, description: close dialogs if true"}},"getCloseDialogs":{"!description":"Gets if a navigation should close dialogs","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.routing.TargetHandler.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Instantiates a TargetHandler, a class used for closing dialogs and showing transitions in NavContainers when targets are displayed.<br/>\n<b>You should not create an own instance of this class.<\/b> It will be created when using {@link sap.f.routing.Router} or {@link sap.f.routing.Targets}.\nYou may use the {@link #setCloseDialogs} function to specify if dialogs should be closed on displaying other views.","!module":"sap/f/routing/TargetHandler","!proto":"sap.ui.base.Object","!category":"class"},"sap.f.semantic.FooterMainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FooterMainAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FooterMainAction"},"sap.f.semantic.FlagAction":{"!description":"A semantic-specific button, eligible for the <code>flagAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FlagAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FlagAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FlagAction<\/code>.","!module":"sap/f/semantic/FlagAction","!helpDescription":"A semantic-specific button, eligible for the <code>flagAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.FlexibleColumnLayoutSemanticHelper":{"!description":"Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app.\n\n<b>Note:<\/b> Using this class is not mandatory in order to build an app with <code>sap.f.FlexibleColumnLayout<\/code>, but exists for convenience only.\n\n<ul>The usage of <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> revolves around two main methods:\n<li><code>getCurrentUIState<\/code>Suggests which action buttons to show in each <code>sap.f.FlexibleColumnLayout<\/code> column,\nbased on the current control state (number and visibility of columns, layout, etc..)<\/li>\n<li><code>getNextUIState<\/code>Suggests which <code>layout<\/code> to use when navigating to another view level (e.g. from one view to two views).<\/li><\/ul>\n\nSample usage of the class:\n\n<pre>\n<code>\n var helper = sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(myFlexibleColumnLayout);\n helper.getCurrentUIState();\n helper.getNextUIState(2);\n helper.getNextUIState(0);\n<\/code>\n<\/pre>\n\nCalling <code>getCurrentUIState()<\/code> will return information which action buttons (Close, FullScreen, ExitFullScreen)\nmust be currently shown in which column, according to UX guidelines, as well as to what layout clicking them should lead.\n\nCalling <code>getNextUIState(2)<\/code> will return information about the expected layout and action buttons if the\napplication should display three views (master-detail-detail), based on the current state.\n\nSimilarly, calling <code>getNextUIState(0)<\/code> will return information about the expected layout and action buttons\nif the application should display the initial view only (master), based on the current state.\n\nFor more information, see {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState} and {@link sap.f.FlexibleColumnLayoutSemanticHelper#getNextUIState}","getInstanceFor":{"!description":"Returns an instance of the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class for a given <code>sap.f.FlexibleColumnLayout<\/code> object.","!static":true,"!category":"function","!type":"fn(oFlexibleColumnLayout: sap.f.FlexibleColumnLayout, oSettings?: Object) -> sap.f.FlexibleColumnLayoutSemanticHelper","parameters":{"oFlexibleColumnLayout":"type: sap.f.FlexibleColumnLayout, description: The <code>sap.f.FlexibleColumnLayout<\/code> object to get a semantic helper instance for","oSettings":"type: object, description: An optional settings object to be used when creating the instance.\n<b>Note:<\/b> will be considered only for the first <code>getInstanceFor<\/code> call for the given <code>sap.f.FlexibleColumnLayout<\/code> object."}},"!constructorDescription":"Constructor for a sap.f.FlexibleColumnLayoutSemanticHelper.","!module":"sap/f/FlexibleColumnLayoutSemanticHelper","!helpDescription":"Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app.\n\n<b>Note:<\/b> Using this class is not mandatory in order to build an app with <code>sap.f.FlexibleColumnLayout<\/code>, but exists for convenience only.\n\n<ul>The usage of <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> revolves around two main methods:\n<li><code>getCurrentUIState<\/code>Suggests which action buttons to show in each <code>sap.f.FlexibleColumnLayout<\/code> column,\nbased on the current control state (number and visibility of columns, layout, etc..)<\/li>\n<li><code>getNextUIState<\/code>Suggests which <code>layout<\/code> to use when navigating to another view level (e.g. from one view to two views).<\/li><\/ul>\n\nSample usage of the class:\n\n<pre>\n<code>\n var helper = sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(myFlexibleColumnLayout);\n helper.getCurrentUIState();\n helper.getNextUIState(2);\n helper.getNextUIState(0);\n<\/code>\n<\/pre>\n\nCalling <code>getCurrentUIState()<\/code> will return information which action buttons (Close, FullScreen, ExitFullScreen)\nmust be currently shown in which column, according to UX guidelines, as well as to what layout clicking them should lead.\n\nCalling <code>getNextUIState(2)<\/code> will return information about the expected layout and action buttons if the\napplication should display three views (master-detail-detail), based on the current state.\n\nSimilarly, calling <code>getNextUIState(0)<\/code> will return information about the expected layout and action buttons\nif the application should display the initial view only (master), based on the current state.\n\nFor more information, see {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState} and {@link sap.f.FlexibleColumnLayoutSemanticHelper#getNextUIState}","!proto":"sap.ui.base.Object","getNextUIState":{"!description":"Returns an object, describing the state that the control will have after navigating to a different view level.\n\nAbout the format of return value, see: {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState}","!static":false,"!category":"function","!type":"fn(iLevel: undefined) -> Object","parameters":{"iLevel":"type: undefined, description: the view level that should be represented. 0 means initial (master only), 1 - master-detail,\n2 - master-detail-detail, 3 and above - subsequent views"}},"!category":"class","getCurrentUIState":{"!description":"Returns an object, describing the current state of the control and the expected action buttons for each column.\n\n <ul>The returned object has the following structure:\n\t<li>layout - the value of the <code>layout<\/code> property<\/li>\n\t<li>maxColumnsCount - the maximum number of columns that can be displayed at once based on the control width. See {@link sap.f.FlexibleColumnLayout#getMaxColumnsCount}<\/li>\n\t<li>columnsSizes -  an object with fields <code>beginColumn, midColumn, endColumn<\/code>, representing the relative percentage sizes of the three columns as integers<\/li>\n\t<li>columnsVisibility -  an object with fields <code>beginColumn, midColumn, endColumn<\/code>, representing the visibility of the three columns<\/li>\n\t<li>isFullScreen - <code>true<\/code> if only one column is visible at the moment, <code>false<\/code> otherwise\n\t<b>Note:<\/b> This may be due to small screen size (phone) or due to a layout, for which a single column takes up the whole width<\/li>\n\t<li>isLogicallyFullScreen - <code>true<\/code> if the current <code>layout<\/code> is one of the following: <code>sap.f.LayoutType.OneColumn, sap.f.LayoutType.MidColumnFullScreen, sap.f.LayoutType.EndColumnFullScreen<\/code>, <code>false<\/code> otherwise\n\t<b>Note:<\/b> While <code>isFullScreen<\/code> can be <code>true<\/code> for any layout, due to small screen size, <code>isLogicallyFullScreen<\/code> will only be <code>true<\/code> for the layout values, listed above.<\/li>\n\t<li>actionButtonsInfo - an object with fields <code>midColumn, endColumn<\/code>, each containing an object, telling whether action buttons should be shown in the <code>mid<\/code> and <code>end<\/code> columns, and what value of the <code>layout<\/code> property should be set upon clicking these buttons.\n\tEach of these objects has the following fields: <code>closeColumn, fullScreen, exitFullScreen<\/code>. If <code>null<\/code>, then the respective action button should not be shown, otherwise provides the value of <code>layout<\/code> property for the action button.<\/li><\/ul>\n\n\tExample value:\n\n <pre>\n <code>\n {\n\t   \"layout\":\"ThreeColumnsMidExpanded\",\n\t   \"maxColumnsCount\":3,\n\t   \"columnsSizes\":{\n\t\t  \"beginColumn\":25,\n\t\t  \"midColumn\":50,\n\t\t  \"endColumn\":25\n\t   },\n\t   \"columnsVisibility\":{\n\t\t  \"beginColumn\":true,\n\t\t  \"midColumn\":true,\n\t\t  \"endColumn\":true\n\t   },\n\t   \"isFullScreen\":false,\n\t   \"isLogicallyFullScreen\":false,\n\t   \"actionButtonsInfo\":{\n\t\t  \"midColumn\":{\n\t\t\t \"fullScreen\":null,\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":null\n\t\t  },\n\t\t  \"endColumn\":{\n\t\t\t \"fullScreen\":\"EndColumnFullScreen\",\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":\"TwoColumnsBeginExpanded\"\n\t\t  }\n\t   }\n\t}\n <\/code>\n <\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"getDefaultLayouts":{"!description":"Returns the default layout types for the different numbers of columns.\n\n<ul>The returned object has the following fields:\n<li>defaultLayoutType - the layout that will be suggested by default when only 1 column needs to be shown<\/li>\n<li>defaultTwoColumnLayoutType - the layout that will be suggested by default when 2 columns have to be shown side by side<\/li>\n<li>defaultThreeColumnLayoutType - the layout that will be suggested by default when 3 columns have to be shown side by side<\/li><\/ul>","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.f.LayoutType":{"!description":"Layouts, representing the number of columns to be displayed and their relative widths for a {@link sap.f.FlexibleColumnLayout} control.\n\nEach layout has a predefined ratio for the three columns, depending on device size. Based on the device and layout, some columns are hidden.\nFor more information, refer to the ratios (in %) for each value, listed below: (dash \"-\" means non-accessible columns).\n\n<b>Note:<\/b> Please note that on a phone device, due to the limited screen size, only one column can be displayed at a time.\nFor all two-column layouts, this column is the <code>Mid<\/code> column, and for all three-column layouts - the <code>End<\/code> column,\neven though the respective column may be hidden on desktop and tablet for that particular layout.","ThreeColumnsMidExpanded":{"!description":"Desktop: 25/50/25 Begin, Mid (expanded) and End columns are displayed\nTablet:  0/67/33  Mid (expanded) and End columns are displayed, Begin is accessible by a layout arrow\nPhone:   -/-/100  only the End column is displayed\n\nUse to display all three pages (master, detail, detail-detail) when the user should focus on the detail.","!category":"enum","!type":"String"},"!module":"sap/f/library","OneColumn":{"!description":"Desktop: 100/-/-  only the Begin column is displayed\nTablet:  100/-/-  only the Begin column is displayed\nPhone:   100/-/-  only the Begin column is displayed\n\nUse to start with a master page.","!category":"enum","!type":"String"},"TwoColumnsMidExpanded":{"!description":"Desktop: 33/67/-  Begin and Mid (expanded) columns are displayed\nTablet:  33/67/-  Begin and Mid (expanded) columns are displayed\nPhone:   -/100/-  only the Mid column is displayed\n\nUse to display both a master and a detail page when the user should focus on the detail page.","!category":"enum","!type":"String"},"MidColumnFullScreen":{"!description":"Desktop: -/100/-  only the Mid column is displayed\nTablet:  -/100/-  only the Mid column is displayed\nPhone:   -/100/-  only the Mid column is displayed\n\nUse to display a detail page only, when the user should focus entirely on it.","!category":"enum","!type":"String"},"ThreeColumnsEndExpanded":{"!description":"Desktop: 25/25/50 Begin, Mid and End (expanded) columns are displayed\nTablet:  0/33/67  Mid and End (expanded) columns are displayed, Begin is accessible by layout arrows\nPhone:   -/-/100  (only the End column is displayed)\n\nUse to display all three pages (master, detail, detail-detail) when the user should focus on the detail-detail.","!category":"enum","!type":"String"},"ThreeColumnsMidExpandedEndHidden":{"!description":"Desktop: 33/67/0  Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow\nTablet:  33/67/0  Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow\nPhone:   -/-/100  only the End column is displayed\n\nUse to display the master and detail pages when the user should focus on the detail.\nThe detail-detail is still loaded and easily accessible with a layout arrow.","!category":"enum","!type":"String"},"!category":"static class","EndColumnFullScreen":{"!description":"Desktop: -/-/100  only the End column is displayed\nTablet:  -/-/100  only the End column is displayed\nPhone:   -/-/100  only the End column is displayed\n\nUse to display a detail-detail page only, when the user should focus entirely on it.","!category":"enum","!type":"String"},"TwoColumnsBeginExpanded":{"!description":"Desktop: 67/33/-  Begin (expanded) and Mid columns are displayed\nTablet:  67/33/-  Begin (expanded) and Mid columns are displayed\nPhone:   -/100/-  only the Mid column is displayed\n\nUse to display both a master and a detail page when the user should focus on the master page.","!category":"enum","!type":"String"},"ThreeColumnsBeginExpandedEndHidden":{"!description":"Desktop: 67/33/0  Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows\nTablet:  67/33/0  Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows\nPhone:   -/-/100  only the End column is displayed\n\nUse to display the master and detail pages when the user should focus on the master.\nThe detail-detail is still loaded and easily accessible with layout arrows.","!category":"enum","!type":"String"}},"sap.f.semantic.ExitFullScreenAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.ExitFullScreenAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.ExitFullScreenAction"},"sap.f.semantic.CloseAction":{"!description":"A semantic-specific button, eligible for the <code>closeAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.CloseAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.CloseAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>CloseAction<\/code>.","!module":"sap/f/semantic/CloseAction","!helpDescription":"A semantic-specific button, eligible for the <code>closeAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.routing.Targets":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.Targets with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Targets.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.routing.Targets.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Provides a convenient way for placing views into the correct containers of your application.\nThe sap.f extension of Targets also handles the triggering of page navigation when the target control is a {@link sap.f.FlexibleColumnLayout}.\nOther controls are also allowed, but the extra parameters viewLevel, transition and transitionParameters are ignored and it will behave like {@link sap.ui.core.routing.Targets}.\nWhen a target is displayed, dialogs will be closed. To change this use {@link #getTargetHandler} and {@link sap.f.routing.TargetHandler#setCloseDialogs}.","!module":"sap/f/routing/Targets","!proto":"sap.ui.core.routing.Targets","!category":"class","getTargetHandler":{"!description":"Returns the TargetHandler instance.","!static":false,"!category":"function","!type":"fn() -> sap.f.routing.TargetHandler"}},"sap.f.semantic.DeleteAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.DeleteAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.DeleteAction"},"sap.f.semantic":{"TitleMainAction":"sap.f.semantic.TitleMainAction_obj","PrintAction":"sap.f.semantic.PrintAction_obj","SemanticControl":"sap.f.semantic.SemanticControl_obj","FullScreenAction":"sap.f.semantic.FullScreenAction_obj","!category":"namespace","headerExpanded":{"!description":"Determines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware, that initially collapsed header state is not supported,\nso <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.","!category":"enum","!type":"Boolean"},"MainAction":"sap.f.semantic.MainAction_obj","AddAction":"sap.f.semantic.AddAction_obj","enabled":{"!description":"Determines whether the <code>SemanticButton<\/code> is enabled.","!category":"enum","!type":"Boolean"},"showFooter":{"!description":"Determines whether the footer is visible.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"SendEmailAction":"sap.f.semantic.SendEmailAction_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"NegativeAction":"sap.f.semantic.NegativeAction_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!category":"enum","!type":"[String]"},"SemanticButton":"sap.f.semantic.SemanticButton_obj","text":{"!description":"Defines <code>PositiveAction<\/code> text.\n<b>Note:<\/b> the default text is \"Accept\"","!category":"enum","!type":"String"},"FavoriteAction":"sap.f.semantic.FavoriteAction_obj","FlagAction":"sap.f.semantic.FlagAction_obj","SemanticToggleButton":"sap.f.semantic.SemanticToggleButton_obj","SendMessageAction":"sap.f.semantic.SendMessageAction_obj","headerPinnable":{"!description":"Determines whether the header is pinnable.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"CopyAction":"sap.f.semantic.CopyAction_obj","toggleHeaderOnTitleClick":{"!description":"Determines whether the the user can switch between the expanded/collapsed states of the\nheader by clicking on the title.\n\nIf set to <code>false<\/code>, the title is not clickable and the application\nmust provide other means for expanding/collapsing the header, if necessary.","!category":"enum","!type":"Boolean"},"pressed":{"!description":"Defines the <code>SemanticToggleButton<\/code> pressed state.\n\nThe property is set to <code>true<\/code> when the control is toggled (default is <code>false<\/code>).","!category":"enum","!type":"Boolean"},"DiscussInJamAction":"sap.f.semantic.DiscussInJamAction_obj","PositiveAction":"sap.f.semantic.PositiveAction_obj","ShareInJamAction":"sap.f.semantic.ShareInJamAction_obj","ExitFullScreenAction":"sap.f.semantic.ExitFullScreenAction_obj","MessagesIndicator":"sap.f.semantic.MessagesIndicator_obj","FooterMainAction":"sap.f.semantic.FooterMainAction_obj","SemanticPage":"sap.f.semantic.SemanticPage_obj","DeleteAction":"sap.f.semantic.DeleteAction_obj","preserveHeaderStateOnScroll":{"!description":"Preserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title\nand then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the title and the header\nare with height larger than a given threshold.","!category":"enum","!type":"Boolean"},"CloseAction":"sap.f.semantic.CloseAction_obj"},"sap.f.semantic.SendMessageAction":{"!description":"A semantic-specific button, eligible for the <code>sendMessageAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendMessageAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SendMessageAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SendMessageAction<\/code>.","!module":"sap/f/semantic/SendMessageAction","!helpDescription":"A semantic-specific button, eligible for the <code>sendMessageAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class"},"sap.f.semantic.PositiveAction":{"!description":"A semantic-specific button, eligible for the <code>positiveAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.PositiveAction with name <code>sClassName<\/code>\rand enriches it with the information contained in <code>oClassInfo<\/code>.\r\r<code>oClassInfo<\/code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton<\/code>.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.PositiveAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>PositiveAction<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link <code>sap.f.semantic.SemanticButton<\/code>#constructor <code>sap.f.semantic.SemanticButton<\/code>}\ncan be used as well.","!module":"sap/f/semantic/PositiveAction","!helpDescription":"A semantic-specific button, eligible for the <code>positiveAction<\/code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.","getText":{"!description":"Gets current value of property <code>text<\/code>.\r\rDefines <code>PositiveAction<\/code> text.\n<b>Note:<\/b> the default text is \"Accept\"","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"<code>sap.f.semantic.SemanticButton<\/code>","!category":"class","setText":{"!description":"Sets a new value for property <code>text<\/code>.\r\rDefines <code>PositiveAction<\/code> text.\n<b>Note:<\/b> the default text is \"Accept\"\r\rWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.f.semantic.PositiveAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}}}}