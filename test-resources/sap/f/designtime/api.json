{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.46.8",
	"library": "sap.f",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.f",
			"basename": "f",
			"resource": "sap/f/library.js",
			"module": "sap/f/library",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "SAPUI5 library with controls specialized for Fiori applications."
		},
		{
			"kind": "class",
			"name": "sap.f.Avatar",
			"basename": "Avatar",
			"resource": "sap/f/Avatar.js",
			"module": "sap/f/Avatar",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"extends": "sap.ui.core.Control",
			"description": "An image-like control that has different display options for representing images, initials,\nand icons.\n\n<h3>Overview</h3>\n\nThe <code>Avatar</code> control allows the usage of different content, shapes, and sizes\ndepending on the use case.\n\nThe content types that can be displayed are either images, icons, or initials. The shape\ncan be circular or square. There are several predefined sizes, as well as an option to\nset a custom size.\n\n<h3>Usage</h3>\n\nUp to two Latin letters can be displayed as initials in an <code>Avatar</code>. If there\nare more than two letters, or if there's a non-Latin character present, a default image\nplaceholder will be created.\n\nThere are two options for how the displayed image can fit inside the\navailable area:\n<ul>\n<li>Cover - the image is scaled to cover all of the available area</li>\n<li>Contain - the image is scaled as large as possible while both\nits height and width fit inside the avalable area</li>\n</ul>\n<b>Note:</b> To set a custom size for the <code>Avatar</code>, you have to choose the <code>Custom</code>\nvalue for the <code>displaySize</code> property. Then, you have to set both the\n<code>customDisplaySize</code> and <code>customFontSize</code> properties.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "src",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Determines the path to the desired image or icon.",
						"methods": [
							"getSrc",
							"setSrc"
						]
					},
					{
						"name": "initials",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Defines the displayed initials.",
						"methods": [
							"getInitials",
							"setInitials"
						]
					},
					{
						"name": "displayShape",
						"type": "sap.f.AvatarShape",
						"defaultValue": "Circle",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the shape of the <code>Avatar</code>.",
						"methods": [
							"getDisplayShape",
							"setDisplayShape"
						]
					},
					{
						"name": "displaySize",
						"type": "sap.f.AvatarSize",
						"defaultValue": "S",
						"group": "Appearance",
						"visibility": "public",
						"description": "Sets a predefined display size of the <code>Avatar</code>.",
						"methods": [
							"getDisplaySize",
							"setDisplaySize"
						]
					},
					{
						"name": "customDisplaySize",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "3rem",
						"group": "Appearance",
						"visibility": "public",
						"description": "Specifies custom display size of the <code>Avatar</code>.\n\n<b>Note:</b> It takes effect if the <code>displaySize</code> property is set to <code>Custom</code>.",
						"methods": [
							"getCustomDisplaySize",
							"setCustomDisplaySize"
						]
					},
					{
						"name": "customFontSize",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "1.125rem",
						"group": "Appearance",
						"visibility": "public",
						"description": "Specifies custom font size of the <code>Avatar</code>.\n\n<b>Note:</b> It takes effect if the <code>displaySize</code> property is set to <code>Custom</code>.",
						"methods": [
							"getCustomFontSize",
							"setCustomFontSize"
						]
					},
					{
						"name": "imageFitType",
						"type": "sap.f.AvatarImageFitType",
						"defaultValue": "Cover",
						"group": "Appearance",
						"visibility": "public",
						"description": "Specifies how an image would fit in the <code>Avatar</code>.",
						"methods": [
							"getImageFitType",
							"setImageFitType"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "Fired when the user selects the control.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>Avatar</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the user selects the control."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.f.Avatar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.f.Avatar</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.f.Avatar</code> itself.\r\rFired when the user selects the control."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.f.Avatar</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.Avatar with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getCustomDisplaySize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>customDisplaySize</code>"
					},
					"description": "Gets current value of property <code>customDisplaySize</code>.\r\rSpecifies custom display size of the <code>Avatar</code>.\n\n<b>Note:</b> It takes effect if the <code>displaySize</code> property is set to <code>Custom</code>.\r\rDefault value is <code>3rem</code>."
				},
				{
					"name": "getCustomFontSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>customFontSize</code>"
					},
					"description": "Gets current value of property <code>customFontSize</code>.\r\rSpecifies custom font size of the <code>Avatar</code>.\n\n<b>Note:</b> It takes effect if the <code>displaySize</code> property is set to <code>Custom</code>.\r\rDefault value is <code>1.125rem</code>."
				},
				{
					"name": "getDisplayShape",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.AvatarShape",
						"description": "Value of property <code>displayShape</code>"
					},
					"description": "Gets current value of property <code>displayShape</code>.\r\rDefines the shape of the <code>Avatar</code>.\r\rDefault value is <code>Circle</code>."
				},
				{
					"name": "getDisplaySize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.AvatarSize",
						"description": "Value of property <code>displaySize</code>"
					},
					"description": "Gets current value of property <code>displaySize</code>.\r\rSets a predefined display size of the <code>Avatar</code>.\r\rDefault value is <code>S</code>."
				},
				{
					"name": "getImageFitType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.AvatarImageFitType",
						"description": "Value of property <code>imageFitType</code>"
					},
					"description": "Gets current value of property <code>imageFitType</code>.\r\rSpecifies how an image would fit in the <code>Avatar</code>.\r\rDefault value is <code>Cover</code>."
				},
				{
					"name": "getInitials",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>initials</code>"
					},
					"description": "Gets current value of property <code>initials</code>.\r\rDefines the displayed initials."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.Avatar."
				},
				{
					"name": "getSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>src</code>"
					},
					"description": "Gets current value of property <code>src</code>.\r\rDetermines the path to the desired image or icon."
				},
				{
					"name": "setCustomDisplaySize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sCustomDisplaySize",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>customDisplaySize</code>"
						}
					],
					"description": "Sets a new value for property <code>customDisplaySize</code>.\r\rSpecifies custom display size of the <code>Avatar</code>.\n\n<b>Note:</b> It takes effect if the <code>displaySize</code> property is set to <code>Custom</code>.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>3rem</code>."
				},
				{
					"name": "setCustomFontSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sCustomFontSize",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>customFontSize</code>"
						}
					],
					"description": "Sets a new value for property <code>customFontSize</code>.\r\rSpecifies custom font size of the <code>Avatar</code>.\n\n<b>Note:</b> It takes effect if the <code>displaySize</code> property is set to <code>Custom</code>.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>1.125rem</code>."
				},
				{
					"name": "setDisplayShape",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplayShape",
							"type": "sap.f.AvatarShape",
							"optional": false,
							"description": "New value for property <code>displayShape</code>"
						}
					],
					"description": "Sets a new value for property <code>displayShape</code>.\r\rDefines the shape of the <code>Avatar</code>.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>Circle</code>."
				},
				{
					"name": "setDisplaySize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDisplaySize",
							"type": "sap.f.AvatarSize",
							"optional": false,
							"description": "New value for property <code>displaySize</code>"
						}
					],
					"description": "Sets a new value for property <code>displaySize</code>.\r\rSets a predefined display size of the <code>Avatar</code>.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>S</code>."
				},
				{
					"name": "setImageFitType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sImageFitType",
							"type": "sap.f.AvatarImageFitType",
							"optional": false,
							"description": "New value for property <code>imageFitType</code>"
						}
					],
					"description": "Sets a new value for property <code>imageFitType</code>.\r\rSpecifies how an image would fit in the <code>Avatar</code>.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>Cover</code>."
				},
				{
					"name": "setInitials",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sInitials",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>initials</code>"
						}
					],
					"description": "Sets a new value for property <code>initials</code>.\r\rDefines the displayed initials.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.Avatar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSrc",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>src</code>"
						}
					],
					"description": "Sets a new value for property <code>src</code>.\r\rDetermines the path to the desired image or icon.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.f.AvatarImageFitType",
			"basename": "AvatarImageFitType",
			"resource": "sap/f/library.js",
			"module": "sap/f/library",
			"export": "AvatarImageFitType",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"description": "Types of image size and position that determine how an image fits in the {@link sap.f.Avatar} control area.",
			"properties": [
				{
					"name": "Contain",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The image is scaled to the largest size so that both its width and height can fit in the control area."
				},
				{
					"name": "Cover",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The image is scaled to be large enough so that the control area is completely covered."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.f.AvatarShape",
			"basename": "AvatarShape",
			"resource": "sap/f/library.js",
			"module": "sap/f/library",
			"export": "AvatarShape",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"description": "Types of shape for the {@link sap.f.Avatar} control.",
			"properties": [
				{
					"name": "Circle",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Circular shape."
				},
				{
					"name": "Square",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Square shape."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.f.AvatarSize",
			"basename": "AvatarSize",
			"resource": "sap/f/library.js",
			"module": "sap/f/library",
			"export": "AvatarSize",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"description": "Predefined sizes for the {@link sap.f.Avatar} control.",
			"properties": [
				{
					"name": "Custom",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Custom size"
				},
				{
					"name": "L",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Control size - 5rem\nFont size - 2rem"
				},
				{
					"name": "M",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Control size - 4rem\nFont size - 1.625rem"
				},
				{
					"name": "S",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Control size - 3rem\nFont size - 1.125rem"
				},
				{
					"name": "XL",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Control size - 7rem\nFont size - 2.75rem"
				},
				{
					"name": "XS",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Control size - 2rem\nFont size - 0.75rem"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.f.AvatarType",
			"basename": "AvatarType",
			"resource": "sap/f/library.js",
			"module": "sap/f/library",
			"export": "AvatarType",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"description": "Types of {@link sap.f.Avatar} based on the displayed content.",
			"properties": [
				{
					"name": "Icon",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The displayed content is an icon."
				},
				{
					"name": "Image",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The displayed content is an image."
				},
				{
					"name": "Initials",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The displayed content is initials."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.DynamicPage",
			"basename": "DynamicPage",
			"resource": "sap/f/DynamicPage.js",
			"module": "sap/f/DynamicPage",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.42",
			"extends": "sap.ui.core.Control",
			"description": "A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.\n\n<h3>Overview</h3>\n\nThe control consist of several components:\n\n<ul><li>{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading\non the left side, content in the middle, and actions on the right. The displayed\ncontent changes based on the current mode of the {@link sap.f.DynamicPageHeader\nDynamicPageHeader}.</li>\n<li>{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which\ncan contain a single layout control and does not care about the content alignment\nand responsiveness. The header works in two modes - expanded and snapped and its\nbehavior can be adjusted with the help of different properties.</li>\n<li>Content area - a generic container, which can have a single UI5 layout control\nand does not care about the content alignment and responsiveness.</li>\n<li>Footer - positioned at the bottom with a small offset and used for additional\nactions, the footer floats above the content. It can be any {@link sap.m.IBar}\ncontrol.</li></ul>\n\n<h3>Usage</h3>\n\nUse the <code>DynamicPage</code> if you need to have a title, that is always visible\nand a header, that has configurable Expanding/Snapping functionality.\nIf you don't need the Expanding/Snapping functionality it is better to use the\n{@link sap.m.Page} as a lighter control.\n\n<ul><b>Notes:</b>\n<li>If you're displaying a {@link sap.m.FlexBox} with non-adaptive content\n(doesn't stretch to fill the available space), it is recommended to set the\n<code>fitContainer</code> property of the {@link sap.m.FlexBox FlexBox} to\n<code>false</code>.</li>\n<li>If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is\nnon-adaptive and may cause unpredicted behavior for the <code>DynamicPage</code>\non smaller screen sizes, such as mobile.</li></ul>\n\n<h3>Responsive Behavior</h3>\n\nThe responsive behavior of the <code>DynamicPage</code> depends on the behavior of\nthe content that is displayed.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "preserveHeaderStateOnScroll",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Preserves the current header state when scrolling.\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n<br><b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the control`s title and header\nare with height larger than the given threshold.",
						"methods": [
							"getPreserveHeaderStateOnScroll",
							"setPreserveHeaderStateOnScroll"
						]
					},
					{
						"name": "headerExpanded",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:</b> Please be aware that initially collapsed header state is not supported, so <code>headerExpanded</code> should not be set to <code>false</code> when initializing the control.",
						"methods": [
							"getHeaderExpanded",
							"setHeaderExpanded"
						]
					},
					{
						"name": "toggleHeaderOnTitleClick",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the the user can switch between the expanded/collapsed states of the\n<code>DynamicPageHeader</code> by clicking on the <code>DynamicPageTitle</code>. If set to\n<code>false</code>, the <code>DynamicPageTitle</code> is not clickable and the application\nmust provide other means for expanding/collapsing the <code>DynamicPageHeader</code>, if necessary.",
						"methods": [
							"getToggleHeaderOnTitleClick",
							"setToggleHeaderOnTitleClick"
						]
					},
					{
						"name": "showFooter",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the footer is visible.",
						"methods": [
							"getShowFooter",
							"setShowFooter"
						]
					},
					{
						"name": "fitContent",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Optimizes <code>DynamicPage</code> responsiveness on small screens and behavior\nwhen expanding/collapsing the <code>DynamicPageHeader</code>.\n\n<b>Note:</b> It is recommended to use this property when displaying content\nof adaptive controls that stretch to fill the available space,\nsuch as {@link sap.ui.table.Table} and  {@link sap.ui.table.AnalyticalTable}.",
						"methods": [
							"getFitContent",
							"setFitContent"
						]
					}
				],
				"aggregations": [
					{
						"name": "title",
						"singularName": "title",
						"type": "sap.f.DynamicPageTitle",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "<code>DynamicPage</code> title.",
						"methods": [
							"getTitle",
							"destroyTitle",
							"setTitle"
						]
					},
					{
						"name": "header",
						"singularName": "header",
						"type": "sap.f.DynamicPageHeader",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "<code>DynamicPage</code> header.",
						"methods": [
							"getHeader",
							"destroyHeader",
							"setHeader"
						]
					},
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "<code>DynamicPage</code> content.",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					},
					{
						"name": "footer",
						"singularName": "footer",
						"type": "sap.m.IBar",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "<code>DynamicPage</code> floating footer.",
						"methods": [
							"getFooter",
							"destroyFooter",
							"setFooter"
						]
					},
					{
						"name": "_scrollBar",
						"singularName": "_scrollBar",
						"type": "sap.ui.core.ScrollBar",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "<code>DynamicPage</code> custom <code>ScrollBar</code>.",
						"methods": [
							"get_scrollBar",
							"destroy_scrollBar",
							"set_scrollBar"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>DynamicPage</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the content in the aggregation <code>content</code>."
				},
				{
					"name": "destroyFooter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the footer in the aggregation <code>footer</code>."
				},
				{
					"name": "destroyHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the header in the aggregation <code>header</code>."
				},
				{
					"name": "destroyTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the title in the aggregation <code>title</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.DynamicPage with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>content</code>.\r\r<code>DynamicPage</code> content."
				},
				{
					"name": "getFitContent",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>fitContent</code>"
					},
					"description": "Gets current value of property <code>fitContent</code>.\r\rOptimizes <code>DynamicPage</code> responsiveness on small screens and behavior\nwhen expanding/collapsing the <code>DynamicPageHeader</code>.\n\n<b>Note:</b> It is recommended to use this property when displaying content\nof adaptive controls that stretch to fill the available space,\nsuch as {@link sap.ui.table.Table} and  {@link sap.ui.table.AnalyticalTable}.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getFooter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.IBar"
					},
					"description": "Gets content of aggregation <code>footer</code>.\r\r<code>DynamicPage</code> floating footer."
				},
				{
					"name": "getHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageHeader"
					},
					"description": "Gets content of aggregation <code>header</code>.\r\r<code>DynamicPage</code> header."
				},
				{
					"name": "getHeaderExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>headerExpanded</code>"
					},
					"description": "Gets current value of property <code>headerExpanded</code>.\r\rDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:</b> Please be aware that initially collapsed header state is not supported, so <code>headerExpanded</code> should not be set to <code>false</code> when initializing the control.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.DynamicPage."
				},
				{
					"name": "getPreserveHeaderStateOnScroll",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>preserveHeaderStateOnScroll</code>"
					},
					"description": "Gets current value of property <code>preserveHeaderStateOnScroll</code>.\r\rPreserves the current header state when scrolling.\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n<br><b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the control`s title and header\nare with height larger than the given threshold.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getShowFooter",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showFooter</code>"
					},
					"description": "Gets current value of property <code>showFooter</code>.\r\rDetermines whether the footer is visible.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle"
					},
					"description": "Gets content of aggregation <code>title</code>.\r\r<code>DynamicPage</code> title."
				},
				{
					"name": "getToggleHeaderOnTitleClick",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>toggleHeaderOnTitleClick</code>"
					},
					"description": "Gets current value of property <code>toggleHeaderOnTitleClick</code>.\r\rDetermines whether the the user can switch between the expanded/collapsed states of the\n<code>DynamicPageHeader</code> by clicking on the <code>DynamicPageTitle</code>. If set to\n<code>false</code>, the <code>DynamicPageTitle</code> is not clickable and the application\nmust provide other means for expanding/collapsing the <code>DynamicPageHeader</code>, if necessary.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content to set"
						}
					],
					"description": "Sets the aggregated <code>content</code>."
				},
				{
					"name": "setFitContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bFitContent",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>fitContent</code>"
						}
					],
					"description": "Sets a new value for property <code>fitContent</code>.\r\rOptimizes <code>DynamicPage</code> responsiveness on small screens and behavior\nwhen expanding/collapsing the <code>DynamicPageHeader</code>.\n\n<b>Note:</b> It is recommended to use this property when displaying content\nof adaptive controls that stretch to fill the available space,\nsuch as {@link sap.ui.table.Table} and  {@link sap.ui.table.AnalyticalTable}.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setFooter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFooter",
							"type": "sap.m.IBar",
							"optional": false,
							"description": "The footer to set"
						}
					],
					"description": "Sets the aggregated <code>footer</code>."
				},
				{
					"name": "setHeader",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeader",
							"type": "sap.f.DynamicPageHeader",
							"optional": false,
							"description": "The header to set"
						}
					],
					"description": "Sets the aggregated <code>header</code>."
				},
				{
					"name": "setHeaderExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHeaderExpanded",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>headerExpanded</code>"
						}
					],
					"description": "Sets a new value for property <code>headerExpanded</code>.\r\rDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:</b> Please be aware that initially collapsed header state is not supported, so <code>headerExpanded</code> should not be set to <code>false</code> when initializing the control.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setPreserveHeaderStateOnScroll",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPreserveHeaderStateOnScroll",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>preserveHeaderStateOnScroll</code>"
						}
					],
					"description": "Sets a new value for property <code>preserveHeaderStateOnScroll</code>.\r\rPreserves the current header state when scrolling.\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n<br><b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the control`s title and header\nare with height larger than the given threshold.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setShowFooter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowFooter",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showFooter</code>"
						}
					],
					"description": "Sets a new value for property <code>showFooter</code>.\r\rDetermines whether the footer is visible.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setTitle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitle",
							"type": "sap.f.DynamicPageTitle",
							"optional": false,
							"description": "The title to set"
						}
					],
					"description": "Sets the aggregated <code>title</code>."
				},
				{
					"name": "setToggleHeaderOnTitleClick",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bToggleHeaderOnTitleClick",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>toggleHeaderOnTitleClick</code>"
						}
					],
					"description": "Sets a new value for property <code>toggleHeaderOnTitleClick</code>.\r\rDetermines whether the the user can switch between the expanded/collapsed states of the\n<code>DynamicPageHeader</code> by clicking on the <code>DynamicPageTitle</code>. If set to\n<code>false</code>, the <code>DynamicPageTitle</code> is not clickable and the application\nmust provide other means for expanding/collapsing the <code>DynamicPageHeader</code>, if necessary.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.DynamicPageHeader",
			"basename": "DynamicPageHeader",
			"resource": "sap/f/DynamicPageHeader.js",
			"module": "sap/f/DynamicPageHeader",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.42",
			"extends": "sap.ui.core.Control",
			"description": "Header of the {@link sap.f.DynamicPage}.\n\n<h3>Overview</h3>\n\nThe <code>DynamicPageHeader</code> control is part of the {@link sap.f.DynamicPage} family\nand is used to serve as header of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage</h3>\n\nThe <code>DynamicPageHeader</code> can hold any layout control and has  two states - expanded\nand collapsed (snapped). The switching between these states happens when:\n\n<ul><li>the user scrolls below its bottom margin</li>\n<li>the user clicks on the {@link sap.f.DynamicPageTitle DynamicPageTitle}</li>\n<li>through the {@link sap.f.DynamicPage DynamicPage} property <code>headerExpanded</code></li></ul>\n\n<h3>Responsive Behavior</h3>\n\nThe responsive behavior of the <code>DynamicPageHeader</code> depends on the behavior of the\ncontent that is displayed.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "pinnable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether the header is pinnable.",
						"methods": [
							"getPinnable",
							"setPinnable"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content of the header.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					},
					{
						"name": "_pinButton",
						"singularName": "_pinButton",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The pin/unpin button in the header.",
						"methods": [
							"get_pinButton",
							"destroy_pinButton",
							"set_pinButton"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>DynamicPageHeader</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.DynamicPageHeader with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\r\rThe content of the header."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.DynamicPageHeader."
				},
				{
					"name": "getPinnable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>pinnable</code>"
					},
					"description": "Gets current value of property <code>pinnable</code>.\r\rDetermines whether the header is pinnable.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\r             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\r             greater than the current size of the aggregation, the content is inserted at\r             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The content to remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "setPinnable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageHeader",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPinnable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>pinnable</code>"
						}
					],
					"description": "Sets a new value for property <code>pinnable</code>.\r\rDetermines whether the header is pinnable.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.DynamicPageTitle",
			"basename": "DynamicPageTitle",
			"resource": "sap/f/DynamicPageTitle.js",
			"module": "sap/f/DynamicPageTitle",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.42",
			"extends": "sap.ui.core.Control",
			"description": "Title of the {@link sap.f.DynamicPage}.\n\n<h3>Overview</h3>\n\nThe <code>DynamicPageTitle</code> control is part of the {@link sap.f.DynamicPage}\nfamily and is used to serve as title of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage</h3>\n\nThe <code>DynamicPageTitle</code> can hold any control and displays the most important\ninformation regarding the object that will always remain visible while scrolling.\n\n<b>Note:</b> The <code>actions</code> aggregation accepts any UI5 control, but it`s\nrecommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.\n\nIf the <code>toggleHeaderOnTitleClick</code> property of the {@link sap.f.DynamicPage DynamicPage}\nis set to <code>true</code>, the user can switch between the expanded/collapsed states of the\n{@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the <code>DynamicPageTitle</code>.\nIf set to <code>false</code>, the <code>DynamicPageTitle</code> is not clickable and the app must\nprovide other means for expanding/collapsing the <code>DynamicPageHeader</code>, if necessary.\n\n<h3>Responsive Behavior</h3>\n\nThe responsive behavior of the <code>DynamicPageTitle</code> depends on the behavior of the\ncontent that is displayed.",
			"ui5-metadata": {
				"stereotype": "control",
				"aggregations": [
					{
						"name": "heading",
						"singularName": "heading",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The title or any other UI5 control that serves as a heading for the object.",
						"methods": [
							"getHeading",
							"destroyHeading",
							"setHeading"
						]
					},
					{
						"name": "actions",
						"singularName": "action",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The <code>DynamicPageTitle</code> actions.\n<br><b>Note:</b> The <code>actions</code> aggregation accepts any UI5 control, but it`s recommended to use controls,\nsuitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.",
						"methods": [
							"getActions",
							"destroyActions",
							"insertAction",
							"addAction",
							"removeAction",
							"indexOfAction",
							"removeAllActions"
						]
					},
					{
						"name": "snappedContent",
						"singularName": "snappedContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content that is displayed in the <code>DynamicPageTitle</code> in collapsed (snapped) state.",
						"methods": [
							"getSnappedContent",
							"destroySnappedContent",
							"insertSnappedContent",
							"addSnappedContent",
							"removeSnappedContent",
							"indexOfSnappedContent",
							"removeAllSnappedContent"
						]
					},
					{
						"name": "expandedContent",
						"singularName": "expandedContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content that is displayed in the <code>DynamicPageTitle</code> in expanded state.",
						"methods": [
							"getExpandedContent",
							"destroyExpandedContent",
							"insertExpandedContent",
							"addExpandedContent",
							"removeExpandedContent",
							"indexOfExpandedContent",
							"removeAllExpandedContent"
						]
					},
					{
						"name": "_overflowToolbar",
						"singularName": "_overflowToolbar",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal <code>OverflowToolbar</code> for the <code>DynamicPageTitle</code> actions.",
						"methods": [
							"get_overflowToolbar",
							"destroy_overflowToolbar",
							"set_overflowToolbar"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>DynamicPageTitle</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the action to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some action to the aggregation <code>actions</code>."
				},
				{
					"name": "addExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oExpandedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the expandedContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some expandedContent to the aggregation <code>expandedContent</code>."
				},
				{
					"name": "addSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSnappedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the snappedContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some snappedContent to the aggregation <code>snappedContent</code>."
				},
				{
					"name": "destroyActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the actions in the aggregation <code>actions</code>."
				},
				{
					"name": "destroyExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the expandedContent in the aggregation <code>expandedContent</code>."
				},
				{
					"name": "destroyHeading",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the heading in the aggregation <code>heading</code>."
				},
				{
					"name": "destroySnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the snappedContent in the aggregation <code>snappedContent</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.DynamicPageTitle with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>actions</code>.\r\rThe <code>DynamicPageTitle</code> actions.\n<br><b>Note:</b> The <code>actions</code> aggregation accepts any UI5 control, but it`s recommended to use controls,\nsuitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}."
				},
				{
					"name": "getExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>expandedContent</code>.\r\rThe content that is displayed in the <code>DynamicPageTitle</code> in expanded state."
				},
				{
					"name": "getHeading",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>heading</code>.\r\rThe title or any other UI5 control that serves as a heading for the object."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.DynamicPageTitle."
				},
				{
					"name": "getSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>snappedContent</code>.\r\rThe content that is displayed in the <code>DynamicPageTitle</code> in collapsed (snapped) state."
				},
				{
					"name": "indexOfAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The action whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>actions</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oExpandedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The expandedContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>expandedContent</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oSnappedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The snappedContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>snappedContent</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAction",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the action to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the action should be inserted at; for\r             a negative value of <code>iIndex</code>, the action is inserted at position 0; for a value\r             greater than the current size of the aggregation, the action is inserted at\r             the last position"
						}
					],
					"description": "Inserts a action into the aggregation <code>actions</code>."
				},
				{
					"name": "insertExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oExpandedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the expandedContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the expandedContent should be inserted at; for\r             a negative value of <code>iIndex</code>, the expandedContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the expandedContent is inserted at\r             the last position"
						}
					],
					"description": "Inserts a expandedContent into the aggregation <code>expandedContent</code>."
				},
				{
					"name": "insertSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSnappedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the snappedContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the snappedContent should be inserted at; for\r             a negative value of <code>iIndex</code>, the snappedContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the snappedContent is inserted at\r             the last position"
						}
					],
					"description": "Inserts a snappedContent into the aggregation <code>snappedContent</code>."
				},
				{
					"name": "removeAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed action or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAction",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The action to remove or its index or id"
						}
					],
					"description": "Removes a action from the aggregation <code>actions</code>."
				},
				{
					"name": "removeAllActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>actions</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>expandedContent</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>snappedContent</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed expandedContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vExpandedContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The expandedContent to remove or its index or id"
						}
					],
					"description": "Removes a expandedContent from the aggregation <code>expandedContent</code>."
				},
				{
					"name": "removeSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed snappedContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vSnappedContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The snappedContent to remove or its index or id"
						}
					],
					"description": "Removes a snappedContent from the aggregation <code>snappedContent</code>."
				},
				{
					"name": "setHeading",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.DynamicPageTitle",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeading",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The heading to set"
						}
					],
					"description": "Sets the aggregated <code>heading</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.FlexibleColumnLayout",
			"basename": "FlexibleColumnLayout",
			"resource": "sap/f/FlexibleColumnLayout.js",
			"module": "sap/f/FlexibleColumnLayout",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"extends": "sap.ui.core.Control",
			"description": "Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.\n\n<h3>Overview</h3>\n\nThe control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling\nthree columns (referred to as <code>Begin</code>, <code>Mid</code> and <code>End</code>) rather than two\n(<code>Master</code>, <code>Detail</code>). The width of the three columns is variable.\n\nThere are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows.\n\nInternally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.\n\n<h3>Usage</h3>\n\nUse this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.).\nThe control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.\n\nThe columns are accessible with the <code>beginColumnPages</code>, <code>midColumnPages</code> and <code>endColumnPages</code> aggregations.\n\nThe relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.\n\nChanges to the layout due to user interaction are communicated to the app with the <code>stateChange</code> event.\n\n<ul><b>Notes:</b>\n<li>To easily implement the recommended UX design of a <code>sap.f.FlexibleColumnLayout</code>-based app,\nyou can use the <code>sap.f.FlexibleColumnLayoutSemanticHelper</code> class.</li>\n<li>To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} </li></ul>\n\n<h3>Responsive Behavior</h3>\n\nThe control automatically displays the maximum possible number of columns based on the device size and current <code>layout</code>.\nThe app does not need to take into consideration the current device/screen size, but only to add content to the\ncolumns and change the value of the <code>layout</code> property.\n\nFor detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "layout",
						"type": "sap.f.LayoutType",
						"defaultValue": "OneColumn",
						"group": "Misc",
						"visibility": "public",
						"description": "Determines the layout of the control - number of visible columns and their relative sizes",
						"methods": [
							"getLayout",
							"setLayout"
						]
					},
					{
						"name": "defaultTransitionNameBeginColumn",
						"type": "string",
						"defaultValue": "slide",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the type of the transition/animation to apply for the <code>Begin</code> column when <code>to()</code> is called without defining the\ntransition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>show</code>, and the names of any registered custom transitions.",
						"methods": [
							"getDefaultTransitionNameBeginColumn",
							"setDefaultTransitionNameBeginColumn"
						]
					},
					{
						"name": "defaultTransitionNameMidColumn",
						"type": "string",
						"defaultValue": "slide",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the type of the transition/animation to apply for the <code>Mid</code> column when <code>to()</code> is called without defining the\ntransition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>show</code>, and the names of any registered custom transitions.",
						"methods": [
							"getDefaultTransitionNameMidColumn",
							"setDefaultTransitionNameMidColumn"
						]
					},
					{
						"name": "defaultTransitionNameEndColumn",
						"type": "string",
						"defaultValue": "slide",
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines the type of the transition/animation to apply for the <code>End</code> column when <code>to()</code> is called without defining the\ntransition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>show</code>, and the names of any registered custom transitions.",
						"methods": [
							"getDefaultTransitionNameEndColumn",
							"setDefaultTransitionNameEndColumn"
						]
					}
				],
				"aggregations": [
					{
						"name": "beginColumnPages",
						"singularName": "beginColumnPage",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>Begin</code> column.\n\nThese should be any control with page semantics.\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.",
						"methods": [
							"getBeginColumnPages",
							"destroyBeginColumnPages",
							"insertBeginColumnPage",
							"addBeginColumnPage",
							"removeBeginColumnPage",
							"indexOfBeginColumnPage",
							"removeAllBeginColumnPages"
						]
					},
					{
						"name": "midColumnPages",
						"singularName": "midColumnPage",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>Mid</code> column.\n\nThese should be any control with page semantics.\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.",
						"methods": [
							"getMidColumnPages",
							"destroyMidColumnPages",
							"insertMidColumnPage",
							"addMidColumnPage",
							"removeMidColumnPage",
							"indexOfMidColumnPage",
							"removeAllMidColumnPages"
						]
					},
					{
						"name": "endColumnPages",
						"singularName": "endColumnPage",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>End</code> column.\n\nThese should be any control with page semantics.\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.",
						"methods": [
							"getEndColumnPages",
							"destroyEndColumnPages",
							"insertEndColumnPage",
							"addEndColumnPage",
							"removeEndColumnPage",
							"indexOfEndColumnPage",
							"removeAllEndColumnPages"
						]
					},
					{
						"name": "_beginColumnNav",
						"singularName": "_beginColumnNav",
						"type": "sap.m.NavContainer",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_beginColumnNav",
							"destroy_beginColumnNav",
							"set_beginColumnNav"
						]
					},
					{
						"name": "_midColumnNav",
						"singularName": "_midColumnNav",
						"type": "sap.m.NavContainer",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_midColumnNav",
							"destroy_midColumnNav",
							"set_midColumnNav"
						]
					},
					{
						"name": "_endColumnNav",
						"singularName": "_endColumnNav",
						"type": "sap.m.NavContainer",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_endColumnNav",
							"destroy_endColumnNav",
							"set_endColumnNav"
						]
					},
					{
						"name": "_beginColumnBackArrow",
						"singularName": "_beginColumnBackArrow",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_beginColumnBackArrow",
							"destroy_beginColumnBackArrow",
							"set_beginColumnBackArrow"
						]
					},
					{
						"name": "_midColumnForwardArrow",
						"singularName": "_midColumnForwardArrow",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_midColumnForwardArrow",
							"destroy_midColumnForwardArrow",
							"set_midColumnForwardArrow"
						]
					},
					{
						"name": "_midColumnBackArrow",
						"singularName": "_midColumnBackArrow",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_midColumnBackArrow",
							"destroy_midColumnBackArrow",
							"set_midColumnBackArrow"
						]
					},
					{
						"name": "_endColumnForwardArrow",
						"singularName": "_endColumnForwardArrow",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "hidden",
						"methods": [
							"get_endColumnForwardArrow",
							"destroy_endColumnForwardArrow",
							"set_endColumnForwardArrow"
						]
					}
				],
				"associations": [
					{
						"name": "initialBeginColumnPage",
						"singularName": "initialBeginColumnPage",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Sets the initial <code>Begin</code> column page, which is displayed on application launch.",
						"methods": [
							"getInitialBeginColumnPage",
							"setInitialBeginColumnPage"
						]
					},
					{
						"name": "initialMidColumnPage",
						"singularName": "initialMidColumnPage",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Sets the initial <code>Mid</code> column page, which is displayed on application launch.",
						"methods": [
							"getInitialMidColumnPage",
							"setInitialMidColumnPage"
						]
					},
					{
						"name": "initialEndColumnPage",
						"singularName": "initialEndColumnPage",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Sets the initial <code>End</code> column page, which is displayed on application launch.",
						"methods": [
							"getInitialEndColumnPage",
							"setInitialEndColumnPage"
						]
					}
				],
				"events": [
					{
						"name": "stateChange",
						"visibility": "public",
						"description": "Fired when there is a change in the <code>layout</code> property or in the maximum number of columns that can be displayed at once.\n<br/></br>\n<ul>The interactions that may lead to a state change are:\n <li>the property <code>layout</code> was changed indirectly by the user clicking a layout arrow</li>\n <li>the user resized the browser beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.</li></ul>\n<br/><br/>\n<b>Note: </b>The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width",
						"parameters": {
							"layout": {
								"name": "layout",
								"type": "sap.f.LayoutType",
								"description": "The value of the <code>layout</code> property"
							},
							"maxColumnsCount": {
								"name": "maxColumnsCount",
								"type": "int",
								"description": "The maximum number of columns that can be displayed at once based on the available screen size and control settings.\n\n<ul>Possible values are:\n<li>3 for browser size of 1280px or more</li>\n<li>2 for browser size between 960px and 1280px</li>\n<li>1 for browser size less than 960px</li></ul>"
							},
							"isNavigationArrow": {
								"name": "isNavigationArrow",
								"type": "boolean",
								"description": "Indicates whether the layout changed as a result of the user clicking a layout arrow"
							},
							"isResize": {
								"name": "isResize",
								"type": "boolean",
								"description": "Indicates whether the maximum number of columns that can be displayed at once changed"
							}
						},
						"methods": [
							"attachStateChange",
							"detachStateChange",
							"fireStateChange"
						]
					},
					{
						"name": "beginColumnNavigate",
						"visibility": "public",
						"description": "Fires when navigation between two pages in the <code>Begin</code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.",
						"parameters": {
							"from": {
								"name": "from",
								"type": "sap.ui.core.Control",
								"description": "The page, which was displayed before the current navigation."
							},
							"fromId": {
								"name": "fromId",
								"type": "string",
								"description": "The ID of the page, which was displayed before the current navigation."
							},
							"to": {
								"name": "to",
								"type": "sap.ui.core.Control",
								"description": "The page, which will be displayed after the current navigation."
							},
							"toId": {
								"name": "toId",
								"type": "string",
								"description": "The ID of the page, which will be displayed after the current navigation."
							},
							"firstTime": {
								"name": "firstTime",
								"type": "boolean",
								"description": "Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before."
							},
							"isTo": {
								"name": "isTo",
								"type": "boolean",
								"description": "Determines whether this is a forward navigation, triggered by to()."
							},
							"isBack": {
								"name": "isBack",
								"type": "boolean",
								"description": "Determines whether this is a back navigation, triggered by back()."
							},
							"isBackToTop": {
								"name": "isBackToTop",
								"type": "boolean",
								"description": "Determines whether this is a navigation to the root page, triggered by backToTop()."
							},
							"isBackToPage": {
								"name": "isBackToPage",
								"type": "boolean",
								"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
							},
							"direction": {
								"name": "direction",
								"type": "string",
								"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
							}
						},
						"methods": [
							"attachBeginColumnNavigate",
							"detachBeginColumnNavigate",
							"fireBeginColumnNavigate"
						]
					},
					{
						"name": "afterBeginColumnNavigate",
						"visibility": "public",
						"description": "Fires when navigation between two pages in the <code>Begin</code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.",
						"parameters": {
							"from": {
								"name": "from",
								"type": "sap.ui.core.Control",
								"description": "The page, which had been displayed before navigation."
							},
							"fromId": {
								"name": "fromId",
								"type": "string",
								"description": "The ID of the page, which had been displayed before navigation."
							},
							"to": {
								"name": "to",
								"type": "sap.ui.core.Control",
								"description": "The page, which is now displayed after navigation."
							},
							"toId": {
								"name": "toId",
								"type": "string",
								"description": "The ID of the page, which is now displayed after navigation."
							},
							"firstTime": {
								"name": "firstTime",
								"type": "boolean",
								"description": "Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before."
							},
							"isTo": {
								"name": "isTo",
								"type": "boolean",
								"description": "Determines whether was a forward navigation, triggered by to()."
							},
							"isBack": {
								"name": "isBack",
								"type": "boolean",
								"description": "Determines whether this was a back navigation, triggered by back()."
							},
							"isBackToTop": {
								"name": "isBackToTop",
								"type": "boolean",
								"description": "Determines whether this was a navigation to the root page, triggered by backToTop()."
							},
							"isBackToPage": {
								"name": "isBackToPage",
								"type": "boolean",
								"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
							},
							"direction": {
								"name": "direction",
								"type": "string",
								"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
							}
						},
						"methods": [
							"attachAfterBeginColumnNavigate",
							"detachAfterBeginColumnNavigate",
							"fireAfterBeginColumnNavigate"
						]
					},
					{
						"name": "midColumnNavigate",
						"visibility": "public",
						"description": "Fires when navigation between two pages in the <code>Mid</code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.",
						"parameters": {
							"from": {
								"name": "from",
								"type": "sap.ui.core.Control",
								"description": "The page, which was displayed before the current navigation."
							},
							"fromId": {
								"name": "fromId",
								"type": "string",
								"description": "The ID of the page, which was displayed before the current navigation."
							},
							"to": {
								"name": "to",
								"type": "sap.ui.core.Control",
								"description": "The page, which will be displayed after the current navigation."
							},
							"toId": {
								"name": "toId",
								"type": "string",
								"description": "The ID of the page, which will be displayed after the current navigation."
							},
							"firstTime": {
								"name": "firstTime",
								"type": "boolean",
								"description": "Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before."
							},
							"isTo": {
								"name": "isTo",
								"type": "boolean",
								"description": "Determines whether this is a forward navigation, triggered by to()."
							},
							"isBack": {
								"name": "isBack",
								"type": "boolean",
								"description": "Determines whether this is a back navigation, triggered by back()."
							},
							"isBackToTop": {
								"name": "isBackToTop",
								"type": "boolean",
								"description": "Determines whether this is a navigation to the root page, triggered by backToTop()."
							},
							"isBackToPage": {
								"name": "isBackToPage",
								"type": "boolean",
								"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
							},
							"direction": {
								"name": "direction",
								"type": "string",
								"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
							}
						},
						"methods": [
							"attachMidColumnNavigate",
							"detachMidColumnNavigate",
							"fireMidColumnNavigate"
						]
					},
					{
						"name": "afterMidColumnNavigate",
						"visibility": "public",
						"description": "Fires when navigation between two pages in the <code>Mid</code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.",
						"parameters": {
							"from": {
								"name": "from",
								"type": "sap.ui.core.Control",
								"description": "The page, which had been displayed before navigation."
							},
							"fromId": {
								"name": "fromId",
								"type": "string",
								"description": "The ID of the page, which had been displayed before navigation."
							},
							"to": {
								"name": "to",
								"type": "sap.ui.core.Control",
								"description": "The page, which is now displayed after navigation."
							},
							"toId": {
								"name": "toId",
								"type": "string",
								"description": "The ID of the page, which is now displayed after navigation."
							},
							"firstTime": {
								"name": "firstTime",
								"type": "boolean",
								"description": "Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before."
							},
							"isTo": {
								"name": "isTo",
								"type": "boolean",
								"description": "Determines whether was a forward navigation, triggered by to()."
							},
							"isBack": {
								"name": "isBack",
								"type": "boolean",
								"description": "Determines whether this was a back navigation, triggered by back()."
							},
							"isBackToTop": {
								"name": "isBackToTop",
								"type": "boolean",
								"description": "Determines whether this was a navigation to the root page, triggered by backToTop()."
							},
							"isBackToPage": {
								"name": "isBackToPage",
								"type": "boolean",
								"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
							},
							"direction": {
								"name": "direction",
								"type": "string",
								"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
							}
						},
						"methods": [
							"attachAfterMidColumnNavigate",
							"detachAfterMidColumnNavigate",
							"fireAfterMidColumnNavigate"
						]
					},
					{
						"name": "endColumnNavigate",
						"visibility": "public",
						"description": "Fires when navigation between two pages in the <code>End</code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.",
						"parameters": {
							"from": {
								"name": "from",
								"type": "sap.ui.core.Control",
								"description": "The page, which was displayed before the current navigation."
							},
							"fromId": {
								"name": "fromId",
								"type": "string",
								"description": "The ID of the page, which was displayed before the current navigation."
							},
							"to": {
								"name": "to",
								"type": "sap.ui.core.Control",
								"description": "The page, which will be displayed after the current navigation."
							},
							"toId": {
								"name": "toId",
								"type": "string",
								"description": "The ID of the page, which will be displayed after the current navigation."
							},
							"firstTime": {
								"name": "firstTime",
								"type": "boolean",
								"description": "Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before."
							},
							"isTo": {
								"name": "isTo",
								"type": "boolean",
								"description": "Determines whether this is a forward navigation, triggered by to()."
							},
							"isBack": {
								"name": "isBack",
								"type": "boolean",
								"description": "Determines whether this is a back navigation, triggered by back()."
							},
							"isBackToTop": {
								"name": "isBackToTop",
								"type": "boolean",
								"description": "Determines whether this is a navigation to the root page, triggered by backToTop()."
							},
							"isBackToPage": {
								"name": "isBackToPage",
								"type": "boolean",
								"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
							},
							"direction": {
								"name": "direction",
								"type": "string",
								"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
							}
						},
						"methods": [
							"attachEndColumnNavigate",
							"detachEndColumnNavigate",
							"fireEndColumnNavigate"
						]
					},
					{
						"name": "afterEndColumnNavigate",
						"visibility": "public",
						"description": "Fires when navigation between two pages in the <code>End</code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.",
						"parameters": {
							"from": {
								"name": "from",
								"type": "sap.ui.core.Control",
								"description": "The page, which had been displayed before navigation."
							},
							"fromId": {
								"name": "fromId",
								"type": "string",
								"description": "The ID of the page, which had been displayed before navigation."
							},
							"to": {
								"name": "to",
								"type": "sap.ui.core.Control",
								"description": "The page, which is now displayed after navigation."
							},
							"toId": {
								"name": "toId",
								"type": "string",
								"description": "The ID of the page, which is now displayed after navigation."
							},
							"firstTime": {
								"name": "firstTime",
								"type": "boolean",
								"description": "Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before."
							},
							"isTo": {
								"name": "isTo",
								"type": "boolean",
								"description": "Determines whether was a forward navigation, triggered by to()."
							},
							"isBack": {
								"name": "isBack",
								"type": "boolean",
								"description": "Determines whether this was a back navigation, triggered by back()."
							},
							"isBackToTop": {
								"name": "isBackToTop",
								"type": "boolean",
								"description": "Determines whether this was a navigation to the root page, triggered by backToTop()."
							},
							"isBackToPage": {
								"name": "isBackToPage",
								"type": "boolean",
								"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
							},
							"direction": {
								"name": "direction",
								"type": "string",
								"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
							}
						},
						"methods": [
							"attachAfterEndColumnNavigate",
							"detachAfterEndColumnNavigate",
							"fireAfterEndColumnNavigate"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>sap.f.FlexibleColumnLayout</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "afterBeginColumnNavigate",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"from": {
											"name": "from",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which had been displayed before navigation."
										},
										"fromId": {
											"name": "fromId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which had been displayed before navigation."
										},
										"to": {
											"name": "to",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which is now displayed after navigation."
										},
										"toId": {
											"name": "toId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which is now displayed after navigation."
										},
										"firstTime": {
											"name": "firstTime",
											"type": "boolean",
											"optional": false,
											"description": "Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before."
										},
										"isTo": {
											"name": "isTo",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether was a forward navigation, triggered by to()."
										},
										"isBack": {
											"name": "isBack",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a back navigation, triggered by back()."
										},
										"isBackToTop": {
											"name": "isBackToTop",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a navigation to the root page, triggered by backToTop()."
										},
										"isBackToPage": {
											"name": "isBackToPage",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
										},
										"direction": {
											"name": "direction",
											"type": "string",
											"optional": false,
											"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
										}
									}
								}
							}
						}
					],
					"description": "Fires when navigation between two pages in the <code>Begin</code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event."
				},
				{
					"name": "afterEndColumnNavigate",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"from": {
											"name": "from",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which had been displayed before navigation."
										},
										"fromId": {
											"name": "fromId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which had been displayed before navigation."
										},
										"to": {
											"name": "to",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which is now displayed after navigation."
										},
										"toId": {
											"name": "toId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which is now displayed after navigation."
										},
										"firstTime": {
											"name": "firstTime",
											"type": "boolean",
											"optional": false,
											"description": "Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before."
										},
										"isTo": {
											"name": "isTo",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether was a forward navigation, triggered by to()."
										},
										"isBack": {
											"name": "isBack",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a back navigation, triggered by back()."
										},
										"isBackToTop": {
											"name": "isBackToTop",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a navigation to the root page, triggered by backToTop()."
										},
										"isBackToPage": {
											"name": "isBackToPage",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
										},
										"direction": {
											"name": "direction",
											"type": "string",
											"optional": false,
											"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
										}
									}
								}
							}
						}
					],
					"description": "Fires when navigation between two pages in the <code>End</code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event."
				},
				{
					"name": "afterMidColumnNavigate",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"from": {
											"name": "from",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which had been displayed before navigation."
										},
										"fromId": {
											"name": "fromId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which had been displayed before navigation."
										},
										"to": {
											"name": "to",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which is now displayed after navigation."
										},
										"toId": {
											"name": "toId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which is now displayed after navigation."
										},
										"firstTime": {
											"name": "firstTime",
											"type": "boolean",
											"optional": false,
											"description": "Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before."
										},
										"isTo": {
											"name": "isTo",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether was a forward navigation, triggered by to()."
										},
										"isBack": {
											"name": "isBack",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a back navigation, triggered by back()."
										},
										"isBackToTop": {
											"name": "isBackToTop",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a navigation to the root page, triggered by backToTop()."
										},
										"isBackToPage": {
											"name": "isBackToPage",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
										},
										"direction": {
											"name": "direction",
											"type": "string",
											"optional": false,
											"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
										}
									}
								}
							}
						}
					],
					"description": "Fires when navigation between two pages in the <code>Mid</code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event."
				},
				{
					"name": "beginColumnNavigate",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"from": {
											"name": "from",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which was displayed before the current navigation."
										},
										"fromId": {
											"name": "fromId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which was displayed before the current navigation."
										},
										"to": {
											"name": "to",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which will be displayed after the current navigation."
										},
										"toId": {
											"name": "toId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which will be displayed after the current navigation."
										},
										"firstTime": {
											"name": "firstTime",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before."
										},
										"isTo": {
											"name": "isTo",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this is a forward navigation, triggered by to()."
										},
										"isBack": {
											"name": "isBack",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this is a back navigation, triggered by back()."
										},
										"isBackToTop": {
											"name": "isBackToTop",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this is a navigation to the root page, triggered by backToTop()."
										},
										"isBackToPage": {
											"name": "isBackToPage",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
										},
										"direction": {
											"name": "direction",
											"type": "string",
											"optional": false,
											"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
										}
									}
								}
							}
						}
					],
					"description": "Fires when navigation between two pages in the <code>Begin</code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
				},
				{
					"name": "endColumnNavigate",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"from": {
											"name": "from",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which was displayed before the current navigation."
										},
										"fromId": {
											"name": "fromId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which was displayed before the current navigation."
										},
										"to": {
											"name": "to",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which will be displayed after the current navigation."
										},
										"toId": {
											"name": "toId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which will be displayed after the current navigation."
										},
										"firstTime": {
											"name": "firstTime",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before."
										},
										"isTo": {
											"name": "isTo",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this is a forward navigation, triggered by to()."
										},
										"isBack": {
											"name": "isBack",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this is a back navigation, triggered by back()."
										},
										"isBackToTop": {
											"name": "isBackToTop",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this is a navigation to the root page, triggered by backToTop()."
										},
										"isBackToPage": {
											"name": "isBackToPage",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
										},
										"direction": {
											"name": "direction",
											"type": "string",
											"optional": false,
											"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
										}
									}
								}
							}
						}
					],
					"description": "Fires when navigation between two pages in the <code>End</code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
				},
				{
					"name": "midColumnNavigate",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"from": {
											"name": "from",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which was displayed before the current navigation."
										},
										"fromId": {
											"name": "fromId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which was displayed before the current navigation."
										},
										"to": {
											"name": "to",
											"type": "sap.ui.core.Control",
											"optional": false,
											"description": "The page, which will be displayed after the current navigation."
										},
										"toId": {
											"name": "toId",
											"type": "string",
											"optional": false,
											"description": "The ID of the page, which will be displayed after the current navigation."
										},
										"firstTime": {
											"name": "firstTime",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before."
										},
										"isTo": {
											"name": "isTo",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this is a forward navigation, triggered by to()."
										},
										"isBack": {
											"name": "isBack",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this is a back navigation, triggered by back()."
										},
										"isBackToTop": {
											"name": "isBackToTop",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this is a navigation to the root page, triggered by backToTop()."
										},
										"isBackToPage": {
											"name": "isBackToPage",
											"type": "boolean",
											"optional": false,
											"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
										},
										"direction": {
											"name": "direction",
											"type": "string",
											"optional": false,
											"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
										}
									}
								}
							}
						}
					],
					"description": "Fires when navigation between two pages in the <code>Mid</code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
				},
				{
					"name": "stateChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"layout": {
											"name": "layout",
											"type": "sap.f.LayoutType",
											"optional": false,
											"description": "The value of the <code>layout</code> property"
										},
										"maxColumnsCount": {
											"name": "maxColumnsCount",
											"type": "int",
											"optional": false,
											"description": "The maximum number of columns that can be displayed at once based on the available screen size and control settings.\n\n<ul>Possible values are:\n<li>3 for browser size of 1280px or more</li>\n<li>2 for browser size between 960px and 1280px</li>\n<li>1 for browser size less than 960px</li></ul>"
										},
										"isNavigationArrow": {
											"name": "isNavigationArrow",
											"type": "boolean",
											"optional": false,
											"description": "Indicates whether the layout changed as a result of the user clicking a layout arrow"
										},
										"isResize": {
											"name": "isResize",
											"type": "boolean",
											"optional": false,
											"description": "Indicates whether the maximum number of columns that can be displayed at once changed"
										}
									}
								}
							}
						}
					],
					"description": "Fired when there is a change in the <code>layout</code> property or in the maximum number of columns that can be displayed at once.\n<br/></br>\n<ul>The interactions that may lead to a state change are:\n <li>the property <code>layout</code> was changed indirectly by the user clicking a layout arrow</li>\n <li>the user resized the browser beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.</li></ul>\n<br/><br/>\n<b>Note: </b>The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width"
				}
			],
			"methods": [
				{
					"name": "addBeginColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBeginColumnPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the beginColumnPage to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some beginColumnPage to the aggregation <code>beginColumnPages</code>."
				},
				{
					"name": "addEndColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oEndColumnPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the endColumnPage to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some endColumnPage to the aggregation <code>endColumnPages</code>."
				},
				{
					"name": "addMidColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMidColumnPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the midColumnPage to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some midColumnPage to the aggregation <code>midColumnPages</code>."
				},
				{
					"name": "attachAfterBeginColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterBeginColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.\r\rFires when navigation between two pages in the <code>Begin</code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event."
				},
				{
					"name": "attachAfterEndColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterEndColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.\r\rFires when navigation between two pages in the <code>End</code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event."
				},
				{
					"name": "attachAfterMidColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterMidColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.\r\rFires when navigation between two pages in the <code>Mid</code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event."
				},
				{
					"name": "attachBeginColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beginColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.\r\rFires when navigation between two pages in the <code>Begin</code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
				},
				{
					"name": "attachEndColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>endColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.\r\rFires when navigation between two pages in the <code>End</code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
				},
				{
					"name": "attachMidColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>midColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.\r\rFires when navigation between two pages in the <code>Mid</code> column has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation."
				},
				{
					"name": "attachStateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>stateChange</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.f.FlexibleColumnLayout</code> itself.\r\rFired when there is a change in the <code>layout</code> property or in the maximum number of columns that can be displayed at once.\n<br/></br>\n<ul>The interactions that may lead to a state change are:\n <li>the property <code>layout</code> was changed indirectly by the user clicking a layout arrow</li>\n <li>the user resized the browser beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.</li></ul>\n<br/><br/>\n<b>Note: </b>The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width"
				},
				{
					"name": "backToPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout"
					},
					"parameters": [
						{
							"name": "sPageId",
							"type": "string",
							"optional": false,
							"description": "The screen to which is being navigated to. The ID or the control itself can be given."
						},
						{
							"name": "oBackData",
							"type": "object",
							"optional": false,
							"description": "This optional object can carry any payload data which should be made available to the target page of the back navigation.\n        The event on the target page will contain this data object as backData property. (the original data from the to() navigation will still be available as data property).\n\n        In scenarios, where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used, for example, when returning from a detail page to transfer any settings done there.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."
						},
						{
							"name": "oTransitionParameters",
							"type": "object",
							"optional": false,
							"description": "This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition."
						}
					],
					"description": "Navigates back to a page in the <code>FlexibleColumnLayout</code>.\nColumns are scanned for the page in the following order: <code>Begin</code>, <code>Mid</code>, <code>End</code>.\n\nCalling this navigation method, first triggers the (cancelable) navigate event on the SplitContainer,\nthen the beforeHide pseudo event on the source page, beforeFirstShow (if applicable),\nand beforeShow on the target page. Later, after the transition has completed,\nthe afterShow pseudo event is triggered on the target page and afterHide - on the page, which has been left.\nThe given backData object is available in the beforeFirstShow, beforeShow, and afterShow event objects as data\nproperty. The original \"data\" object from the \"to\" navigation is also available in these event objects."
				},
				{
					"name": "backToTopBeginColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"parameters": [
						{
							"name": "oBackData",
							"type": "object",
							"optional": false,
							"description": "This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."
						},
						{
							"name": "oTransitionParameter",
							"type": "object",
							"optional": false,
							"description": "This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition."
						}
					],
					"description": "Navigates back to the initial/top level of Begin column (this is the element aggregated as \"initialPage\", or the first added element).\nNOTE: If already on the initial page, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation."
				},
				{
					"name": "backToTopEndColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"parameters": [
						{
							"name": "oBackData",
							"type": "object",
							"optional": false,
							"description": "This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."
						},
						{
							"name": "oTransitionParameter",
							"type": "object",
							"optional": false,
							"description": "This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition."
						}
					],
					"description": "Navigates back to the initial/top level of End column (this is the element aggregated as \"initialPage\", or the first added element).\nNOTE: If already on the initial page, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation."
				},
				{
					"name": "backToTopMidColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"parameters": [
						{
							"name": "oBackData",
							"type": "object",
							"optional": false,
							"description": "This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."
						},
						{
							"name": "oTransitionParameter",
							"type": "object",
							"optional": false,
							"description": "This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition."
						}
					],
					"description": "Navigates back to the initial/top level of Mid column (this is the element aggregated as \"initialPage\", or the first added element).\nNOTE: If already on the initial page, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation."
				},
				{
					"name": "destroyBeginColumnPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the beginColumnPages in the aggregation <code>beginColumnPages</code>."
				},
				{
					"name": "destroyEndColumnPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the endColumnPages in the aggregation <code>endColumnPages</code>."
				},
				{
					"name": "destroyMidColumnPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the midColumnPages in the aggregation <code>midColumnPages</code>."
				},
				{
					"name": "detachAfterBeginColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterBeginColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAfterEndColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterEndColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAfterMidColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterMidColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachBeginColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beginColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachEndColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>endColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachMidColumnNavigate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>midColumnNavigate</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachStateChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>stateChange</code> event of this <code>sap.f.FlexibleColumnLayout</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.FlexibleColumnLayout with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireAfterBeginColumnNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"from": {
									"name": "from",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which had been displayed before navigation."
								},
								"fromId": {
									"name": "fromId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which had been displayed before navigation."
								},
								"to": {
									"name": "to",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which is now displayed after navigation."
								},
								"toId": {
									"name": "toId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which is now displayed after navigation."
								},
								"firstTime": {
									"name": "firstTime",
									"type": "boolean",
									"optional": true,
									"description": "Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before."
								},
								"isTo": {
									"name": "isTo",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether was a forward navigation, triggered by to()."
								},
								"isBack": {
									"name": "isBack",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a back navigation, triggered by back()."
								},
								"isBackToTop": {
									"name": "isBackToTop",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a navigation to the root page, triggered by backToTop()."
								},
								"isBackToPage": {
									"name": "isBackToPage",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
								},
								"direction": {
									"name": "direction",
									"type": "string",
									"optional": true,
									"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>afterBeginColumnNavigate</code> to attached listeners."
				},
				{
					"name": "fireAfterEndColumnNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"from": {
									"name": "from",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which had been displayed before navigation."
								},
								"fromId": {
									"name": "fromId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which had been displayed before navigation."
								},
								"to": {
									"name": "to",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which is now displayed after navigation."
								},
								"toId": {
									"name": "toId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which is now displayed after navigation."
								},
								"firstTime": {
									"name": "firstTime",
									"type": "boolean",
									"optional": true,
									"description": "Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before."
								},
								"isTo": {
									"name": "isTo",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether was a forward navigation, triggered by to()."
								},
								"isBack": {
									"name": "isBack",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a back navigation, triggered by back()."
								},
								"isBackToTop": {
									"name": "isBackToTop",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a navigation to the root page, triggered by backToTop()."
								},
								"isBackToPage": {
									"name": "isBackToPage",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
								},
								"direction": {
									"name": "direction",
									"type": "string",
									"optional": true,
									"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>afterEndColumnNavigate</code> to attached listeners."
				},
				{
					"name": "fireAfterMidColumnNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"from": {
									"name": "from",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which had been displayed before navigation."
								},
								"fromId": {
									"name": "fromId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which had been displayed before navigation."
								},
								"to": {
									"name": "to",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which is now displayed after navigation."
								},
								"toId": {
									"name": "toId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which is now displayed after navigation."
								},
								"firstTime": {
									"name": "firstTime",
									"type": "boolean",
									"optional": true,
									"description": "Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before."
								},
								"isTo": {
									"name": "isTo",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether was a forward navigation, triggered by to()."
								},
								"isBack": {
									"name": "isBack",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a back navigation, triggered by back()."
								},
								"isBackToTop": {
									"name": "isBackToTop",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a navigation to the root page, triggered by backToTop()."
								},
								"isBackToPage": {
									"name": "isBackToPage",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
								},
								"direction": {
									"name": "direction",
									"type": "string",
									"optional": true,
									"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>afterMidColumnNavigate</code> to attached listeners."
				},
				{
					"name": "fireBeginColumnNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "Whether or not to prevent the default action"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"from": {
									"name": "from",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which was displayed before the current navigation."
								},
								"fromId": {
									"name": "fromId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which was displayed before the current navigation."
								},
								"to": {
									"name": "to",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which will be displayed after the current navigation."
								},
								"toId": {
									"name": "toId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which will be displayed after the current navigation."
								},
								"firstTime": {
									"name": "firstTime",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before."
								},
								"isTo": {
									"name": "isTo",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this is a forward navigation, triggered by to()."
								},
								"isBack": {
									"name": "isBack",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this is a back navigation, triggered by back()."
								},
								"isBackToTop": {
									"name": "isBackToTop",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this is a navigation to the root page, triggered by backToTop()."
								},
								"isBackToPage": {
									"name": "isBackToPage",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
								},
								"direction": {
									"name": "direction",
									"type": "string",
									"optional": true,
									"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>beginColumnNavigate</code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
				},
				{
					"name": "fireEndColumnNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "Whether or not to prevent the default action"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"from": {
									"name": "from",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which was displayed before the current navigation."
								},
								"fromId": {
									"name": "fromId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which was displayed before the current navigation."
								},
								"to": {
									"name": "to",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which will be displayed after the current navigation."
								},
								"toId": {
									"name": "toId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which will be displayed after the current navigation."
								},
								"firstTime": {
									"name": "firstTime",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before."
								},
								"isTo": {
									"name": "isTo",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this is a forward navigation, triggered by to()."
								},
								"isBack": {
									"name": "isBack",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this is a back navigation, triggered by back()."
								},
								"isBackToTop": {
									"name": "isBackToTop",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this is a navigation to the root page, triggered by backToTop()."
								},
								"isBackToPage": {
									"name": "isBackToPage",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
								},
								"direction": {
									"name": "direction",
									"type": "string",
									"optional": true,
									"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>endColumnNavigate</code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
				},
				{
					"name": "fireMidColumnNavigate",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "Whether or not to prevent the default action"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"from": {
									"name": "from",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which was displayed before the current navigation."
								},
								"fromId": {
									"name": "fromId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which was displayed before the current navigation."
								},
								"to": {
									"name": "to",
									"type": "sap.ui.core.Control",
									"optional": true,
									"description": "The page, which will be displayed after the current navigation."
								},
								"toId": {
									"name": "toId",
									"type": "string",
									"optional": true,
									"description": "The ID of the page, which will be displayed after the current navigation."
								},
								"firstTime": {
									"name": "firstTime",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before."
								},
								"isTo": {
									"name": "isTo",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this is a forward navigation, triggered by to()."
								},
								"isBack": {
									"name": "isBack",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this is a back navigation, triggered by back()."
								},
								"isBackToTop": {
									"name": "isBackToTop",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this is a navigation to the root page, triggered by backToTop()."
								},
								"isBackToPage": {
									"name": "isBackToPage",
									"type": "boolean",
									"optional": true,
									"description": "Determines whether this was a navigation to a specific page, triggered by backToPage()."
								},
								"direction": {
									"name": "direction",
									"type": "string",
									"optional": true,
									"description": "Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\"."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>midColumnNavigate</code> to attached listeners.\r\rListeners may prevent the default action of this event by using the <code>preventDefault</code>-method on the event object."
				},
				{
					"name": "fireStateChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"layout": {
									"name": "layout",
									"type": "sap.f.LayoutType",
									"optional": true,
									"description": "The value of the <code>layout</code> property"
								},
								"maxColumnsCount": {
									"name": "maxColumnsCount",
									"type": "int",
									"optional": true,
									"description": "The maximum number of columns that can be displayed at once based on the available screen size and control settings.\n\n<ul>Possible values are:\n<li>3 for browser size of 1280px or more</li>\n<li>2 for browser size between 960px and 1280px</li>\n<li>1 for browser size less than 960px</li></ul>"
								},
								"isNavigationArrow": {
									"name": "isNavigationArrow",
									"type": "boolean",
									"optional": true,
									"description": "Indicates whether the layout changed as a result of the user clicking a layout arrow"
								},
								"isResize": {
									"name": "isResize",
									"type": "boolean",
									"optional": true,
									"description": "Indicates whether the maximum number of columns that can be displayed at once changed"
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>stateChange</code> to attached listeners."
				},
				{
					"name": "getBeginColumnPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>beginColumnPages</code>.\r\rThe content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>Begin</code> column.\n\nThese should be any control with page semantics.\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}."
				},
				{
					"name": "getCurrentBeginColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Returns the currently displayed Begin column page."
				},
				{
					"name": "getCurrentEndColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Returns the currently displayed End column page."
				},
				{
					"name": "getCurrentMidColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Returns the currently displayed Mid column page."
				},
				{
					"name": "getDefaultTransitionNameBeginColumn",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>defaultTransitionNameBeginColumn</code>"
					},
					"description": "Gets current value of property <code>defaultTransitionNameBeginColumn</code>.\r\rDetermines the type of the transition/animation to apply for the <code>Begin</code> column when <code>to()</code> is called without defining the\ntransition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>show</code>, and the names of any registered custom transitions.\r\rDefault value is <code>slide</code>."
				},
				{
					"name": "getDefaultTransitionNameEndColumn",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>defaultTransitionNameEndColumn</code>"
					},
					"description": "Gets current value of property <code>defaultTransitionNameEndColumn</code>.\r\rDetermines the type of the transition/animation to apply for the <code>End</code> column when <code>to()</code> is called without defining the\ntransition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>show</code>, and the names of any registered custom transitions.\r\rDefault value is <code>slide</code>."
				},
				{
					"name": "getDefaultTransitionNameMidColumn",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>defaultTransitionNameMidColumn</code>"
					},
					"description": "Gets current value of property <code>defaultTransitionNameMidColumn</code>.\r\rDetermines the type of the transition/animation to apply for the <code>Mid</code> column when <code>to()</code> is called without defining the\ntransition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>show</code>, and the names of any registered custom transitions.\r\rDefault value is <code>slide</code>."
				},
				{
					"name": "getEndColumnPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>endColumnPages</code>.\r\rThe content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>End</code> column.\n\nThese should be any control with page semantics.\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}."
				},
				{
					"name": "getInitialBeginColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ID"
					},
					"description": "ID of the element which is the current target of the association <code>initialBeginColumnPage</code>, or <code>null</code>."
				},
				{
					"name": "getInitialEndColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ID"
					},
					"description": "ID of the element which is the current target of the association <code>initialEndColumnPage</code>, or <code>null</code>."
				},
				{
					"name": "getInitialMidColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ID"
					},
					"description": "ID of the element which is the current target of the association <code>initialMidColumnPage</code>, or <code>null</code>."
				},
				{
					"name": "getLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.LayoutType",
						"description": "Value of property <code>layout</code>"
					},
					"description": "Gets current value of property <code>layout</code>.\r\rDetermines the layout of the control - number of visible columns and their relative sizes\r\rDefault value is <code>OneColumn</code>."
				},
				{
					"name": "getMaxColumnsCount",
					"visibility": "public",
					"returnValue": {
						"type": "number"
					},
					"description": "Returns the maximum number of columns that can be displayed at once based on the control width"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.FlexibleColumnLayout."
				},
				{
					"name": "getMidColumnPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>midColumnPages</code>.\r\rThe content entities between which the <code>FlexibleColumnLayout</code> navigates in the <code>Mid</code> column.\n\nThese should be any control with page semantics.\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}."
				},
				{
					"name": "indexOfBeginColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oBeginColumnPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The beginColumnPage whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>beginColumnPages</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfEndColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oEndColumnPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The endColumnPage whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>endColumnPages</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfMidColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oMidColumnPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The midColumnPage whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>midColumnPages</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertBeginColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBeginColumnPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the beginColumnPage to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the beginColumnPage should be inserted at; for\r             a negative value of <code>iIndex</code>, the beginColumnPage is inserted at position 0; for a value\r             greater than the current size of the aggregation, the beginColumnPage is inserted at\r             the last position"
						}
					],
					"description": "Inserts a beginColumnPage into the aggregation <code>beginColumnPages</code>."
				},
				{
					"name": "insertEndColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oEndColumnPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the endColumnPage to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the endColumnPage should be inserted at; for\r             a negative value of <code>iIndex</code>, the endColumnPage is inserted at position 0; for a value\r             greater than the current size of the aggregation, the endColumnPage is inserted at\r             the last position"
						}
					],
					"description": "Inserts a endColumnPage into the aggregation <code>endColumnPages</code>."
				},
				{
					"name": "insertMidColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMidColumnPage",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the midColumnPage to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the midColumnPage should be inserted at; for\r             a negative value of <code>iIndex</code>, the midColumnPage is inserted at position 0; for a value\r             greater than the current size of the aggregation, the midColumnPage is inserted at\r             the last position"
						}
					],
					"description": "Inserts a midColumnPage into the aggregation <code>midColumnPages</code>."
				},
				{
					"name": "removeAllBeginColumnPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>beginColumnPages</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllEndColumnPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>endColumnPages</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllMidColumnPages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>midColumnPages</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeBeginColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed beginColumnPage or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vBeginColumnPage",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The beginColumnPage to remove or its index or id"
						}
					],
					"description": "Removes a beginColumnPage from the aggregation <code>beginColumnPages</code>."
				},
				{
					"name": "removeEndColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed endColumnPage or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vEndColumnPage",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The endColumnPage to remove or its index or id"
						}
					],
					"description": "Removes a endColumnPage from the aggregation <code>endColumnPages</code>."
				},
				{
					"name": "removeMidColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed midColumnPage or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vMidColumnPage",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The midColumnPage to remove or its index or id"
						}
					],
					"description": "Removes a midColumnPage from the aggregation <code>midColumnPages</code>."
				},
				{
					"name": "setDefaultTransitionNameBeginColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDefaultTransitionNameBeginColumn",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>defaultTransitionNameBeginColumn</code>"
						}
					],
					"description": "Sets a new value for property <code>defaultTransitionNameBeginColumn</code>.\r\rDetermines the type of the transition/animation to apply for the <code>Begin</code> column when <code>to()</code> is called without defining the\ntransition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>show</code>, and the names of any registered custom transitions.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>slide</code>."
				},
				{
					"name": "setDefaultTransitionNameEndColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDefaultTransitionNameEndColumn",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>defaultTransitionNameEndColumn</code>"
						}
					],
					"description": "Sets a new value for property <code>defaultTransitionNameEndColumn</code>.\r\rDetermines the type of the transition/animation to apply for the <code>End</code> column when <code>to()</code> is called without defining the\ntransition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>show</code>, and the names of any registered custom transitions.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>slide</code>."
				},
				{
					"name": "setDefaultTransitionNameMidColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sDefaultTransitionNameMidColumn",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>defaultTransitionNameMidColumn</code>"
						}
					],
					"description": "Sets a new value for property <code>defaultTransitionNameMidColumn</code>.\r\rDetermines the type of the transition/animation to apply for the <code>Mid</code> column when <code>to()</code> is called without defining the\ntransition to use. The default is <code>slide</code>, other options are <code>fade</code>, <code>show</code>, and the names of any registered custom transitions.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>slide</code>."
				},
				{
					"name": "setInitialBeginColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oInitialBeginColumnPage",
							"type": "sap.ui.core.ID|sap.ui.core.Control",
							"optional": false,
							"description": "ID of an element which becomes the new target of this initialBeginColumnPage association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>initialBeginColumnPage</code>."
				},
				{
					"name": "setInitialEndColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oInitialEndColumnPage",
							"type": "sap.ui.core.ID|sap.ui.core.Control",
							"optional": false,
							"description": "ID of an element which becomes the new target of this initialEndColumnPage association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>initialEndColumnPage</code>."
				},
				{
					"name": "setInitialMidColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oInitialMidColumnPage",
							"type": "sap.ui.core.ID|sap.ui.core.Control",
							"optional": false,
							"description": "ID of an element which becomes the new target of this initialMidColumnPage association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>initialMidColumnPage</code>."
				},
				{
					"name": "setLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLayout",
							"type": "sap.f.LayoutType",
							"optional": false,
							"description": "New value for property <code>layout</code>"
						}
					],
					"description": "Sets a new value for property <code>layout</code>.\r\rDetermines the layout of the control - number of visible columns and their relative sizes\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>OneColumn</code>."
				},
				{
					"name": "to",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout"
					},
					"parameters": [
						{
							"name": "sPageId",
							"type": "string",
							"optional": false,
							"description": "The screen to which we are navigating to. The ID or the control itself can be given."
						},
						{
							"name": "sTransitionName",
							"type": "string",
							"optional": false,
							"description": "The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters."
						},
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."
						},
						{
							"name": "oTransitionParameters",
							"type": "object",
							"optional": false,
							"description": "This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the \"data\" parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: It depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter."
						}
					],
					"description": "Navigates to the given page inside the FlexibleColumnLayout.\nColumns are scanned for the page in the following order: <code>Begin</code>, <code>Mid</code>, <code>End</code>."
				},
				{
					"name": "toBeginColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout"
					},
					"parameters": [
						{
							"name": "sPageId",
							"type": "string",
							"optional": false,
							"description": "The screen to which drilldown should happen. The ID or the control itself can be given."
						},
						{
							"name": "sTransitionName",
							"type": "string",
							"optional": false,
							"description": "The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters."
						},
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."
						},
						{
							"name": "oTransitionParameters",
							"type": "object",
							"optional": false,
							"description": "This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter."
						}
					],
					"description": "Navigates to a given Begin column page."
				},
				{
					"name": "toEndColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout"
					},
					"parameters": [
						{
							"name": "sPageId",
							"type": "string",
							"optional": false,
							"description": "The screen to which drilldown should happen. The ID or the control itself can be given."
						},
						{
							"name": "sTransitionName",
							"type": "string",
							"optional": false,
							"description": "The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters."
						},
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."
						},
						{
							"name": "oTransitionParameters",
							"type": "object",
							"optional": false,
							"description": "This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter."
						}
					],
					"description": "Navigates to a given End column page."
				},
				{
					"name": "toMidColumnPage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayout"
					},
					"parameters": [
						{
							"name": "sPageId",
							"type": "string",
							"optional": false,
							"description": "The screen to which drilldown should happen. The ID or the control itself can be given."
						},
						{
							"name": "sTransitionName",
							"type": "string",
							"optional": false,
							"description": "The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters."
						},
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."
						},
						{
							"name": "oTransitionParameters",
							"type": "object",
							"optional": false,
							"description": "This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter."
						}
					],
					"description": "Navigates to a given Mid column page."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.FlexibleColumnLayoutSemanticHelper",
			"basename": "FlexibleColumnLayoutSemanticHelper",
			"resource": "sap/f/FlexibleColumnLayoutSemanticHelper.js",
			"module": "sap/f/FlexibleColumnLayoutSemanticHelper",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"description": "Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout</code>-based app.\n\n<b>Note:</b> Using this class is not mandatory in order to build an app with <code>sap.f.FlexibleColumnLayout</code>, but exists for convenience only.\n\n<ul>The usage of <code>sap.f.FlexibleColumnLayoutSemanticHelper</code> revolves around two main methods:\n<li><code>getCurrentUIState</code>Suggests which action buttons to show in each <code>sap.f.FlexibleColumnLayout</code> column,\nbased on the current control state (number and visibility of columns, layout, etc..)</li>\n<li><code>getNextUIState</code>Suggests which <code>layout</code> to use when navigating to another view level (e.g. from one view to two views).</li></ul>\n\nSample usage of the class:\n\n<pre>\n<code>\n var helper = sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(myFlexibleColumnLayout);\n helper.getCurrentUIState();\n helper.getNextUIState(2);\n helper.getNextUIState(0);\n</code>\n</pre>\n\nCalling <code>getCurrentUIState()</code> will return information which action buttons (Close, FullScreen, ExitFullScreen)\nmust be currently shown in which column, according to UX guidelines, as well as to what layout clicking them should lead.\n\nCalling <code>getNextUIState(2)</code> will return information about the expected layout and action buttons if the\napplication should display three views (master-detail-detail), based on the current state.\n\nSimilarly, calling <code>getNextUIState(0)</code> will return information about the expected layout and action buttons\nif the application should display the initial view only (master), based on the current state.\n\nFor more information, see {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState} and {@link sap.f.FlexibleColumnLayoutSemanticHelper#getNextUIState}",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFlexibleColumnLayout",
						"type": "sap.f.FlexibleColumnLayout",
						"optional": false,
						"description": "The <code>sap.f.FlexibleColumnLayout</code> object whose state will be manipulated"
					},
					{
						"name": "oSettings",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"defaultThreeColumnLayoutType": {
								"name": "defaultThreeColumnLayoutType",
								"type": "sap.f.LayoutType",
								"optional": false,
								"description": "Determines what three-column layout type will be suggested by default: <code>sap.f.LayoutType.ThreeColumnsMidExpanded</code> (default) or <code>sap.f.LayoutType.ThreeColumnsEndExpanded</code>"
							}
						},
						"description": "Determines the rules that will be used by the helper"
					}
				],
				"description": "Constructor for a sap.f.FlexibleColumnLayoutSemanticHelper."
			},
			"methods": [
				{
					"name": "getCurrentUIState",
					"visibility": "public",
					"returnValue": {
						"type": "Object"
					},
					"description": "Returns an object, describing the current state of the control and the expected action buttons for each column.\n\n <ul>The returned object has the following structure:\n\t<li>layout - the value of the <code>layout</code> property</li>\n\t<li>maxColumnsCount - the maximum number of columns that can be displayed at once based on the control width. See {@link sap.f.FlexibleColumnLayout#getMaxColumnsCount}</li>\n\t<li>columnsSizes -  an object with fields <code>beginColumn, midColumn, endColumn</code>, representing the relative percentage sizes of the three columns as integers</li>\n\t<li>columnsVisibility -  an object with fields <code>beginColumn, midColumn, endColumn</code>, representing the visibility of the three columns</li>\n\t<li>isFullScreen - <code>true</code> if only one column is visible at the moment, <code>false</code> otherwise\n\t<b>Note:</b> This may be due to small screen size (phone) or due to a layout, for which a single column takes up the whole width</li>\n\t<li>isLogicallyFullScreen - <code>true</code> if the current <code>layout</code> is one of the following: <code>sap.f.LayoutType.OneColumn, sap.f.LayoutType.MidColumnFullScreen, sap.f.LayoutType.EndColumnFullScreen</code>, <code>false</code> otherwise\n\t<b>Note:</b> While <code>isFullScreen</code> can be <code>true</code> for any layout, due to small screen size, <code>isLogicallyFullScreen</code> will only be <code>true</code> for the layout values, listed above.</li>\n\t<li>actionButtonsInfo - an object with fields <code>midColumn, endColumn</code>, each containing an object, telling whether action buttons should be shown in the <code>mid</code> and <code>end</code> columns, and what value of the <code>layout</code> property should be set upon clicking these buttons.\n\tEach of these objects has the following fields: <code>closeColumn, fullScreen, exitFullScreen</code>. If <code>null</code>, then the respective action button should not be shown, otherwise provides the value of <code>layout</code> property for the action button.</li></ul>\n\n\tExample value:\n\n <pre>\n <code>\n {\n\t   \"layout\":\"ThreeColumnsMidExpanded\",\n\t   \"maxColumnsCount\":3,\n\t   \"columnsSizes\":{\n\t\t  \"beginColumn\":25,\n\t\t  \"midColumn\":50,\n\t\t  \"endColumn\":25\n\t   },\n\t   \"columnsVisibility\":{\n\t\t  \"beginColumn\":true,\n\t\t  \"midColumn\":true,\n\t\t  \"endColumn\":true\n\t   },\n\t   \"isFullScreen\":false,\n\t   \"isLogicallyFullScreen\":false,\n\t   \"actionButtonsInfo\":{\n\t\t  \"midColumn\":{\n\t\t\t \"fullScreen\":null,\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":null\n\t\t  },\n\t\t  \"endColumn\":{\n\t\t\t \"fullScreen\":\"EndColumnFullScreen\",\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":\"TwoColumnsBeginExpanded\"\n\t\t  }\n\t   }\n\t}\n </code>\n </pre>"
				},
				{
					"name": "getDefaultLayouts",
					"visibility": "public",
					"returnValue": {
						"type": "Object"
					},
					"description": "Returns the default layout types for the different numbers of columns.\n\n<ul>The returned object has the following fields:\n<li>defaultLayoutType - the layout that will be suggested by default when only 1 column needs to be shown</li>\n<li>defaultTwoColumnLayoutType - the layout that will be suggested by default when 2 columns have to be shown side by side</li>\n<li>defaultThreeColumnLayoutType - the layout that will be suggested by default when 3 columns have to be shown side by side</li></ul>"
				},
				{
					"name": "getInstanceFor",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.f.FlexibleColumnLayoutSemanticHelper"
					},
					"parameters": [
						{
							"name": "oFlexibleColumnLayout",
							"type": "sap.f.FlexibleColumnLayout",
							"optional": false,
							"description": "The <code>sap.f.FlexibleColumnLayout</code> object to get a semantic helper instance for"
						},
						{
							"name": "oSettings",
							"type": "object",
							"optional": true,
							"description": "An optional settings object to be used when creating the instance.\n<b>Note:</b> will be considered only for the first <code>getInstanceFor</code> call for the given <code>sap.f.FlexibleColumnLayout</code> object."
						}
					],
					"description": "Returns an instance of the <code>sap.f.FlexibleColumnLayoutSemanticHelper</code> class for a given <code>sap.f.FlexibleColumnLayout</code> object."
				},
				{
					"name": "getNextUIState",
					"visibility": "public",
					"returnValue": {
						"type": "Object"
					},
					"parameters": [
						{
							"name": "iLevel",
							"type": "undefined",
							"optional": false,
							"description": "the view level that should be represented. 0 means initial (master only), 1 - master-detail,\n2 - master-detail-detail, 3 and above - subsequent views"
						}
					],
					"description": "Returns an object, describing the state that the control will have after navigating to a different view level.\n\nAbout the format of return value, see: {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState}"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.f.LayoutType",
			"basename": "LayoutType",
			"resource": "sap/f/library.js",
			"module": "sap/f/library",
			"export": "LayoutType",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"description": "Layouts, representing the number of columns to be displayed and their relative widths for a {@link sap.f.FlexibleColumnLayout} control.\n\nEach layout has a predefined ratio for the three columns, depending on device size. Based on the device and layout, some columns are hidden.\nFor more information, refer to the ratios (in %) for each value, listed below: (dash \"-\" means non-accessible columns).\n\n<b>Note:</b> Please note that on a phone device, due to the limited screen size, only one column can be displayed at a time.\nFor all two-column layouts, this column is the <code>Mid</code> column, and for all three-column layouts - the <code>End</code> column,\neven though the respective column may be hidden on desktop and tablet for that particular layout.",
			"properties": [
				{
					"name": "EndColumnFullScreen",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Desktop: -/-/100  only the End column is displayed\nTablet:  -/-/100  only the End column is displayed\nPhone:   -/-/100  only the End column is displayed\n\nUse to display a detail-detail page only, when the user should focus entirely on it."
				},
				{
					"name": "MidColumnFullScreen",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Desktop: -/100/-  only the Mid column is displayed\nTablet:  -/100/-  only the Mid column is displayed\nPhone:   -/100/-  only the Mid column is displayed\n\nUse to display a detail page only, when the user should focus entirely on it."
				},
				{
					"name": "OneColumn",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Desktop: 100/-/-  only the Begin column is displayed\nTablet:  100/-/-  only the Begin column is displayed\nPhone:   100/-/-  only the Begin column is displayed\n\nUse to start with a master page."
				},
				{
					"name": "ThreeColumnsBeginExpandedEndHidden",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Desktop: 67/33/0  Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows\nTablet:  67/33/0  Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows\nPhone:   -/-/100  only the End column is displayed\n\nUse to display the master and detail pages when the user should focus on the master.\nThe detail-detail is still loaded and easily accessible with layout arrows."
				},
				{
					"name": "ThreeColumnsEndExpanded",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Desktop: 25/25/50 Begin, Mid and End (expanded) columns are displayed\nTablet:  0/33/67  Mid and End (expanded) columns are displayed, Begin is accessible by layout arrows\nPhone:   -/-/100  (only the End column is displayed)\n\nUse to display all three pages (master, detail, detail-detail) when the user should focus on the detail-detail."
				},
				{
					"name": "ThreeColumnsMidExpanded",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Desktop: 25/50/25 Begin, Mid (expanded) and End columns are displayed\nTablet:  0/67/33  Mid (expanded) and End columns are displayed, Begin is accessible by a layout arrow\nPhone:   -/-/100  only the End column is displayed\n\nUse to display all three pages (master, detail, detail-detail) when the user should focus on the detail."
				},
				{
					"name": "ThreeColumnsMidExpandedEndHidden",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Desktop: 33/67/0  Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow\nTablet:  33/67/0  Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow\nPhone:   -/-/100  only the End column is displayed\n\nUse to display the master and detail pages when the user should focus on the detail.\nThe detail-detail is still loaded and easily accessible with a layout arrow."
				},
				{
					"name": "TwoColumnsBeginExpanded",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Desktop: 67/33/-  Begin (expanded) and Mid columns are displayed\nTablet:  67/33/-  Begin (expanded) and Mid columns are displayed\nPhone:   -/100/-  only the Mid column is displayed\n\nUse to display both a master and a detail page when the user should focus on the master page."
				},
				{
					"name": "TwoColumnsMidExpanded",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Desktop: 33/67/-  Begin and Mid (expanded) columns are displayed\nTablet:  33/67/-  Begin and Mid (expanded) columns are displayed\nPhone:   -/100/-  only the Mid column is displayed\n\nUse to display both a master and a detail page when the user should focus on the detail page."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.routing.Router",
			"basename": "Router",
			"resource": "sap/f/routing/Router.js",
			"module": "sap/f/routing/Router",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"extends": "sap.ui.core.routing.Router",
			"description": "See {@link sap.ui.core.routing.Router} for the constructor arguments.\n\nThe <code>sap.f.routing.Router</code> is intended to be used with {@link sap.f.FlexibleColumnLayout} as a root control.\n\nThe difference to the {@link sap.ui.core.routing.Router} are the properties viewLevel, transition and transitionParameters you can specify in every Route or Target created by this router.\n\nAdditionally, the <code>layout</code> property can be specified in every Route, in which case it will be applied to the root control.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oRoutes",
						"type": "object|object[]",
						"optional": true,
						"description": "may contain many Route configurations as {@link sap.ui.core.routing.Route#constructor}."
					},
					{
						"name": "oOwner",
						"type": "sap.ui.core.UIComponent",
						"optional": true,
						"description": "the Component of all the views that will be created by this Router,\nwill get forwarded to the {@link sap.ui.core.routing.Views#constructor}.\nIf you are using the componentMetadata to define your routes you should skip this parameter."
					},
					{
						"name": "oTargetsConfig",
						"type": "object",
						"optional": true,
						"description": "the target configuration, see {@link sap.f.routing.Targets#constructor} documentation (the options object)."
					}
				],
				"description": "Instantiates a <code>sap.f.routing.Router</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.routing.Router with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.routing.Router.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.routing.Router."
				},
				{
					"name": "getTargetHandler",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.routing.TargetHandler",
						"description": "the TargetHandler instance"
					},
					"description": "Returns the TargetHandler instance."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.routing.TargetHandler",
			"basename": "TargetHandler",
			"resource": "sap/f/routing/TargetHandler.js",
			"module": "sap/f/routing/TargetHandler",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "closeDialogs",
						"type": "boolean",
						"optional": false,
						"description": "the default is true - will close all open dialogs before navigating, if set to true. If set to false it will just navigate without closing dialogs."
					}
				],
				"description": "Instantiates a TargetHandler, a class used for closing dialogs and showing transitions in NavContainers when targets are displayed.<br/>\n<b>You should not create an own instance of this class.</b> It will be created when using {@link sap.f.routing.Router} or {@link sap.f.routing.Targets}.\nYou may use the {@link #setCloseDialogs} function to specify if dialogs should be closed on displaying other views."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.routing.TargetHandler with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}."
				},
				{
					"name": "getCloseDialogs",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "a flag indication if dialogs will be closed"
					},
					"description": "Gets if a navigation should close dialogs"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.routing.TargetHandler."
				},
				{
					"name": "setCloseDialogs",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.routing.TargetHandler",
						"description": "for chaining"
					},
					"parameters": [
						{
							"name": "bCloseDialogs",
							"type": "boolean",
							"optional": false,
							"description": "close dialogs if true"
						}
					],
					"description": "Sets if a navigation should close dialogs"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.routing.Targets",
			"basename": "Targets",
			"resource": "sap/f/routing/Targets.js",
			"module": "sap/f/routing/Targets",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"extends": "sap.ui.core.routing.Targets",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oOptions",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"views": {
								"name": "views",
								"type": "sap.ui.core.routing.Views",
								"optional": false,
								"description": "the views instance will create the views of all the targets defined, so if 2 targets have the same viewName, the same instance of the view will be displayed."
							},
							"config": {
								"name": "config",
								"type": "object",
								"optional": true,
								"parameterProperties": {
									"rootView": {
										"name": "rootView",
										"type": "string",
										"optional": true,
										"description": "The id of the rootView - This should be the id of the view that contains the control with the controlId\nsince the control will be retrieved by calling the {@link sap.ui.core.mvc.View#byId} function of the rootView.\nIf you are using a component and add the routing.targets <b>do not set this parameter</b>,\nsince the component will set the rootView to the view created by the {@link sap.ui.core.UIComponent#createContent} function.\nIf you specify the \"parent\" property of a target, the control will not be searched in the root view but in the view Created by the parent (see parent documentation)."
									},
									"async": {
										"name": "async",
										"type": "boolean",
										"optional": true,
										"defaultValue": false,
										"description": "Whether the views which are created through this Targets are loaded asyncly. This option can be set only when the Targets\nis used standalone without the involvement of a Router. Otherwise the async option is inherited from the Router."
									}
								},
								"description": "this config allows all the values oOptions.targets.anyName allows, these will be the default values for properties used in the target.<br/>\nFor example if you are only using xmlViews in your app you can specify viewType=\"XML\" so you don't have to repeat this in every target.<br/>\nIf a target specifies viewType=\"JS\", the JS will be stronger than the XML here is an example.\n\n<pre>\n<code>\n{\n    config: {\n        viewType : \"XML\"\n    }\n    targets : {\n        xmlTarget : {\n            ...\n        },\n        jsTarget : {\n            viewType : \"JS\"\n            ...\n        }\n    }\n}\n</code>\n</pre>\nThen the effective config that will be used looks like this:\n<pre>\n<code>\n{\n    xmlTarget : {\n        // coming from the defaults\n        viewType : \"XML\"\n        ...\n    },\n    jsTarget : {\n       // XML is overwritten by the \"JS\" of the targets property\n       viewType : \"JS\"\n      ...\n    }\n}\n</code>\n</pre>"
							},
							"targets": {
								"name": "targets",
								"type": "object",
								"optional": false,
								"parameterProperties": {
									"anyName": {
										"name": "anyName",
										"type": "object",
										"optional": false,
										"parameterProperties": {
											"viewName": {
												"name": "viewName",
												"type": "string",
												"optional": false,
												"description": "The name of a view that will be created.\nTo place the view into a Control use the controlAggregation and controlId. Views will only be created once per viewName.\n<pre>\n<code>\n{\n    targets: {\n        // If display(\"masterWelcome\") is called, the master view will be placed in the 'MasterPages' of a control with the id splitContainter\n        masterWelcome: {\n            viewName: \"Welcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"masterPages\"\n        },\n        // If display(\"detailWelcome\") is called after the masterWelcome, the view will be removed from the master pages and added to the detail pages, since the same instance is used. Also the controls inside of the view will have the same state.\n        detailWelcome: {\n            // same view here, that's why the same instance is used\n            viewName: \"Welcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"detailPages\"\n        }\n    }\n}\n</code>\n</pre>\n\nIf you want to have a second instance of the welcome view you can use the following:\n\n\n\n<pre>\n<code>\n// Some code you execute before you display the taget named 'detailWelcome':\nvar oView = sap.ui.view(({ viewName : \"Welcome\", type : sap.ui.core.mvc.ViewType.XML});\noTargets.getViews().setView(\"WelcomeWithAlias\", oView)\n\n{\n    targets: {\n        // If display(\"masterWelcome\") is called, the master viewName will be placed in the 'MasterPages' of a control with the id splitContainter\n        masterWelcome: {\n            viewName: \"Welcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"masterPages\"\n        },\n        // If display(\"detailWelcome\") is called after the masterWelcome, a second instance with an own controller instance will be added in the detail pages.\n        detailWelcome: {\n            // same viewName here, that's why the same instance is used\n            viewName: \"WelcomeWithAlias\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"detailPages\"\n        }\n    }\n}\n</code>\n</pre>"
											},
											"viewType": {
												"name": "viewType",
												"type": "string",
												"optional": true,
												"description": "The type of the view that is going to be created. These are the supported types: {@link sap.ui.core.mvc.ViewType}.\nYou always have to provide a viewType except if you are using {@link sap.ui.core.routing.Views#setView}."
											},
											"viewPath": {
												"name": "viewPath",
												"type": "string",
												"optional": true,
												"description": "A prefix that will be prepended in front of the viewName.<br/>\n<b>Example:</b> viewName is set to \"myView\" and viewPath is set to \"myApp\" - the created viewName will be \"myApp.myView\"."
											},
											"viewId": {
												"name": "viewId",
												"type": "string",
												"optional": true,
												"description": "The id of the created view.\nThis is will be prefixed with the id of the component set to the views instance provided in oOptions.views. For details see {@link sap.ui.core.routing.Views#getView}."
											},
											"targetParent": {
												"name": "targetParent",
												"type": "string",
												"optional": true,
												"description": "The id of the parent of the controlId - This should be the id of the view that contains your controlId,\nsince the target control will be retrieved by calling the {@link sap.ui.core.mvc.View#byId} function of the targetParent. By default,\nthis will be the view created by a component, so you do not have to provide this parameter.\nIf you are using children, the view created by the parent of the child is taken.\nYou only need to specify this, if you are not using a Targets instance created by a component\nand you should give the id of root view of your application to this property."
											},
											"controlId": {
												"name": "controlId",
												"type": "string",
												"optional": true,
												"description": "The id of the control where you want to place the view created by this target.\nThe view of the target will be put into this container Control, using the controlAggregation property. You have to specify both properties or the target will not be able to place itself.\nAn example for containers are {@link sap.ui.ux3.Shell} with the aggregation 'content' or a {@link sap.m.NavContainer} with the aggregation 'pages'."
											},
											"controlAggregation": {
												"name": "controlAggregation",
												"type": "string",
												"optional": true,
												"description": "The name of an aggregation of the controlId, that contains views.\nEg: a {@link sap.m.NavContainer} has an aggregation 'pages', another Example is the {@link sap.ui.ux3.Shell} it has 'content'."
											},
											"clearControlAggregation": {
												"name": "clearControlAggregation",
												"type": "boolean",
												"optional": true,
												"description": "Defines a boolean that can be passed to specify if the aggregation should be cleared\n- all items will be removed - before adding the View to it.\nWhen using a {@link sap.ui.ux3.Shell} this should be true. For a {@link sap.m.NavContainer} it should be false. When you use the {@link sap.f.routing.Router} the default will be false."
											},
											"parent": {
												"name": "parent",
												"type": "string",
												"optional": true,
												"description": "A reference to another target, using the name of the target.\nIf you display a target that has a parent, the parent will also be displayed.\nAlso the control you specify with the controlId parameter, will be searched inside of the view of the parent not in the rootView, provided in the config.\nThe control will be searched using the byId function of a view. When it is not found, the global id is checked.\n<br/>\nThe main usecase for the parent property is placing a view inside a smaller container of a view, which is also created by targets.\nThis is useful for lazy loading views, only if the user really navigates to this part of your application.\n<br/>\n<b>Example:</b>\nOur aim is to lazy load a tab of an IconTabBar (a control that displays a view initially and when a user clicks on it the view changes).\nIt's a perfect candidate to lazy load something inside of it.\n<br/>\n<b>Example app structure:</b><br/>\nWe have a rootView that is returned by the createContent function of our UIComponent. This view contains a sap.m.App control with the id 'myApp'\n<pre>\n<code>\n&lt;View xmlns=\"sap.m\"&gt;\n    &lt;App id=\"myApp\"/&gt;\n&lt;/View&gt;\n</code>\n</pre>\nan xml view called 'Detail'\n<pre>\n<code>\n&lt;View xmlns=\"sap.m\"&gt;\n    &lt;IconTabBar&gt;\n        &lt;items&gt;\n            &lt;IconTabFilter&gt;\n                &lt;!-- content of our first tab --&gt;\n            &lt;IconTabFilter&gt;\n            &lt;IconTabFilter id=\"mySecondTab\"&gt;\n                &lt;!-- nothing here, since we will lazy load this one with a target --&gt;\n            &lt;IconTabFilter&gt;\n        &lt;/items&gt;\n    &lt;/IconTabBar&gt;\n&lt;/View&gt;\n</code>\n</pre>\nand a view called 'SecondTabContent', this one contains our content we want to have lazy loaded.\nNow we need to create our Targets instance with a config matching our app:\n<pre>\n<code>\n    new Targets({\n        //Creates our views except for root, we created this one before - when using a component you\n        views: new Views(),\n        config: {\n            // all of our views have that type\n            viewType: 'XML',\n            // a reference to the app control in the rootView created by our UIComponent\n            controlId: 'myApp',\n            // An app has a pages aggregation where the views need to be put into\n            controlAggregation: 'pages'\n        },\n        targets: {\n            detail: {\n                viewName: 'Detail'\n            },\n            secondTabContent: {\n                // A reference to the detail target defined above\n                parent: 'detail',\n                // A reference to the second Tab container in the Detail view. Here the target does not look in the rootView, it looks in the Parent view (Detail).\n                controlId: 'mySecondTab',\n                // An IconTabFilter has an aggregation called content so we need to overwrite the pages set in the config as default.\n                controlAggregation: 'content',\n                // A view containing the content\n                viewName: 'SecondTabContent'\n            }\n        }\n    });\n</code>\n</pre>\n\nNow if we call <code> oTargets.display(\"secondTabContent\") </code>, 2 views will be created: Detail and SecondTabContent.\nThe 'Detail' view will be put into the pages aggregation of the App. And afterwards the 'SecondTabContent' view will be put into the content Aggregation of the second IconTabFilter.\nSo a parent will always be created before the target referencing it."
											},
											"viewLevel": {
												"name": "viewLevel",
												"type": "int",
												"optional": true,
												"description": "If you are having an application that has a logical order of views (eg: a create account process, first provide user data, then review and confirm them).\nYou always want to always show a backwards transition if a navigation from the confirm to the userData page takes place.\nTherefore you may use the viewLevel. The viewLevel has to be an integer. The user data page should have a lower number than the confirm page.\nThese levels should represent the user process of your application and they do not have to match the container structure of your Targets.\nIf the user navigates between views with the same viewLevel, a forward transition is taken. If you pass a direction into the display function, the viewLevel will be ignored.<br/>\n<b>Example:</b></br>\n<pre>\n<code>\n    {\n        targets: {\n            startPage: {\n                viewLevel: 0\n                // more properties\n            },\n            userData: {\n                viewLevel: 1\n                // more properties\n            },\n            confirmRegistration: {\n                viewLevel: 2\n                // more properties\n            },\n            settings: {\n                //no view level here\n            }\n        }\n    }\n</code>\n</pre>\n\nCurrently the 'userData' target is displayed.\n<ul>\n    <li>\n        If we navigate to 'startPage' the navContainer will show a backwards navigation, since the viewLevel is lower.\n    </li>\n    <li>\n        If we navigate to 'userData' the navContainer will show a forwards navigation, since the viewLevel is higher.\n    </li>\n    <li>\n        If we navigate to 'settings' the navContainer will show a forwards navigation, since the viewLevel is not defined and cannot be compared.\n    </li>\n</ul>"
											},
											"transition": {
												"name": "transition",
												"type": "string",
												"optional": true,
												"description": "define which transition of the {@link sap.m.NavContainer} will be applied when navigating. If it is not defined, the nav container will take its default transition."
											},
											"transitionParameters": {
												"name": "transitionParameters",
												"type": "string",
												"optional": true,
												"description": "define the transitionParameters of the {@link sap.m.NavContainer}"
											}
										},
										"description": "a new target, the key severs as a name. An example:\n<pre>\n<code>\n{\n    targets: {\n        welcome: {\n            viewName: \"Welcome\",\n            viewType: \"XML\",\n            ....\n            // Other target parameters\n        },\n        goodbye: {\n            viewName: \"Bye\",\n            viewType: \"JS\",\n            ....\n            // Other target parameters\n        }\n    }\n}\n</code>\n</pre>\n\nThis will create two targets named 'welcome' and 'goodbye' you can display both of them or one of them using the {@link #display} function."
									}
								},
								"description": "One or multiple targets in a map."
							}
						}
					}
				],
				"description": "Provides a convenient way for placing views into the correct containers of your application.\nThe sap.f extension of Targets also handles the triggering of page navigation when the target control is a {@link sap.f.FlexibleColumnLayout}.\nOther controls are also allowed, but the extra parameters viewLevel, transition and transitionParameters are ignored and it will behave like {@link sap.ui.core.routing.Targets}.\nWhen a target is displayed, dialogs will be closed. To change this use {@link #getTargetHandler} and {@link sap.f.routing.TargetHandler#setCloseDialogs}."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.routing.Targets with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.routing.Targets.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.routing.Targets."
				},
				{
					"name": "getTargetHandler",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.routing.TargetHandler",
						"description": "the TargetHandler instance"
					},
					"description": "Returns the TargetHandler instance."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.AddAction",
			"basename": "AddAction",
			"resource": "sap/f/semantic/AddAction.js",
			"module": "sap/f/semantic/AddAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>addAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>AddAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.AddAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.AddAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.CloseAction",
			"basename": "CloseAction",
			"resource": "sap/f/semantic/CloseAction.js",
			"module": "sap/f/semantic/CloseAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>closeAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>CloseAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.CloseAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.CloseAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.CopyAction",
			"basename": "CopyAction",
			"resource": "sap/f/semantic/CopyAction.js",
			"module": "sap/f/semantic/CopyAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>copyAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>CopyAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.CopyAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.CopyAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.DeleteAction",
			"basename": "DeleteAction",
			"resource": "sap/f/semantic/DeleteAction.js",
			"module": "sap/f/semantic/DeleteAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>deleteAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>DeleteAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.DeleteAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.DeleteAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.DiscussInJamAction",
			"basename": "DiscussInJamAction",
			"resource": "sap/f/semantic/DiscussInJamAction.js",
			"module": "sap/f/semantic/DiscussInJamAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>discussInJamAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>DiscussInJamAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.DiscussInJamAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.DiscussInJamAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.ExitFullScreenAction",
			"basename": "ExitFullScreenAction",
			"resource": "sap/f/semantic/ExitFullScreenAction.js",
			"module": "sap/f/semantic/ExitFullScreenAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>exitFullScreenAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>ExitFullScreenAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.ExitFullScreenAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.ExitFullScreenAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.FavoriteAction",
			"basename": "FavoriteAction",
			"resource": "sap/f/semantic/FavoriteAction.js",
			"module": "sap/f/semantic/FavoriteAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>favoriteAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>FavoriteAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.FavoriteAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.FavoriteAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.FlagAction",
			"basename": "FlagAction",
			"resource": "sap/f/semantic/FlagAction.js",
			"module": "sap/f/semantic/FlagAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>flagAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>FlagAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.FlagAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.FlagAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.FooterMainAction",
			"basename": "FooterMainAction",
			"resource": "sap/f/semantic/FooterMainAction.js",
			"module": "sap/f/semantic/FooterMainAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>footerMainAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>FooterMainAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.FooterMainAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.FooterMainAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.FullScreenAction",
			"basename": "FullScreenAction",
			"resource": "sap/f/semantic/FullScreenAction.js",
			"module": "sap/f/semantic/FullScreenAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>fullScreenAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>FullScreenAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.FullScreenAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.FullScreenAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.MainAction",
			"basename": "MainAction",
			"resource": "sap/f/semantic/MainAction.js",
			"module": "sap/f/semantic/MainAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "Serves as a base class for the {@link sap.f.semantic.TitleMainAction} and {@link sap.f.semantic.FooterMainAction} controls.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines <code>MainAction</code> text",
						"methods": [
							"getText",
							"setText"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new MainAction.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.MainAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.MainAction."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rDefines <code>MainAction</code> text"
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.MainAction",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rDefines <code>MainAction</code> text\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.MessagesIndicator",
			"basename": "MessagesIndicator",
			"resource": "sap/f/semantic/MessagesIndicator.js",
			"module": "sap/f/semantic/MessagesIndicator",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>messagesIndicator</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>MessagesIndicator</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.MessagesIndicator with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.MessagesIndicator."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.NegativeAction",
			"basename": "NegativeAction",
			"resource": "sap/f/semantic/NegativeAction.js",
			"module": "sap/f/semantic/NegativeAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>negativeAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines <code>NegativeAction</code> text.\n<b>Note:</b> the default text is \"Reject\"",
						"methods": [
							"getText",
							"setText"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>NegativeAction</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.NegativeAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.NegativeAction."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rDefines <code>NegativeAction</code> text.\n<b>Note:</b> the default text is \"Reject\""
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.NegativeAction",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rDefines <code>NegativeAction</code> text.\n<b>Note:</b> the default text is \"Reject\"\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.PositiveAction",
			"basename": "PositiveAction",
			"resource": "sap/f/semantic/PositiveAction.js",
			"module": "sap/f/semantic/PositiveAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>positiveAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its footer.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines <code>PositiveAction</code> text.\n<b>Note:</b> the default text is \"Accept\"",
						"methods": [
							"getText",
							"setText"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>PositiveAction</code>.\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.PositiveAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.PositiveAction."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rDefines <code>PositiveAction</code> text.\n<b>Note:</b> the default text is \"Accept\""
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.PositiveAction",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rDefines <code>PositiveAction</code> text.\n<b>Note:</b> the default text is \"Accept\"\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.PrintAction",
			"basename": "PrintAction",
			"resource": "sap/f/semantic/PrintAction.js",
			"module": "sap/f/semantic/PrintAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>printAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>PrintAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.PrintAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.PrintAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.SemanticButton",
			"basename": "SemanticButton",
			"resource": "sap/f/semantic/SemanticButton.js",
			"module": "sap/f/semantic/SemanticButton",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticControl</code>",
			"description": "A base class for the available semantic actions, such as {@link sap.f.semantic.AddAction AddAction},\n{@link sap.f.semantic.CloseAction CloseAction}, etc.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the <code>SemanticButton</code> is enabled.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "Fired when the user selects the <code>SemanticButton</code>.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>SemanticButton</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the user selects the <code>SemanticButton</code>."
				}
			],
			"methods": [
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.f.semantic.SemanticButton</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.f.semantic.SemanticButton</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.f.semantic.SemanticButton</code> itself.\r\rFired when the user selects the <code>SemanticButton</code>."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.f.semantic.SemanticButton</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.SemanticButton with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticControl</code>.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.f.semantic.SemanticButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\r\rDetermines whether the <code>SemanticButton</code> is enabled.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.SemanticButton."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\r\rDetermines whether the <code>SemanticButton</code> is enabled.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.SemanticControl",
			"basename": "SemanticControl",
			"resource": "sap/f/semantic/SemanticControl.js",
			"module": "sap/f/semantic/SemanticControl",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "sap.ui.core.Element",
			"description": "The base class for the {@link sap.f.semantic.SemanticButton}.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Determines whether the <code>SemanticControl</code> is visible.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					}
				],
				"aggregations": [
					{
						"name": "_control",
						"singularName": "_control",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Hidden aggregation.",
						"methods": [
							"get_control",
							"destroy_control",
							"set_control"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>SemanticControl</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.SemanticControl with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.SemanticControl."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\r\rDetermines whether the <code>SemanticControl</code> is visible.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticControl",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Sets a new value for property <code>visible</code>.\r\rDetermines whether the <code>SemanticControl</code> is visible.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.SemanticPage",
			"basename": "SemanticPage",
			"resource": "sap/f/semantic/SemanticPage.js",
			"module": "sap/f/semantic/SemanticPage",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "sap.ui.core.Control",
			"description": "An enhanced {@link sap.f.DynamicPage}, that contains controls with semantic-specific meaning.\n\n<h3>Overview</h3>\n\nContent specified in the <code>sap.f.semantic.SemanticPage</code> aggregations is automatically\npositioned in dedicated sections of the title or the footer of the page, depending on\nthe control's semantics.\n\nThe actions in the <code>SemanticPage</code> title are grouped to text actions or icon actions.\nWhen an aggregation is set, the actions appear in the following predefined order (from left to right):\n\n<ul>Text actions:\n<li>The main semantic text action - <code>titleMainAction</code></li>\n<li>Any custom text actions - <code>titleCustomTextActions</code></li>\n<li>The semantic text actions - <code>addAction</code>, <code>deleteAction</code>, and <code>copyAction</code></li></ul>\n\n<ul>Icon actions:\n<li>Any custom icon actions - <code>titleCustomIconActions</code></li>\n<li>The simple semantic icon actions - <code>favoriteAction</code> and <code>flagAction</code></li>\n<li>The share menu semantic icon actions as a drop-down list with the following order:\n\t<ul><li><code>sendEmailAction</code></li>\n\t<li><code>discussInJamAction</code></li>\n\t<li><code>shareInJamAction</code></li>\n\t<li><code>sendMessageAction</code></li>\n\t<li><code>printAction</code></li>\n\t<li>Any <code>customShareActions</code></li></ul></li>\n<li>The navigation semantic actions - <code>fullScreenAction</code>, <code>exitFullScreenAction</code>,\nand <code>closeAction</li></code></ul>\n\nThe actions in the <code>SemanticPage</code> footer are positioned either on its left or right area and have the following predefined order:\n\n<ul>Footer left area:\n<li>The semantic text action - <code>messagesIndicator</code></li>\n<li>The semantic label - <code>draftIndicator</code></li></ul>\n\n<ul>Footer right area:\n<li>The main semantic text action - <code>footerMainAction</code></li>\n<li>The semantic text actions - <code>positiveAction</code> and <code>negativeAction</code></li>\n<li>Any custom text actions - <code>footerCustomActions</code></li></ul>\n\n<h3>Usage</h3>\n\nUsing the <code>SemanticPage</code> facilitates the implementation of the SAP Fiori 2.0 design guidelines.\n\n<h3>Responsive behavior</h3>\n\nThe responsive behavior of the <code>SemanticPage</code> depends on the behavior of the content that is displayed.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "headerExpanded",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:</b> Please be aware, that initially collapsed header state is not supported,\nso <code>headerExpanded</code> should not be set to <code>false</code> when initializing the control.",
						"methods": [
							"getHeaderExpanded",
							"setHeaderExpanded"
						]
					},
					{
						"name": "headerPinnable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the header is pinnable.",
						"methods": [
							"getHeaderPinnable",
							"setHeaderPinnable"
						]
					},
					{
						"name": "preserveHeaderStateOnScroll",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Preserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title\nand then scrolls down the page, the header will remain expanded.\n\n<b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the title and the header\nare with height larger than a given threshold.",
						"methods": [
							"getPreserveHeaderStateOnScroll",
							"setPreserveHeaderStateOnScroll"
						]
					},
					{
						"name": "toggleHeaderOnTitleClick",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the the user can switch between the expanded/collapsed states of the\nheader by clicking on the title.\n\nIf set to <code>false</code>, the title is not clickable and the application\nmust provide other means for expanding/collapsing the header, if necessary.",
						"methods": [
							"getToggleHeaderOnTitleClick",
							"setToggleHeaderOnTitleClick"
						]
					},
					{
						"name": "showFooter",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Determines whether the footer is visible.",
						"methods": [
							"getShowFooter",
							"setShowFooter"
						]
					}
				],
				"aggregations": [
					{
						"name": "titleHeading",
						"singularName": "titleHeading",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The <code>SemanticPage</code> heading.\n\nA typical usage is the <code>sap.m.Title</code> or any other UI5 control,\nthat serves as a heading for an object.\n\n<b>Note:</b> The control will be placed in the title`s leftmost area.",
						"methods": [
							"getTitleHeading",
							"destroyTitleHeading",
							"setTitleHeading"
						]
					},
					{
						"name": "titleSnappedContent",
						"singularName": "titleSnappedContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content, displayed in the title, when the header is in collapsed state.\n\n<b>Note:</b> The controls will be placed in the title`s middle area.",
						"methods": [
							"getTitleSnappedContent",
							"destroyTitleSnappedContent",
							"insertTitleSnappedContent",
							"addTitleSnappedContent",
							"removeTitleSnappedContent",
							"indexOfTitleSnappedContent",
							"removeAllTitleSnappedContent"
						]
					},
					{
						"name": "titleExpandedContent",
						"singularName": "titleExpandedContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The content,displayed in the title, when the header is in expanded state.\n\n<b>Note:</b> The controls will be placed in the title`s middle area.",
						"methods": [
							"getTitleExpandedContent",
							"destroyTitleExpandedContent",
							"insertTitleExpandedContent",
							"addTitleExpandedContent",
							"removeTitleExpandedContent",
							"indexOfTitleExpandedContent",
							"removeAllTitleExpandedContent"
						]
					},
					{
						"name": "titleMainAction",
						"singularName": "titleMainAction",
						"type": "sap.f.semantic.TitleMainAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>SemanticPage</code> title as first action.",
						"methods": [
							"getTitleMainAction",
							"destroyTitleMainAction",
							"setTitleMainAction"
						]
					},
					{
						"name": "addAction",
						"singularName": "addAction",
						"type": "sap.f.semantic.AddAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getAddAction",
							"destroyAddAction",
							"setAddAction"
						]
					},
					{
						"name": "deleteAction",
						"singularName": "deleteAction",
						"type": "sap.f.semantic.DeleteAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getDeleteAction",
							"destroyDeleteAction",
							"setDeleteAction"
						]
					},
					{
						"name": "copyAction",
						"singularName": "copyAction",
						"type": "sap.f.semantic.CopyAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getCopyAction",
							"destroyCopyAction",
							"setCopyAction"
						]
					},
					{
						"name": "flagAction",
						"singularName": "flagAction",
						"type": "sap.f.semantic.FlagAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getFlagAction",
							"destroyFlagAction",
							"setFlagAction"
						]
					},
					{
						"name": "favoriteAction",
						"singularName": "favoriteAction",
						"type": "sap.f.semantic.FavoriteAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getFavoriteAction",
							"destroyFavoriteAction",
							"setFavoriteAction"
						]
					},
					{
						"name": "fullScreenAction",
						"singularName": "fullScreenAction",
						"type": "sap.f.semantic.FullScreenAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getFullScreenAction",
							"destroyFullScreenAction",
							"setFullScreenAction"
						]
					},
					{
						"name": "exitFullScreenAction",
						"singularName": "exitFullScreenAction",
						"type": "sap.f.semantic.ExitFullScreenAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getExitFullScreenAction",
							"destroyExitFullScreenAction",
							"setExitFullScreenAction"
						]
					},
					{
						"name": "closeAction",
						"singularName": "closeAction",
						"type": "sap.f.semantic.CloseAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getCloseAction",
							"destroyCloseAction",
							"setCloseAction"
						]
					},
					{
						"name": "titleCustomTextActions",
						"singularName": "titleCustomTextAction",
						"type": "sap.m.Button",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The <code>titleCustomTextActions</code> are placed in the <code>TextActions</code> area of the\n<code>SemanticPage</code> title, right before the semantic text action.",
						"methods": [
							"getTitleCustomTextActions",
							"destroyTitleCustomTextActions",
							"insertTitleCustomTextAction",
							"addTitleCustomTextAction",
							"removeTitleCustomTextAction",
							"indexOfTitleCustomTextAction",
							"removeAllTitleCustomTextActions"
						]
					},
					{
						"name": "titleCustomIconActions",
						"singularName": "titleCustomIconAction",
						"type": "sap.m.OverflowToolbarButton",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The <code>titleCustomIconActions</code> are placed in the <code>IconActions</code> area of the\n<code>SemanticPage</code> title, right before the semantic icon action.",
						"methods": [
							"getTitleCustomIconActions",
							"destroyTitleCustomIconActions",
							"insertTitleCustomIconAction",
							"addTitleCustomIconAction",
							"removeTitleCustomIconAction",
							"indexOfTitleCustomIconAction",
							"removeAllTitleCustomIconActions"
						]
					},
					{
						"name": "headerContent",
						"singularName": "headerContent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The header content.",
						"methods": [
							"getHeaderContent",
							"destroyHeaderContent",
							"insertHeaderContent",
							"addHeaderContent",
							"removeHeaderContent",
							"indexOfHeaderContent",
							"removeAllHeaderContent"
						]
					},
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The <code>SemanticPage</code> content.",
						"methods": [
							"getContent",
							"destroyContent",
							"setContent"
						]
					},
					{
						"name": "footerMainAction",
						"singularName": "footerMainAction",
						"type": "sap.f.semantic.FooterMainAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code>\nfooter with default text value set to <code>Save</code>.",
						"methods": [
							"getFooterMainAction",
							"destroyFooterMainAction",
							"setFooterMainAction"
						]
					},
					{
						"name": "messagesIndicator",
						"singularName": "messagesIndicator",
						"type": "sap.f.semantic.MessagesIndicator",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>FooterLeft</code> area of the <code>SemanticPage</code>\nfooter as a first action.",
						"methods": [
							"getMessagesIndicator",
							"destroyMessagesIndicator",
							"setMessagesIndicator"
						]
					},
					{
						"name": "draftIndicator",
						"singularName": "draftIndicator",
						"type": "sap.m.DraftIndicator",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>FooterLeft</code> area of the <code>SemanticPage</code>\nfooter as a second action.",
						"methods": [
							"getDraftIndicator",
							"destroyDraftIndicator",
							"setDraftIndicator"
						]
					},
					{
						"name": "positiveAction",
						"singularName": "positiveAction",
						"type": "sap.f.semantic.PositiveAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code>\nfooter with default text value set to <code>Accept</code>.",
						"methods": [
							"getPositiveAction",
							"destroyPositiveAction",
							"setPositiveAction"
						]
					},
					{
						"name": "negativeAction",
						"singularName": "negativeAction",
						"type": "sap.f.semantic.NegativeAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code>\nfooter with default text value set to <code>Reject</code>.",
						"methods": [
							"getNegativeAction",
							"destroyNegativeAction",
							"setNegativeAction"
						]
					},
					{
						"name": "footerCustomActions",
						"singularName": "footerCustomAction",
						"type": "sap.m.Button",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The <code>footerCustomActions</code> are placed in the <code>FooterRight</code> area of the\n<code>SemanticPage</code> footer, right after the semantic footer actions.",
						"methods": [
							"getFooterCustomActions",
							"destroyFooterCustomActions",
							"insertFooterCustomAction",
							"addFooterCustomAction",
							"removeFooterCustomAction",
							"indexOfFooterCustomAction",
							"removeAllFooterCustomActions"
						]
					},
					{
						"name": "discussInJamAction",
						"singularName": "discussInJamAction",
						"type": "sap.f.semantic.DiscussInJamAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getDiscussInJamAction",
							"destroyDiscussInJamAction",
							"setDiscussInJamAction"
						]
					},
					{
						"name": "saveAsTileAction",
						"singularName": "saveAsTileAction",
						"type": "sap.m.Button",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getSaveAsTileAction",
							"destroySaveAsTileAction",
							"setSaveAsTileAction"
						]
					},
					{
						"name": "shareInJamAction",
						"singularName": "shareInJamAction",
						"type": "sap.f.semantic.ShareInJamAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getShareInJamAction",
							"destroyShareInJamAction",
							"setShareInJamAction"
						]
					},
					{
						"name": "sendMessageAction",
						"singularName": "sendMessageAction",
						"type": "sap.f.semantic.SendMessageAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getSendMessageAction",
							"destroySendMessageAction",
							"setSendMessageAction"
						]
					},
					{
						"name": "sendEmailAction",
						"singularName": "sendEmailAction",
						"type": "sap.f.semantic.SendEmailAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getSendEmailAction",
							"destroySendEmailAction",
							"setSendEmailAction"
						]
					},
					{
						"name": "printAction",
						"singularName": "printAction",
						"type": "sap.f.semantic.PrintAction",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "A semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title.",
						"methods": [
							"getPrintAction",
							"destroyPrintAction",
							"setPrintAction"
						]
					},
					{
						"name": "customShareActions",
						"singularName": "customShareAction",
						"type": "sap.m.Button",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "The <code>customShareActions</code> are placed in the <code>ShareMenu</code> area of the\n<code>SemanticPage</code> title, right after the the semantic actions.",
						"methods": [
							"getCustomShareActions",
							"destroyCustomShareActions",
							"insertCustomShareAction",
							"addCustomShareAction",
							"removeCustomShareAction",
							"indexOfCustomShareAction",
							"removeAllCustomShareActions"
						]
					},
					{
						"name": "_dynamicPage",
						"singularName": "_dynamicPage",
						"type": "sap.f.DynamicPage",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The aggregation holds <code>DynamicPage</code>, used internally.",
						"methods": [
							"get_dynamicPage",
							"destroy_dynamicPage",
							"set_dynamicPage"
						]
					}
				],
				"defaultAggregation": "content"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>SemanticPage</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addCustomShareAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomShareAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "the customShareAction to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some customShareAction to the aggregation <code>customShareActions</code>."
				},
				{
					"name": "addFooterCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFooterCustomAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "the footerCustomAction to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some footerCustomAction to the aggregation <code>footerCustomActions</code>."
				},
				{
					"name": "addHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeaderContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the headerContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some headerContent to the aggregation <code>headerContent</code>."
				},
				{
					"name": "addTitleCustomIconAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleCustomIconAction",
							"type": "sap.m.OverflowToolbarButton",
							"optional": false,
							"description": "the titleCustomIconAction to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some titleCustomIconAction to the aggregation <code>titleCustomIconActions</code>."
				},
				{
					"name": "addTitleCustomTextAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleCustomTextAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "the titleCustomTextAction to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some titleCustomTextAction to the aggregation <code>titleCustomTextActions</code>."
				},
				{
					"name": "addTitleExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleExpandedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the titleExpandedContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some titleExpandedContent to the aggregation <code>titleExpandedContent</code>."
				},
				{
					"name": "addTitleSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleSnappedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the titleSnappedContent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some titleSnappedContent to the aggregation <code>titleSnappedContent</code>."
				},
				{
					"name": "destroyAddAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the addAction in the aggregation <code>addAction</code>."
				},
				{
					"name": "destroyCloseAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the closeAction in the aggregation <code>closeAction</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the content in the aggregation <code>content</code>."
				},
				{
					"name": "destroyCopyAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the copyAction in the aggregation <code>copyAction</code>."
				},
				{
					"name": "destroyCustomShareActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the customShareActions in the aggregation <code>customShareActions</code>."
				},
				{
					"name": "destroyDeleteAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the deleteAction in the aggregation <code>deleteAction</code>."
				},
				{
					"name": "destroyDiscussInJamAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the discussInJamAction in the aggregation <code>discussInJamAction</code>."
				},
				{
					"name": "destroyDraftIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the draftIndicator in the aggregation <code>draftIndicator</code>."
				},
				{
					"name": "destroyExitFullScreenAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the exitFullScreenAction in the aggregation <code>exitFullScreenAction</code>."
				},
				{
					"name": "destroyFavoriteAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the favoriteAction in the aggregation <code>favoriteAction</code>."
				},
				{
					"name": "destroyFlagAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the flagAction in the aggregation <code>flagAction</code>."
				},
				{
					"name": "destroyFooterCustomActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the footerCustomActions in the aggregation <code>footerCustomActions</code>."
				},
				{
					"name": "destroyFooterMainAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the footerMainAction in the aggregation <code>footerMainAction</code>."
				},
				{
					"name": "destroyFullScreenAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the fullScreenAction in the aggregation <code>fullScreenAction</code>."
				},
				{
					"name": "destroyHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the headerContent in the aggregation <code>headerContent</code>."
				},
				{
					"name": "destroyMessagesIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the messagesIndicator in the aggregation <code>messagesIndicator</code>."
				},
				{
					"name": "destroyNegativeAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the negativeAction in the aggregation <code>negativeAction</code>."
				},
				{
					"name": "destroyPositiveAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the positiveAction in the aggregation <code>positiveAction</code>."
				},
				{
					"name": "destroyPrintAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the printAction in the aggregation <code>printAction</code>."
				},
				{
					"name": "destroySaveAsTileAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the saveAsTileAction in the aggregation <code>saveAsTileAction</code>."
				},
				{
					"name": "destroySendEmailAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the sendEmailAction in the aggregation <code>sendEmailAction</code>."
				},
				{
					"name": "destroySendMessageAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the sendMessageAction in the aggregation <code>sendMessageAction</code>."
				},
				{
					"name": "destroyShareInJamAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the shareInJamAction in the aggregation <code>shareInJamAction</code>."
				},
				{
					"name": "destroyTitleCustomIconActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the titleCustomIconActions in the aggregation <code>titleCustomIconActions</code>."
				},
				{
					"name": "destroyTitleCustomTextActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the titleCustomTextActions in the aggregation <code>titleCustomTextActions</code>."
				},
				{
					"name": "destroyTitleExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the titleExpandedContent in the aggregation <code>titleExpandedContent</code>."
				},
				{
					"name": "destroyTitleHeading",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the titleHeading in the aggregation <code>titleHeading</code>."
				},
				{
					"name": "destroyTitleMainAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the titleMainAction in the aggregation <code>titleMainAction</code>."
				},
				{
					"name": "destroyTitleSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the titleSnappedContent in the aggregation <code>titleSnappedContent</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.SemanticPage with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAddAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.AddAction"
					},
					"description": "Gets content of aggregation <code>addAction</code>.\r\rA semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getCloseAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.CloseAction"
					},
					"description": "Gets content of aggregation <code>closeAction</code>.\r\rA semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>content</code>.\r\rThe <code>SemanticPage</code> content."
				},
				{
					"name": "getCopyAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.CopyAction"
					},
					"description": "Gets content of aggregation <code>copyAction</code>.\r\rA semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getCustomShareActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button[]"
					},
					"description": "Gets content of aggregation <code>customShareActions</code>.\r\rThe <code>customShareActions</code> are placed in the <code>ShareMenu</code> area of the\n<code>SemanticPage</code> title, right after the the semantic actions."
				},
				{
					"name": "getDeleteAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.DeleteAction"
					},
					"description": "Gets content of aggregation <code>deleteAction</code>.\r\rA semantic-specific button which is placed in the <code>TextActions</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getDiscussInJamAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.DiscussInJamAction"
					},
					"description": "Gets content of aggregation <code>discussInJamAction</code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getDraftIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.DraftIndicator"
					},
					"description": "Gets content of aggregation <code>draftIndicator</code>.\r\rA semantic-specific button which is placed in the <code>FooterLeft</code> area of the <code>SemanticPage</code>\nfooter as a second action."
				},
				{
					"name": "getExitFullScreenAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.ExitFullScreenAction"
					},
					"description": "Gets content of aggregation <code>exitFullScreenAction</code>.\r\rA semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getFavoriteAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.FavoriteAction"
					},
					"description": "Gets content of aggregation <code>favoriteAction</code>.\r\rA semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getFlagAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.FlagAction"
					},
					"description": "Gets content of aggregation <code>flagAction</code>.\r\rA semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getFooterCustomActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button[]"
					},
					"description": "Gets content of aggregation <code>footerCustomActions</code>.\r\rThe <code>footerCustomActions</code> are placed in the <code>FooterRight</code> area of the\n<code>SemanticPage</code> footer, right after the semantic footer actions."
				},
				{
					"name": "getFooterMainAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.FooterMainAction"
					},
					"description": "Gets content of aggregation <code>footerMainAction</code>.\r\rA semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code>\nfooter with default text value set to <code>Save</code>."
				},
				{
					"name": "getFullScreenAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.FullScreenAction"
					},
					"description": "Gets content of aggregation <code>fullScreenAction</code>.\r\rA semantic-specific button which is placed in the <code>IconActions</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>headerContent</code>.\r\rThe header content."
				},
				{
					"name": "getHeaderExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>headerExpanded</code>"
					},
					"description": "Gets current value of property <code>headerExpanded</code>.\r\rDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:</b> Please be aware, that initially collapsed header state is not supported,\nso <code>headerExpanded</code> should not be set to <code>false</code> when initializing the control.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getHeaderPinnable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>headerPinnable</code>"
					},
					"description": "Gets current value of property <code>headerPinnable</code>.\r\rDetermines whether the header is pinnable.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getMessagesIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.MessagesIndicator"
					},
					"description": "Gets content of aggregation <code>messagesIndicator</code>.\r\rA semantic-specific button which is placed in the <code>FooterLeft</code> area of the <code>SemanticPage</code>\nfooter as a first action."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.SemanticPage."
				},
				{
					"name": "getNegativeAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.NegativeAction"
					},
					"description": "Gets content of aggregation <code>negativeAction</code>.\r\rA semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code>\nfooter with default text value set to <code>Reject</code>."
				},
				{
					"name": "getPositiveAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.PositiveAction"
					},
					"description": "Gets content of aggregation <code>positiveAction</code>.\r\rA semantic-specific button which is placed in the <code>FooterRight</code> area of the <code>SemanticPage</code>\nfooter with default text value set to <code>Accept</code>."
				},
				{
					"name": "getPreserveHeaderStateOnScroll",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>preserveHeaderStateOnScroll</code>"
					},
					"description": "Gets current value of property <code>preserveHeaderStateOnScroll</code>.\r\rPreserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title\nand then scrolls down the page, the header will remain expanded.\n\n<b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the title and the header\nare with height larger than a given threshold.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getPrintAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.PrintAction"
					},
					"description": "Gets content of aggregation <code>printAction</code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getSaveAsTileAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button"
					},
					"description": "Gets content of aggregation <code>saveAsTileAction</code>.\r\rA button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getSendEmailAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SendEmailAction"
					},
					"description": "Gets content of aggregation <code>sendEmailAction</code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getSendMessageAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SendMessageAction"
					},
					"description": "Gets content of aggregation <code>sendMessageAction</code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getShareInJamAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.ShareInJamAction"
					},
					"description": "Gets content of aggregation <code>shareInJamAction</code>.\r\rA semantic-specific button which is placed in the <code>ShareMenu</code> area of the <code>SemanticPage</code> title."
				},
				{
					"name": "getShowFooter",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>showFooter</code>"
					},
					"description": "Gets current value of property <code>showFooter</code>.\r\rDetermines whether the footer is visible.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getTitleCustomIconActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.OverflowToolbarButton[]"
					},
					"description": "Gets content of aggregation <code>titleCustomIconActions</code>.\r\rThe <code>titleCustomIconActions</code> are placed in the <code>IconActions</code> area of the\n<code>SemanticPage</code> title, right before the semantic icon action."
				},
				{
					"name": "getTitleCustomTextActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button[]"
					},
					"description": "Gets content of aggregation <code>titleCustomTextActions</code>.\r\rThe <code>titleCustomTextActions</code> are placed in the <code>TextActions</code> area of the\n<code>SemanticPage</code> title, right before the semantic text action."
				},
				{
					"name": "getTitleExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>titleExpandedContent</code>.\r\rThe content,displayed in the title, when the header is in expanded state.\n\n<b>Note:</b> The controls will be placed in the title`s middle area."
				},
				{
					"name": "getTitleHeading",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control"
					},
					"description": "Gets content of aggregation <code>titleHeading</code>.\r\rThe <code>SemanticPage</code> heading.\n\nA typical usage is the <code>sap.m.Title</code> or any other UI5 control,\nthat serves as a heading for an object.\n\n<b>Note:</b> The control will be placed in the title`s leftmost area."
				},
				{
					"name": "getTitleMainAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.TitleMainAction"
					},
					"description": "Gets content of aggregation <code>titleMainAction</code>.\r\rA semantic-specific button which is placed in the <code>SemanticPage</code> title as first action."
				},
				{
					"name": "getTitleSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>titleSnappedContent</code>.\r\rThe content, displayed in the title, when the header is in collapsed state.\n\n<b>Note:</b> The controls will be placed in the title`s middle area."
				},
				{
					"name": "getToggleHeaderOnTitleClick",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>toggleHeaderOnTitleClick</code>"
					},
					"description": "Gets current value of property <code>toggleHeaderOnTitleClick</code>.\r\rDetermines whether the the user can switch between the expanded/collapsed states of the\nheader by clicking on the title.\n\nIf set to <code>false</code>, the title is not clickable and the application\nmust provide other means for expanding/collapsing the header, if necessary.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "indexOfCustomShareAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oCustomShareAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "The customShareAction whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.m.Button</code> in the aggregation <code>customShareActions</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfFooterCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oFooterCustomAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "The footerCustomAction whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.m.Button</code> in the aggregation <code>footerCustomActions</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oHeaderContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The headerContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>headerContent</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfTitleCustomIconAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oTitleCustomIconAction",
							"type": "sap.m.OverflowToolbarButton",
							"optional": false,
							"description": "The titleCustomIconAction whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.m.OverflowToolbarButton</code> in the aggregation <code>titleCustomIconActions</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfTitleCustomTextAction",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oTitleCustomTextAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "The titleCustomTextAction whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.m.Button</code> in the aggregation <code>titleCustomTextActions</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfTitleExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oTitleExpandedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The titleExpandedContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>titleExpandedContent</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfTitleSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oTitleSnappedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The titleSnappedContent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>titleSnappedContent</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertCustomShareAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomShareAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "the customShareAction to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the customShareAction should be inserted at; for\r             a negative value of <code>iIndex</code>, the customShareAction is inserted at position 0; for a value\r             greater than the current size of the aggregation, the customShareAction is inserted at\r             the last position"
						}
					],
					"description": "Inserts a customShareAction into the aggregation <code>customShareActions</code>."
				},
				{
					"name": "insertFooterCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFooterCustomAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "the footerCustomAction to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the footerCustomAction should be inserted at; for\r             a negative value of <code>iIndex</code>, the footerCustomAction is inserted at position 0; for a value\r             greater than the current size of the aggregation, the footerCustomAction is inserted at\r             the last position"
						}
					],
					"description": "Inserts a footerCustomAction into the aggregation <code>footerCustomActions</code>."
				},
				{
					"name": "insertHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oHeaderContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the headerContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the headerContent should be inserted at; for\r             a negative value of <code>iIndex</code>, the headerContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the headerContent is inserted at\r             the last position"
						}
					],
					"description": "Inserts a headerContent into the aggregation <code>headerContent</code>."
				},
				{
					"name": "insertTitleCustomIconAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleCustomIconAction",
							"type": "sap.m.OverflowToolbarButton",
							"optional": false,
							"description": "the titleCustomIconAction to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the titleCustomIconAction should be inserted at; for\r             a negative value of <code>iIndex</code>, the titleCustomIconAction is inserted at position 0; for a value\r             greater than the current size of the aggregation, the titleCustomIconAction is inserted at\r             the last position"
						}
					],
					"description": "Inserts a titleCustomIconAction into the aggregation <code>titleCustomIconActions</code>."
				},
				{
					"name": "insertTitleCustomTextAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleCustomTextAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "the titleCustomTextAction to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the titleCustomTextAction should be inserted at; for\r             a negative value of <code>iIndex</code>, the titleCustomTextAction is inserted at position 0; for a value\r             greater than the current size of the aggregation, the titleCustomTextAction is inserted at\r             the last position"
						}
					],
					"description": "Inserts a titleCustomTextAction into the aggregation <code>titleCustomTextActions</code>."
				},
				{
					"name": "insertTitleExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleExpandedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the titleExpandedContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the titleExpandedContent should be inserted at; for\r             a negative value of <code>iIndex</code>, the titleExpandedContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the titleExpandedContent is inserted at\r             the last position"
						}
					],
					"description": "Inserts a titleExpandedContent into the aggregation <code>titleExpandedContent</code>."
				},
				{
					"name": "insertTitleSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleSnappedContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the titleSnappedContent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the titleSnappedContent should be inserted at; for\r             a negative value of <code>iIndex</code>, the titleSnappedContent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the titleSnappedContent is inserted at\r             the last position"
						}
					],
					"description": "Inserts a titleSnappedContent into the aggregation <code>titleSnappedContent</code>."
				},
				{
					"name": "removeAllCustomShareActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>customShareActions</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllFooterCustomActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>footerCustomActions</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>headerContent</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllTitleCustomIconActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.OverflowToolbarButton[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>titleCustomIconActions</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllTitleCustomTextActions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>titleCustomTextActions</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllTitleExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>titleExpandedContent</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllTitleSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>titleSnappedContent</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeCustomShareAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button",
						"description": "The removed customShareAction or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vCustomShareAction",
							"type": "int|string|sap.m.Button",
							"optional": false,
							"description": "The customShareAction to remove or its index or id"
						}
					],
					"description": "Removes a customShareAction from the aggregation <code>customShareActions</code>."
				},
				{
					"name": "removeFooterCustomAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button",
						"description": "The removed footerCustomAction or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vFooterCustomAction",
							"type": "int|string|sap.m.Button",
							"optional": false,
							"description": "The footerCustomAction to remove or its index or id"
						}
					],
					"description": "Removes a footerCustomAction from the aggregation <code>footerCustomActions</code>."
				},
				{
					"name": "removeHeaderContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed headerContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vHeaderContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The headerContent to remove or its index or id"
						}
					],
					"description": "Removes a headerContent from the aggregation <code>headerContent</code>."
				},
				{
					"name": "removeTitleCustomIconAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.OverflowToolbarButton",
						"description": "The removed titleCustomIconAction or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vTitleCustomIconAction",
							"type": "int|string|sap.m.OverflowToolbarButton",
							"optional": false,
							"description": "The titleCustomIconAction to remove or its index or id"
						}
					],
					"description": "Removes a titleCustomIconAction from the aggregation <code>titleCustomIconActions</code>."
				},
				{
					"name": "removeTitleCustomTextAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.m.Button",
						"description": "The removed titleCustomTextAction or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vTitleCustomTextAction",
							"type": "int|string|sap.m.Button",
							"optional": false,
							"description": "The titleCustomTextAction to remove or its index or id"
						}
					],
					"description": "Removes a titleCustomTextAction from the aggregation <code>titleCustomTextActions</code>."
				},
				{
					"name": "removeTitleExpandedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed titleExpandedContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vTitleExpandedContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The titleExpandedContent to remove or its index or id"
						}
					],
					"description": "Removes a titleExpandedContent from the aggregation <code>titleExpandedContent</code>."
				},
				{
					"name": "removeTitleSnappedContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed titleSnappedContent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vTitleSnappedContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The titleSnappedContent to remove or its index or id"
						}
					],
					"description": "Removes a titleSnappedContent from the aggregation <code>titleSnappedContent</code>."
				},
				{
					"name": "setAddAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAddAction",
							"type": "sap.f.semantic.AddAction",
							"optional": false,
							"description": "The addAction to set"
						}
					],
					"description": "Sets the aggregated <code>addAction</code>."
				},
				{
					"name": "setCloseAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCloseAction",
							"type": "sap.f.semantic.CloseAction",
							"optional": false,
							"description": "The closeAction to set"
						}
					],
					"description": "Sets the aggregated <code>closeAction</code>."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content to set"
						}
					],
					"description": "Sets the aggregated <code>content</code>."
				},
				{
					"name": "setCopyAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCopyAction",
							"type": "sap.f.semantic.CopyAction",
							"optional": false,
							"description": "The copyAction to set"
						}
					],
					"description": "Sets the aggregated <code>copyAction</code>."
				},
				{
					"name": "setDeleteAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDeleteAction",
							"type": "sap.f.semantic.DeleteAction",
							"optional": false,
							"description": "The deleteAction to set"
						}
					],
					"description": "Sets the aggregated <code>deleteAction</code>."
				},
				{
					"name": "setDiscussInJamAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDiscussInJamAction",
							"type": "sap.f.semantic.DiscussInJamAction",
							"optional": false,
							"description": "The discussInJamAction to set"
						}
					],
					"description": "Sets the aggregated <code>discussInJamAction</code>."
				},
				{
					"name": "setDraftIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDraftIndicator",
							"type": "sap.m.DraftIndicator",
							"optional": false,
							"description": "The draftIndicator to set"
						}
					],
					"description": "Sets the aggregated <code>draftIndicator</code>."
				},
				{
					"name": "setExitFullScreenAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oExitFullScreenAction",
							"type": "sap.f.semantic.ExitFullScreenAction",
							"optional": false,
							"description": "The exitFullScreenAction to set"
						}
					],
					"description": "Sets the aggregated <code>exitFullScreenAction</code>."
				},
				{
					"name": "setFavoriteAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFavoriteAction",
							"type": "sap.f.semantic.FavoriteAction",
							"optional": false,
							"description": "The favoriteAction to set"
						}
					],
					"description": "Sets the aggregated <code>favoriteAction</code>."
				},
				{
					"name": "setFlagAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFlagAction",
							"type": "sap.f.semantic.FlagAction",
							"optional": false,
							"description": "The flagAction to set"
						}
					],
					"description": "Sets the aggregated <code>flagAction</code>."
				},
				{
					"name": "setFooterMainAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFooterMainAction",
							"type": "sap.f.semantic.FooterMainAction",
							"optional": false,
							"description": "The footerMainAction to set"
						}
					],
					"description": "Sets the aggregated <code>footerMainAction</code>."
				},
				{
					"name": "setFullScreenAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oFullScreenAction",
							"type": "sap.f.semantic.FullScreenAction",
							"optional": false,
							"description": "The fullScreenAction to set"
						}
					],
					"description": "Sets the aggregated <code>fullScreenAction</code>."
				},
				{
					"name": "setHeaderExpanded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHeaderExpanded",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>headerExpanded</code>"
						}
					],
					"description": "Sets a new value for property <code>headerExpanded</code>.\r\rDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction,\nwhich requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:</b> Please be aware, that initially collapsed header state is not supported,\nso <code>headerExpanded</code> should not be set to <code>false</code> when initializing the control.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setHeaderPinnable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHeaderPinnable",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>headerPinnable</code>"
						}
					],
					"description": "Sets a new value for property <code>headerPinnable</code>.\r\rDetermines whether the header is pinnable.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setMessagesIndicator",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMessagesIndicator",
							"type": "sap.f.semantic.MessagesIndicator",
							"optional": false,
							"description": "The messagesIndicator to set"
						}
					],
					"description": "Sets the aggregated <code>messagesIndicator</code>."
				},
				{
					"name": "setNegativeAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oNegativeAction",
							"type": "sap.f.semantic.NegativeAction",
							"optional": false,
							"description": "The negativeAction to set"
						}
					],
					"description": "Sets the aggregated <code>negativeAction</code>."
				},
				{
					"name": "setPositiveAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPositiveAction",
							"type": "sap.f.semantic.PositiveAction",
							"optional": false,
							"description": "The positiveAction to set"
						}
					],
					"description": "Sets the aggregated <code>positiveAction</code>."
				},
				{
					"name": "setPreserveHeaderStateOnScroll",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPreserveHeaderStateOnScroll",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>preserveHeaderStateOnScroll</code>"
						}
					],
					"description": "Sets a new value for property <code>preserveHeaderStateOnScroll</code>.\r\rPreserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title\nand then scrolls down the page, the header will remain expanded.\n\n<b>Note:</b> Based on internal rules, the value of the property is not always taken into account - for example,\nwhen the control is rendered on tablet or mobile and the title and the header\nare with height larger than a given threshold.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setPrintAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPrintAction",
							"type": "sap.f.semantic.PrintAction",
							"optional": false,
							"description": "The printAction to set"
						}
					],
					"description": "Sets the aggregated <code>printAction</code>."
				},
				{
					"name": "setSaveAsTileAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSaveAsTileAction",
							"type": "sap.m.Button",
							"optional": false,
							"description": "The saveAsTileAction to set"
						}
					],
					"description": "Sets the aggregated <code>saveAsTileAction</code>."
				},
				{
					"name": "setSendEmailAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSendEmailAction",
							"type": "sap.f.semantic.SendEmailAction",
							"optional": false,
							"description": "The sendEmailAction to set"
						}
					],
					"description": "Sets the aggregated <code>sendEmailAction</code>."
				},
				{
					"name": "setSendMessageAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSendMessageAction",
							"type": "sap.f.semantic.SendMessageAction",
							"optional": false,
							"description": "The sendMessageAction to set"
						}
					],
					"description": "Sets the aggregated <code>sendMessageAction</code>."
				},
				{
					"name": "setShareInJamAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oShareInJamAction",
							"type": "sap.f.semantic.ShareInJamAction",
							"optional": false,
							"description": "The shareInJamAction to set"
						}
					],
					"description": "Sets the aggregated <code>shareInJamAction</code>."
				},
				{
					"name": "setShowFooter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowFooter",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>showFooter</code>"
						}
					],
					"description": "Sets a new value for property <code>showFooter</code>.\r\rDetermines whether the footer is visible.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setTitleHeading",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleHeading",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The titleHeading to set"
						}
					],
					"description": "Sets the aggregated <code>titleHeading</code>."
				},
				{
					"name": "setTitleMainAction",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTitleMainAction",
							"type": "sap.f.semantic.TitleMainAction",
							"optional": false,
							"description": "The titleMainAction to set"
						}
					],
					"description": "Sets the aggregated <code>titleMainAction</code>."
				},
				{
					"name": "setToggleHeaderOnTitleClick",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticPage",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bToggleHeaderOnTitleClick",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>toggleHeaderOnTitleClick</code>"
						}
					],
					"description": "Sets a new value for property <code>toggleHeaderOnTitleClick</code>.\r\rDetermines whether the the user can switch between the expanded/collapsed states of the\nheader by clicking on the title.\n\nIf set to <code>false</code>, the title is not clickable and the application\nmust provide other means for expanding/collapsing the header, if necessary.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.SemanticToggleButton",
			"basename": "SemanticToggleButton",
			"resource": "sap/f/semantic/SemanticToggleButton.js",
			"module": "sap/f/semantic/SemanticToggleButton",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A base class for the {@link sap.f.semantic.FavoriteAction} and {@link sap.f.semantic.FlagAction}.",
			"ui5-metadata": {
				"properties": [
					{
						"name": "pressed",
						"type": "boolean",
						"defaultValue": false,
						"group": "Data",
						"visibility": "public",
						"description": "Defines the <code>SemanticToggleButton</code> pressed state.\n\nThe property is set to <code>true</code> when the control is toggled (default is <code>false</code>).",
						"methods": [
							"getPressed",
							"setPressed"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>SemanticToggleButton</code>.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.SemanticToggleButton with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.SemanticToggleButton."
				},
				{
					"name": "getPressed",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>pressed</code>"
					},
					"description": "Gets current value of property <code>pressed</code>.\r\rDefines the <code>SemanticToggleButton</code> pressed state.\n\nThe property is set to <code>true</code> when the control is toggled (default is <code>false</code>).\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setPressed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.f.semantic.SemanticToggleButton",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPressed",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>pressed</code>"
						}
					],
					"description": "Sets a new value for property <code>pressed</code>.\r\rDefines the <code>SemanticToggleButton</code> pressed state.\n\nThe property is set to <code>true</code> when the control is toggled (default is <code>false</code>).\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.SendEmailAction",
			"basename": "SendEmailAction",
			"resource": "sap/f/semantic/SendEmailAction.js",
			"module": "sap/f/semantic/SendEmailAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>sendEmailAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>SendEmailAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.SendEmailAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.SendEmailAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.SendMessageAction",
			"basename": "SendMessageAction",
			"resource": "sap/f/semantic/SendMessageAction.js",
			"module": "sap/f/semantic/SendMessageAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>sendMessageAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>SendMessageAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.SendMessageAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.SendMessageAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.ShareInJamAction",
			"basename": "ShareInJamAction",
			"resource": "sap/f/semantic/ShareInJamAction.js",
			"module": "sap/f/semantic/ShareInJamAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>shareInJamAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>ShareInJamAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.ShareInJamAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.ShareInJamAction."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.f.semantic.TitleMainAction",
			"basename": "TitleMainAction",
			"resource": "sap/f/semantic/TitleMainAction.js",
			"module": "sap/f/semantic/TitleMainAction",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46.0",
			"extends": "<code>sap.f.semantic.SemanticButton</code>",
			"description": "A semantic-specific button, eligible for the <code>titleMainAction</code> aggregation of the\n{@link sap.f.semantic.SemanticPage} to be placed in its title.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "ID for the new control, generated automatically if no ID is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Custom initial settings for the new control"
					}
				],
				"description": "Constructor for a new <code>TitleMainAction</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.f.semantic.TitleMainAction with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link <code>sap.f.semantic.SemanticButton</code>.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.f.semantic.TitleMainAction."
				}
			]
		}
	]
}