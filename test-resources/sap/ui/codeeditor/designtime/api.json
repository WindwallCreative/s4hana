{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.46.8",
	"library": "sap.ui.codeeditor",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.ui.codeeditor",
			"basename": "codeeditor",
			"resource": "sap/ui/codeeditor/library.js",
			"module": "sap/ui/codeeditor/library",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "UI5 library: sap.ui.codeeditor."
		},
		{
			"kind": "class",
			"name": "sap.ui.codeeditor.CodeEditor",
			"basename": "CodeEditor",
			"resource": "sap/ui/codeeditor/CodeEditor.js",
			"module": "sap/ui/codeeditor/CodeEditor",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Allows to visualize source code of various types with syntax highlighting, line numbers in editable and read only mode.\nUse this controls in scenarios where the user should be able to inspect and edit source code.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "value",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The value displayed in the code editor",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "type",
						"type": "string",
						"defaultValue": "javascript",
						"group": "Appearance",
						"visibility": "public",
						"description": "The type of the code in the editor used for syntax highlighting\nPossible types are javascript (default), json, html, xml and  css.",
						"methods": [
							"getType",
							"setType"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Appearance",
						"visibility": "public",
						"description": "The width of the code editor",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Appearance",
						"visibility": "public",
						"description": "The height of the code editor.\nA minimal height of 3rem will be applied in case the height is less than 20px.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "editable",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Sets whether the code in the editor can be changed by the user",
						"methods": [
							"getEditable",
							"setEditable"
						]
					},
					{
						"name": "lineNumbers",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Sets whether line numbers should be shown",
						"methods": [
							"getLineNumbers",
							"setLineNumbers"
						]
					},
					{
						"name": "valueSelection",
						"type": "boolean",
						"defaultValue": false,
						"group": "Behavior",
						"visibility": "public",
						"description": "Sets whether the code is automatically selected if a value is set",
						"methods": [
							"getValueSelection",
							"setValueSelection"
						]
					},
					{
						"name": "colorTheme",
						"type": "string",
						"defaultValue": "default",
						"group": "Behavior",
						"visibility": "public",
						"description": "Sets the editors color theme\npossible values",
						"methods": [
							"getColorTheme",
							"setColorTheme"
						]
					},
					{
						"name": "syntaxHints",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Sets whether to show syntax hints the editor. This flag is only available if line numbers are shown.",
						"methods": [
							"getSyntaxHints",
							"setSyntaxHints"
						]
					}
				],
				"defaultProperty": "content",
				"events": [
					{
						"name": "liveChange",
						"visibility": "public",
						"methods": [
							"attachLiveChange",
							"detachLiveChange",
							"fireLiveChange"
						]
					},
					{
						"name": "change",
						"visibility": "public",
						"methods": [
							"attachChange",
							"detachChange",
							"fireChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new CodeEditor.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					]
				},
				{
					"name": "liveChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					]
				}
			],
			"methods": [
				{
					"name": "_getEditorInstance",
					"visibility": "restricted",
					"returnValue": {
						"type": "object",
						"description": "the internal ace editor instance"
					},
					"description": "Returns the internal ace editor instance"
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.codeeditor.CodeEditor</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>change</code> event of this <code>sap.ui.codeeditor.CodeEditor</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.codeeditor.CodeEditor</code> itself."
				},
				{
					"name": "attachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.codeeditor.CodeEditor</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>liveChange</code> event of this <code>sap.ui.codeeditor.CodeEditor</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.codeeditor.CodeEditor</code> itself."
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>change</code> event of this <code>sap.ui.codeeditor.CodeEditor</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachLiveChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>liveChange</code> event of this <code>sap.ui.codeeditor.CodeEditor</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.codeeditor.CodeEditor with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>change</code> to attached listeners."
				},
				{
					"name": "fireLiveChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>liveChange</code> to attached listeners."
				},
				{
					"name": "focus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"description": "Sets the focus to the code editor"
				},
				{
					"name": "getColorTheme",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>colorTheme</code>"
					},
					"description": "Gets current value of property <code>colorTheme</code>.\r\rSets the editors color theme\npossible values\r\rDefault value is <code>default</code>."
				},
				{
					"name": "getCurrentValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Returns the current value of the code editor"
					},
					"description": "Returns the current value of the code editor"
				},
				{
					"name": "getEditable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>editable</code>"
					},
					"description": "Gets current value of property <code>editable</code>.\r\rSets whether the code in the editor can be changed by the user\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\r\rThe height of the code editor.\nA minimal height of 3rem will be applied in case the height is less than 20px.\r\rDefault value is <code>100%</code>."
				},
				{
					"name": "getLineNumbers",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>lineNumbers</code>"
					},
					"description": "Gets current value of property <code>lineNumbers</code>.\r\rSets whether line numbers should be shown\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.codeeditor.CodeEditor."
				},
				{
					"name": "getSyntaxHints",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>syntaxHints</code>"
					},
					"description": "Gets current value of property <code>syntaxHints</code>.\r\rSets whether to show syntax hints the editor. This flag is only available if line numbers are shown.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>type</code>"
					},
					"description": "Gets current value of property <code>type</code>.\r\rThe type of the code in the editor used for syntax highlighting\nPossible types are javascript (default), json, html, xml and  css.\r\rDefault value is <code>javascript</code>."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\r\rThe value displayed in the code editor\r\rDefault value is <code></code>."
				},
				{
					"name": "getValueSelection",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>valueSelection</code>"
					},
					"description": "Gets current value of property <code>valueSelection</code>.\r\rSets whether the code is automatically selected if a value is set\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\r\rThe width of the code editor\r\rDefault value is <code>100%</code>."
				},
				{
					"name": "setColorTheme",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTheme",
							"type": "string",
							"optional": false,
							"description": "'default', 'hcb', 'hcb_bright', 'hcb_blue'"
						}
					],
					"description": "Sets the color theme  of the code editor"
				},
				{
					"name": "setEditable",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "true to allow editing, otherwise false"
						}
					],
					"description": "Sets whether the code editor is editable or not"
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\r\rThe height of the code editor.\nA minimal height of 3rem will be applied in case the height is less than 20px.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>100%</code>."
				},
				{
					"name": "setLineNumbers",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "true to show line numbers"
						}
					],
					"description": "Sets whether line numbers should be shown or not"
				},
				{
					"name": "setSyntaxHints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShow",
							"type": "boolean",
							"optional": false,
							"description": "true(default) to show the syntax hints"
						}
					],
					"description": "Sets whether syntax hints should be shown or not\nHints are only visible if <code>lineNumbers</code> is set to true."
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "javascript (default), html, xml, css"
						}
					],
					"description": "Sets the type of the code editors value used for syntax highlighting"
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value of the code editor"
						}
					],
					"description": "Sets the value of the code editor"
				},
				{
					"name": "setValueSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bValueSelection",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>valueSelection</code>"
						}
					],
					"description": "Sets a new value for property <code>valueSelection</code>.\r\rSets whether the code is automatically selected if a value is set\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.codeeditor.CodeEditor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\r\rThe width of the code editor\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>100%</code>."
				}
			]
		}
	]
}