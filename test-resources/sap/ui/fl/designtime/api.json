{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.46.8",
	"library": "sap.ui.fl",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.ui.fl",
			"basename": "fl",
			"resource": "sap/ui/fl/library.js",
			"module": "sap/ui/fl/library",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"description": "SAPUI5 library for UI Flexibility and Descriptor Changes and Descriptor Variants."
		},
		{
			"kind": "namespace",
			"name": "sap.ui.fl.descriptorRelated",
			"basename": "descriptorRelated",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory",
			"static": true,
			"visibility": "restricted",
			"description": "Descriptor Related"
		},
		{
			"kind": "namespace",
			"name": "sap.ui.fl.descriptorRelated.api",
			"basename": "api",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory",
			"static": true,
			"visibility": "restricted",
			"description": "Descriptor Related Apis"
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorChange",
			"basename": "DescriptorChange",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "mChangeFile",
						"type": "object",
						"optional": false,
						"description": "change file"
					},
					{
						"name": "oInlineChange",
						"type": "sap.ui.fl.descriptorRelated.api.DescriptorInlineChange",
						"optional": false,
						"description": "inline change object"
					},
					{
						"name": "oSettings",
						"type": "sap.ui.fl.descriptorRelated.api.Settings",
						"optional": false,
						"description": "settings"
					}
				],
				"description": "Descriptor Change"
			},
			"methods": [
				{
					"name": "getJson",
					"visibility": "restricted",
					"returnValue": {
						"type": "object",
						"description": "copy of JSON object of the descriptor change"
					},
					"description": "Returns a copy of the JSON object of the descriptor change"
				},
				{
					"name": "setPackage",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving when setting of package was successful"
					},
					"parameters": [
						{
							"name": "sPackage",
							"type": "string",
							"optional": false,
							"description": "package"
						}
					],
					"description": "Set package (for ABAP Backend)"
				},
				{
					"name": "setTransportRequest",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving when setting of transport request was successful"
					},
					"parameters": [
						{
							"name": "sTransportRequest",
							"type": "string",
							"optional": false,
							"description": "transport request"
						}
					],
					"description": "Set transport request (for ABAP Backend)"
				},
				{
					"name": "submit",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving after all changes have been saved"
					},
					"description": "Submits the descriptor change to the backend"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorChangeFactory",
			"basename": "DescriptorChangeFactory",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorChangeFactory",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"description": "Factory for Descriptor Changes"
			},
			"methods": [
				{
					"name": "createNew",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving the new Change instance"
					},
					"parameters": [
						{
							"name": "sReference",
							"type": "string",
							"optional": false,
							"description": "the descriptor id for which the change is created"
						},
						{
							"name": "oInlineChange",
							"type": "object",
							"optional": false,
							"description": "the inline change instance"
						},
						{
							"name": "sLayer",
							"type": "string",
							"optional": false,
							"description": "layer of the descriptor change"
						}
					],
					"description": "Creates a new descriptor change"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorInlineChange",
			"basename": "DescriptorInlineChange",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "sChangeType",
						"type": "string",
						"optional": false,
						"description": "change type"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"description": "parameters of the inline change for the provided change type"
					},
					{
						"name": "mTexts",
						"type": "object",
						"optional": true,
						"description": "texts for the inline change"
					}
				],
				"description": "Descriptor Inline Change"
			}
		},
		{
			"kind": "namespace",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorInlineChangeFactory",
			"basename": "DescriptorInlineChangeFactory",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorInlineChangeFactory",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"description": "Factory for Descriptor Inline Changes",
			"methods": [
				{
					"name": "create_app_addAnnotationsToOData",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"dataSourceId": {
									"name": "dataSourceId",
									"type": "string",
									"optional": false,
									"description": "the id of the data source to be changed by adding annotations from annotations parameter"
								},
								"annotations": {
									"name": "annotations",
									"type": "array",
									"optional": false,
									"description": "array with ids of data sources of type 'ODataAnnotation' that should be added to the data source to be changed"
								},
								"annotationsInsertPosition": {
									"name": "annotationsInsertPosition",
									"type": "enum",
									"optional": true,
									"description": "position at which the annotations should be added to the annotations of the data source to be changed (BEGINNING/END, default BEGINNING)"
								},
								"dataSource": {
									"name": "dataSource",
									"type": "object",
									"optional": false,
									"description": "one or several data sources of type 'ODataAnnotation' which should be added, all need to be contained in the annotations parameter"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_addAnnotationsToOData"
				},
				{
					"name": "create_app_addNewDataSource",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"dataSource": {
									"name": "dataSource",
									"type": "object",
									"optional": false,
									"description": "the data source to be created according to descriptor schema (either one data source or one of type OData and one of type ODataAnnotation)"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_addNewDataSource"
				},
				{
					"name": "create_app_addNewInbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"inbound": {
									"name": "inbound",
									"type": "object",
									"optional": false,
									"description": "the inbound to be created according to descriptor schema"
								}
							},
							"description": "parameters of the change type"
						},
						{
							"name": "mTexts",
							"type": "object",
							"optional": true,
							"description": "texts for the inline change"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_addNewInbound"
				},
				{
					"name": "create_app_addNewOutbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"outbound": {
									"name": "outbound",
									"type": "object",
									"optional": false,
									"description": "the outbound to be created according to descriptor schema"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_addNewOutbound"
				},
				{
					"name": "create_app_changeDataSource",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"dataSourceId": {
									"name": "dataSourceId",
									"type": "string",
									"optional": false,
									"description": "the id of the data source to be changed"
								},
								"entityPropertyChange": {
									"name": "entityPropertyChange",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"propertyPath": {
											"name": "propertyPath",
											"type": "object",
											"optional": false,
											"description": "the property path inside the data source"
										},
										"operation": {
											"name": "operation",
											"type": "object",
											"optional": false,
											"description": "the operation (INSERT, UPDATE, UPSERT, DELETE)"
										},
										"propertyValue": {
											"name": "propertyValue",
											"type": "object",
											"optional": false,
											"description": "the new property value"
										}
									}
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_changeDataSource"
				},
				{
					"name": "create_app_changeInbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"inboundId": {
									"name": "inboundId",
									"type": "string",
									"optional": false,
									"description": "the id of the inbound to be changed"
								},
								"entityPropertyChange": {
									"name": "entityPropertyChange",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"propertyPath": {
											"name": "propertyPath",
											"type": "object",
											"optional": false,
											"description": "the property path inside the inbound"
										},
										"operation": {
											"name": "operation",
											"type": "object",
											"optional": false,
											"description": "the operation (INSERT, UPDATE, UPSERT, DELETE)"
										},
										"propertyValue": {
											"name": "propertyValue",
											"type": "object",
											"optional": false,
											"description": "the new property value"
										}
									}
								}
							},
							"description": "parameters of the change type"
						},
						{
							"name": "mTexts",
							"type": "object",
							"optional": true,
							"description": "texts for the inline change"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_changeInbound"
				},
				{
					"name": "create_app_changeOutbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"outboundId": {
									"name": "outboundId",
									"type": "string",
									"optional": false,
									"description": "the id of the outbound to be changed"
								},
								"entityPropertyChange": {
									"name": "entityPropertyChange",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"propertyPath": {
											"name": "propertyPath",
											"type": "object",
											"optional": false,
											"description": "the property path inside the outbound"
										},
										"operation": {
											"name": "operation",
											"type": "object",
											"optional": false,
											"description": "the operation (INSERT, UPDATE, UPSERT, DELETE)"
										},
										"propertyValue": {
											"name": "propertyValue",
											"type": "object",
											"optional": false,
											"description": "the new property value"
										}
									}
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_changeOutbound"
				},
				{
					"name": "create_app_removeDataSource",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"dataSourceId": {
									"name": "dataSourceId",
									"type": "string",
									"optional": false,
									"description": "the id of the data source to be removed"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_removeDataSource"
				},
				{
					"name": "create_app_removeInbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"inboundId": {
									"name": "inboundId",
									"type": "string",
									"optional": false,
									"description": "the id of the inbound to be removed"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_removeInbound"
				},
				{
					"name": "create_app_removeOutbound",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"outboundId": {
									"name": "outboundId",
									"type": "string",
									"optional": false,
									"description": "the id of the outbound to be removed"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_removeOutbound"
				},
				{
					"name": "create_app_setDescription",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"maxLength": {
									"name": "maxLength",
									"type": "object",
									"optional": false,
									"description": "max length of description"
								},
								"type": {
									"name": "type",
									"type": "object",
									"optional": true,
									"defaultValue": "'XTIT'",
									"description": "type of description"
								},
								"comment": {
									"name": "comment",
									"type": "object",
									"optional": true,
									"description": "comment for additional information"
								},
								"value": {
									"name": "value",
									"type": "object",
									"optional": true,
									"description": "map of locale and text, \"\" represents the default description"
								}
							},
							"description": "map of text properties"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_description"
				},
				{
					"name": "create_app_setDestination",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"destination": {
									"name": "destination",
									"type": "object",
									"optional": false,
									"description": "the destination"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_setDestination"
				},
				{
					"name": "create_app_setKeywords",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"keywords": {
									"name": "keywords",
									"type": "array",
									"optional": false,
									"description": "the keywords"
								}
							},
							"description": "parameters of the change type"
						},
						{
							"name": "mTexts",
							"type": "object",
							"optional": true,
							"description": "texts for the inline change"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_setKeywords"
				},
				{
					"name": "create_app_setSubTitle",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"maxLength": {
									"name": "maxLength",
									"type": "object",
									"optional": false,
									"description": "max length of sub title"
								},
								"type": {
									"name": "type",
									"type": "object",
									"optional": true,
									"defaultValue": "'XTIT'",
									"description": "type of sub title"
								},
								"comment": {
									"name": "comment",
									"type": "object",
									"optional": true,
									"description": "comment for additional information"
								},
								"value": {
									"name": "value",
									"type": "object",
									"optional": true,
									"description": "map of locale and text, \"\" represents the default sub title"
								}
							},
							"description": "map of text properties"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_setSubTitle"
				},
				{
					"name": "create_app_setTitle",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"maxLength": {
									"name": "maxLength",
									"type": "object",
									"optional": false,
									"description": "max length of title"
								},
								"type": {
									"name": "type",
									"type": "object",
									"optional": true,
									"defaultValue": "'XTIT'",
									"description": "type of title"
								},
								"comment": {
									"name": "comment",
									"type": "object",
									"optional": true,
									"description": "comment for additional information"
								},
								"value": {
									"name": "value",
									"type": "object",
									"optional": true,
									"description": "map of locale and text, \"\" represents the default title"
								}
							},
							"description": "map of text properties"
						}
					],
					"description": "Creates an inline change of change type appdescr_app_setTitle"
				},
				{
					"name": "create_ovp_addNewCard",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"card": {
									"name": "card",
									"type": "object",
									"optional": false,
									"description": "the card to be created according to descriptor schema"
								},
								"model": {
									"name": "model",
									"type": "object",
									"optional": true,
									"description": "the ui5 model to be created according to descriptor schema"
								},
								"dataSource": {
									"name": "dataSource",
									"type": "object",
									"optional": true,
									"description": "the data sources to be created according to descriptor schema (either not provided or of type OData or of type OData and ODataAnnotation"
								}
							},
							"description": "parameters of the change type"
						},
						{
							"name": "mTexts",
							"type": "object",
							"optional": true,
							"description": "texts for the inline change"
						}
					],
					"description": "Creates an inline change of change type appdescr_ovp_addNewCard"
				},
				{
					"name": "create_ovp_removeCard",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"cardId": {
									"name": "cardId",
									"type": "string",
									"optional": false,
									"description": "the id of the card to be removed"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_ovp_removeCard"
				},
				{
					"name": "create_smb_addNamespace",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"smartBusinessApp": {
									"name": "smartBusinessApp",
									"type": "object",
									"optional": false,
									"description": "the smart business app to be created according to descriptor schema"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_smb_addNamespace"
				},
				{
					"name": "create_smb_changeNamespace",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"smartBusinessApp": {
									"name": "smartBusinessApp",
									"type": "object",
									"optional": false,
									"description": "the smart business app to be changed according to descriptor schema"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_smb_changeNamespace"
				},
				{
					"name": "create_ui5_addNewModel",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"model": {
									"name": "model",
									"type": "object",
									"optional": false,
									"description": "the ui5 model to be created according to descriptor schema"
								},
								"dataSource": {
									"name": "dataSource",
									"type": "object",
									"optional": true,
									"description": "the data sources to be created according to descriptor schema (either not provided or of arbitrary type or two provided of type OData and of type OData and ODataAnnotation)"
								}
							},
							"description": "parameters of the change type"
						}
					],
					"description": "Creates an inline change of change type appdescr_ui5_addNewModel"
				},
				{
					"name": "create_ui_generic_app_setMainPage",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"page": {
									"name": "page",
									"type": "object",
									"optional": false,
									"description": "the page to be created according to descriptor schema"
								}
							},
							"description": "parameters of the change type"
						},
						{
							"name": "mTexts",
							"type": "object",
							"optional": true,
							"description": "texts for the inline change"
						}
					],
					"description": "Creates an inline change of change type appdescr_ui_generic_app_setMainPage"
				},
				{
					"name": "createDescriptorInlineChange",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving when creating the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "sDescriptorChangeType",
							"type": "string",
							"optional": false,
							"description": "the change type"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"description": "parameters of the changed type"
						},
						{
							"name": "mTexts",
							"type": "object",
							"optional": true,
							"description": "texts for the inline change"
						}
					],
					"description": "Creates an inline change"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorVariant",
			"basename": "DescriptorVariant",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "mParameters",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"id": {
								"name": "id",
								"type": "string",
								"optional": false,
								"description": "the id of the descriptor variant id to be provided for a new descriptor variant and for deleting a descriptor variant"
							},
							"reference": {
								"name": "reference",
								"type": "string",
								"optional": false,
								"description": "the referenced descriptor or descriptor variant id to be provided when creating a new descriptor variant"
							},
							"isAppVariantRoot": {
								"name": "isAppVariantRoot",
								"type": "boolean",
								"optional": true,
								"defaultValue": true
							}
						},
						"description": "parameters"
					},
					{
						"name": "mFileContent",
						"type": "object",
						"optional": false,
						"description": "file content of the existing descriptor variant to be provided if descriptor variant shall be created from an existing"
					},
					{
						"name": "bDeletion",
						"type": "boolean",
						"optional": true,
						"defaultValue": false,
						"description": "deletion indicator to be provided if descriptor variant shall be deleted"
					},
					{
						"name": "oSettings",
						"type": "sap.ui.fl.descriptorRelated.api.Settings",
						"optional": false,
						"description": "settings"
					}
				],
				"description": "Descriptor Variant"
			},
			"methods": [
				{
					"name": "addDescriptorInlineChange",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving when adding the descriptor inline change was successful (without backend access)"
					},
					"parameters": [
						{
							"name": "oDescriptorInlineChange",
							"type": "sap.ui.fl.descriptorRelated.api.DescriptorInlineChange",
							"optional": false,
							"description": "the inline change"
						}
					],
					"description": "Adds a descriptor inline change to the descriptor variant"
				},
				{
					"name": "getJson",
					"visibility": "restricted",
					"returnValue": {
						"type": "object",
						"description": "copy of JSON object of the descriptor variant"
					},
					"description": "Returns a copy of the JSON object of the descriptor variant"
				},
				{
					"name": "setPackage",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving when setting of package was successful"
					},
					"parameters": [
						{
							"name": "sPackage",
							"type": "string",
							"optional": false,
							"description": "ABAP package"
						}
					],
					"description": "Set package (for ABAP Backend)"
				},
				{
					"name": "setTransportRequest",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving when setting of transport request was successful"
					},
					"parameters": [
						{
							"name": "sTransportRequest",
							"type": "string",
							"optional": false,
							"description": "ABAP transport request"
						}
					],
					"description": "Set transport request (for ABAP Backend)"
				},
				{
					"name": "submit",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise",
						"description": "resolving when submitting the descriptor variant was successful"
					},
					"description": "Submits the descriptor variant to the backend"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.fl.descriptorRelated.api.DescriptorVariantFactory",
			"basename": "DescriptorVariantFactory",
			"resource": "sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory.js",
			"module": "sap/ui/fl/descriptorRelated/api/DescriptorVariantFactory",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"description": "Factory for Descriptor Variants",
			"methods": [
				{
					"name": "createDeletion",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving the DescriptorVariant instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "the id of the descriptor variant id"
						}
					],
					"description": "Creates a descriptor variant deletion"
				},
				{
					"name": "createForExisting",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving the DescriptorVariant instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "the id of the descriptor variant id"
						}
					],
					"description": "Creates a descriptor variant instance for an existing descriptor variant id"
				},
				{
					"name": "createNew",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "resolving the new DescriptorVariant instance"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"reference": {
									"name": "reference",
									"type": "string",
									"optional": false,
									"description": "the referenced descriptor or descriptor variant id"
								},
								"id": {
									"name": "id",
									"type": "string",
									"optional": false,
									"description": "the id for the descriptor variant id"
								},
								"layer": {
									"name": "layer",
									"type": "string",
									"optional": true,
									"defaultValue": "'CUSTOMER'",
									"description": "the layer for the descriptor variant"
								},
								"isAppVariantRoot": {
									"name": "isAppVariantRoot",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "if descriptor variant is 'appVariantRoot'"
								}
							}
						}
					],
					"description": "Creates a new descriptor variant"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.descriptorRelated.api.Settings",
			"basename": "Settings",
			"resource": "sap/ui/fl/descriptorRelated/api/Settings.js",
			"module": "sap/ui/fl/descriptorRelated/api/Settings",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "oSettings",
						"type": "object",
						"optional": false,
						"description": "settings as JSON object"
					}
				],
				"description": "DescriptorSettings access"
			},
			"methods": [
				{
					"name": "getInstance",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "Promise",
						"description": "with parameter <code>oInstance</code> of type {sap.ui.fl.descriptorRelated.api.Settings}"
					},
					"description": "Returns a settings instance after reading the settings from the backend if not already done. There is only one instance of settings during a\nsession."
				},
				{
					"name": "isAtoEnabled",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "true if ATO is enabled."
					},
					"description": "Returns true if ATO is enabled in the backend."
				},
				{
					"name": "isKeyUser",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "true if the user is a flexibility key user, false if not supported."
					},
					"description": "Returns the key user status of the current user."
				},
				{
					"name": "isModelS",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "true if ATO coding exists in backend."
					},
					"description": "Returns true if backend is ModelS backend."
				},
				{
					"name": "isProductiveSystem",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "true if system is productive system"
					},
					"description": "Is current back end system defined as productive system which can also transport changes"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.LrepConnector",
			"basename": "LrepConnector",
			"resource": "sap/ui/fl/LrepConnector.js",
			"module": "sap/ui/fl/LrepConnector",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"XsrfToken": {
								"name": "XsrfToken",
								"type": "String",
								"optional": true,
								"description": "XSRF token which can be reused for back-end connectivity. If no XSRF token is passed, a new one\n       will be fetched from back end."
							}
						},
						"description": "map of parameters, see below"
					}
				],
				"description": "Provides the connectivity to the ABAP based LRep REST-service"
			},
			"methods": [
				{
					"name": "attachSentRequest",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fCallback",
							"type": "function",
							"optional": false,
							"description": "function called after all related promises are resolved"
						}
					],
					"description": "Registers a callback for a sent request to the back end. The callback is only called once for each change. Each call is done with an object\nsimilar to the resolve of the promises containing a <code>status</code> of the response from the back end i.e. <code>success</code>, a\n<code>response</code> containing the change processed in this request"
				},
				{
					"name": "create",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Returns the result from the request"
					},
					"parameters": [
						{
							"name": "oPayload",
							"type": "Object",
							"optional": false,
							"description": "The content which is send to the server"
						},
						{
							"name": "sChangelist",
							"type": "String",
							"optional": true,
							"description": "The transport ID."
						},
						{
							"name": "bIsVariant",
							"type": "Boolean",
							"optional": false,
							"description": "is variant?"
						}
					],
					"description": "Creates a change or variant via REST call."
				},
				{
					"name": "deleteChange",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Returns the result from the request"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "String",
							"optional": false,
							"parameterProperties": {
								"sChangeName": {
									"name": "sChangeName",
									"type": "String",
									"optional": false,
									"description": "name of the change"
								},
								"sLayer": {
									"name": "sLayer",
									"type": "String",
									"optional": true,
									"defaultValue": "\"USER\"",
									"description": "other possible layers: VENDOR,PARTNER,CUSTOMER_BASE,CUSTOMER"
								},
								"sNamespace": {
									"name": "sNamespace",
									"type": "String",
									"optional": false,
									"description": "the namespace of the change file"
								},
								"sChangelist": {
									"name": "sChangelist",
									"type": "String",
									"optional": false,
									"description": "The transport ID."
								}
							},
							"description": "property bag"
						},
						{
							"name": "bIsVariant",
							"type": "Boolean",
							"optional": false,
							"description": "is it a variant?"
						}
					],
					"description": "Delete a change or variant via REST call."
				},
				{
					"name": "deleteFile",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Returns the result from the request"
					},
					"parameters": [
						{
							"name": "sNamespace",
							"type": "String",
							"optional": false,
							"description": "The abap package goes here. It is needed to identify the change."
						},
						{
							"name": "sName",
							"type": "String",
							"optional": false,
							"description": "Name of the change"
						},
						{
							"name": "sType",
							"type": "String",
							"optional": false,
							"description": "File type extension"
						},
						{
							"name": "sLayer",
							"type": "String",
							"optional": false,
							"description": "File layer"
						},
						{
							"name": "sChangelist",
							"type": "String",
							"optional": false,
							"description": "The transport ID, optional"
						}
					],
					"description": "Delete a file via REST call."
				},
				{
					"name": "detachSentRequest",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fCallback",
							"type": "function",
							"optional": false,
							"description": "function called after all related promises are resolved"
						}
					],
					"description": "Deregisters a callback for a sent request to the back end if the callback was registered"
				},
				{
					"name": "getFileAttributes",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Returns the result from the request"
					},
					"parameters": [
						{
							"name": "sNamespace",
							"type": "String",
							"optional": false,
							"description": "The abap package goes here. It is needed to identify the change. Default LREP namespace is \"localchange\"."
						},
						{
							"name": "sName",
							"type": "String",
							"optional": false,
							"description": "Name of the change"
						},
						{
							"name": "sType",
							"type": "String",
							"optional": false,
							"description": "File type extension"
						},
						{
							"name": "sLayer",
							"type": "String",
							"optional": false,
							"description": "File layer"
						}
					],
					"description": "Retrieves the file attributes for a given resource in the LREP."
				},
				{
					"name": "getStaticResource",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Returns the result from the request"
					},
					"parameters": [
						{
							"name": "sNamespace",
							"type": "String",
							"optional": false,
							"description": "The abap package goes here. It is needed to identify the change. Default LREP namespace is \"localchange\"."
						},
						{
							"name": "sName",
							"type": "String",
							"optional": false,
							"description": "Name of the change"
						},
						{
							"name": "sType",
							"type": "String",
							"optional": false,
							"description": "File type extension"
						},
						{
							"name": "bIsRuntime",
							"type": "Boolean",
							"optional": false,
							"description": "The stored file content is handed over to the lrep provider that can dynamically adjust the content to the runtime\n       context (e.g. do text replacement to the users' logon language) before"
						}
					],
					"description": "Authenticated access to a resource in the Lrep"
				},
				{
					"name": "listContent",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Returns the result from the request"
					},
					"parameters": [
						{
							"name": "sNamespace",
							"type": "String",
							"optional": false,
							"description": "The file namespace goes here. It is needed to identify the change."
						},
						{
							"name": "sLayer",
							"type": "String",
							"optional": false,
							"description": "File layer"
						}
					],
					"description": "Retrieves the content for a given namespace and layer via REST call."
				},
				{
					"name": "loadChanges",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "Returns a Promise with the changes (changes, contexts, optional messagebundle) and componentClassName"
					},
					"parameters": [
						{
							"name": "sComponentClassName",
							"type": "String",
							"optional": false,
							"description": "Component class name"
						},
						{
							"name": "mPropertyBag",
							"type": "map",
							"optional": false,
							"description": "(optional) contains additional data that are needed for reading of changes\n                          - appDescriptor that belongs to actual component\n                          - siteId that belongs to actual component\n                          - layer up to which changes shall be read (excluding the specified layer)"
						}
					],
					"description": "Loads the changes for the given component class name."
				},
				{
					"name": "send",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "Returns a promise to the result of the request"
					},
					"parameters": [
						{
							"name": "sUri",
							"type": "String",
							"optional": false,
							"description": "Relative URL for this request"
						},
						{
							"name": "sMethod",
							"type": "String",
							"optional": false,
							"description": "HTTP-method to be used by this request (default GET)"
						},
						{
							"name": "oData",
							"type": "Object",
							"optional": false,
							"description": "Payload of the request"
						},
						{
							"name": "mOptions",
							"type": "Object",
							"optional": false,
							"description": "Additional options which should be used in the request"
						}
					],
					"description": "Send a request to the back end"
				},
				{
					"name": "setRequestUrlPrefix",
					"visibility": "restricted",
					"parameters": [
						{
							"name": "sRequestUrlPrefix",
							"type": "String",
							"optional": false,
							"description": "request URL prefix which must start with a (/) and must not end with a (/)"
						}
					],
					"description": "Prefix for request URL can be set in exceptional cases when consumer needs to add a prefix to the URL"
				},
				{
					"name": "update",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Returns the result from the request"
					},
					"parameters": [
						{
							"name": "oPayload",
							"type": "Object",
							"optional": false,
							"description": "The content which is send to the server"
						},
						{
							"name": "sChangeName",
							"type": "String",
							"optional": false,
							"description": "Name of the change"
						},
						{
							"name": "sChangelist",
							"type": "String",
							"optional": false,
							"description": "(optional) The transport ID."
						},
						{
							"name": "bIsVariant",
							"type": "Boolean",
							"optional": false,
							"description": "is variant?"
						}
					],
					"description": "Update a change or variant via REST call."
				},
				{
					"name": "upsert",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Returns the result from the request"
					},
					"parameters": [
						{
							"name": "sNamespace",
							"type": "String",
							"optional": false,
							"description": "The abap package goes here. It is needed to identify the change."
						},
						{
							"name": "sName",
							"type": "String",
							"optional": false,
							"description": "Name of the change"
						},
						{
							"name": "sType",
							"type": "String",
							"optional": false,
							"description": "File type extension"
						},
						{
							"name": "sLayer",
							"type": "String",
							"optional": false,
							"description": "File layer"
						},
						{
							"name": "sContent",
							"type": "String",
							"optional": false,
							"description": "File content to be saved as string"
						},
						{
							"name": "sContentType",
							"type": "String",
							"optional": false,
							"description": "Content type (e.g. application/json, text/plain, ...), default: application/json"
						},
						{
							"name": "sChangelist",
							"type": "String",
							"optional": false,
							"description": "The transport ID, optional"
						}
					],
					"description": "Upserts a given change or variant via REST call."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.transport.TransportDialog",
			"basename": "TransportDialog",
			"resource": "sap/ui/fl/transport/TransportDialog.js",
			"module": "sap/ui/fl/transport/TransportDialog",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.m.Dialog",
			"description": "The Transport Dialog Control can be used to implement a value help for selecting an ABAP package and transport request. It is not a generic utility, but part of the Variantmanament and therefore cannot be used in any other application.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "pkg",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "An ABAP package that can be used as default for the ABAP package selection.",
						"methods": [
							"getPkg",
							"setPkg"
						]
					},
					{
						"name": "transports",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The set of ABAP transport requests that can be selected by a user.",
						"methods": [
							"getTransports",
							"setTransports"
						]
					},
					{
						"name": "lrepObject",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The LREP object for which as transport request has to be selected",
						"methods": [
							"getLrepObject",
							"setLrepObject"
						]
					},
					{
						"name": "hidePackage",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Flag indicating whether the selection of an ABAP package is to be hidden or not.",
						"methods": [
							"getHidePackage",
							"setHidePackage"
						]
					}
				],
				"events": [
					{
						"name": "ok",
						"visibility": "public",
						"description": "This event will be fired when the user clicks the OK button on the dialog.",
						"methods": [
							"attachOk",
							"detachOk",
							"fireOk"
						]
					},
					{
						"name": "cancel",
						"visibility": "public",
						"description": "This event will be fired when the user clicks the Cancel button on the dialog.",
						"methods": [
							"attachCancel",
							"detachCancel",
							"fireCancel"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new transport/TransportDialog.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "cancel",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event will be fired when the user clicks the Cancel button on the dialog."
				},
				{
					"name": "ok",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event will be fired when the user clicks the OK button on the dialog."
				}
			],
			"methods": [
				{
					"name": "attachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.fl.transport.TransportDialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>cancel</code> event of this <code>sap.ui.fl.transport.TransportDialog</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.fl.transport.TransportDialog</code> itself.\r\rThis event will be fired when the user clicks the Cancel button on the dialog."
				},
				{
					"name": "attachOk",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.fl.transport.TransportDialog</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>ok</code> event of this <code>sap.ui.fl.transport.TransportDialog</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.fl.transport.TransportDialog</code> itself.\r\rThis event will be fired when the user clicks the OK button on the dialog."
				},
				{
					"name": "detachCancel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>cancel</code> event of this <code>sap.ui.fl.transport.TransportDialog</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachOk",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>ok</code> event of this <code>sap.ui.fl.transport.TransportDialog</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.fl.transport.TransportDialog with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}."
				},
				{
					"name": "fireCancel",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>cancel</code> to attached listeners."
				},
				{
					"name": "fireOk",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.fl.transport.TransportDialog",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>ok</code> to attached listeners."
				},
				{
					"name": "getHidePackage",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>hidePackage</code>"
					},
					"description": "Gets current value of property <code>hidePackage</code>.\r\rFlag indicating whether the selection of an ABAP package is to be hidden or not."
				},
				{
					"name": "getLrepObject",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>lrepObject</code>"
					},
					"description": "Gets current value of property <code>lrepObject</code>.\r\rThe LREP object for which as transport request has to be selected"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.fl.transport.TransportDialog."
				},
				{
					"name": "getPkg",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>pkg</code>"
					},
					"description": "Gets current value of property <code>pkg</code>.\r\rAn ABAP package that can be used as default for the ABAP package selection."
				},
				{
					"name": "getTransports",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>transports</code>"
					},
					"description": "Gets current value of property <code>transports</code>.\r\rThe set of ABAP transport requests that can be selected by a user."
				},
				{
					"name": "setHidePackage",
					"visibility": "public",
					"parameters": [
						{
							"name": "bHide",
							"type": "boolean",
							"optional": false,
							"description": "if set to <code>true</code>, the package selection is hidden."
						}
					],
					"description": "Flag indicating whether the selection of an ABAP package is to be hidden or not."
				},
				{
					"name": "setLrepObject",
					"visibility": "public",
					"parameters": [
						{
							"name": "oObject",
							"type": "object",
							"optional": false,
							"description": "an LREP object for which as transport request has to be selected. The object has the attributes name, namespace and type."
						}
					],
					"description": "The LREP object for which as transport request has to be selected.\nThe property can only be set once and afterwards it cannot be changed."
				},
				{
					"name": "setPkg",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPackage",
							"type": "string",
							"optional": false,
							"description": "an ABAP package that can be used as default for the ABAP package selection."
						}
					],
					"description": "An ABAP package that can be used as default for the ABAP package selection.\nThe property can only be set once and afterwards it cannot be changed."
				},
				{
					"name": "setTransports",
					"visibility": "public",
					"parameters": [
						{
							"name": "aSelection",
							"type": "array",
							"optional": false,
							"description": "the set of ABAP transport requests that can be selected by a user."
						}
					],
					"description": "The set of ABAP transport requests that can be selected by a user."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.fl.transport.TransportSelection",
			"basename": "TransportSelection",
			"resource": "sap/ui/fl/transport/TransportSelection.js",
			"module": "sap/ui/fl/transport/TransportSelection",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.38.0",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "Utils",
						"type": "sap.ui.fl.Utils",
						"optional": false,
						"description": "a reference to the flexibility utilities implementation."
					},
					{
						"name": "Transports",
						"type": "sap.ui.fl.transport.Transports",
						"optional": false,
						"description": "a reference to the transport service implementation."
					},
					{
						"name": "TransportDialog",
						"type": "sap.ui.fl.transport.TransportDialog",
						"optional": false,
						"description": "a reference to the transport dialog implementation."
					},
					{
						"name": "FlexSettings",
						"type": "sap.ui.fl.registry.Settings",
						"optional": false,
						"description": "a reference to the settings implementation"
					}
				]
			},
			"methods": [
				{
					"name": "openTransportSelection",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "promise that resolves"
					},
					"parameters": [
						{
							"name": "oChange",
							"type": "sap.ui.fl.Change",
							"optional": true,
							"description": "the change for which the transport information should be retrieved"
						},
						{
							"name": "oControl",
							"type": "object",
							"optional": false
						}
					],
					"description": "Opens the transport selection dialog"
				},
				{
					"name": "selectTransport",
					"visibility": "public",
					"parameters": [
						{
							"name": "oObjectInfo",
							"type": "object",
							"optional": false,
							"description": "the LREP object, which has the attributes name, name space, type, layer and package."
						},
						{
							"name": "fOkay",
							"type": "function",
							"optional": false,
							"description": "call-back to be invoked when a transport request has successfully been selected."
						},
						{
							"name": "fError",
							"type": "function",
							"optional": false,
							"description": "call-back to be invoked when an error occurred during selection of a transport request."
						},
						{
							"name": "bCompactMode",
							"type": "boolean",
							"optional": false,
							"description": "flag indicating whether the transport dialog should be opened in compact mode."
						},
						{
							"name": "oControl",
							"type": "object",
							"optional": false,
							"description": "Control instance"
						}
					],
					"description": "Selects a transport request for a given LREP object.\nFirst checks if the Adaptation Transport Organizer (ATO) is enabled\nIf ATO is enabled and the layered repository object is in the CUSTOMER layer, the request 'ATO_NOTIFICATION' has to be used.\nThis request triggers in the back end that the change is added to an ATO collection.\nIf ATO is not enabled or LREP object not in CUSTOMER layer:\nIf the LREP object is already assigned to an open transport request or the LREP object is\nassigned to a local ABAP package, no dialog to select a transport is started. Instead the success callback is invoked directly. The transport\ndialog is shown if a package or a transport request has still to be selected, so if more than one transport request is available for the\ncurrent user and the LREP object is not locked in an open transport request."
				},
				{
					"name": "setTransports",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "promise that resolves without parameters"
					},
					"parameters": [
						{
							"name": "aChanges",
							"type": "array",
							"optional": false,
							"description": "array of {sap.ui.fl.Change}"
						},
						{
							"name": "oControl",
							"type": "object",
							"optional": false,
							"description": "object of the root control for the transport"
						}
					],
					"description": "Sets the transports for all changes."
				}
			]
		}
	]
}