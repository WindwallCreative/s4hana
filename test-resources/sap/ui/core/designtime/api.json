{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.46.8",
	"library": "sap.ui.core",
	"symbols": [
		{
			"kind": "namespace",
			"name": "jQuery",
			"basename": "jQuery",
			"resource": "jquery.sap.global.js",
			"module": "jquery.sap.global",
			"export": "",
			"visibility": "public",
			"description": "Provides base functionality of the SAP jQuery plugin as extension of the jQuery framework.<br/>\nSee also <a href=\"http://api.jquery.com/jQuery/\">jQuery</a> for details.<br/>\nAlthough these functions appear as static ones, they are meant to be used on jQuery instances.<br/>\nIf not stated differently, the functions follow the fluent interface paradigm and return the jQuery instance for chaining of statements.\n\nExample for usage of an instance method:\n<pre>\n  var oRect = jQuery(\"#myDiv\").rect();\n  alert(\"Top Position: \" + oRect.top);\n</pre>",
			"methods": [
				{
					"name": "addAriaDescribedBy",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery",
						"description": "<code>this</code> to allow method chaining."
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "sID",
							"type": "string",
							"optional": false,
							"description": "The ID reference of an element"
						},
						{
							"name": "bPrepend",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether prepend or not"
						}
					],
					"description": "Adds the given ID reference to the aria-describedby attribute.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "addAriaLabelledBy",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery",
						"description": "<code>this</code> to allow method chaining."
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "sID",
							"type": "string",
							"optional": false,
							"description": "The ID reference of an element"
						},
						{
							"name": "bPrepend",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether prepend or not"
						}
					],
					"description": "Adds the given ID reference to the the aria-labelledby attribute.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "control",
					"module": "jquery.sap.ui",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]|sap.ui.core.Control|null",
						"description": "depending on the given context and idx parameter an array of controls, an instance or null."
					},
					"parameters": [
						{
							"name": "idx",
							"type": "int",
							"optional": true,
							"description": "optional parameter to return the control instance at the given idx's position in the array."
						}
					],
					"description": "Extension function to the jQuery.fn which identifies SAPUI5 controls in the given jQuery context.",
					"resource": "jquery.sap.ui.js"
				},
				{
					"name": "cursorPos",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "int|jQuery",
						"description": "The cursor position (or the jQuery collection if the position has been set)"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "iPos",
							"type": "int",
							"optional": false,
							"description": "The cursor position to set (or no parameter to retrieve the cursor position)"
						}
					],
					"description": "Sets or gets the position of the cursor in an element that supports cursor positioning",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "disableSelection",
					"module": "jquery.sap.dom",
					"visibility": "protected",
					"returnValue": {
						"type": "jQuery",
						"description": "<code>this</code> to allow method chaining."
					},
					"since": "1.24.0",
					"description": "Disable HTML elements selection.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "enableSelection",
					"module": "jquery.sap.dom",
					"visibility": "protected",
					"returnValue": {
						"type": "jQuery",
						"description": "<code>this</code> to allow method chaining."
					},
					"since": "1.24.0",
					"description": "Enable HTML elements to get selected.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "firstFocusableDomRef",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "Element",
						"description": "The domRef"
					},
					"since": "0.9.0",
					"description": "Returns the first focusable domRef in a given container (the first element of the collection)",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "getSelectedText",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The selected text."
					},
					"since": "1.26.0",
					"description": "Retrieve the selected text in the first element of the collection.\n\n<b>Note</b>: This feature is only supported for input elementâ€™s type of text, search, url, tel and password.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "hasTabIndex",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "If the first element has a set tabindex"
					},
					"since": "0.9.0",
					"description": "Returns <code>true</code> if the first element has a set tabindex",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "lastFocusableDomRef",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "Element",
						"description": "The last domRef"
					},
					"since": "0.9.0",
					"description": "Returns the last focusable domRef in a given container",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "outerHTML",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "outer HTML"
					},
					"since": "0.9.0",
					"description": "Returns the outer HTML of the given HTML element",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "parentByAttribute",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "Element",
						"description": "null or the DOM reference"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "sAttribute",
							"type": "string",
							"optional": false,
							"description": "Name of the attribute"
						},
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "Value of the attribute (optional)"
						}
					],
					"description": "Gets the next parent DOM element with a given attribute and attribute value starting above the first given element",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "rect",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object with left, top, width and height"
					},
					"since": "0.9.0",
					"description": "Returns a rectangle describing the current visual positioning of the first DOM object in the collection\n(or <code>null</code> if no element was given)",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "rectContains",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Whether X and Y are inside this Rectangle's boundaries"
					},
					"since": "0.18.0",
					"parameters": [
						{
							"name": "iPosX",
							"type": "int",
							"optional": false
						},
						{
							"name": "iPosY",
							"type": "int",
							"optional": false
						}
					],
					"description": "Returns whether a point described by X and Y is inside this Rectangle's boundaries",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "removeAriaDescribedBy",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery",
						"description": "<code>this</code> to allow method chaining."
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "sID",
							"type": "string",
							"optional": false,
							"description": "The ID reference of an element"
						}
					],
					"description": "Removes the given ID reference from the aria-describedby attribute.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "removeAriaLabelledBy",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery",
						"description": "<code>this</code> to allow method chaining."
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "sID",
							"type": "string",
							"optional": false,
							"description": "The ID reference of an element"
						}
					],
					"description": "Removes the given ID reference from the aria-labelledby attribute.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "root",
					"module": "jquery.sap.ui",
					"visibility": "public",
					"parameters": [
						{
							"name": "oRootControl",
							"type": "object",
							"optional": false
						}
					],
					"resource": "jquery.sap.ui.js"
				},
				{
					"name": "scrollLeftRTL",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery|int",
						"description": "The jQuery collection if iPos is given, otherwise the scroll position, counted from the leftmost position"
					},
					"since": "0.20.0",
					"parameters": [
						{
							"name": "iPos",
							"type": "int",
							"optional": false
						}
					],
					"description": "Sets or returns the scrollLeft value of the first element in the given jQuery collection in right-to-left mode.\nPrecondition: The element is rendered in RTL mode.\n\nReason for this method is that the major browsers use three different values for the same scroll position when in RTL mode.\nThis method hides those differences and returns/applies the same value that would be returned in LTR mode: The distance in px\nhow far the given container is scrolled away from the leftmost scroll position.\n\nReturns \"undefined\" if no element and no iPos is given.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "scrollRightRTL",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The scroll position, counted from the rightmost position"
					},
					"since": "0.20.0",
					"description": "Returns the MIRRORED scrollLeft value of the first element in the given jQuery collection in right-to-left mode.\nPrecondition: The element is rendered in RTL mode.\n\nReason for this method is that the major browsers return three different values for the same scroll position when in RTL mode.\nThis method hides those differences and returns the value that would be returned in LTR mode if the UI would be mirrored horizontally:\nThe distance in px how far the given container is scrolled away from the rightmost scroll position.\n\nReturns \"undefined\" if no element is given.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "selectText",
					"module": "jquery.sap.dom",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery",
						"description": "The jQuery collection"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "iStart",
							"type": "int",
							"optional": false,
							"description": "Start position of the selection (inclusive)"
						},
						{
							"name": "iEnd",
							"type": "int",
							"optional": false,
							"description": "End position of the selection (exclusive)"
						}
					],
					"description": "Sets the text selection in the first element of the collection.\n\n<b>Note</b>: This feature is only supported for input elementâ€™s type of text, search, url, tel and password.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "uiarea",
					"module": "jquery.sap.ui",
					"visibility": "public",
					"parameters": [
						{
							"name": "iIdx",
							"type": "int",
							"optional": false
						}
					],
					"resource": "jquery.sap.ui.js"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.device",
			"basename": "device",
			"resource": "jquery.sap.mobile.js",
			"module": "jquery.sap.mobile",
			"export": "device",
			"static": true,
			"visibility": "public",
			"deprecated": {
				"since": "1.20",
				"text": "use the respective functions of sap.ui.Device"
			}
		},
		{
			"kind": "namespace",
			"name": "jQuery.device.is",
			"basename": "is",
			"resource": "jquery.sap.mobile.js",
			"module": "jquery.sap.mobile",
			"export": "device.is",
			"static": true,
			"visibility": "public",
			"description": "Holds information about the current device and its state",
			"deprecated": {
				"since": "1.20",
				"text": "use the respective functions of sap.ui.Device"
			},
			"properties": [
				{
					"name": "android_phone",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the application runs on an Android phone - based not on screen size but user-agent (so this is not guaranteed to be equal to jQuery.device.is.phone on Android)\nhttps://developers.google.com/chrome/mobile/docs/user-agent\nSome device vendors however do not follow this rule",
					"deprecated": {
						"since": "1.17.0",
						"text": "use sap.ui.Device.system.phone &amp;&amp; sap.ui.Device.os.android  instead"
					}
				},
				{
					"name": "android_tablet",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the application runs on an Android tablet - based not on screen size but user-agent (so this is not guaranteed to be equal to jQuery.device.is.tablet on Android)\nhttps://developers.google.com/chrome/mobile/docs/user-agent\nSome device vendors however do not follow this rule",
					"deprecated": {
						"since": "1.17.0",
						"text": "use sap.ui.Device.system.tablet &amp;&amp; sap.ui.Device.os.android  instead"
					}
				},
				{
					"name": "desktop",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the running device is a desktop browser.\nIf a desktop browser runs in mobile device simulation mode (with URL parameter sap-ui-xx-fakeOS or sap-ui-xx-test-mobile),\nthis property will be false.",
					"deprecated": {
						"since": "1.17.0",
						"text": "use sap.ui.Device.system.desktop instead"
					}
				},
				{
					"name": "ipad",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the application runs on an iPad",
					"deprecated": {
						"since": "1.20",
						"text": "shouldn't do device specific coding; if still needed, use sap.ui.Device.os.ios &amp;&amp; sap.ui.Device.system.tablet"
					}
				},
				{
					"name": "iphone",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the application runs on an iPhone",
					"deprecated": {
						"since": "1.20",
						"text": "shouldn't do device specific coding; if still needed, use sap.ui.Device.os.ios &amp;&amp; sap.ui.Device.system.phone"
					}
				},
				{
					"name": "landscape",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the device is in \"landscape\" orientation (also \"true\" when the device does not know about the orientation)",
					"deprecated": {
						"since": "1.20",
						"text": "use sap.ui.Device.orientation.landscape"
					}
				},
				{
					"name": "phone",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the running device is a phone.\nIf a desktop browser runs in mobile device simulation mode (with URL parameter sap-ui-xx-fakeOS or sap-ui-xx-test-mobile),\nthis property will also be set according to the simulated platform.\nThis property will be false when runs in desktop browser.",
					"deprecated": {
						"since": "1.17.0",
						"text": "use sap.ui.Device.system.phone instead"
					}
				},
				{
					"name": "portrait",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the device is in portrait orientation",
					"deprecated": {
						"since": "1.20",
						"text": "use sap.ui.Device.orientation.portrait"
					}
				},
				{
					"name": "standalone",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the application runs in standalone mode without browser UI (launched from the iOS home screen)",
					"deprecated": {
						"since": "1.20",
						"text": "use window.navigator.standalone"
					}
				},
				{
					"name": "tablet",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the running device is a tablet.\nIf a desktop browser runs in mobile device simulation mode (with URL parameter sap-ui-xx-fakeOS or sap-ui-xx-test-mobile),\nthis property will also be set according to the simulated platform.\nThis property will be false when runs in desktop browser.",
					"deprecated": {
						"since": "1.17.0",
						"text": "use sap.ui.Device.system.tablet instead"
					}
				}
			]
		},
		{
			"kind": "class",
			"name": "jQuery.Event",
			"basename": "Event",
			"resource": "jquery.sap.events.js",
			"module": "jquery.sap.events",
			"export": "Event",
			"static": true,
			"visibility": "public",
			"description": "Check the jQuery.Event class documentation available under \"http://www.jquery.com\"<br/>\nand \"http://api.jquery.com/category/events/event-object/\" for details.",
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a jQuery.Event object.<br/>\nSee \"http://www.jquery.com\" and \"http://api.jquery.com/category/events/event-object/\"."
			},
			"methods": [
				{
					"name": "getOffsetX",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "offsetX"
					},
					"description": "Returns OffsetX of Event. In jQuery there is a bug. In IE the value is in offsetX, in FF in layerX"
				},
				{
					"name": "getOffsetY",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "offsetY"
					},
					"description": "Returns OffsetY of Event. In jQuery there is a bug. in IE the value is in offsetY, in FF in layerY."
				},
				{
					"name": "getPseudoTypes",
					"visibility": "public",
					"returnValue": {
						"type": "String[]",
						"description": "Array of names identifying {@link jQuery.sap.PseudoEvents} that are fulfilled by this very Event instance."
					},
					"description": "Returns an array of names (as strings) identifying {@link jQuery.sap.PseudoEvents} that are fulfilled by this very Event instance."
				},
				{
					"name": "isPseudoType",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if this instance of jQuery.Event is of the given sType, <code>false</code> otherwise."
					},
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "The name of the pseudo type this event should be checked for."
						}
					],
					"description": "Checks whether this instance of {@link jQuery.Event} is of the given <code>sType</code> pseudo type."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.os",
			"basename": "os",
			"resource": "jquery.sap.mobile.js",
			"module": "jquery.sap.mobile",
			"export": "os",
			"static": true,
			"visibility": "public",
			"description": "Holds information about the current operating system",
			"deprecated": {
				"since": "1.20",
				"text": "use sap.ui.Device.os"
			},
			"properties": [
				{
					"name": "android",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current operating system is Android",
					"deprecated": {
						"since": "1.20",
						"text": "use sap.ui.Device.os.android"
					}
				},
				{
					"name": "blackberry",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current operating system is BlackBerry",
					"deprecated": {
						"since": "1.20",
						"text": "use sap.ui.Device.os.blackberry"
					}
				},
				{
					"name": "fVersion",
					"visibility": "public",
					"static": true,
					"type": "float",
					"description": "The version of the operating system parsed as a float (major and first minor version)",
					"deprecated": {
						"since": "1.20",
						"text": "use sap.ui.Device.os.version"
					}
				},
				{
					"name": "ios",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current operating system is Apple iOS",
					"deprecated": {
						"since": "1.20",
						"text": "use sap.ui.Device.os.ios"
					}
				},
				{
					"name": "os",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The name of the operating system; currently supported are: \"ios\", \"android\", \"blackberry\"",
					"deprecated": {
						"since": "1.20",
						"text": "use sap.ui.Device.os.name"
					}
				},
				{
					"name": "version",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The version of the operating system as a string (including minor versions)",
					"deprecated": {
						"since": "1.20",
						"text": "use sap.ui.Device.os.versionStr"
					}
				},
				{
					"name": "winphone",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current operating system is Windows Phone",
					"deprecated": {
						"since": "1.20",
						"text": "use sap.ui.Device.os.winphone"
					}
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.sap",
			"basename": "sap",
			"resource": "jquery.sap.global.js",
			"module": "jquery.sap.global",
			"export": "sap",
			"static": true,
			"visibility": "public",
			"description": "Root Namespace for the jQuery plug-in provided by SAP SE.",
			"properties": [
				{
					"name": "ControlEvents",
					"module": "jquery.sap.events",
					"export": "sap.ControlEvents",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "List of DOM events that a UIArea automatically takes care of.\n\nA control/element doesn't have to bind listeners for these events.\nIt instead can implement an <code>on<i>event</i>(oEvent)</code> method\nfor any of the following events that it wants to be notified about:\n\nclick, dblclick, contextmenu, focusin, focusout, keydown, keypress, keyup, mousedown, mouseout, mouseover,\nmouseup, select, selectstart, dragstart, dragenter, dragover, dragleave, dragend, drop, paste, cut, input,\ntouchstart, touchend, touchmove, touchcancel, tap, swipe, swipeleft, swiperight, scrollstart, scrollstop\n\nThe mouse events and touch events are supported simultaneously on both desktop and mobile browsers. Do NOT\ncreate both onmouse* and ontouch* functions to avoid one event being handled twice on the same control.",
					"resource": "jquery.sap.events.js"
				},
				{
					"name": "now",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Returns a high resolution timestamp for measurements.\nThe timestamp is based on 01/01/1970 00:00:00 as float with microsecond precision or\nwith millisecond precision, if high resolution timestamps are not available.\nThe fractional part of the timestamp represents fractions of a millisecond.\nConverting to a <code>Date</code> is possible using <code>new Date(jQuery.sap.now())</code>"
				}
			],
			"methods": [
				{
					"name": "_loadJSResourceAsync",
					"visibility": "restricted",
					"static": true,
					"description": "Loads the given Javascript resource (URN) asynchronously via as script tag.\nReturns a promise that will be resolved when the load event is fired or reject\nwhen the error event is fired.\n\nNote: execution errors of the script are not reported as 'error'.\n\nThis method is not a full implementation of require. It is intended only for\nloading \"preload\" files that do not define an own module / module value.\n\nFunctionality might be removed/renamed in future, so no code outside the\nsap.ui.core library must use it.",
					"experimental": {}
				},
				{
					"name": "addUrlWhitelist",
					"module": "jquery.sap.encoder",
					"export": "sap.addUrlWhitelist",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "protocol",
							"type": "string",
							"optional": false,
							"description": "The protocol of the URL"
						},
						{
							"name": "host",
							"type": "string",
							"optional": false,
							"description": "The host of the URL"
						},
						{
							"name": "port",
							"type": "string",
							"optional": false,
							"description": "The port of the URL"
						},
						{
							"name": "path",
							"type": "string",
							"optional": false,
							"description": "the path of the URL"
						}
					],
					"description": "Adds a whitelist entry for URL validation.",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "arrayDiff",
					"module": "jquery.sap.script",
					"export": "sap.arrayDiff",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Array",
						"description": "List of changes"
					},
					"parameters": [
						{
							"name": "aOld",
							"type": "Array",
							"optional": false,
							"description": "Old Array"
						},
						{
							"name": "aNew",
							"type": "Array",
							"optional": false,
							"description": "New Array"
						},
						{
							"name": "fnCompare",
							"type": "function",
							"optional": true,
							"description": "Function to compare list entries"
						},
						{
							"name": "bUniqueEntries",
							"type": "boolean",
							"optional": true,
							"description": "Whether entries are unique, so no duplicate entries exist"
						}
					],
					"description": "Calculate delta of old list and new list.\n\nThis partly implements the algorithm described in \"A Technique for Isolating Differences Between Files\"\nbut instead of working with hashes, it does compare each entry of the old list with each entry of the new\nlist, which causes terrible performane on large datasets.",
					"deprecated": {
						"since": "1.38",
						"text": "use {@link jQuery.sap.arraySymbolDiff} instead if applicable"
					},
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "arraySymbolDiff",
					"module": "jquery.sap.script",
					"export": "sap.arraySymbolDiff",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "{type:string,index:int}[]",
						"description": "List of update operations"
					},
					"parameters": [
						{
							"name": "aOld",
							"type": "Array",
							"optional": false,
							"description": "Old Array"
						},
						{
							"name": "aNew",
							"type": "Array",
							"optional": false,
							"description": "New Array"
						},
						{
							"name": "fnSymbol",
							"type": "function",
							"optional": true,
							"description": "Function to calculate substitute symbols for array items"
						}
					],
					"description": "Calculate delta of old list and new list.\n\nThis function implements the algorithm described in \"A Technique for Isolating Differences Between Files\"\n(Commun. ACM, April 1978, Volume 21, Number 4, Pages 264-268).\n\nItems in the arrays are not compared directly. Instead, a substitute symbol is determined for each item\nby applying the provided function <code>fnSymbol</code> to it. Items with strictly equal symbols are\nassumed to represent the same logical item:\n<pre>\n  fnSymbol(a) === fnSymbol(b)   <=>   a 'is logically the same as' b\n</pre>\nAs an additional constraint, casting the symbols to string should not modify the comparison result.\nIf this second constraint is not met, this method might report more diffs than necessary.\n\nIf no symbol function is provided, a default implementation is used which applies <code>JSON.stringify</code>\nto non-string items and reduces the strings to a hash code. It is not guaranteed that this default\nimplementation fulfills the above constraint in all cases, but it is a compromise between implementation\neffort, generality and performance. If items are known to be non-stringifiable (e.g. because they may\ncontain cyclic references) or when hash collisions are likely, an own <code>fnSymbol</code> function\nmust be provided.\n\nThe result of the diff is a sequence of update operations, each consisting of a <code>type</code>\n(either <code>\"insert\"</code> or <code>\"delete\"</code>) and an <code>index</code>.\nBy applying the operations one after the other to the old array, it can be transformed to an\narray whose items are equal to the new array.\n\nSample implementation of the update\n<pre>\n\n function update(aOldArray, aNewArray) {\n\n   // calculate the diff\n   var aDiff = jQuery.sap.arraySymbolDiff(aOldArray, aNewArray, __provide_your_symbol_function_here__);\n\n   // apply update operations\n   aDiff.forEach( function(op) {\n\n     // invariant: aOldArray and aNewArray now are equal up to (excluding) op.index\n\n     switch ( op.type ) {\n     case 'insert':\n       // new array contains a new (or otherwise unmapped) item, add it here\n       aOldArray.splice(op.index, 0, aNewArray[op.index]);\n       break;\n     case 'delete':\n       // an item is no longer part of the array (or has been moved to another position), remove it\n       aOldArray.splice(op.index, 1);\n       break;\n     default:\n       throw new Error('unexpected diff operation type');\n     }\n\n   });\n }\n\n</pre>",
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "assert",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "bResult",
							"type": "boolean",
							"optional": false,
							"description": "Result of the checked assertion"
						},
						{
							"name": "vMessage",
							"type": "string|function",
							"optional": false,
							"description": "Message that will be logged when the result is <code>false</code>. In case this is a function, the return value of the function will be displayed. This can be used to execute complex code only if the assertion fails."
						}
					],
					"description": "A simple assertion mechanism that logs a message when a given condition is not met.\n\n<b>Note:</b> Calls to this method might be removed when the JavaScript code\n             is optimized during build. Therefore, callers should not rely on any side effects\n             of this method."
				},
				{
					"name": "bindAnyEvent",
					"module": "jquery.sap.events",
					"export": "sap.bindAnyEvent",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fnCallback",
							"type": "function",
							"optional": false,
							"description": "Callback function"
						}
					],
					"description": "Binds all events for listening with the given callback function.",
					"resource": "jquery.sap.events.js"
				},
				{
					"name": "byId",
					"module": "jquery.sap.dom",
					"export": "sap.byId",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Object",
						"description": "The jQuery object for the DOM element identified by the given sId"
					},
					"since": "0.9.1",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "The id to search for and construct the jQuery object"
						},
						{
							"name": "oContext",
							"type": "Element",
							"optional": false,
							"description": "the context DOM Element"
						}
					],
					"description": "Shortcut for jQuery(\"#\" + id) with additionally the id being escaped properly.\nI.e.: returns the jQuery object for the DOM element with the given id\n\nUse this method instead of jQuery(...) if you know the argument is exactly one id and\nthe id is not known in advance because it is in a variable (as opposed to a string\nconstant with known content).",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "camelCase",
					"module": "jquery.sap.strings",
					"export": "sap.camelCase",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The transformed string"
					},
					"since": "1.7.0",
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "Hyphen separated string"
						}
					],
					"description": "Transforms a hyphen separated string to a camel case string.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "charToUpperCase",
					"module": "jquery.sap.strings",
					"export": "sap.charToUpperCase",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "String with the converted character"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "String for which one character should be converted"
						},
						{
							"name": "iPos",
							"type": "int",
							"optional": false,
							"description": "Position of the character that should be converted"
						}
					],
					"description": "Converts one character of the string to upper case, at a given position.\n\nIf no position is given or when it is negative or beyond the last character\nof <code>sString</code>, then the first character will be converted to upper case.\nThe first character position is 0.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "checkMouseEnterOrLeave",
					"module": "jquery.sap.events",
					"export": "sap.checkMouseEnterOrLeave",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false
						},
						{
							"name": "oDomRef",
							"type": "Element",
							"optional": false
						}
					],
					"description": "Checks a given mouseover or mouseout event whether it is\nequivalent to a mouseenter or mousleave event regarding the given DOM reference.",
					"resource": "jquery.sap.events.js"
				},
				{
					"name": "clearDelayedCall",
					"module": "jquery.sap.script",
					"export": "sap.clearDelayedCall",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sDelayedCallId",
							"type": "string",
							"optional": false,
							"description": "The id returned, when calling delayedCall"
						}
					],
					"description": "Stops the delayed call.\n\nThe function given when calling delayedCall is not called anymore.",
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "clearIntervalCall",
					"module": "jquery.sap.script",
					"export": "sap.clearIntervalCall",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sIntervalCallId",
							"type": "string",
							"optional": false,
							"description": "The id returned, when calling intervalCall"
						}
					],
					"description": "Stops the interval call.\n\nThe function given when calling intervalCall is not called anymore.",
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "clearUrlWhitelist",
					"module": "jquery.sap.encoder",
					"export": "sap.clearUrlWhitelist",
					"visibility": "public",
					"static": true,
					"description": "Clears the whitelist for URL validation",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "containsOrEquals",
					"module": "jquery.sap.dom",
					"export": "sap.containsOrEquals",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether <code>oDomRefChild</code> is contained in or equal to <code>oDomRefContainer</code>"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "oDomRefContainer",
							"type": "Element",
							"optional": false,
							"description": "The container element"
						},
						{
							"name": "oDomRefChild",
							"type": "Element",
							"optional": false,
							"description": "The child element (must not be a text node, must be an element)"
						}
					],
					"description": "Returns whether <code>oDomRefChild</code> is contained in or equal to <code>oDomRefContainer</code>.\n\nThis is a browser-independent version of the .contains method of Internet Explorer.\nFor compatibility reasons it returns <code>true</code> if <code>oDomRefContainer</code> and\n<code>oDomRefChild</code> are equal.\n\nThis method intentionally does not operate on the jQuery object, as the original <code>jQuery.contains()</code>\nmethod also does not do so.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "declare",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sModuleName",
							"type": "string|object",
							"optional": false,
							"description": "name of the module to be declared\n                          or in case of an object {modName: \"...\", type: \"...\"}\n                          where modName is the name of the module and the type\n                          could be a specific dot separated extension e.g.\n                          <code>{modName: \"sap.ui.core.Dev\", type: \"view\"}</code>\n                          loads <code>sap/ui/core/Dev.view.js</code> and\n                          registers as <code>sap.ui.core.Dev.view</code>"
						},
						{
							"name": "bCreateNamespace",
							"type": "boolean",
							"optional": true,
							"defaultValue": true,
							"description": "whether to create the parent namespace"
						}
					],
					"description": "Declares a module as existing.\n\nBy default, this function assumes that the module will create a JavaScript object\nwith the same name as the module. As a convenience it ensures that the parent\nnamespace for that object exists (by calling jQuery.sap.getObject).\nIf such an object creation is not desired, <code>bCreateNamespace</code> must be set to false."
				},
				{
					"name": "delayedCall",
					"module": "jquery.sap.script",
					"export": "sap.delayedCall",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "Id which can be used to cancel the timer with clearDelayedCall"
					},
					"parameters": [
						{
							"name": "iDelay",
							"type": "int",
							"optional": false,
							"description": "Delay time in milliseconds"
						},
						{
							"name": "oObject",
							"type": "object",
							"optional": false,
							"description": "Object from which the method should be called"
						},
						{
							"name": "method",
							"type": "string|object",
							"optional": false,
							"description": "function pointer or name of the method"
						},
						{
							"name": "aParameters",
							"type": "array",
							"optional": true,
							"description": "Method parameters"
						}
					],
					"description": "Calls a method after a given delay and returns an id for this timer",
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "denormalizeScrollBeginRTL",
					"module": "jquery.sap.dom",
					"export": "sap.denormalizeScrollBeginRTL",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "int",
						"description": "The scroll position that must be set for the DOM element"
					},
					"since": "1.26.1",
					"parameters": [
						{
							"name": "iNormalizedScrollBegin",
							"type": "int",
							"optional": false,
							"description": "The distance from the rightmost position to which the element should be scrolled"
						},
						{
							"name": "oDomRef",
							"type": "Element",
							"optional": false,
							"description": "The DOM Element to which scrollLeft will be applied"
						}
					],
					"description": "For the given scroll position measured from the \"beginning\" of a container (the right edge in RTL mode)\nthis method returns the scrollLeft value as understood by the current browser in RTL mode.\nThis value is specific to the given DOM element, as the computation may involve its dimensions.\n\nSo when oDomRef should be scrolled 2px from the beginning, the number \"2\" must be given as iNormalizedScrollBegin\nand the result of this method (which may be a large or even negative number, depending on the browser) can then be set as\noDomRef.scrollLeft to achieve the desired (cross-browser-consistent) scrolling position.\nLow values make the right part of the content visible, high values the left part.\n\nThis method does no scrolling on its own, it only calculates the value to set (so it can also be used for animations).\n\nOnly use this method in RTL mode, as the behavior in LTR mode is undefined and may change!",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "denormalizeScrollLeftRTL",
					"module": "jquery.sap.dom",
					"export": "sap.denormalizeScrollLeftRTL",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "int",
						"description": "The scroll position that must be set for the DOM element"
					},
					"since": "0.20.0",
					"parameters": [
						{
							"name": "iNormalizedScrollLeft",
							"type": "int",
							"optional": false,
							"description": "The distance from the leftmost position to which the element should be scrolled"
						},
						{
							"name": "oDomRef",
							"type": "Element",
							"optional": false,
							"description": "The DOM Element to which scrollLeft will be applied"
						}
					],
					"description": "For the given scrollLeft value this method returns the scrollLeft value as understood by the current browser in RTL mode.\nThis value is specific to the given DOM element, as the computation may involve its dimensions.\n\nSo when oDomRef should be scrolled 2px from the leftmost position, the number \"2\" must be given as iNormalizedScrollLeft\nand the result of this method (which may be a large or even negative number, depending on the browser) can then be set as\noDomRef.scrollLeft to achieve the desired (cross-browser-consistent) scrolling position.\n\nThis method does no scrolling on its own, it only calculates the value to set (so it can also be used for animations).",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "disableTouchToMouseHandling",
					"module": "jquery.sap.events",
					"export": "sap.disableTouchToMouseHandling",
					"visibility": "public",
					"static": true,
					"description": "Disable touch to mouse handling",
					"resource": "jquery.sap.events.js"
				},
				{
					"name": "domById",
					"module": "jquery.sap.dom",
					"export": "sap.domById",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Element",
						"description": "The DOMNode identified by the given sId"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "The id of the DOM element to return"
						},
						{
							"name": "oWindow",
							"type": "Window",
							"optional": true,
							"defaultValue": "window",
							"description": "The window (optional)"
						}
					],
					"description": "Shortcut for document.getElementById(), including a bug fix for older IE versions.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "encodeCSS",
					"module": "jquery.sap.encoder",
					"export": "sap.encodeCSS",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The escaped string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "The string to be escaped"
						}
					],
					"description": "Encode the string for inclusion into CSS string literals or identifiers",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "encodeHTML",
					"module": "jquery.sap.encoder",
					"export": "sap.encodeHTML",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The escaped string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "The string to be escaped"
						}
					],
					"description": "Encode the string for inclusion into HTML content/attribute",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "encodeJS",
					"module": "jquery.sap.encoder",
					"export": "sap.encodeJS",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The escaped string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "The string to be escaped"
						}
					],
					"description": "Encode the string for inclusion into a JS string literal",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "encodeURL",
					"module": "jquery.sap.encoder",
					"export": "sap.encodeURL",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The escaped string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "The string to be escaped"
						}
					],
					"description": "Encode the string for inclusion into an URL parameter",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "encodeURLParameters",
					"module": "jquery.sap.encoder",
					"export": "sap.encodeURLParameters",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The URL encoded parameters"
					},
					"parameters": [
						{
							"name": "mParams",
							"type": "object",
							"optional": false,
							"description": "The map of parameters to encode"
						}
					],
					"description": "Encode a map of parameters into a combined URL parameter string",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "encodeXML",
					"module": "jquery.sap.encoder",
					"export": "sap.encodeXML",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The escaped string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "The string to be escaped"
						}
					],
					"description": "Encode the string for inclusion into XML content/attribute",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "endsWith",
					"module": "jquery.sap.strings",
					"export": "sap.endsWith",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether <code>sString</code> ends with <code>sEndString</code>"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "String to be checked"
						},
						{
							"name": "sEndString",
							"type": "string",
							"optional": false,
							"description": "The end string to be searched"
						}
					],
					"description": "Checks whether a given <code>sString</code> ends with <code>sEndString</code>\nrespecting the case of the strings.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "endsWithIgnoreCase",
					"module": "jquery.sap.strings",
					"export": "sap.endsWithIgnoreCase",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether <code>sString</code> ends with <code>sEndString</code>"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "String to be checked"
						},
						{
							"name": "sEndString",
							"type": "string",
							"optional": false,
							"description": "The end string to be searched"
						}
					],
					"description": "Checks whether a given <code>sString</code> ends with <code>sEndString</code>\nignoring the case of the strings.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "equal",
					"module": "jquery.sap.script",
					"export": "sap.equal",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether a and b are equal"
					},
					"parameters": [
						{
							"name": "a",
							"type": "any",
							"optional": false,
							"description": "A value of any type"
						},
						{
							"name": "b",
							"type": "any",
							"optional": false,
							"description": "A value of any type"
						},
						{
							"name": "maxDepth",
							"type": "int",
							"optional": true,
							"defaultValue": 10,
							"description": "Maximum recursion depth"
						},
						{
							"name": "contains",
							"type": "boolean",
							"optional": true,
							"description": "Whether all existing properties in a are equal as in b"
						}
					],
					"description": "Compares the two given values for equality, especially takes care not to compare\narrays and objects by reference, but compares their content.\nNote: function does not work with comparing XML objects",
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "escapeHTML",
					"module": "jquery.sap.encoder",
					"export": "sap.escapeHTML",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The escaped string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "The string to be escaped"
						}
					],
					"description": "Encode the string for inclusion into HTML content/attribute.\nOld name \"escapeHTML\" kept for backward compatibility",
					"deprecated": {
						"text": "Has been renamed, use {@link jQuery.sap.encodeHTML} instead."
					},
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "escapeJS",
					"module": "jquery.sap.encoder",
					"export": "sap.escapeJS",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The escaped string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "The string to be escaped"
						}
					],
					"description": "Encode the string for inclusion into a JS string literal.\nOld name \"escapeJS\" kept for backward compatibility",
					"deprecated": {
						"since": "1.3.0",
						"text": "Has been renamed, use {@link jQuery.sap.encodeJS} instead."
					},
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "escapeRegExp",
					"module": "jquery.sap.strings",
					"export": "sap.escapeRegExp",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The escaped string"
					},
					"since": "1.9.3",
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "String to escape"
						}
					],
					"description": "Escapes all characters that would have a special meaning in a regular expression.\n\nThis method can be used when a string with arbitrary content has to be integrated\ninto a regular expression and when the whole string should match literally.\n\nExample:\n<pre>\n  var text = \"E=m*c^2\"; // text to search\n  var search = \"m*c\";   // text to search for\n\n  text.match( new RegExp(                         search  ) ); // [ \"c\" ]\n  text.match( new RegExp( jQuery.sap.escapeRegExp(search) ) ); // [ \"m*c\" ]\n</pre>",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "factory",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the newly created constructor function"
					},
					"parameters": [
						{
							"name": "oPrototype",
							"type": "object",
							"optional": false,
							"description": "Prototype to use for the new objects"
						}
					],
					"description": "Returns a new constructor function that creates objects with\nthe given prototype.\n\nAs of 1.45.0, this method has been deprecated. Use the following code pattern instead:\n<pre>\n  function MyFunction() {\n  };\n  MyFunction.prototype = oPrototype;\n</pre>",
					"deprecated": {
						"since": "1.45.0",
						"text": "define your own function and assign <code>oPrototype</code> to its <code>prototype</code> property instead."
					}
				},
				{
					"name": "focus",
					"module": "jquery.sap.dom",
					"export": "sap.focus",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether the focus() command was executed without an error"
					},
					"since": "1.1.2",
					"parameters": [
						{
							"name": "oDomRef",
							"type": "Element",
							"optional": false,
							"description": "The DOM element to focus (or null - in this case the method does nothing)"
						}
					],
					"description": "Calls focus() on the given DOM element, but catches and ignores any errors that occur when doing so.\n(i.e. IE8 throws an error when the DOM element is invisible or disabled)",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "formatMessage",
					"module": "jquery.sap.strings",
					"export": "sap.formatMessage",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The formatted result string"
					},
					"since": "1.12.5",
					"parameters": [
						{
							"name": "sPattern",
							"type": "string",
							"optional": false,
							"description": "A pattern string in the described syntax"
						},
						{
							"name": "aValues",
							"type": "any[]",
							"optional": true,
							"defaultValue": "[]",
							"description": "The values to be used instead of the placeholders."
						}
					],
					"description": "Creates a string from a pattern by replacing placeholders with concrete values.\n\nThe syntax of the pattern is inspired by (but not fully equivalent to) the\njava.util.MessageFormat.\n\nPlaceholders have the form <code>{ integer }</code>, where any occurrence of\n<code>{0}</code> is replaced by the value with index 0 in <code>aValues</code>,\n<code>{1}</code> by the value with index 1 in <code>aValues</code> etc.\n\nTo avoid interpretation of curly braces as placeholders, any non-placeholder fragment\nof the pattern can be enclosed in single quotes. The surrounding single quotes will be\nomitted from the result. Single quotes that are not meant to escape a fragment and\nthat should appear in the result, need to be doubled. In the result, only a single\nsingle quote will occur.\n\nExample Pattern Strings:\n<pre>\n  jQuery.sap.formatMessage(\"Say {0}\",     [\"Hello\"]) -> \"Say Hello\"    // normal use case\n  jQuery.sap.formatMessage(\"Say '{0}'\",   [\"Hello\"]) -> \"Say {0}\"      // escaped placeholder\n  jQuery.sap.formatMessage(\"Say ''{0}''\", [\"Hello\"]) -> \"Say 'Hello'\"  // doubled single quote\n  jQuery.sap.formatMessage(\"Say '{0}'''\", [\"Hello\"]) -> \"Say {0}'\"     // doubled single quote in quoted fragment\n</pre>\n\nIn contrast to java.util.MessageFormat, format types or format styles are not supported.\nEverything after the argument index and up to the first closing curly brace is ignored.\nNested placeholders (as supported by java.lang.MessageFormat for the format type choice)\nare not ignored but reported as a parse error.\n\nThis method throws an Error when the pattern syntax is not fulfilled (e.g. unbalanced curly\nbraces, nested placeholders or a non-numerical argument index).\n\nThis method can also be used as a formatter within a binding. The first part of a composite binding\nwill be used as pattern, the following parts as aValues. If there is only one value and this\nvalue is an array it will be handled like the default described above.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "getAllDeclaredModules",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string[]",
						"description": "the names of all declared modules"
					},
					"description": "Returns the names of all declared modules."
				},
				{
					"name": "getModulePath",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "calculated path (URL) to the given module"
					},
					"parameters": [
						{
							"name": "sModuleName",
							"type": "string",
							"optional": false,
							"description": "module name to detemrine the path for"
						},
						{
							"name": "sSuffix",
							"type": "string",
							"optional": false,
							"description": "suffix to be added to the resulting path"
						}
					],
					"description": "Constructs an URL to load the module with the given name and file type (suffix).\n\nSearches the longest prefix of the given module name for which a registration\nexists (see {@link jQuery.sap.registerModulePath}) and replaces that prefix\nby the registered URL prefix.\n\nThe remainder of the module name is appended to the URL, replacing any dot with a slash.\n\nFinally, the given suffix (typically a file name extension) is added (unconverted).\n\nThe returned name (without the suffix) doesn't end with a slash."
				},
				{
					"name": "getObject",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "The value of the named object"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "a dot separated sequence of names that identify the required object"
						},
						{
							"name": "iNoCreates",
							"type": "int",
							"optional": true,
							"defaultValue": null,
							"description": "number of objects (from the right) that should not be created"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": "window",
							"description": "the context to execute the search in"
						}
					],
					"description": "Returns a JavaScript object which is identified by a sequence of names.\n\nA call to <code>getObject(\"a.b.C\")</code> has essentially the same effect\nas accessing <code>window.a.b.C</code> but with the difference that missing\nintermediate objects (a or b in the example above) don't lead to an exception.\n\nWhen the addressed object exists, it is simply returned. If it doesn't exists,\nthe behavior depends on the value of the second, optional parameter\n<code>iNoCreates</code> (assuming 'n' to be the number of names in the name sequence):\n<ul>\n<li>NaN: if iNoCreates is not a number and the addressed object doesn't exist,\n         then <code>getObject()</code> returns <code>undefined</code>.\n<li>0 &lt; iNoCreates &lt; n: any non-existing intermediate object is created, except\n         the <i>last</i> <code>iNoCreates</code> ones.\n</ul>\n\nExample:\n<pre>\n  getObject()            -- returns the context object (either param or window)\n  getObject(\"a.b.C\")     -- will only try to get a.b.C and return undefined if not found.\n  getObject(\"a.b.C\", 0)  -- will create a, b, and C in that order if they don't exists\n  getObject(\"a.b.c\", 1)  -- will create a and b, but not C.\n</pre>\n\nWhen a <code>oContext</code> is given, the search starts in that object.\nOtherwise it starts in the <code>window</code> object that this plugin\nhas been created in.\n\nNote: Although this method internally uses <code>object[\"key\"]</code> to address object\n      properties, it does not support all possible characters in a name.\n      Especially the dot ('.') is not supported in the individual name segments,\n      as it is always interpreted as a name separator."
				},
				{
					"name": "getResourceName",
					"visibility": "restricted",
					"static": true,
					"parameters": [
						{
							"name": "sModuleName",
							"type": "string",
							"optional": false,
							"description": "Module name as a dot separated name"
						},
						{
							"name": "sSuffix",
							"type": "string",
							"optional": true,
							"defaultValue": "'.js'",
							"description": "Suffix to add to the final resource name"
						}
					],
					"description": "Converts a UI5 module name to a unified resource name.\n\nUsed by View and Fragment APIs to convert a given module name into a unified resource name.\nWhen the <code>sSuffix</code> is not given, the suffix '.js' is added. This fits the most\ncommon use case of converting a module name to the Javascript resource that contains the\nmodule. Note that an empty <code>sSuffix</code> is not replaced by '.js'. This allows to\nconvert UI5 module names to requireJS module names with a call to this method."
				},
				{
					"name": "getResourcePath",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "URL to load the resource from"
					},
					"parameters": [
						{
							"name": "sResourceName",
							"type": "string",
							"optional": false,
							"description": "unified resource name of the resource"
						}
					],
					"description": "Determines the URL for a resource given its unified resource name.\n\nSearches the longest prefix of the given resource name for which a registration\nexists (see {@link jQuery.sap.registerResourcePath}) and replaces that prefix\nby the registered URL prefix.\n\nThe remainder of the resource name is appended to the URL.\n\n<b>Unified Resource Names</b><br>\nSeveral UI5 APIs use <i>Unified Resource Names (URNs)</i> as naming scheme for resources that\nthey deal with (e.h. Javascript, CSS, JSON, XML, ...). URNs are similar to the path\ncomponent of an URL:\n<ul>\n<li>they consist of a non-empty sequence of name segments</li>\n<li>segments are separated by a forward slash '/'</li>\n<li>name segments consist of URL path segment characters only. It is recommended to use only ASCII\nletters (upper or lower case), digits and the special characters '$', '_', '-', '.')</li>\n<li>the empty name segment is not supported</li>\n<li>names consisting of dots only, are reserved and must not be used for resources</li>\n<li>names are case sensitive although the underlying server might be case-insensitive</li>\n<li>the behavior with regard to URL encoded characters is not specified, %ddd notation should be avoided</li>\n<li>the meaning of a leading slash is undefined, but might be defined in future. It therefore should be avoided</li>\n</ul>\n\nUI5 APIs that only deal with Javascript resources, use a slight variation of this scheme,\nwhere the extension '.js' is always omitted (see {@link sap.ui.define}, {@link sap.ui.require}).\n\n\n<b>Relationship to old Module Name Syntax</b><br>\n\nOlder UI5 APIs that deal with resources (like {@link jQuery.sap.registerModulePath},\n{@link jQuery.sap.require} and {@link jQuery.sap.declare}) used a dot-separated naming scheme\n(called 'module names') which was motivated by object names in the global namespace in\nJavascript.\n\nThe new URN scheme better matches the names of the corresponding resources (files) as stored\nin a server and the dot ('.') is no longer a forbidden character in a resource name. This finally\nallows to handle resources with different types (extensions) with the same API, not only JS files.\n\nLast but not least does the URN scheme better match the naming conventions used by AMD loaders\n(like <code>requireJS</code>).",
					"experimental": {
						"since": "1.27.0"
					}
				},
				{
					"name": "getter",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "The new getter function"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "object",
							"optional": false,
							"description": "The value that the getter should return"
						}
					],
					"description": "Returns a new function that returns the given <code>oValue</code> (using its closure).\n\nAvoids the need for a dedicated member for the value.\n\nAs closures don't come for free, this function should only be used when polluting\nthe enclosing object is an absolute \"must-not\" (as it is the case in public base classes)."
				},
				{
					"name": "getUriParameters",
					"module": "jquery.sap.script",
					"export": "sap.getUriParameters",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.util.UriParameters",
						"description": "A new URI parameters instance"
					},
					"parameters": [
						{
							"name": "sUri",
							"type": "string",
							"optional": false,
							"description": "Uri to determine the parameters for"
						}
					],
					"description": "Creates and returns a new instance of {@link jQuery.sap.util.UriParameters}.\n\nExample for reading a single URI parameter (or the value of the first\noccurrence of the URI parameter):\n<pre>\n\tvar sValue = jQuery.sap.getUriParameters().get(\"myUriParam\");\n</pre>\n\nExample for reading the values of the first of the URI parameter\n(with multiple occurrences):\n<pre>\n\tvar aValues = jQuery.sap.getUriParameters().get(\"myUriParam\", true);\n\tfor(i in aValues){\n\tvar sValue = aValues[i];\n\t}\n</pre>",
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "getUrlWhitelist",
					"module": "jquery.sap.encoder",
					"export": "sap.getUrlWhitelist",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object[]",
						"description": "A copy of the whitelist"
					},
					"description": "Gets the whitelist for URL validation.",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "globalEval",
					"visibility": "public",
					"static": true,
					"description": "Executes an 'eval' for its arguments in the global context (without closure variables).\n\nThis is a synchronous replacement for <code>jQuery.globalEval</code> which in some\nbrowsers (e.g. FireFox) behaves asynchronously."
				},
				{
					"name": "hyphen",
					"module": "jquery.sap.strings",
					"export": "sap.hyphen",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The transformed string"
					},
					"since": "1.15.0",
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "camel case string"
						}
					],
					"description": "Transforms a camel case string into a hyphen separated string.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "includeScript",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "void|Promise",
						"description": "When using the configuration object a <code>Promise</code> will be returned. The\n           documentation for the <code>fnLoadCallback</code> applies to the <code>resolve</code>\n           handler of the <code>Promise</code> and the one for the <code>fnErrorCallback</code>\n           applies to the <code>reject</code> handler of the <code>Promise</code>."
					},
					"parameters": [
						{
							"name": "vUrl",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": false,
									"description": "the URL of the script to load"
								},
								"id": {
									"name": "id",
									"type": "string",
									"optional": true,
									"description": "id that should be used for the script tag"
								},
								"attributes": {
									"name": "attributes",
									"type": "object",
									"optional": true,
									"description": "map of attributes that should be used for the script tag"
								}
							},
							"description": "the URL of the script to load or a configuration object"
						},
						{
							"name": "vId",
							"type": "string|object",
							"optional": true,
							"description": "id that should be used for the script tag or map of attributes"
						},
						{
							"name": "fnLoadCallback",
							"type": "function",
							"optional": true,
							"description": "callback function to get notified once the script has been loaded"
						},
						{
							"name": "fnErrorCallback",
							"type": "function",
							"optional": true,
							"description": "callback function to get notified once the script loading failed"
						}
					],
					"description": "Includes the script (via &lt;script&gt;-tag) into the head for the\nspecified <code>sUrl</code> and optional <code>sId</code>."
				},
				{
					"name": "includeStyleSheet",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "void|Promise",
						"description": "When using the configuration object a <code>Promise</code> will be returned. The\n           documentation for the <code>fnLoadCallback</code> applies to the <code>resolve</code>\n           handler of the <code>Promise</code> and the one for the <code>fnErrorCallback</code>\n           applies to the <code>reject</code> handler of the <code>Promise</code>."
					},
					"parameters": [
						{
							"name": "vUrl",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": false,
									"description": "the URL of the stylesheet to load"
								},
								"id": {
									"name": "id",
									"type": "string",
									"optional": true,
									"description": "id that should be used for the link tag"
								},
								"attributes": {
									"name": "attributes",
									"type": "object",
									"optional": true,
									"description": "map of attributes that should be used for the script tag"
								}
							},
							"description": "the URL of the stylesheet to load or a configuration object"
						},
						{
							"name": "vId",
							"type": "string|object",
							"optional": true,
							"description": "id that should be used for the link tag or map of attributes"
						},
						{
							"name": "fnLoadCallback",
							"type": "function",
							"optional": true,
							"description": "callback function to get notified once the stylesheet has been loaded"
						},
						{
							"name": "fnErrorCallback",
							"type": "function",
							"optional": true,
							"description": "callback function to get notified once the stylesheet loading failed.\n           In case of usage in IE the error callback will also be executed if an empty stylesheet\n           is loaded. This is the only option how to determine in IE if the load was successful\n           or not since the native onerror callback for link elements doesn't work in IE. The IE\n           always calls the onload callback of the link element.\n           Another issue of the IE9 is that in case of loading too many stylesheets the eventing\n           is not working and therefore the error or load callback will not be triggered anymore."
						}
					],
					"description": "Includes the specified stylesheet via a &lt;link&gt;-tag in the head of the current document. If there is call to\n<code>includeStylesheet</code> providing the sId of an already included stylesheet, the existing element will be\nreplaced."
				},
				{
					"name": "initMobile",
					"module": "jquery.sap.mobile",
					"export": "sap.initMobile",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "options",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"viewport": {
									"name": "viewport",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "whether to set the viewport in a way that disables zooming"
								},
								"statusBar": {
									"name": "statusBar",
									"type": "string",
									"optional": true,
									"defaultValue": "'default'",
									"description": "the iOS status bar color, \"default\", \"black\" or \"black-translucent\""
								},
								"hideBrowser": {
									"name": "hideBrowser",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "whether the browser UI should be hidden as far as possible to make the app feel more native"
								},
								"preventScroll": {
									"name": "preventScroll",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "whether native scrolling should be disabled in order to prevent the \"rubber-band\" effect where the whole window is moved"
								},
								"preventPhoneNumberDetection": {
									"name": "preventPhoneNumberDetection",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "whether Safari mobile should be prevented from transforming any numbers that look like phone numbers into clickable links"
								},
								"rootId": {
									"name": "rootId",
									"type": "string",
									"optional": true,
									"description": "the ID of the root element that should be made fullscreen; only used when hideBrowser is set. If not set, the body is used"
								},
								"useFullScreenHeight": {
									"name": "useFullScreenHeight",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "whether the height of the html root element should be set to 100%, which is required for other elements to cover the full height"
								},
								"homeIcon": {
									"name": "homeIcon",
									"type": "string",
									"optional": true,
									"description": "deprecated since 1.12, use jQuery.sap.setIcons instead."
								},
								"homeIconPrecomposed": {
									"name": "homeIconPrecomposed",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "deprecated since 1.12, use jQuery.sap.setIcons instead."
								},
								"mobileWebAppCapable": {
									"name": "mobileWebAppCapable",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "whether the Application will be loaded in full screen mode after added to home screen on mobile devices. The default value for this property only enables the full screen mode when runs on iOS device."
								}
							},
							"description": "configures what exactly should be done"
						}
					],
					"description": "Does some basic modifications to the HTML page that make it more suitable for mobile apps.\nOnly the first call to this method is executed, subsequent calls are ignored. Note that this method is also called by the constructor of toplevel controls like sap.m.App, sap.m.SplitApp and sap.m.Shell.\nException: if no homeIcon was set, subsequent calls have the chance to set it.\n\nThe \"options\" parameter configures what exactly should be done.\n\nIt can have the following properties:\n<ul>\n<li>viewport: whether to set the viewport in a way that disables zooming (default: true)</li>\n<li>statusBar: the iOS status bar color, \"default\", \"black\" or \"black-translucent\" (default: \"default\")</li>\n<li>hideBrowser: whether the browser UI should be hidden as far as possible to make the app feel more native (default: true)</li>\n<li>preventScroll: whether native scrolling should be disabled in order to prevent the \"rubber-band\" effect where the whole window is moved (default: true)</li>\n<li>preventPhoneNumberDetection: whether Safari Mobile should be prevented from transforming any numbers that look like phone numbers into clickable links; this should be left as \"true\", otherwise it might break controls because Safari actually changes the DOM. This only affects all page content which is created after initMobile is called.</li>\n<li>rootId: the ID of the root element that should be made fullscreen; only used when hideBrowser is set (default: the document.body)</li>\n<li>useFullScreenHeight: a boolean that defines whether the height of the html root element should be set to 100%, which is required for other elements to cover the full height (default: true)</li>\n<li>homeIcon: deprecated since 1.12, use jQuery.sap.setIcons instead.\n</ul>",
					"resource": "jquery.sap.mobile.js"
				},
				{
					"name": "intervalCall",
					"module": "jquery.sap.script",
					"export": "sap.intervalCall",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "Id which can be used to cancel the interval with clearIntervalCall"
					},
					"parameters": [
						{
							"name": "iInterval",
							"type": "int",
							"optional": false,
							"description": "Interval time in milliseconds"
						},
						{
							"name": "oObject",
							"type": "object",
							"optional": false,
							"description": "Object from which the method should be called"
						},
						{
							"name": "method",
							"type": "string|object",
							"optional": false,
							"description": "function pointer or name of the method"
						},
						{
							"name": "aParameters",
							"type": "array",
							"optional": true,
							"description": "Method parameters"
						}
					],
					"description": "Calls a method after a given interval and returns an id for this interval.",
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "isDeclared",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "whether the module has been declared already"
					},
					"parameters": [
						{
							"name": "sModuleName",
							"type": "string",
							"optional": false,
							"description": "name of the module to be checked"
						},
						{
							"name": "bIncludePreloaded",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether preloaded modules should be reported as declared."
						}
					],
					"description": "Check whether a given module has been loaded / declared already.\n\nReturns true as soon as a module has been required the first time, even when\nloading/executing it has not finished yet. So the main assertion of a\nreturn value of <code>true</code> is that the necessary actions have been taken\nto make the module available in the near future. It does not mean, that\nthe content of the module is already available!\n\nThis fuzzy behavior is necessary to avoid multiple requests for the same module.\nAs a consequence of the assertion above, a <i>preloaded</i> module does not\ncount as <i>declared</i>. For preloaded modules, an explicit call to\n<code>jQuery.sap.require</code> is necessary to make them available.\n\nIf a caller wants to know whether a module needs to be loaded from the server,\nit can set <code>bIncludePreloaded</code> to true. Then, preloaded modules will\nbe reported as 'declared' as well by this method."
				},
				{
					"name": "isResourceLoaded",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether the resource has been loaded already"
					},
					"parameters": [
						{
							"name": "sResourceName",
							"type": "string",
							"optional": false,
							"description": "Name of the resource to check, in unified resource name format"
						}
					],
					"description": "Whether the given resource has been loaded (or preloaded)."
				},
				{
					"name": "newObject",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "new object"
					},
					"parameters": [
						{
							"name": "oPrototype",
							"type": "object",
							"optional": false,
							"description": "Prototype to use for the new object"
						}
					],
					"description": "Returns a new object which has the given <code>oPrototype</code> as its prototype.\n\nIf several objects with the same prototype are to be created,\n{@link jQuery.sap.factory} should be used instead.",
					"deprecated": {
						"since": "1.45.0",
						"text": "use <code>Object.create(oPrototype)</code> instead."
					}
				},
				{
					"name": "ownerWindow",
					"module": "jquery.sap.dom",
					"export": "sap.ownerWindow",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Window",
						"description": "Window reference"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "oDomRef",
							"type": "Element",
							"optional": false,
							"description": "The DOM reference"
						}
					],
					"description": "Returns the window reference for a DomRef",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "padLeft",
					"module": "jquery.sap.strings",
					"export": "sap.padLeft",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The padded string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "String to be padded"
						},
						{
							"name": "sPadChar",
							"type": "string",
							"optional": false,
							"description": "Char to use for the padding"
						},
						{
							"name": "iLength",
							"type": "int",
							"optional": false,
							"description": "Target length of the string"
						}
					],
					"description": "Pads a string on the left side until is has at least the given length.\n\nThe method always adds full copies of <code>sPadChar</code> to the given string.\nWhen <code>sPadChar</code> has a length > 1, the length of the returned string\nactually might be greater than <code>iLength</code>.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "padRight",
					"module": "jquery.sap.strings",
					"export": "sap.padRight",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The padded string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "String to be padded"
						},
						{
							"name": "sPadChar",
							"type": "string",
							"optional": false,
							"description": "Char to use for the padding"
						},
						{
							"name": "iLength",
							"type": "int",
							"optional": false,
							"description": "Target length of the string"
						}
					],
					"description": "Pads a string on the right side until is has at least the given length.\n\nThe method always adds full copies of <code>sPadChar</code> to the given string.\nWhen <code>sPadChar</code> has a length > 1, the length of the returned string\nactually might be greater than <code>iLength</code>.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "parseXML",
					"module": "jquery.sap.xml",
					"export": "sap.parseXML",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "the parsed XML document with a parseError property as described in\n        getParseError. An error occurred if the errorCode property of the parseError is != 0."
					},
					"parameters": [
						{
							"name": "sXMLText",
							"type": "string",
							"optional": false,
							"description": "the XML data as string"
						}
					],
					"description": "Parses the specified XML formatted string text using native parsing\nfunction of the browser and returns a valid XML document. If an error\noccurred during parsing a parse error object is returned as property (parseError) of the\nreturned XML document object. The parse error object has the following error\ninformation parameters: errorCode, url, reason, srcText, line, linepos, filepos",
					"resource": "jquery.sap.xml.js"
				},
				{
					"name": "properties",
					"module": "jquery.sap.properties",
					"export": "sap.properties",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.util.Properties|null|Promise",
						"description": "A new property collection (synchronous case)\n   or <code>null</code> if the file could not be loaded and <code>returnNullIfMissing</code>\n   was set; in case of asynchronous loading, always a Promise is returned, which resolves with\n   the property collection or with <code>null</code> if the file could not be loaded and\n   <code>returnNullIfMissing</code> was set to true"
					},
					"parameters": [
						{
							"name": "mParams",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "The URL to the .properties file which should be loaded."
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "Whether the .properties file which should be loaded asynchronously"
								},
								"headers": {
									"name": "headers",
									"type": "object",
									"optional": true,
									"description": "A map of additional header key/value pairs to send along with\n   the request (see <code>headers</code> option of <code>jQuery.ajax</code>)"
								},
								"returnNullIfMissing": {
									"name": "returnNullIfMissing",
									"type": "object",
									"optional": true,
									"defaultValue": false,
									"description": "Whether <code>null</code> should be returned\n   for a missing properties file; by default an empty collection is returned"
								}
							},
							"description": "Parameters used to initialize the property list"
						}
					],
					"description": "Creates and returns a new instance of {@link jQuery.sap.util.Properties}.\n\nIf option 'url' is passed, immediately a load request for the given target is triggered.\nA property file that is loaded can contain comments with a leading ! or #.\nThe loaded property list does not contain any comments.\n\n<b>Example for loading a property file:</b>\n<pre>\n jQuery.sap.properties({url : \"../myProperty.properties\"});\n</pre>\n\n<b>Example for creating an empty properties instance:</b>\n<pre>\n jQuery.sap.properties();\n</pre>\n\n<b>Examples for getting and setting properties:</b>\n<pre>\n\tvar oProperties = jQuery.sap.properties();\n\toProperties.setProperty(\"KEY_1\",\"Test Key\");\n\tvar sValue1 = oProperties.getProperty(\"KEY_1\");\n\tvar sValue2 = oProperties.getProperty(\"KEY_2\",\"Default\");\n</pre>",
					"resource": "jquery.sap.properties.js"
				},
				{
					"name": "registerModulePath",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sModuleName",
							"type": "string",
							"optional": false,
							"description": "module name to register a path for"
						},
						{
							"name": "vUrlPrefix",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "path prefix to register"
								},
								"final": {
									"name": "final",
									"type": "boolean",
									"optional": true,
									"description": "flag to avoid overwriting the url path prefix for the given module name at a later point of time"
								}
							},
							"description": "path prefix to register, either a string literal or an object (e.g. {url : 'url/to/res', 'final': true})"
						}
					],
					"description": "Registers an URL prefix for a module name prefix.\n\nBefore a module is loaded, the longest registered prefix of its module name\nis searched for and the associated URL prefix is used as a prefix for the request URL.\nThe remainder of the module name is attached to the request URL by replacing\ndots ('.') with slashes ('/').\n\nThe registration and search operates on full name segments only. So when a prefix\n\n   'sap.com'  ->  'http://www.sap.com/ui5/resources/'\n\nis registered, then it will match the name\n\n   'sap.com.Button'\n\nbut not\n\n   'sap.commons.Button'\n\nNote that the empty prefix ('') will always match and thus serves as a fallback for\nany search.\n\nThe prefix can either be given as string or as object which contains the url and a 'final' property.\nIf 'final' is set to true, overwriting a module prefix is not possible anymore."
				},
				{
					"name": "registerPreloadedModules",
					"visibility": "restricted",
					"static": true,
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "URL from which the bundle has been loaded"
								},
								"name": {
									"name": "name",
									"type": "string",
									"optional": true,
									"description": "Unique name of the bundle"
								},
								"version": {
									"name": "version",
									"type": "string",
									"optional": true,
									"defaultValue": "'1.0'",
									"description": "Format version of the preload bundle"
								},
								"modules": {
									"name": "modules",
									"type": "object",
									"optional": false,
									"description": "Map of resources keyed by their resource name; each resource must be a string or a function"
								}
							},
							"description": "Preload bundle"
						}
					],
					"description": "Adds all resources from a preload bundle to the preload cache.\n\nWhen a resource exists already in the cache, the new content is ignored."
				},
				{
					"name": "registerResourcePath",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sResourceNamePrefix",
							"type": "string",
							"optional": false,
							"description": "in unified resource name syntax"
						},
						{
							"name": "vUrlPrefix",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "path prefix to register"
								},
								"final": {
									"name": "final",
									"type": "boolean",
									"optional": true,
									"description": "flag to avoid overwriting the url path prefix for the given module name at a later point of time"
								}
							},
							"description": "prefix to use instead of the sResourceNamePrefix, either a string literal or an object (e.g. {url : 'url/to/res', 'final': true})"
						}
					],
					"description": "Registers an URL prefix for a resource name prefix.\n\nBefore a resource is loaded, the longest registered prefix of its unified resource name\nis searched for and the associated URL prefix is used as a prefix for the request URL.\nThe remainder of the resource name is attached to the request URL 1:1.\n\nThe registration and search operates on full name segments only. So when a prefix\n\n   'sap/com'  ->  'http://www.sap.com/ui5/resources/'\n\nis registered, then it will match the name\n\n   'sap/com/Button'\n\nbut not\n\n   'sap/commons/Button'\n\nNote that the empty prefix ('') will always match and thus serves as a fallback for\nany search.\n\nThe url prefix can either be given as string or as object which contains the url and a final flag.\nIf final is set to true, overwriting a resource name prefix is not possible anymore."
				},
				{
					"name": "removeUrlWhitelist",
					"module": "jquery.sap.encoder",
					"export": "sap.removeUrlWhitelist",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "index of entry"
						}
					],
					"description": "Removes a whitelist entry for URL validation.",
					"resource": "jquery.sap.encoder.js"
				},
				{
					"name": "require",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "vModuleName",
							"type": "string|object",
							"optional": false,
							"description": "one or more names of modules to be loaded\n                             or in case of an object {modName: \"...\", type: \"...\"}\n                             where modName is the name of the module and the type\n                             could be a specific dot separated extension e.g.\n                             <code>{modName: \"sap.ui.core.Dev\", type: \"view\"}</code>\n                             loads <code>sap/ui/core/Dev.view.js</code> and\n                             registers as <code>sap.ui.core.Dev.view</code>"
						}
					],
					"description": "Ensures that the given module is loaded and executed before execution of the\ncurrent script continues.\n\nBy issuing a call to this method, the caller declares a dependency to the listed modules.\n\nAny required and not yet loaded script will be loaded and execute synchronously.\nAlready loaded modules will be skipped."
				},
				{
					"name": "resources",
					"module": "jquery.sap.resources",
					"export": "sap.resources",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.util.ResourceBundle|Promise",
						"description": "A new resource bundle or a Promise on that bundle (in asynchronous case)"
					},
					"parameters": [
						{
							"name": "mParams",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"defaultValue": "''",
									"description": "URL pointing to the base .properties file of a bundle (.properties file without any locale information, e.g. \"mybundle.properties\")"
								},
								"locale": {
									"name": "locale",
									"type": "string",
									"optional": true,
									"description": "Optional language (aka 'locale') to load the texts for.\n    Can either be a BCP47 language tag or a JDK compatible locale string (e.g. \"en-GB\", \"en_GB\" or \"fr\");\n    Defaults to the current session locale if <code>sap.ui.getCore</code> is available, otherwise to 'en'"
								},
								"includeInfo": {
									"name": "includeInfo",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "Whether to include origin information into the returned property values"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "Whether the first bundle should be loaded asynchronously\n    Note: Fallback bundles loaded by {@link #getText} are always loaded synchronously."
								}
							},
							"description": "Parameters used to initialize the resource bundle"
						}
					],
					"description": "Creates and returns a new instance of {@link jQuery.sap.util.ResourceBundle}\nusing the given URL and locale to determine what to load.",
					"resource": "jquery.sap.resources.js"
				},
				{
					"name": "scrollbarSize",
					"module": "jquery.sap.dom",
					"export": "sap.scrollbarSize",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "JSON object with properties <code>width</code> and <code>height</code> (the values are of type number and are pixels)."
					},
					"since": "1.4.0",
					"parameters": [
						{
							"name": "sClasses",
							"type": "string",
							"optional": true,
							"defaultValue": null,
							"description": "the CSS class that should be added to the test element."
						},
						{
							"name": "bForce",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "force recalculation of size (e.g. when CSS was changed). When no classes are passed all calculated sizes are reset."
						}
					],
					"description": "Returns the size (width of the vertical / height of the horizontal) native browser scrollbars.\n\nThis function must only be used when the DOM is ready.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "serializeXML",
					"module": "jquery.sap.xml",
					"export": "sap.serializeXML",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "the serialized XML string"
					},
					"parameters": [
						{
							"name": "oXMLDocument",
							"type": "string",
							"optional": false,
							"description": "the XML document object to be serialized as string"
						}
					],
					"description": "Serializes the specified XML document into a string representation.",
					"resource": "jquery.sap.xml.js"
				},
				{
					"name": "setIcons",
					"module": "jquery.sap.mobile",
					"export": "sap.setIcons",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "oIcons",
							"type": "object",
							"optional": false
						}
					],
					"description": "Sets the bookmark icon for desktop browsers and the icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\n\nOnly call this method once and call it early when the page is loading: browsers behave differently when the favicon is modified while the page is alive.\nSome update the displayed icon inside the browser but use an old icon for bookmarks.\nWhen a favicon is given, any other existing favicon in the document will be removed.\nWhen at least one home icon is given, all existing home icons will be removed and new home icon tags for all four resolutions will be created.\n\nThe home icons must be in PNG format and given in different sizes for iPad/iPhone with and without retina display.\nThe favicon is used in the browser and for desktop shortcuts and should optimally be in ICO format:\nPNG does not seem to be supported by Internet Explorer and ICO files can contain different image sizes for different usage locations. E.g. a 16x16px version\nis used inside browsers.\n\nAll icons are given in an an object holding icon URLs and other settings. The properties of this object are:\n<ul>\n<li>phone: a 60x60 pixel version for non-retina iPhones</li>\n<li>tablet: a 76x76 pixel version for non-retina iPads</li>\n<li>phone@2: a 120x120 pixel version for retina iPhones</li>\n<li>tablet@2: a 152x152 pixel version for retina iPads</li>\n<li>precomposed: whether the home icons already have some glare effect (otherwise iOS will add it) (default: false)</li>\n<li>favicon: the ICO file to be used inside the browser and for desktop shortcuts</li>\n</ul>\n\nOne example is:\n<pre>\n{\n   'phone':'phone-icon_60x60.png',\n   'phone@2':'phone-retina_120x120.png',\n   'tablet':'tablet-icon_76x76.png',\n   'tablet@2':'tablet-retina_152x152.png',\n   'precomposed':true,\n   'favicon':'desktop.ico'\n}\n</pre>\nIf one of the sizes is not given, the largest available alternative image will be used instead for this size.\nOn Android these icons may or may not be used by the device. Apparently chances can be improved by using icons with glare effect, so the \"precomposed\" property can be set to \"true\". Some Android devices may also use the favicon for bookmarks instead of the home icons.</li>",
					"resource": "jquery.sap.mobile.js"
				},
				{
					"name": "setMobileWebAppCapable",
					"module": "jquery.sap.mobile",
					"export": "sap.setMobileWebAppCapable",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "whether the Application will be loaded in full screen mode after added to home screen from iOS Safari or mobile Chrome from version 31."
						}
					],
					"description": "Sets the \"apple-mobile-web-app-capable\" and \"mobile-web-app-capable\" meta information which defines whether the application is loaded\nin full screen mode (browser address bar and toolbar are hidden) after the user does \"add to home screen\" on mobile devices. Currently\nthis meta tag is only supported by iOS Safari and mobile Chrome from version 31.\n\nIf the application opens new tabs because of attachments, url and so on, setting this to false will let the user be able to go from the\nnew tab back to the application tab after the application is added to home screen.\n\nNote: this function only has effect when the application runs on iOS Safari and mobile Chrome from version 31.",
					"resource": "jquery.sap.mobile.js"
				},
				{
					"name": "setObject",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "a dot separated sequence of names that identify the property"
						},
						{
							"name": "vValue",
							"type": "any",
							"optional": false,
							"description": "value to be set, can have any type"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": "window",
							"description": "the context to execute the search in"
						}
					],
					"description": "Sets an object property to a given value, where the property is\nidentified by a sequence of names (path).\n\nWhen a <code>oContext</code> is given, the path starts in that object.\nOtherwise it starts in the <code>window</code> object that this plugin\nhas been created for.\n\nNote: Although this method internally uses <code>object[\"key\"]</code> to address object\n      properties, it does not support all possible characters in a name.\n      Especially the dot ('.') is not supported in the individual name segments,\n      as it is always interpreted as a name separator."
				},
				{
					"name": "sjax",
					"module": "jquery.sap.sjax",
					"export": "sap.sjax",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"description": "result, see above"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "oOrigSettings",
							"type": "string",
							"optional": false,
							"description": "the ajax() settings"
						}
					],
					"description": "Convenience wrapper around <code>jQuery.ajax()</code> that avoids the need for callback functions when\nsynchronous calls are made. If the setting <code>complexResult</code> is true (default), then the return value\nis an object with the following properties\n<ul>\n<li><code>success</code> boolean whether the call succeeded or not\n<li><code>data</code> any the data returned by the call. For dataType 'text' this is a string,\n                      for JSON it is an object, for XML it is a document. When the call failed, then data is not defined\n<li><code>status</code> string a textual status ('success,', 'error', 'timeout',...)\n<li><code>statusCode</code> string the HTTP status code of the request\n<li><code>error</code> Error an error object (exception) in case an error occurred\n<li><code>errorText</code> string an error message in case an error occurred\n</ul>\n\nWhen <code>complexResult</code> is false, then in the case of success, only 'data' is returned, in case of an error the\n'fallback' setting is returned (defaults to undefined).\n\nNote that async=false is always enforced by this method.",
					"resource": "jquery.sap.sjax.js"
				},
				{
					"name": "startsWith",
					"module": "jquery.sap.strings",
					"export": "sap.startsWith",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether <code>sString</code> starts with <code>sStartString</code>"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "String to be checked"
						},
						{
							"name": "sStartString",
							"type": "string",
							"optional": false,
							"description": "The start string to be searched"
						}
					],
					"description": "Checks whether a given <code>sString</code> starts with <code>sStartString</code>\nrespecting the case of the strings.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "startsWithIgnoreCase",
					"module": "jquery.sap.strings",
					"export": "sap.startsWithIgnoreCase",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether <code>sString</code> starts with <code>sStartString</code>"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "String to be checked"
						},
						{
							"name": "sStartString",
							"type": "string",
							"optional": false,
							"description": "The start string to be searched"
						}
					],
					"description": "Checks whether a given <code>sString</code> starts with <code>sStartString</code>\nignoring the case of both strings.",
					"resource": "jquery.sap.strings.js"
				},
				{
					"name": "syncGet",
					"module": "jquery.sap.sjax",
					"export": "sap.syncGet",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"description": "result @see jQuery.sap.sjax"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "sUrl",
							"type": "string",
							"optional": false,
							"description": "the URL"
						},
						{
							"name": "data",
							"type": "string|object",
							"optional": false,
							"description": "request parameters in the format accepted by jQuery.ajax()"
						},
						{
							"name": "sDataType",
							"type": "string",
							"optional": true,
							"defaultValue": "'text'",
							"description": "the type of data expected from the server, default is \"text\""
						}
					],
					"description": "Convenience wrapper for {@link jQuery.sap.sjax} that enforeces the Http method GET and defaults the\ndata type of the result to 'text'.",
					"resource": "jquery.sap.sjax.js"
				},
				{
					"name": "syncGetJSON",
					"module": "jquery.sap.sjax",
					"export": "sap.syncGetJSON",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"description": "result @see jQuery.sap.sjax"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "sUrl",
							"type": "string",
							"optional": false,
							"description": "the URL"
						},
						{
							"name": "data",
							"type": "string|object",
							"optional": false,
							"description": "request parameters in the format accepted by jQuery.ajax()"
						},
						{
							"name": "fallback",
							"type": "object",
							"optional": true,
							"description": "if set, only data is returned (and this fallback instead in case of errors); if unset, a result structure is returned"
						}
					],
					"description": "Convenience wrapper for {@link jQuery.sap.sjax} that enforces the Http method GET and the data type 'json'.\nIf a fallback value is given, the function simply returns the response as an object or - if some error occurred -\nthe fallback value. This is useful for applications that don't require detailed error diagnostics.\n\nIf applications need to know about occurring errors, they can either call <code>sjax()</code> directly\nor they can omit the fallback value (providing only two parameters to syncGetJSON()).\nThey then receive the same complex result object as for the sjax() call.\n\nNote that providing \"undefined\" or \"null\" as a fallback is different from omitting the fallback (complex result).",
					"resource": "jquery.sap.sjax.js"
				},
				{
					"name": "syncGetText",
					"module": "jquery.sap.sjax",
					"export": "sap.syncGetText",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"description": "result @see jQuery.sap.sjax"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "sUrl",
							"type": "string",
							"optional": false,
							"description": "the URL"
						},
						{
							"name": "data",
							"type": "string|object",
							"optional": false,
							"description": "request parameters in the format accepted by jQuery.ajax()"
						},
						{
							"name": "fallback",
							"type": "string",
							"optional": true,
							"description": "if set, only data is returned (and this fallback instead in case of errors); if unset, a result structure is returned"
						}
					],
					"description": "Convenience wrapper for {@link jQuery.sap.sjax} that enforces the Http method GET and the data type 'text'.\nIf a fallback value is given, the function simply returns the response as a text or - if some error occurred -\nthe fallback value. This is useful for applications that don't require detailed error diagnostics.\n\nIf applications need to know about occurring errors, they can either call <code>sjax()</code> directly\nor they can omit the fallback value (providing only two parameters to syncGetText()).\nThey then receive the same complex result object as for the sjax() call.",
					"resource": "jquery.sap.sjax.js"
				},
				{
					"name": "syncPost",
					"module": "jquery.sap.sjax",
					"export": "sap.syncPost",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"description": "result @see jQuery.sap.sjax"
					},
					"since": "0.9.0",
					"parameters": [
						{
							"name": "sUrl",
							"type": "string",
							"optional": false,
							"description": "the URL"
						},
						{
							"name": "data",
							"type": "string|object",
							"optional": false,
							"description": "request parameters in the format accepted by jQuery.ajax()"
						},
						{
							"name": "sDataType",
							"type": "string",
							"optional": true,
							"defaultValue": "'text'",
							"description": "the type of data expected from the server, default is \"text\""
						}
					],
					"description": "Convenience wrapper for {@link jQuery.sap.sjax} that enforces the Http method POST and defaults the\ndata type of the result to 'text'.",
					"resource": "jquery.sap.sjax.js"
				},
				{
					"name": "syncStyleClass",
					"module": "jquery.sap.dom",
					"export": "sap.syncStyleClass",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery|Element",
						"description": "Target element"
					},
					"since": "1.22",
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "CSS class name"
						},
						{
							"name": "vSource",
							"type": "jQuery|sap.ui.core.Control|string",
							"optional": false,
							"description": "jQuery object, control or an id of the source element."
						},
						{
							"name": "vDestination",
							"type": "jQuery|sap.ui.core.Control",
							"optional": false,
							"description": "target jQuery object or a control."
						}
					],
					"description": "Search ancestors of the given source DOM element for the specified CSS class name.\nIf the class name is found, set it to the root DOM element of the target control.\nIf the class name is not found, it is also removed from the target DOM element.",
					"resource": "jquery.sap.dom.js"
				},
				{
					"name": "uid",
					"module": "jquery.sap.script",
					"export": "sap.uid",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "A pseudo-unique id."
					},
					"description": "Creates and returns a pseudo-unique id.\n\nNo means for detection of overlap with already present or future UIDs.",
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "unbindAnyEvent",
					"module": "jquery.sap.events",
					"export": "sap.unbindAnyEvent",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fnCallback",
							"type": "function",
							"optional": false,
							"description": "Callback function"
						}
					],
					"description": "Unbinds all events for listening with the given callback function.",
					"resource": "jquery.sap.events.js"
				},
				{
					"name": "unique",
					"module": "jquery.sap.script",
					"export": "sap.unique",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Array",
						"description": "Same array as given (for chaining)"
					},
					"parameters": [
						{
							"name": "a",
							"type": "Array",
							"optional": false,
							"description": "An Array of any type"
						}
					],
					"description": "Sorts the given array in-place and removes any duplicates (identified by \"===\").\n\nUse <code>jQuery.unique()</code> for arrays of DOMElements.",
					"resource": "jquery.sap.script.js"
				},
				{
					"name": "validateUrl",
					"module": "jquery.sap.encoder",
					"export": "sap.validateUrl",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"description": "true if valid, false if not valid"
					},
					"parameters": [
						{
							"name": "sUrl",
							"type": "string",
							"optional": false
						}
					],
					"description": "Validates an URL. Check if it's not a script or other security issue.\n\nSplit URL into components and check for allowed characters according to RFC 3986:\n\n<pre>\nauthority     = [ userinfo \"@\" ] host [ \":\" port ]\nuserinfo      = *( unreserved / pct-encoded / sub-delims / \":\" )\nhost          = IP-literal / IPv4address / reg-name\n\nIP-literal    = \"[\" ( IPv6address / IPvFuture  ) \"]\"\nIPvFuture     = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )\nIPv6address   =                            6( h16 \":\" ) ls32\n              /                       \"::\" 5( h16 \":\" ) ls32\n              / [               h16 ] \"::\" 4( h16 \":\" ) ls32\n              / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n              / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n              / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n              / [ *4( h16 \":\" ) h16 ] \"::\"              ls32\n              / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n              / [ *6( h16 \":\" ) h16 ] \"::\"\nls32          = ( h16 \":\" h16 ) / IPv4address\n              ; least-significant 32 bits of address\nh16           = 1*4HEXDIG\n              ; 16 bits of address represented in hexadecimal\n\nIPv4address   = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet\ndec-octet     = DIGIT                 ; 0-9\n              / %x31-39 DIGIT         ; 10-99\n              / \"1\" 2DIGIT            ; 100-199\n              / \"2\" %x30-34 DIGIT     ; 200-249\n              / \"25\" %x30-35          ; 250-255\n\nreg-name      = *( unreserved / pct-encoded / sub-delims )\n\npct-encoded   = \"%\" HEXDIG HEXDIG\nreserved      = gen-delims / sub-delims\ngen-delims    = \":\" / \"/\" / \"?\" / \"#\" / \"[\" / \"]\" / \"@\"\nsub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n              / \"*\" / \"+\" / \",\" / \";\" / \"=\"\nunreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\npchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n\npath          = path-abempty    ; begins with \"/\" or is empty\n              / path-absolute   ; begins with \"/\" but not \"//\"\n              / path-noscheme   ; begins with a non-colon segment\n              / path-rootless   ; begins with a segment\n              / path-empty      ; zero characters\n\npath-abempty  = *( \"/\" segment )\npath-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\npath-noscheme = segment-nz-nc *( \"/\" segment )\npath-rootless = segment-nz *( \"/\" segment )\npath-empty    = 0<pchar>\nsegment       = *pchar\nsegment-nz    = 1*pchar\nsegment-nz-nc = 1*( unreserved / pct-encoded / sub-delims / \"@\" )\n              ; non-zero-length segment without any colon \":\"\n\nquery         = *( pchar / \"/\" / \"?\" )\n\nfragment      = *( pchar / \"/\" / \"?\" )\n</pre>\n\nFor the hostname component, we are checking for valid DNS hostnames according to RFC 952 / RFC 1123:\n\n<pre>\nhname         = name *(\".\" name)\nname          = let-or-digit ( *( let-or-digit-or-hyphen ) let-or-digit )\n</pre>\n\n\nWhen the URI uses the protocol 'mailto:', the address part is additionally checked\nagainst the most commonly used parts of RFC 6068:\n\n<pre>\nmailtoURI     = \"mailto:\" [ to ] [ hfields ]\nto            = addr-spec *(\",\" addr-spec )\nhfields       = \"?\" hfield *( \"&\" hfield )\nhfield        = hfname \"=\" hfvalue\nhfname        = *qchar\nhfvalue       = *qchar\naddr-spec     = local-part \"@\" domain\nlocal-part    = dot-atom-text              // not accepted: quoted-string\ndomain        = dot-atom-text              // not accepted: \"[\" *dtext-no-obs \"]\"\ndtext-no-obs  = %d33-90 / ; Printable US-ASCII\n                %d94-126  ; characters not including\n                          ; \"[\", \"]\", or \"\\\"\nqchar         = unreserved / pct-encoded / some-delims\nsome-delims   = \"!\" / \"$\" / \"'\" / \"(\" / \")\" / \"*\"\n              / \"+\" / \",\" / \";\" / \":\" / \"@\"\n\nNote:\nA number of characters that can appear in &lt;addr-spec> MUST be\npercent-encoded.  These are the characters that cannot appear in\na URI according to [STD66] as well as \"%\" (because it is used for\npercent-encoding) and all the characters in gen-delims except \"@\"\nand \":\" (i.e., \"/\", \"?\", \"#\", \"[\", and \"]\").  Of the characters\nin sub-delims, at least the following also have to be percent-\nencoded: \"&\", \";\", and \"=\".  Care has to be taken both when\nencoding as well as when decoding to make sure these operations\nare applied only once.\n\n</pre>\n\nWhen a whitelist has been configured using {@link #.addUrlWhitelist addUrlWhitelist},\nany URL that passes the syntactic checks above, additionally will be tested against\nthe content of the whitelist.",
					"resource": "jquery.sap.encoder.js"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.sap.act",
			"basename": "act",
			"resource": "jquery.sap.act.js",
			"module": "jquery.sap.act",
			"export": "sap.act",
			"static": true,
			"visibility": "public",
			"methods": [
				{
					"name": "attachActivate",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when an activity event occurs."
						},
						{
							"name": "oListener",
							"type": "Object",
							"optional": true,
							"description": "The 'this' context of the handler function."
						}
					],
					"description": "Registers the given handler to the activity event, which is fired when an activity was detected after a certain period of inactivity.\n\nThe Event is not fired for Internet Explorer 8."
				},
				{
					"name": "detachActivate",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when an activity event occurs."
						},
						{
							"name": "oListener",
							"type": "Object",
							"optional": true,
							"description": "The 'this' context of the handler function."
						}
					],
					"description": "Deregisters a previously registered handler from the activity event."
				},
				{
					"name": "isActive",
					"visibility": "protected",
					"returnValue": {
						"description": "true if recently an activity was detected, false otherwise"
					},
					"description": "Checks whether recently an activity was detected.\n\nNot supported for Internet Explorer 8."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"description": "Reports an activity."
				}
			]
		},
		{
			"kind": "class",
			"name": "jQuery.sap.history",
			"basename": "history",
			"resource": "jquery.sap.history.js",
			"module": "jquery.sap.history",
			"export": "sap.history",
			"static": true,
			"visibility": "public",
			"description": "Enables the back and forward buttons in browser to navigate back or forth through the browser history stack.<br/><br/>\n\nIt also supports adding virtual history which used only to mark some intermediate state in order to navigate back to the previous state.\nAnd this state will be skipped from the browser history stack immediately after a new history state is added to the history stack after this state <br/><br/>\n\nBy providing the hash saved from the return value of calling jQuery.sap.history.addHistory, jQuery.sap.history.backToHash will navigate back directly to the\nhistory state with the same hash. <br/><br/>\n\nPlease use jQuery.sap.history.back() to go one step back in the history stack instead of using window.history.back(), because it handles the empty history stack\nsituation and will call the defaultHandler for this case. <br/><br/>\n\n\nExample for the usage of history handling:\n<pre>\n\t//Initialization\n\tjQuery.sap.history({\n\t\troutes: [], //please refer to the jQuery.sap.history function comment for the format.\n\t\tdefaultHandler: function(){\n\t\t\t//code here\n\t\t}\n\t});\n\n\t//add history\n\tvar hash = jQuery.sap.history.addHistory(\"IDENTIFIER\", jsonData);\n\n\t//add virtual history\n\tjQuery.sap.history.addVirtualHistory();\n\n\t//back to hash\n\tjQuery.sap.history.backToHash(hash);\n\n\t//back one step along the history stack\n\tjQuery.sap.history.back();\n</pre>",
			"deprecated": {
				"since": "1.19.1",
				"text": "Please use {@link sap.ui.core.routing.Route} instead."
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mSettings",
						"type": "object",
						"optional": false,
						"description": "The map that contains data in format:\n<pre>\n{\n\troutes: [{\n\t\tpath: string //identifier for one kind of hash\n\t\thandler: function\t//function what will be called when the changed hash is matched against the path.\n\t\t\t\t\t\t\t//first parameter: the json data passed in when calling the addHistory\n\t\t\t\t\t\t\t//second parameter: the type of the navigation {@link jQuery.sap.history.NavType}\n\t\t}],\n\t\tdefaultHandler: function\t//this function will be called when empty hash is matched\n\t\t\t\t\t\t\t\t\t//first parameter: the type of the navigation {@link jQuery.sap.history.NavType}\n}\n</pre>"
					}
				],
				"description": "jQuery.sap.history is deprecated. Please use {@link sap.ui.core.routing.Route} instead.\n\nInitialize the history handling and set the routes and default handler.\nThis should be only called once with the mSettings set in the right format. If the mSettings is not an object,\nyou have another chance to call this function again to initialize the history handling. But once the mSettings\nis set with an object, you can only call the addRoute and setDefaultHandler to set the data."
			},
			"methods": [
				{
					"name": "addHistory",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "sHash The complete hash string which contains the identifier, stringified data, optional uid, and bookmarkable digit. This hash can be passed into\n    the backToHash function when navigating back to this state is intended."
					},
					"parameters": [
						{
							"name": "sIdf",
							"type": "string",
							"optional": false,
							"description": "The identifier defined in the routes which will be matched in order to call the corresponding handler"
						},
						{
							"name": "oStateData",
							"type": "object",
							"optional": false,
							"description": "The object passed to the corresponding handler when the identifier is matched with the url hash"
						},
						{
							"name": "bBookmarkable",
							"type": "boolean",
							"optional": false,
							"description": "Default value is set to true. If this is set to false, the default handler will be called when this identifier and data are matched"
						},
						{
							"name": "bVirtual",
							"type": "boolean",
							"optional": true,
							"description": "This states if the history is a virtual history that should be skipped when going forward or backward in the history stack."
						}
					],
					"description": "This function adds a history record. It will not trigger the related handler of the routes, the changes have to be done by the\ndeveloper. Normally, a history record should be added when changes are done already."
				},
				{
					"name": "addRoute",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "It returns the this object to enable chaining."
					},
					"parameters": [
						{
							"name": "sIdf",
							"type": "string",
							"optional": false,
							"description": "The identifier that is matched with the hash in the url in order to call the corresponding handler."
						},
						{
							"name": "fn",
							"type": "function",
							"optional": false,
							"description": "The function that will be called when the identifier is matched with the hash."
						},
						{
							"name": "oThis",
							"type": "object",
							"optional": true,
							"description": "If oThis is provided, the fn function's this keyword will be bound to this object."
						}
					],
					"description": "Adds a route to the history handling."
				},
				{
					"name": "addVirtualHistory",
					"visibility": "public",
					"description": "This function adds a virtual history record based on the current hash. A virtual record is only for marking the current state of the application,\nand when the back button clicked it will return to the previous state. It is used when the marked state shouldn't be seen by the user when user click\nthe back or forward button of the browser. For example, when showing a context menu a virtual history record should be added and this record will be skipped\nwhen user navigates back and it will return directly to the previous history record. If you avoid adding the virtual history record, it will return to one\nhistory record before the one your virtual record is based on. That's why virtual record is necessary."
				},
				{
					"name": "back",
					"visibility": "public",
					"parameters": [
						{
							"name": "iSteps",
							"type": "int",
							"optional": true,
							"description": "how many steps you want to go back, by default the value is 1."
						}
					],
					"description": "This function navigates back through the history stack. The number of steps is set by the parameter iSteps. It also handles the situation when it's called while there's nothing in the history stack.\nNormally this happens when the application is restored from the bookmark. If there's nothing in the history stack, the default handler will be called with NavType jQuery.sap.history.NavType.Back."
				},
				{
					"name": "backThroughPath",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The route identifier to which the history navigates back."
						}
					],
					"description": "This function will navigate back to the recent history state which has the sPath identifier. It is usually used to navigate back along one\nspecific route and jump over the intermediate history state if there are any."
				},
				{
					"name": "backToHash",
					"visibility": "public",
					"parameters": [
						{
							"name": "sHash",
							"type": "string",
							"optional": false,
							"description": "The hash string needs to be navigated. This is normally returned when you call the addhistory method."
						}
					],
					"description": "This function calculate the number of back steps to the specific sHash passed as parameter,\nand then go back to the history state with this hash."
				},
				{
					"name": "setDefaultHandler",
					"visibility": "public",
					"parameters": [
						{
							"name": "fn",
							"type": "function",
							"optional": false,
							"description": "The function that will be set as the default handler"
						}
					],
					"description": "Set the default handler which will be called when there's an empty hash in the url."
				}
			]
		},
		{
			"kind": "enum",
			"name": "jQuery.sap.history.NavType",
			"basename": "NavType",
			"resource": "jquery.sap.history.js",
			"module": "jquery.sap.history",
			"export": "sap.history.NavType",
			"static": true,
			"visibility": "public",
			"properties": [
				{
					"name": "Back",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "This indicates that the new hash is achieved by pressing the back button."
				},
				{
					"name": "Bookmark",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "This indicates that the new hash is restored from the bookmark."
				},
				{
					"name": "Forward",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "This indicates that the new hash is achieved by pressing the forward button."
				},
				{
					"name": "Unknown",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "This indicates that the new hash is achieved by some unknown direction.\nThis happens when the user navigates out of the application and then click on the forward button\nin the browser to navigate back to the application."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.sap.interaction",
			"basename": "interaction",
			"resource": "jquery.sap.trace.js",
			"module": "jquery.sap.trace",
			"export": "sap.interaction",
			"static": true,
			"visibility": "public",
			"since": "1.36",
			"methods": [
				{
					"name": "setActive",
					"visibility": "public",
					"static": true,
					"since": "1.36",
					"parameters": [
						{
							"name": "bActive",
							"type": "boolean",
							"optional": false,
							"description": "state of the interaction detection"
						}
					],
					"description": "Enables the interaction tracking."
				}
			]
		},
		{
			"kind": "enum",
			"name": "jQuery.sap.KeyCodes",
			"basename": "KeyCodes",
			"resource": "jquery.sap.keycodes.js",
			"module": "jquery.sap.keycodes",
			"export": "sap.KeyCodes",
			"static": true,
			"visibility": "public",
			"since": "0.9.0",
			"description": "Enumeration of key codes.",
			"properties": [
				{
					"name": "A",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "ALT",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "ARROW_DOWN",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "ARROW_LEFT",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "ARROW_RIGHT",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "ARROW_UP",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "B",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "BACKSLASH",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "BACKSPACE",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "BREAK",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "C",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "CAPS_LOCK",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "COMMA",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "CONTEXT_MENU",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "CONTROL",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "D",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DELETE",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_0",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_1",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_2",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_3",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_4",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_5",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_6",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_7",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_8",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DIGIT_9",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "DOT",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "E",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "END",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "ENTER",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "EQUALS",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "ESCAPE",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F1",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F10",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F11",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F12",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F2",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F3",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F4",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F5",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F6",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F7",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F8",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "F9",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "G",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "GREAT_ACCENT",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "H",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "HOME",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "I",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "INSERT",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "J",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "K",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "L",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "M",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "MINUS",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "N",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUM_LOCK",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_0",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_1",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_2",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_3",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_4",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_5",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_6",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_7",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_8",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_9",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_ASTERISK",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_COMMA",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_MINUS",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_PLUS",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "NUMPAD_SLASH",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "O",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "OPEN_BRACKET",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "P",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "PAGE_DOWN",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "PAGE_UP",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "PIPE",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "PLUS",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "PRINT",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "Q",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "R",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "S",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "SCROLL_LOCK",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "SEMICOLON",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "SHIFT",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "SINGLE_QUOTE",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "SLASH",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "SLEEP",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "SPACE",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "T",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "TAB",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "TURN_OFF",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "U",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "V",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "W",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "WINDOWS",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "X",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "Y",
					"visibility": "public",
					"static": true,
					"type": "number"
				},
				{
					"name": "Z",
					"visibility": "public",
					"static": true,
					"type": "number"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.sap.log",
			"basename": "log",
			"resource": "jquery.sap.global.js",
			"module": "jquery.sap.global",
			"export": "sap.log",
			"static": true,
			"visibility": "public",
			"since": "0.9.0",
			"description": "A Logging API for JavaScript.\n\nProvides methods to manage a client-side log and to create entries in it. Each of the logging methods\n{@link jQuery.sap.log.debug}, {@link jQuery.sap.log.info}, {@link jQuery.sap.log.warning},\n{@link jQuery.sap.log.error} and {@link jQuery.sap.log.fatal} creates and records a log entry,\ncontaining a timestamp, a log level, a message with details and a component info.\nThe log level will be one of {@link jQuery.sap.log.Level} and equals the name of the concrete logging method.\n\nBy using the {@link jQuery.sap.log.setLevel} method, consumers can determine the least important\nlog level which should be recorded. Less important entries will be filtered out. (Note that higher numeric\nvalues represent less important levels). The initially set level depends on the mode that UI5 is running in.\nWhen the optimized sources are executed, the default level will be {@link jQuery.sap.log.Level.ERROR}.\nFor normal (debug sources), the default level is {@link jQuery.sap.log.Level.DEBUG}.\n\nAll logging methods allow to specify a <b>component</b>. These components are simple strings and\ndon't have a special meaning to the UI5 framework. However they can be used to semantically group\nlog entries that belong to the same software component (or feature). There are two APIs that help\nto manage logging for such a component. With <code>{@link jQuery.sap.log.getLogger}(sComponent)</code>,\none can retrieve a logger that automatically adds the given <code>sComponent</code> as component\nparameter to each log entry, if no other component is specified. Typically, JavaScript code will\nretrieve such a logger once during startup and reuse it for the rest of its lifecycle.\nSecond, the {@link jQuery.sap.log.Logger#setLevel}(iLevel, sComponent) method allows to set the log level\nfor a specific component only. This allows a more fine granular control about the created logging entries.\n{@link jQuery.sap.log.Logger#getLevel} allows to retrieve the currently effective log level for a given\ncomponent.\n\n{@link jQuery.sap.log.getLogEntries} returns an array of the currently collected log entries.\n\nFurthermore, a listener can be registered to the log. It will be notified whenever a new entry\nis added to the log. The listener can be used for displaying log entries in a separate page area,\nor for sending it to some external target (server).",
			"methods": [
				{
					"name": "addLogListener",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log",
						"description": "The global logger"
					},
					"parameters": [
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "The new listener object that should be informed"
						}
					],
					"description": "Allows to add a new LogListener that will be notified for new log entries.\n\nThe given object must provide method <code>onLogEntry</code> and can also be informed\nabout <code>onDetachFromLog</code> and <code>onAttachToLog</code>"
				},
				{
					"name": "debug",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new debug-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "error",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new error-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "fatal",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance for method chaining"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new fatal-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "getLevel",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "int",
						"description": "The log level for the given component or the default log level"
					},
					"since": "1.1.2",
					"parameters": [
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"description": "Name of the component to retrieve the log level for"
						}
					],
					"description": "Returns the log level currently effective for the given component.\nIf no component is given or when no level has been configured for a\ngiven component, the log level for the default component of this logger is returned."
				},
				{
					"name": "getLog",
					"visibility": "public",
					"static": true,
					"description": "Retrieves the currently recorded log entries.",
					"deprecated": {
						"since": "1.1.2",
						"text": "To avoid confusion with getLogger, this method has been renamed to {@link jQuery.sap.log.getLogEntries}."
					}
				},
				{
					"name": "getLogEntries",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object[]",
						"description": "an array containing the recorded log entries"
					},
					"since": "1.1.2",
					"description": "Returns the logged entries recorded so far as an array.\n\nLog entries are plain JavaScript objects with the following properties\n<ul>\n<li>timestamp {number} point in time when the entry was created\n<li>level {int} LogLevel level of the entry\n<li>message {string} message text of the entry\n</ul>"
				},
				{
					"name": "getLogger",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "A logger for the component."
					},
					"since": "1.1.2",
					"parameters": [
						{
							"name": "sComponent",
							"type": "string",
							"optional": false,
							"description": "Component to create the logger for"
						},
						{
							"name": "iDefaultLogLevel",
							"type": "int",
							"optional": true,
							"description": "a default log level to be used for the component,\n  if no log level has been defined for it so far."
						}
					],
					"description": "Returns a {@link jQuery.sap.log.Logger} for the given component.\n\nThe method might or might not return the same logger object across multiple calls.\nWhile loggers are assumed to be light weight objects, consumers should try to\navoid redundant calls and instead keep references to already retrieved loggers.\n\nThe optional second parameter <code>iDefaultLogLevel</code> allows to specify\na default log level for the component. It is only applied when no log level has been\ndefined so far for that component (ignoring inherited log levels). If this method is\ncalled multiple times for the same component but with different log levels,\nonly the first call one might be taken into account."
				},
				{
					"name": "info",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new info-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "isLoggable",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether logging is enabled or not"
					},
					"since": "1.13.2",
					"parameters": [
						{
							"name": "iLevel",
							"type": "int",
							"optional": true,
							"defaultValue": "Level.DEBUG",
							"description": "The log level in question"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"description": "Name of the component to check the log level for"
						}
					],
					"description": "Checks whether logging is enabled for the given log level,\ndepending on the currently effective log level for the given component.\n\nIf no component is given, the default component of this logger will be taken into account."
				},
				{
					"name": "removeLogListener",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log",
						"description": "The global logger"
					},
					"parameters": [
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "The new listener object that should be removed"
						}
					],
					"description": "Allows to remove a registered LogListener."
				},
				{
					"name": "setLevel",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "This logger object to allow method chaining"
					},
					"parameters": [
						{
							"name": "iLogLevel",
							"type": "jQuery.sap.log.Level",
							"optional": false,
							"description": "The new log level"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"description": "The log component to set the log level for"
						}
					],
					"description": "Defines the maximum <code>jQuery.sap.log.Level</code> of log entries that will be recorded.\nLog entries with a higher (less important) log level will be omitted from the log.\nWhen a component name is given, the log level will be configured for that component\nonly, otherwise the log level for the default component of this logger is set.\nFor the global logger, the global default level is set.\n\n<b>Note</b>: Setting a global default log level has no impact on already defined\ncomponent log levels. They always override the global default log level."
				},
				{
					"name": "trace",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log-instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new trace-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "warning",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new warning-level entry in the log with the given message, details and calling component."
				}
			]
		},
		{
			"kind": "enum",
			"name": "jQuery.sap.log.Level",
			"basename": "Level",
			"resource": "jquery.sap.global.js",
			"module": "jquery.sap.global",
			"export": "sap.log.Level",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of the configurable log levels that a Logger should persist to the log.\n\nOnly if the current LogLevel is higher than the level {@link jQuery.sap.log.Level} of the currently added log entry,\nthen this very entry is permanently added to the log. Otherwise it is ignored.",
			"properties": [
				{
					"name": "DEBUG",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "Debug level. Use this for logging information necessary for debugging"
				},
				{
					"name": "ERROR",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "Error level. Use this for logging of erroneous but still recoverable situations"
				},
				{
					"name": "FATAL",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "Fatal level. Use this for logging unrecoverable situations"
				},
				{
					"name": "INFO",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "Info level. Use this for logging information of purely informative nature"
				},
				{
					"name": "NONE",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "Do not log anything"
				},
				{
					"name": "TRACE",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "Trace level. Use this for tracing the program flow."
				},
				{
					"name": "WARNING",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "Warning level. Use this for logging unwanted but foreseen situations"
				}
			]
		},
		{
			"kind": "class",
			"name": "jQuery.sap.log.Logger",
			"basename": "Logger",
			"resource": "jquery.sap.global.js",
			"module": "jquery.sap.global",
			"export": "sap.log.Logger",
			"static": true,
			"visibility": "public",
			"since": "1.1.2",
			"description": "A Logger class",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sDefaultComponent",
						"type": "string",
						"optional": false,
						"description": "The component to use"
					}
				],
				"description": "Creates a new Logger instance which will use the given component string\nfor all logged messages without a specific component."
			},
			"methods": [
				{
					"name": "debug",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new debug-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "error",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new error-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "fatal",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance for method chaining"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new fatal-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "getLevel",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The log level for the given component or the default log level"
					},
					"since": "1.1.2",
					"parameters": [
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"description": "Name of the component to retrieve the log level for"
						}
					],
					"description": "Returns the log level currently effective for the given component.\nIf no component is given or when no level has been configured for a\ngiven component, the log level for the default component of this logger is returned."
				},
				{
					"name": "info",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new info-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "isLoggable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Whether logging is enabled or not"
					},
					"since": "1.13.2",
					"parameters": [
						{
							"name": "iLevel",
							"type": "int",
							"optional": true,
							"defaultValue": "Level.DEBUG",
							"description": "The log level in question"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"description": "Name of the component to check the log level for"
						}
					],
					"description": "Checks whether logging is enabled for the given log level,\ndepending on the currently effective log level for the given component.\n\nIf no component is given, the default component of this logger will be taken into account."
				},
				{
					"name": "setLevel",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "This logger object to allow method chaining"
					},
					"parameters": [
						{
							"name": "iLogLevel",
							"type": "jQuery.sap.log.Level",
							"optional": false,
							"description": "The new log level"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"description": "The log component to set the log level for"
						}
					],
					"description": "Defines the maximum <code>jQuery.sap.log.Level</code> of log entries that will be recorded.\nLog entries with a higher (less important) log level will be omitted from the log.\nWhen a component name is given, the log level will be configured for that component\nonly, otherwise the log level for the default component of this logger is set.\nFor the global logger, the global default level is set.\n\n<b>Note</b>: Setting a global default log level has no impact on already defined\ncomponent log levels. They always override the global default log level."
				},
				{
					"name": "trace",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log-instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new trace-level entry in the log with the given message, details and calling component."
				},
				{
					"name": "warning",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.log.Logger",
						"description": "The log instance"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message text to display"
						},
						{
							"name": "sDetails",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Details about the message, might be omitted"
						},
						{
							"name": "sComponent",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Name of the component that produced the log entry"
						},
						{
							"name": "fnSupportInfo",
							"type": "function",
							"optional": true,
							"description": "Callback that returns an additional support object to be logged in support mode.\n  This function is only called if support info mode is turned on with <code>logSupportInfo(true)</code>.\n  To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple\n  immutable JSON object with mostly static and stable content."
						}
					],
					"description": "Creates a new warning-level entry in the log with the given message, details and calling component."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.sap.log.LogLevel",
			"basename": "LogLevel",
			"resource": "jquery.sap.global.js",
			"module": "jquery.sap.global",
			"export": "sap.log.LogLevel",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of levels that can be used in a call to {@link jQuery.sap.log.Logger#setLevel}(iLevel, sComponent).",
			"deprecated": {
				"since": "1.1.2",
				"text": "To streamline the Logging API a bit, the separation between Level and LogLevel has been given up.\nUse the (enriched) enumeration {@link jQuery.sap.log.Level} instead."
			}
		},
		{
			"kind": "namespace",
			"name": "jQuery.sap.measure",
			"basename": "measure",
			"resource": "jquery.sap.global.js",
			"module": "jquery.sap.global",
			"export": "sap.measure",
			"static": true,
			"visibility": "public",
			"description": "Namespace for the jQuery performance measurement plug-in provided by SAP SE.",
			"methods": [
				{
					"name": "add",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "[] current measurement containing id, info and start-timestamp, end-timestamp, time, duration, categories (false if error)"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "ID of the measurement"
						},
						{
							"name": "sInfo",
							"type": "string",
							"optional": false,
							"description": "Info for the measurement"
						},
						{
							"name": "iStart",
							"type": "int",
							"optional": false,
							"description": "start timestamp"
						},
						{
							"name": "iEnd",
							"type": "int",
							"optional": false,
							"description": "end timestamp"
						},
						{
							"name": "iTime",
							"type": "int",
							"optional": false,
							"description": "time in milliseconds"
						},
						{
							"name": "iDuration",
							"type": "int",
							"optional": false,
							"description": "effective time in milliseconds"
						},
						{
							"name": "aCategories",
							"type": "string|string[]",
							"optional": true,
							"defaultValue": "\"javascript\"",
							"description": "An optional list of categories for the measure"
						}
					],
					"description": "Adds a performance measurement with all data\nThis is usefull to add external measurements (e.g. from a backend) to the common measurement UI"
				},
				{
					"name": "average",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "current measurement containing id, info and start-timestamp (false if error)"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "ID of the measurement"
						},
						{
							"name": "sInfo",
							"type": "string",
							"optional": false,
							"description": "Info for the measurement"
						},
						{
							"name": "aCategories",
							"type": "string|string[]",
							"optional": true,
							"defaultValue": "\"javascript\"",
							"description": "An optional list of categories for the measure"
						}
					],
					"description": "Starts an average performance measure.\nThe duration of this measure is an avarage of durations measured for each call.\nOptionally a category or list of categories can be passed to allow filtering of measurements."
				},
				{
					"name": "clear",
					"visibility": "public",
					"description": "Clears all performance measurements"
				},
				{
					"name": "clearInteractionMeasurements",
					"visibility": "public",
					"since": "1.34.0",
					"description": "Clears all interaction measurements"
				},
				{
					"name": "clearRequestTimings",
					"visibility": "public",
					"since": "1.34.0",
					"description": "Clears all request timings safely"
				},
				{
					"name": "end",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "current measurement containing id, info and start-timestamp, end-timestamp, time, duration (false if error)"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "ID of the measurement"
						}
					],
					"description": "Ends a performance measure"
				},
				{
					"name": "endInteraction",
					"visibility": "public",
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bForce",
							"type": "boolean",
							"optional": false,
							"description": "forces end of interaction now and ignores further re-renderings"
						}
					],
					"description": "End an interaction measurements"
				},
				{
					"name": "filterInteractionMeasurements",
					"visibility": "public",
					"returnValue": {
						"type": "object[]",
						"description": "all interaction measurements passing the filter function successfully"
					},
					"since": "1.36.2",
					"parameters": [
						{
							"name": "fnFilter",
							"type": "function",
							"optional": false,
							"description": "a filter function that returns true if the passed measurement should be added to the result"
						}
					],
					"description": "Gets all interaction measurements for which a provided filter function returns a truthy value.\nTo filter for certain categories of measurements a fnFilter can be implemented like this\n<code>\nfunction(oInteractionMeasurement) {\n    return oInteractionMeasurement.duration > 0\n}</code>"
				},
				{
					"name": "filterMeasurements",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "[] filtered array with measurements containing id, info and start-timestamp, end-timestamp, time, duration, categories (false if error)"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "fnFilter",
							"type": "function",
							"optional": true,
							"description": "a filter function that returns true if the passed measurement should be added to the result"
						},
						{
							"name": "bCompleted",
							"type": "boolean|undefined",
							"optional": true,
							"description": "Optional parameter to determine if either completed or incomplete measurements should be returned (both if not set or undefined)"
						},
						{
							"name": "aCategories",
							"type": "string[]",
							"optional": true,
							"description": "The function returns only measurements which match these specified categories"
						}
					],
					"description": "Gets all performance measurements where a provided filter function returns a truthy value.\nIf neither a filter function nor a category is provided an empty array is returned.\nTo filter for certain properties of measurements a fnFilter can be implemented like this\n<code>\nfunction(oMeasurement) {\n    return oMeasurement.duration > 50;\n}</code>"
				},
				{
					"name": "getActive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "current state of the perfomance measurement functionality"
					},
					"description": "Gets the current state of the perfomance measurement functionality"
				},
				{
					"name": "getAllInteractionMeasurements",
					"visibility": "public",
					"returnValue": {
						"type": "object[]",
						"description": "all interaction measurements"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "bFinalize",
							"type": "boolean",
							"optional": false,
							"description": "finalize the current pending interaction so that it is contained in the returned array"
						}
					],
					"description": "Gets all interaction measurements"
				},
				{
					"name": "getAllMeasurements",
					"visibility": "public",
					"returnValue": {
						"type": "object[]",
						"description": "current array with measurements containing id, info and start-timestamp, end-timestamp, time, duration, categories"
					},
					"parameters": [
						{
							"name": "bCompleted",
							"type": "boolean",
							"optional": true,
							"description": "Whether only completed measurements should be returned, if explicitly set to false only incomplete measurements are returned"
						}
					],
					"description": "Gets all performance measurements"
				},
				{
					"name": "getMeasurement",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "current measurement containing id, info and start-timestamp, end-timestamp, time, duration (false if error)"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "ID of the measurement"
						}
					],
					"description": "Gets a performance measure"
				},
				{
					"name": "getRequestTimings",
					"visibility": "public",
					"returnValue": {
						"type": "object[]",
						"description": "array of performance timing objects"
					},
					"since": "1.34.0",
					"description": "Gets the current request timings array for type 'resource' safely"
				},
				{
					"name": "pause",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "current measurement containing id, info and start-timestamp, pause-timestamp (false if error)"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "ID of the measurement"
						}
					],
					"description": "Pauses a performance measure"
				},
				{
					"name": "registerMethod",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the registration was successful"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "the id of the measurement"
						},
						{
							"name": "oObject",
							"type": "object",
							"optional": false,
							"description": "the object of the method"
						},
						{
							"name": "sMethod",
							"type": "string",
							"optional": false,
							"description": "the name of the method"
						},
						{
							"name": "aCategories",
							"type": "string[]",
							"optional": true,
							"defaultValue": "[\"javascript\"]",
							"description": "An optional categories list for the measurement"
						}
					],
					"description": "Registers an average measurement for a given objects method"
				},
				{
					"name": "remove",
					"visibility": "public",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "ID of the measurement"
						}
					],
					"description": "Removes a performance measure"
				},
				{
					"name": "resume",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "current measurement containing id, info and start-timestamp, resume-timestamp (false if error)"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "ID of the measurement"
						}
					],
					"description": "Resumes a performance measure"
				},
				{
					"name": "setActive",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "current state of the perfomance measurement functionality"
					},
					"parameters": [
						{
							"name": "bOn",
							"type": "boolean",
							"optional": false,
							"description": "state of the perfomance measurement functionality to set"
						},
						{
							"name": "An",
							"type": "string|string[]",
							"optional": false,
							"description": "optional list of categories that should be measured"
						}
					],
					"description": "Activates or deactivates the performance measure functionality\nOptionally a category or list of categories can be passed to restrict measurements to certain categories\nlike \"javascript\", \"require\", \"xmlhttprequest\", \"render\""
				},
				{
					"name": "setRequestBufferSize",
					"visibility": "public",
					"since": "1.34.0",
					"parameters": [
						{
							"name": "iSize",
							"type": "int",
							"optional": false,
							"description": "size of the buffer"
						}
					],
					"description": "Sets the request buffer size for the measurement safely"
				},
				{
					"name": "start",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "current measurement containing id, info and start-timestamp (false if error)"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "ID of the measurement"
						},
						{
							"name": "sInfo",
							"type": "string",
							"optional": false,
							"description": "Info for the measurement"
						},
						{
							"name": "aCategories",
							"type": "string|string[]",
							"optional": true,
							"defaultValue": "\"javascript\"",
							"description": "An optional list of categories for the measure"
						}
					],
					"description": "Starts a performance measure.\nOptionally a category or list of categories can be passed to allow filtering of measurements."
				},
				{
					"name": "startInteraction",
					"visibility": "public",
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "type of the event which triggered the interaction"
						},
						{
							"name": "oSrcElement",
							"type": "object",
							"optional": false,
							"description": "the control on which the interaction was triggered"
						}
					],
					"description": "Start an interaction measurements"
				},
				{
					"name": "unregisterAllMethods",
					"visibility": "public",
					"since": "1.34.0",
					"description": "Unregisters all average measurements"
				},
				{
					"name": "unregisterMethod",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the unregistration was successful"
					},
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "the id of the measurement"
						},
						{
							"name": "oObject",
							"type": "object",
							"optional": false,
							"description": "the object of the method"
						},
						{
							"name": "sMethod",
							"type": "string",
							"optional": false,
							"description": "the name of the method"
						}
					],
					"description": "Unregisters an average measurement for a given objects method"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.sap.PseudoEvents",
			"basename": "PseudoEvents",
			"resource": "jquery.sap.events.js",
			"module": "jquery.sap.events",
			"export": "sap.PseudoEvents",
			"static": true,
			"visibility": "public",
			"description": "Enumeration of all so called \"pseudo events\", a useful classification\nof standard browser events as implied by SAP product standards.\n\nWhenever a browser event is recognized as one or more pseudo events, then this\nclassification is attached to the original {@link jQuery.Event} object and thereby\ndelivered to any jQuery-style listeners registered for that browser event.\n\nPure JavaScript listeners can evaluate the classification information using\nthe {@link jQuery.Event#isPseudoType} method.\n\nInstead of using the procedure as described above, the SAPUI5 controls and elements\nshould simply implement an <code>on<i>pseudo-event</i>(oEvent)</code> method. It will\nbe invoked only when that specific pseudo event has been recognized. This simplifies event\ndispatching even further.",
			"properties": [
				{
					"name": "sapbackspace",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard backspace without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapbackspacemodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard backspace with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapbottom",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo bottom event"
				},
				{
					"name": "sapcollapse",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo collapse event (keyboard numpad -) without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapcollapseall",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo collapse event (keyboard numpad *)"
				},
				{
					"name": "sapcollapsemodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo collapse event (keyboard numpad -) with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapdecrease",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'decrease' event without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapdecreasemodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'decrease' event with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapdelayeddoubleclick",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event indicating delayed double click (e.g. for inline edit)"
				},
				{
					"name": "sapdelete",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard delete without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapdeletemodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard delete with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapdown",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard arrow down without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapdownmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard arrow down with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapend",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard End without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapendmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard End with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapenter",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard enter without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapentermodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard enter with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapescape",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard escape"
				},
				{
					"name": "sapexpand",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo expand event (keyboard numpad +) without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapexpandmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo expand event (keyboard numpad +) with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "saphide",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'hide' event (Alt + up-Arrow)"
				},
				{
					"name": "saphome",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard Home/Pos1 with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "saphomemodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard Home/Pos1 without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapincrease",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'increase' event without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapincreasemodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'increase' event with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapleft",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard arrow left without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapleftmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard arrow left with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapminus",
					"visibility": "public",
					"static": true,
					"since": "1.25.0",
					"type": "undefined",
					"description": "Pseudo event for pressing the '-' (minus) sign."
				},
				{
					"name": "sapnext",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'next' event without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapnextmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'next' event with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sappagedown",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard page down without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sappagedownmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard page down with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sappageup",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard page up without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sappageupmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard page up with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapplus",
					"visibility": "public",
					"static": true,
					"since": "1.25.0",
					"type": "undefined",
					"description": "Pseudo event for pressing the '+' (plus) sign."
				},
				{
					"name": "sapprevious",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'previous' event without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sappreviousmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'previous' event with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapright",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard arrow right without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "saprightmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard arrow right with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapselect",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'select' event... space, enter, ... without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapselectmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'select' event... space, enter, ... with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapshow",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo 'show' event (F4, Alt + down-Arrow)"
				},
				{
					"name": "sapskipback",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo skip back (F6 + shift modifier)"
				},
				{
					"name": "sapskipforward",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for pseudo skip forward (F6 + no modifier)"
				},
				{
					"name": "sapspace",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard space without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapspacemodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard space with modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "saptabnext",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard tab (TAB + no modifier)"
				},
				{
					"name": "saptabprevious",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard tab (TAB + shift modifier)"
				},
				{
					"name": "saptop",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for  pseudo top event"
				},
				{
					"name": "sapup",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard arrow up without modifiers (Ctrl, Alt or Shift)"
				},
				{
					"name": "sapupmodifiers",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pseudo event for keyboard arrow up with modifiers (Ctrl, Alt or Shift)"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.sap.storage",
			"basename": "storage",
			"resource": "jquery.sap.storage.js",
			"module": "jquery.sap.storage",
			"export": "sap.storage",
			"static": true,
			"visibility": "public",
			"since": "0.11.0",
			"description": "Returns a {@link jQuery.sap.storage.Storage Storage} object for a given HTML5 storage (type) and,\nas a convenience, provides static functions to access the default (session) storage.\n\nWhen called as a function, it returns an instance of {@link jQuery.sap.storage.Storage}, providing access\nto the storage of the given {@link jQuery.sap.storage.Type} or to the given HTML5 Storage object.\n\nThe default session storage can be easily accessed with methods {@link jQuery.sap.storage.get},\n{@link jQuery.sap.storage.put}, {@link jQuery.sap.storage.remove}, {@link jQuery.sap.storage.clear},\n{@link jQuery.sap.storage.getType} and {@link jQuery.sap.storage.removeAll}",
			"methods": [
				{
					"name": "clear",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "true if execution of removal\nwas successful or the data to remove doesn't exist,\nand false if the feature is unavailable or a problem occurred"
					},
					"description": "Deletes all the entries saved in the session (Independent of the current Storage instance!).\n\nCAUTION: This method should be called only in very particular situations,\nwhen a global erasing of data is required. Given that the method deletes\nthe data saved under any ID, it should not be called when managing data\nfor specific controls."
				},
				{
					"name": "get",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the string from the storage, if the retrieval\nwas successful, and null otherwise"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Id for the state to retrieve"
						}
					],
					"description": "Retrieves the state string stored in the session under the key\nsStorageKeyPrefix + sId.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)"
				},
				{
					"name": "getType",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.sap.storage.Type|string",
						"description": "the type of the storage or \"unknown\""
					},
					"description": "Returns the type of the storage."
				},
				{
					"name": "isSupported",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "true if storage is supported, false otherwise (e.g. due to browser security settings)"
					},
					"description": "Returns whether the given storage is suppported."
				},
				{
					"name": "put",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "true if the data were successfully stored, false otherwise"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Id for the state to store"
						},
						{
							"name": "sStateToStore",
							"type": "string",
							"optional": false,
							"description": "content to store"
						}
					],
					"description": "Stores the passed state string in the session, under the key\nsStorageKeyPrefix + sId.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)"
				},
				{
					"name": "remove",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "true if the deletion\nwas successful or the data doesn't exist under the specified key,\nand false if the feature is unavailable or a problem occurred"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Id for the state to delete"
						}
					],
					"description": "Deletes the state string stored in the session under the key\nsStorageKeyPrefix + sId.s\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)"
				},
				{
					"name": "removeAll",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "true if the deletion\nwas successful or the data doesn't exist under the specified key,\nand false if the feature is unavailable or a problem occurred"
					},
					"since": "1.13.0",
					"parameters": [
						{
							"name": "sIdPrefix",
							"type": "string",
							"optional": false,
							"description": "Id prefix for the states to delete"
						}
					],
					"description": "Deletes all state strings stored in the session under the key prefix\nsStorageKeyPrefix + sIdPrefix.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)"
				}
			]
		},
		{
			"kind": "interface",
			"name": "jQuery.sap.storage.Storage",
			"basename": "Storage",
			"resource": "jquery.sap.storage.js",
			"module": "jquery.sap.storage",
			"export": "sap.storage.Storage",
			"static": true,
			"visibility": "public",
			"since": "0.11.0",
			"description": "A Storage API for JavaScript.\n\nProvides methods to store data on the client using Web Storage API support by the browser. The data\nreceived by this API must be already serialized, in string format. Similarly, the API returns the retrieved\ndata in serialized string format, so it is the responsibility of the caller to de-serialize it, if applicable.\n\nAttention: The Web Storage API stores the data on the client. Therefore do not use this API for confidential information.\n\nOne can get access to the 'default' storage by using {@link jQuery.sap.storage} directly\nor alternatively via factory functionality available as <code>jQuery.sap.storage(jQuery.sap.storage.Type.session)</code>\nreturning an object implementing this interface.\n\nA typical intended usage of this API is the storage of a string representing the state of a control.\nIn such usage, the data is stored in the browser session, and\nthe methods to be used are {@link #put} and {@link #get}.\nThe method {@link #remove} can be used to delete the previously saved state.\n\nIn sake of completeness, the method {@link #clear} is available.\nHowever, it should be called only in very particular situations,\nwhen a global erasing of data is required. If only keys with certain prefix\nshould be deleted the method {@link #removeAll} should be used.",
			"methods": [
				{
					"name": "clear",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if execution of removal\nwas successful or the data to remove doesn't exist,\nand false if the feature is unavailable or a problem occurred"
					},
					"description": "Deletes all the entries saved in the session (Independent of the current Storage instance!).\n\nCAUTION: This method should be called only in very particular situations,\nwhen a global erasing of data is required. Given that the method deletes\nthe data saved under any ID, it should not be called when managing data\nfor specific controls."
				},
				{
					"name": "get",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the string from the storage, if the retrieval\nwas successful, and null otherwise"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Id for the state to retrieve"
						}
					],
					"description": "Retrieves the state string stored in the session under the key\nsStorageKeyPrefix + sId.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)"
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.storage.Type|string",
						"description": "the type of the storage or \"unknown\""
					},
					"description": "Returns the type of the storage."
				},
				{
					"name": "isSupported",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if storage is supported, false otherwise (e.g. due to browser security settings)"
					},
					"description": "Returns whether the given storage is suppported."
				},
				{
					"name": "put",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the data were successfully stored, false otherwise"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Id for the state to store"
						},
						{
							"name": "sStateToStore",
							"type": "string",
							"optional": false,
							"description": "content to store"
						}
					],
					"description": "Stores the passed state string in the session, under the key\nsStorageKeyPrefix + sId.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)"
				},
				{
					"name": "remove",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the deletion\nwas successful or the data doesn't exist under the specified key,\nand false if the feature is unavailable or a problem occurred"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Id for the state to delete"
						}
					],
					"description": "Deletes the state string stored in the session under the key\nsStorageKeyPrefix + sId.s\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)"
				},
				{
					"name": "removeAll",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the deletion\nwas successful or the data doesn't exist under the specified key,\nand false if the feature is unavailable or a problem occurred"
					},
					"since": "1.13.0",
					"parameters": [
						{
							"name": "sIdPrefix",
							"type": "string",
							"optional": false,
							"description": "Id prefix for the states to delete"
						}
					],
					"description": "Deletes all state strings stored in the session under the key prefix\nsStorageKeyPrefix + sIdPrefix.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)"
				}
			]
		},
		{
			"kind": "enum",
			"name": "jQuery.sap.storage.Type",
			"basename": "Type",
			"resource": "jquery.sap.storage.js",
			"module": "jquery.sap.storage",
			"export": "sap.storage.Type",
			"static": true,
			"visibility": "public",
			"since": "0.11.0",
			"description": "Enumeration of the storage types supported by {@link jQuery.sap.storage.Storage}",
			"properties": [
				{
					"name": "global",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Indicates usage of the browser's globalStorage feature"
				},
				{
					"name": "local",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Indicates usage of the browser's localStorage feature"
				},
				{
					"name": "session",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Indicates usage of the browser's sessionStorage feature"
				}
			]
		},
		{
			"kind": "interface",
			"name": "jQuery.sap.util.Properties",
			"basename": "Properties",
			"resource": "jquery.sap.properties.js",
			"module": "jquery.sap.properties",
			"export": "sap.util.Properties",
			"static": true,
			"visibility": "public",
			"since": "0.9.0",
			"description": "Represents a collection of string properties (key/value pairs).\n\nEach key and its corresponding value in the collection is a string, keys are case-sensitive.\n\nUse {@link jQuery.sap.properties} to create an instance of <code>jQuery.sap.util.Properties</code>.\n\nThe {@link #getProperty} method can be used to retrieve a value from the collection,\n{@link #setProperty} to store or change a value for a key and {@link #getKeys}\ncan be used to retrieve an array of all keys that are currently stored in the collection.",
			"methods": [
				{
					"name": "clone",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.util.Properties",
						"description": "A clone of the property collection"
					},
					"description": "Creates and returns a clone of the property collection."
				},
				{
					"name": "getKeys",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "All keys in the property collection"
					},
					"description": "Returns an array of all keys in the property collection."
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value for the given key or the default value or <code>null</code>\n   if no default value or a falsy default value was given"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "Key to return the value for"
						},
						{
							"name": "sDefaultValue",
							"type": "string",
							"optional": true,
							"defaultValue": null,
							"description": "Optional, a default value that will be returned\n   if the requested key is not in the collection"
						}
					],
					"description": "Returns the value for the given key or <code>null</code> if the collection has no value for the key.\n\nOptionally, a default value can be given which will be returned if the collection does not contain\na value for the key; only non-empty default values are supported."
				},
				{
					"name": "setProperty",
					"visibility": "public",
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "Key of the property"
						},
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "String value for the key"
						}
					],
					"description": "Stores or changes the value for the given key in the collection.\n\nIf the given value is not a string, the collection won't be modified.\nThe key is always cast to a string."
				}
			]
		},
		{
			"kind": "interface",
			"name": "jQuery.sap.util.ResourceBundle",
			"basename": "ResourceBundle",
			"resource": "jquery.sap.resources.js",
			"module": "jquery.sap.resources",
			"export": "sap.util.ResourceBundle",
			"static": true,
			"visibility": "public",
			"since": "0.9.0",
			"description": "Contains locale-specific texts.\n\nIf you need a locale-specific text within your application, you can use the\nresource bundle to load the locale-specific file from the server and access\nthe texts of it.\n\nUse {@link jQuery.sap.resources} to create an instance of jQuery.sap.util.ResourceBundle.\nThere you have to specify the URL to the base .properties file of a bundle\n(.properties without any locale information, e.g. \"mybundle.properties\"), and optionally\na locale. The locale is defined as a string of the language and an optional country code\nseparated by underscore (e.g. \"en_GB\" or \"fr\"). If no locale is passed, the default\nlocale is \"en\" if the SAPUI5 framework is not available. Otherwise the default locale is taken from\nthe SAPUI5 configuration.\n\nWith the getText() method of the resource bundle, a locale-specific string value\nfor a given key will be returned.\n\nWith the given locale, the ResourceBundle requests the locale-specific properties file\n(e.g. \"mybundle_fr_FR.properties\"). If no file is found for the requested locale or if the file\ndoes not contain a text for the given key, a sequence of fall back locales is tried one by one.\nFirst, if the locale contains a region information (fr_FR), then the locale without the region is\ntried (fr). If that also can't be found or doesn't contain the requested text, the English file\nis used (en - assuming that most development projects contain at least English texts).\nIf that also fails, the file without locale (base URL of the bundle) is tried.\n\nIf none of the requested files can be found or none of them contains a text for the given key,\nthen the key itself is returned as text.\n\nException: Fallback for \"zh_HK\" is \"zh_TW\" before zh.",
			"methods": [
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The value belonging to the key, if found; otherwise the key itself."
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "Key to retrieve the text for"
						},
						{
							"name": "aArgs",
							"type": "string[]",
							"optional": true,
							"description": "List of parameter values which should replace the placeholders \"{<i>n</i>}\"\n    (<i>n</i> is the index) in the found locale-specific string value. Note that the replacement is done\n    whenever <code>aArgs</code> is given, no matter whether the text contains placeholders or not\n    and no matter whether <code>aArgs</code> contains a value for <i>n</i> or not."
						}
					],
					"description": "Returns a locale-specific string value for the given key sKey.\n\nThe text is searched in this resource bundle according to the fallback chain described in\n{@link jQuery.sap.util.ResourceBundle}. If no text could be found, the key itself is used as text.\n\nIf the second parameter<code>aArgs</code> is given, then any placeholder of the form \"{<i>n</i>}\"\n(with <i>n</i> being an integer) is replaced by the corresponding value from <code>aArgs</code>\nwith index <i>n</i>.  Note: This replacement is applied to the key if no text could be found.\nFor more details on the replacement mechanism refer to {@link jQuery.sap.formatMessage}."
				},
				{
					"name": "hasText",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the text has been found in the concrete bundle"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "Key to check"
						}
					],
					"description": "Checks whether a text for the given key can be found in the first loaded\nresource bundle or not. Neither the custom resource bundles nor the\nfallback chain will be processed.\n\nThis method allows to check for the existence of a text without triggering\nrequests for the fallback locales.\n\nWhen requesting the resource bundle asynchronously this check must only be\nused after the resource bundle has been loaded."
				}
			]
		},
		{
			"kind": "interface",
			"name": "jQuery.sap.util.UriParameters",
			"basename": "UriParameters",
			"resource": "jquery.sap.script.js",
			"module": "jquery.sap.script",
			"export": "sap.util.UriParameters",
			"static": true,
			"visibility": "public",
			"since": "0.9.0",
			"description": "Encapsulates all URI parameters of the current windows location (URL).\n\nUse {@link jQuery.sap.getUriParameters} to create an instance of jQuery.sap.util.UriParameters."
		},
		{
			"kind": "class",
			"name": "jQuery.sap.Version",
			"basename": "Version",
			"resource": "jquery.sap.global.js",
			"module": "jquery.sap.global",
			"export": "sap.Version",
			"static": true,
			"visibility": "public",
			"since": "1.15.0",
			"description": "Represents a version consisting of major, minor, patch version and suffix, e.g. '1.2.7-SNAPSHOT'.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "vMajor",
						"type": "int|string|any[]|jQuery.sap.Version",
						"optional": false,
						"description": "the major part of the version (int) or any of the single\n       parameter variants explained above."
					},
					{
						"name": "iMinor",
						"type": "int",
						"optional": false,
						"description": "the minor part of the version number"
					},
					{
						"name": "iPatch",
						"type": "int",
						"optional": false,
						"description": "the patch part of the version number"
					},
					{
						"name": "sSuffix",
						"type": "string",
						"optional": false,
						"description": "the suffix part of the version number"
					}
				],
				"description": "Returns a Version instance created from the given parameters.\n\nThis function can either be called as a constructor (using <code>new</code>) or as a normal function.\nIt always returns an immutable Version instance.\n\nThe parts of the version number (major, minor, patch, suffix) can be provided in several ways:\n<ul>\n<li>Version(\"1.2.3-SNAPSHOT\")    - as a dot-separated string. Any non-numerical char or a dot followed\n                                   by a non-numerical char starts the suffix portion. Any missing major,\n                                   minor or patch versions will be set to 0.</li>\n<li>Version(1,2,3,\"-SNAPSHOT\")   - as individual parameters. Major, minor and patch must be integer numbers\n                                   or empty, suffix must be a string not starting with digits.</li>\n<li>Version([1,2,3,\"-SNAPSHOT\"]) - as an array with the individual parts. The same type restrictions apply\n                                   as before.</li>\n<li>Version(otherVersion)        - as a Version instance (cast operation). Returns the given instance instead\n                                   of creating a new one.</li>\n</ul>\n\nTo keep the code size small, this implementation mainly validates the single string variant.\nAll other variants are only validated to some degree. It is the responsibility of the caller to\nprovide proper parts."
			},
			"methods": [
				{
					"name": "compareTo",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "0, if the given version is equal to this version, a negative value if the given other version is greater\n              and a positive value otherwise"
					},
					"since": "1.15.0",
					"description": "Compares this version with a given one.\n\nThe version with which this version should be compared can be given as a <code>jQuery.sap.Version</code> instance,\nas a string (e.g. <code>v.compareto(\"1.4.5\")</code>). Or major, minor, patch and suffix values can be given as\nseparate parameters (e.g. <code>v.compareTo(1, 4, 5)</code>) or in an array (e.g. <code>v.compareTo([1, 4, 5])</code>)."
				},
				{
					"name": "getMajor",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the major version part of this version"
					},
					"since": "1.15.0",
					"description": "Returns the major version part of this version."
				},
				{
					"name": "getMinor",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the minor version part of this version"
					},
					"since": "1.15.0",
					"description": "Returns the minor version part of this version."
				},
				{
					"name": "getPatch",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the patch version part of this version"
					},
					"since": "1.15.0",
					"description": "Returns the patch (or micro) version part of this version."
				},
				{
					"name": "getSuffix",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the version suffix of this version"
					},
					"since": "1.15.0",
					"description": "Returns the version suffix of this version."
				},
				{
					"name": "inRange",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if this version is greater or equal to <code>vMin</code> and smaller\n                  than <code>vMax</code>, <code>false</code> otherwise."
					},
					"since": "1.15.0",
					"parameters": [
						{
							"name": "vMin",
							"type": "string|any[]|jQuery.sap.Version",
							"optional": false,
							"description": "the start of the range (inclusive)"
						},
						{
							"name": "vMax",
							"type": "string|any[]|jQuery.sap.Version",
							"optional": false,
							"description": "the end of the range (exclusive)"
						}
					],
					"description": "Checks whether this version is in the range of the given interval (start inclusive, end exclusive).\n\nThe boundaries against which this version should be checked can be given as  <code>jQuery.sap.Version</code>\ninstances (e.g. <code>v.inRange(v1, v2)</code>), as strings (e.g. <code>v.inRange(\"1.4\", \"2.7\")</code>)\nor as arrays (e.g. <code>v.inRange([1,4], [2,7])</code>)."
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "a string representation of this version."
					},
					"since": "1.15.0",
					"description": "Returns a string representation of this version."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "jQuery.support",
			"basename": "support",
			"resource": "jquery.sap.global.js",
			"module": "jquery.sap.global",
			"export": "support",
			"static": true,
			"visibility": "public",
			"since": "1.12",
			"description": "Holds information about the browser's capabilities and quirks.\nThis object is provided and documented by jQuery.\nBut it is extended by SAPUI5 with detection for features not covered by jQuery. This documentation ONLY covers the detection properties added by UI5.\nFor the standard detection properties, please refer to the jQuery documentation.\n\nThese properties added by UI5 are only available temporarily until jQuery adds feature detection on their own.",
			"properties": [
				{
					"name": "cssAnimations",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current browser supports (named) CSS animations"
				},
				{
					"name": "cssGradients",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current browser supports CSS gradients. Note that ANY support for CSS gradients leads to \"true\" here, no matter what the syntax is."
				},
				{
					"name": "cssTransforms",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current browser supports (2D) CSS transforms"
				},
				{
					"name": "cssTransforms3d",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current browser supports 3D CSS transforms"
				},
				{
					"name": "cssTransitions",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current browser supports CSS transitions"
				},
				{
					"name": "flexBoxLayout",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current browser supports the OLD CSS3 Flexible Box Layout directly or via vendor prefixes"
				},
				{
					"name": "flexBoxPrefixed",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current browser supports only prefixed flexible layout properties"
				},
				{
					"name": "hasFlexBoxSupport",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current browser supports any kind of Flexible Box Layout directly or via vendor prefixes"
				},
				{
					"name": "ie10FlexBoxLayout",
					"visibility": "public",
					"static": true,
					"since": "1.12.0",
					"type": "boolean",
					"description": "Whether the current browser supports the IE10 CSS3 Flexible Box Layout directly or via vendor prefixes"
				},
				{
					"name": "newFlexBoxLayout",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "Whether the current browser supports the NEW CSS3 Flexible Box Layout directly or via vendor prefixes"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap",
			"basename": "sap",
			"resource": "sap/ui/Global.js",
			"module": "sap/ui/Global",
			"visibility": "public",
			"description": "Root namespace for JavaScript functionality provided by SAP SE.\n\nThe <code>sap</code> namespace is automatically registered with the\nOpenAjax hub if it exists."
		},
		{
			"kind": "namespace",
			"name": "sap.ui",
			"basename": "ui",
			"resource": "sap/ui/Global.js",
			"module": "sap/ui/Global",
			"static": true,
			"visibility": "public",
			"description": "The <code>sap.ui</code> namespace is the central OpenAjax compliant entry\npoint for UI related JavaScript functionality provided by SAP.",
			"methods": [
				{
					"name": "component",
					"module": "sap/ui/core/Component",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Component|Promise",
						"description": "the Component instance or a Promise in case of asynchronous loading"
					},
					"since": "1.15.0",
					"parameters": [
						{
							"name": "vConfig",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"name": {
									"name": "name",
									"type": "string",
									"optional": false,
									"description": "Name of the Component to load"
								},
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "Alternate location from where to load the Component. If a <code>manifestUrl</code> is given, this URL specifies the location of the final component defined via that manifest, otherwise it specifies the location of the component defined via its name <code>vConfig.name>/code>."
								},
								"componentData": {
									"name": "componentData",
									"type": "object",
									"optional": true,
									"description": "Initial data of the Component (@see sap.ui.core.Component#getComponentData)"
								},
								"id": {
									"name": "id",
									"type": "string",
									"optional": true,
									"description": "sId of the new Component"
								},
								"settings": {
									"name": "settings",
									"type": "object",
									"optional": true,
									"description": "Settings of the new Component"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "Indicates whether the Component creation should be done asynchronously (experimental setting)"
								},
								"asyncHints": {
									"name": "asyncHints",
									"type": "object",
									"optional": true,
									"parameterProperties": {
										"libs": {
											"name": "libs",
											"type": "string[]",
											"optional": true,
											"description": "Libraries that should be (pre-)loaded before the Component (experimental setting)"
										},
										"components": {
											"name": "components",
											"type": "string[]",
											"optional": true,
											"description": "Components that should be (pre-)loaded before the Component (experimental setting)"
										},
										"waitFor": {
											"name": "waitFor",
											"type": "Promise|Promise[]",
											"optional": true,
											"description": "@since 1.37.0 a <code>Promise</code> or and array of <code>Promise</code>s for which the Component instantiation should wait (experimental setting)"
										}
									},
									"description": "Hints for the asynchronous loading (experimental setting)"
								},
								"manifestUrl": {
									"name": "manifestUrl",
									"type": "string",
									"optional": true,
									"description": "@since 1.33.0 Determines whether the component should be loaded and defined\n                                      via the <code>manifest.json</code>"
								},
								"manifestFirst": {
									"name": "manifestFirst",
									"type": "string",
									"optional": true,
									"description": "@since 1.33.0 defines whether the manifest is loaded before or after the\n                                        Component controller. Defaults to <code>sap.ui.getCore().getConfiguration().getManifestFirst()</code>"
								},
								"handleValidation": {
									"name": "handleValidation",
									"type": "string",
									"optional": true,
									"defaultValue": false,
									"description": "If set to <code>TRUE</code> validation of the component is handled by the <code>MessageManager</code>"
								}
							},
							"description": "ID of an existing Component or the configuration object to create the Component"
						}
					],
					"description": "Creates a new instance of a <code>Component</code> or returns the instance\nof an existing <code>Component</code>.\n\nIf you want to look up an existing <code>Component</code> you can call\nthis function with a Component ID as parameter:\n<pre>\n  var oComponent = sap.ui.component(sComponentId);\n</pre>\n\nTo create a new instance of a component you pass a component configuration\nobject into this function:\n<pre>\n  var oComponent = sap.ui.component({\n    name: \"my.Component\",\n    url: \"my/component/location\",\n    id: \"myCompId1\"\n  });\n</pre>",
					"experimental": {
						"since": "1.27.0",
						"text": "Support for asynchronous loading and the corresponding hints is still experimental\n  and might be modified or removed completely again. It must not be used in productive code, except in code\n  delivered by the UI5 teams. The synchronous usage of the API is not experimental and can be used without\n  restrictions."
					},
					"resource": "sap/ui/core/Component.js"
				},
				{
					"name": "controller",
					"module": "sap/ui/core/mvc/Controller",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "void|sap.ui.core.mvc.Controller",
						"description": "void or the new controller instance, depending on the use case"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The controller name"
						},
						{
							"name": "oControllerImpl",
							"type": "object",
							"optional": true,
							"description": "An object literal defining the methods and properties of the controller"
						}
					],
					"description": "Defines a controller class or creates an instance of an already defined controller class.\n\nWhen a name and a controller implementation object is given, a new controller class\nof the given name is created. The members of the implementation object will be copied\ninto each new instance of that controller class (shallow copy).\n<b>Note</b>: as the members are shallow copied, controller instances will share all object values.\nThis might or might not be what applications expect.\n\nIf only a name is given, a new instance of the named controller class is returned.",
					"resource": "sap/ui/core/mvc/Controller.js"
				},
				{
					"name": "define",
					"module": "jquery.sap.global",
					"visibility": "public",
					"static": true,
					"since": "1.27.0",
					"parameters": [
						{
							"name": "sModuleName",
							"type": "string",
							"optional": true,
							"description": "name of the module in simplified resource name syntax.\n       When omitted, the loader determines the name from the request."
						},
						{
							"name": "aDependencies",
							"type": "string[]",
							"optional": true,
							"description": "list of dependencies of the module"
						},
						{
							"name": "vFactory",
							"type": "function|any",
							"optional": false,
							"description": "the module value or a function that calculates the value"
						},
						{
							"name": "bExport",
							"type": "boolean",
							"optional": true,
							"description": "whether an export to global names is required - should be used by SAP-owned code only"
						}
					],
					"description": "Defines a Javascript module with its name, its dependencies and a module value or factory.\n\nThe typical and only suggested usage of this method is to have one single, top level call to\n<code>sap.ui.define</code> in one Javascript resource (file). When a module is requested by its\nname for the first time, the corresponding resource is determined from the name and the current\n{@link jQuery.sap.registerResourcePath configuration}. The resource will be loaded and executed\nwhich in turn will execute the top level <code>sap.ui.define</code> call.\n\nIf the module name was omitted from that call, it will be substituted by the name that was used to\nrequest the module. As a preparation step, the dependencies as well as their transitive dependencies,\nwill be loaded. Then, the module value will be determined: if a static value (object, literal) was\ngiven as <code>vFactory</code>, that value will be the module value. If a function was given, that\nfunction will be called (providing the module values of the declared dependencies as parameters\nto the function) and its return value will be used as module value. The framework internally associates\nthe resulting value with the module name and provides it to the original requester of the module.\nWhenever the module is requested again, the same value will be returned (modules are executed only once).\n\n<i>Example:</i><br>\nThe following example defines a module \"SomeClass\", but doesn't hard code the module name.\nIf stored in a file 'sap/mylib/SomeClass.js', it can be requested as 'sap/mylib/SomeClass'.\n<pre>\n  sap.ui.define(['./Helper', 'sap/m/Bar'], function(Helper,Bar) {\n\n    // create a new class\n    var SomeClass = function() {};\n\n    // add methods to its prototype\n    SomeClass.prototype.foo = function() {\n\n        // use a function from the dependency 'Helper' in the same package (e.g. 'sap/mylib/Helper' )\n        var mSettings = Helper.foo();\n\n        // create and return a sap.m.Bar (using its local name 'Bar')\n        return new Bar(mSettings);\n\n    }\n\n    // return the class as module value\n    return SomeClass;\n\n  });\n</pre>\n\nIn another module or in an application HTML page, the {@link sap.ui.require} API can be used\nto load the Something module and to work with it:\n\n<pre>\nsap.ui.require(['sap/mylib/Something'], function(Something) {\n\n  // instantiate a Something and call foo() on it\n  new Something().foo();\n\n});\n</pre>\n\n<b>Module Name Syntax</b><br>\n<code>sap.ui.define</code> uses a simplified variant of the {@link jQuery.sap.getResourcePath\nunified resource name} syntax for the module's own name as well as for its dependencies.\nThe only difference to that syntax is, that for <code>sap.ui.define</code> and\n<code>sap.ui.require</code>, the extension (which always would be '.js') has to be omitted.\nBoth methods always add this extension internally.\n\nAs a convenience, the name of a dependency can start with the segment './' which will be\nreplaced by the name of the package that contains the currently defined module (relative name).\n\nIt is best practice to omit the name of the defined module (first parameter) and to use\nrelative names for the dependencies whenever possible. This reduces the necessary configuration,\nsimplifies renaming of packages and allows to map them to a different namespace.\n\n\n<b>Dependency to Modules</b><br>\nIf a dependencies array is given, each entry represents the name of another module that\nthe currently defined module depends on. All dependency modules are loaded before the value\nof the currently defined module is determined. The module value of each dependency module\nwill be provided as a parameter to a factory function, the order of the parameters will match\nthe order of the modules in the dependencies array.\n\n<b>Note:</b> the order in which the dependency modules are <i>executed</i> is <b>not</b>\ndefined by the order in the dependencies array! The execution order is affected by dependencies\n<i>between</i> the dependency modules as well as by their current state (whether a module\nalready has been loaded or not). Neither module implementations nor dependents that require\na module set must make any assumption about the execution order (other than expressed by\ntheir dependencies). There is, however, one exception with regard to third party libraries,\nsee the list of limitations further down below.\n\n<b>Note:</b>a static module value (a literal provided to <code>sap.ui.define</code>) cannot\ndepend on the module values of the dependency modules. Instead, modules can use a factory function,\ncalculate the static value in that function, potentially based on the dependencies, and return\nthe result as module value. The same approach must be taken when the module value is supposed\nto be a function.\n\n\n<b>Asynchronous Contract</b><br>\n<code>sap.ui.define</code> is designed to support real Asynchronous Module Definitions (AMD)\nin future, although it internally still uses the the old synchronous module loading of UI5.\nCallers of <code>sap.ui.define</code> therefore must not rely on any synchronous behavior\nthat they might observe with the current implementation.\n\nFor example, callers of <code>sap.ui.define</code> must not use the module value immediately\nafter invoking <code>sap.ui.define</code>:\n\n<pre>\n  // COUNTER EXAMPLE HOW __NOT__ TO DO IT\n\n  // define a class Something as AMD module\n  sap.ui.define('Something', [], function() {\n    var Something = function() {};\n    return Something;\n  });\n\n  // DON'T DO THAT!\n  // accessing the class _synchronously_ after sap.ui.define was called\n  new Something();\n</pre>\n\nApplications that need to ensure synchronous module definition or synchronous loading of dependencies\n<b>MUST</b> use the old {@link jQuery.sap.declare} and {@link jQuery.sap.require} APIs.\n\n\n<b>(No) Global References</b><br>\nTo be in line with AMD best practices, modules defined with <code>sap.ui.define</code>\nshould not make any use of global variables if those variables are also available as module\nvalues. Instead, they should add dependencies to those modules and use the corresponding parameter\nof the factory function to access the module value.\n\nAs the current programming model and the documentation of UI5 heavily rely on global names,\nthere will be a transition phase where UI5 enables AMD modules and local references to module\nvalues in parallel to the old global names. The fourth parameter of <code>sap.ui.define</code>\nhas been added to support that transition phase. When this parameter is set to true, the framework\nprovides two additional functionalities\n\n<ol>\n<li>before the factory function is called, the existence of the global parent namespace for\n    the current module is ensured</li>\n<li>the module value will be automatically exported under a global name which is derived from\n    the name of the module</li>\n</ol>\n\nThe parameter lets the framework know whether any of those two operations is needed or not.\nIn future versions of UI5, a central configuration option is planned to suppress those 'exports'.\n\n\n<b>Third Party Modules</b><br>\nAlthough third party modules don't use UI5 APIs, they still can be listed as dependencies in\na <code>sap.ui.define</code> call. They will be requested and executed like UI5 modules, but their\nmodule value will be <code>undefined</code>.\n\nIf the currently defined module needs to access the module value of such a third party module,\nit can access the value via its global name (if the module supports such a usage).\n\nNote that UI5 temporarily deactivates an existing AMD loader while it executes third party modules\nknown to support AMD. This sounds contradictorily at a first glance as UI5 wants to support AMD,\nbut for now it is necessary to fully support UI5 applications that rely on global names for such modules.\n\nExample:\n<pre>\n  // module 'Something' wants to use third party library 'URI.js'\n  // It is packaged by UI5 as non-UI5-module 'sap/ui/thirdparty/URI'\n\n  sap.ui.define('Something', ['sap/ui/thirdparty/URI'], function(URIModuleValue) {\n\n    new URIModuleValue(); // fails as module value is undefined\n\n    //global URI // (optional) declare usage of global name so that static code checks don't complain\n    new URI(); // access to global name 'URI' works\n\n    ...\n  });\n</pre>\n\n\n<b>Differences to requireJS</b><br>\nThe current implementation of <code>sap.ui.define</code> differs from <code>requireJS</code>\nor other AMD loaders in several aspects:\n<ul>\n<li>the name <code>sap.ui.define</code> is different from the plain <code>define</code>.\nThis has two reasons: first, it avoids the impression that <code>sap.ui.define</code> is\nan exact implementation of an AMD loader. And second, it allows the coexistence of an AMD\nloader (requireJS) and <code>sap.ui.define</code> in one application as long as UI5 or\napplications using UI5 are not fully prepared to run with an AMD loader</li>\n<li><code>sap.ui.define</code> currently loads modules with synchronous XHR calls. This is\nbasically a tribute to the synchronous history of UI5.\n<b>BUT:</b> synchronous dependency loading and factory execution explicitly it not part of\ncontract of <code>sap.ui.define</code>. To the contrary, it is already clear and planned\nthat asynchronous loading will be implemented, at least as an alternative if not as the only\nimplementation. Also check section <b>Asynchronous Contract</b> above.<br>\nApplications that need to ensure synchronous loading of dependencies <b>MUST</b> use the old\n{@link jQuery.sap.require} API.</li>\n<li><code>sap.ui.define</code> does not support plugins to use other file types, formats or\nprotocols. It is not planned to support this in future</li>\n<li><code>sap.ui.define</code> does <b>not</b> support the 'sugar' of requireJS where CommonJS\nstyle dependency declarations using <code>sap.ui.require(\"something\")</code> are automagically\nconverted into <code>sap.ui.define</code> dependencies before executing the factory function.</li>\n</ul>\n\n\n<b>Limitations, Design Considerations</b><br>\n<ul>\n<li><b>Limitation</b>: as dependency management is not supported for Non-UI5 modules, the only way\n    to ensure proper execution order for such modules currently is to rely on the order in the\n    dependency array. Obviously, this only works as long as <code>sap.ui.define</code> uses\n    synchronous loading. It will be enhanced when asynchronous loading is implemented.</li>\n<li>it was discussed to enforce asynchronous execution of the module factory function (e.g. with a\n    timeout of 0). But this would have invalidated the current migration scenario where a\n    sync <code>jQuery.sap.require</code> call can load a <code>sap.ui.define</code>'ed module.\n    If the module definition would not execute synchronously, the synchronous contract of the\n    require call would be broken (default behavior in existing UI5 applications)</li>\n<li>a single file must not contain multiple calls to <code>sap.ui.define</code>. Multiple calls\n    currently are only supported in the so called 'preload' files that the UI5 merge tooling produces.\n    The exact details of how this works might be changed in future implementations and are not\n    yet part of the API contract</li>\n</ul>",
					"experimental": {
						"since": "1.27.0",
						"text": "not all aspects of sap.ui.define are settled yet. If the documented\n       constraints and limitations are obeyed, SAP-owned code might use it. If the fourth parameter\n       is not used and if the asynchronous contract is respected, even Non-SAP code might use it."
					},
					"resource": "jquery.sap.global.js"
				},
				{
					"name": "extensionpoint",
					"module": "sap/ui/core/ExtensionPoint",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "an array with 0..n controls created from an ExtensionPoint"
					},
					"parameters": [
						{
							"name": "oContainer",
							"type": "sap.ui.core.mvc.View|sap.ui.core.Fragment",
							"optional": false,
							"description": "The view or fragment containing the extension point"
						},
						{
							"name": "sExtName",
							"type": "string",
							"optional": false,
							"description": "The extensionName used to identify the extension point in the customizing"
						},
						{
							"name": "fnCreateDefaultContent",
							"type": "createDefaultContent",
							"optional": true,
							"description": "Optional callback function creating default content, returning an Array of controls. It is executed\n\t\t\twhen there's no customizing, if not provided, no default content will be rendered."
						},
						{
							"name": "oTargetControl",
							"type": "sap.ui.core.Control",
							"optional": true,
							"description": "Optional - use this parameter to attach the extension point to a particular aggregation"
						},
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": true,
							"description": "Optional - if provided along with oTargetControl, the extension point content is added to this particular aggregation at oTargetControl,\n\t\t\tif not given, but an oTargetControl is still present, the function will attempt to add the extension point to the default aggregation of oTargetControl.\n\t\t\tIf no oTargetControl is provided, sAggregationName will also be ignored."
						}
					],
					"description": "Creates 0..n UI5 controls from an ExtensionPoint.\nOne control if the ExtensionPoint is e.g. filled with a View, zero for ExtensionPoints without configured extension and\nn controls for multi-root Fragments as extension.\n\nIn JSViews, this function allows both JSON notation in aggregation content as well as adding an extension point to an aggregation after the target control\nhas already been instantiated. In the latter case the optional parameters oTargetControls and oTargetAggregation need to be specified.",
					"resource": "sap/ui/core/ExtensionPoint.js"
				},
				{
					"name": "fragment",
					"module": "sap/ui/core/Fragment",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Control|sap.ui.core.Control[]",
						"description": "the root Control(s) of the Fragment content"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the Fragment name"
						},
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "the Fragment type, e.g. \"XML\", \"JS\", or \"HTML\""
						},
						{
							"name": "oController",
							"type": "sap.ui.core.mvc.Controller",
							"optional": true,
							"description": "the Controller which should be used by the controls in the Fragment. Note that some Fragments may not need a Controller and other may need one - and even rely on certain methods implemented in the Controller."
						}
					],
					"description": "Instantiate a Fragment - this method loads the Fragment content, instantiates it, and returns this content.\nThe Fragment object itself is not an entity which has further significance beyond this constructor.\n\nTo instantiate an existing Fragment, call this method as:\n   sap.ui.fragment(sName, sType, [oController]);\nThe sName must correspond to an XML Fragment which can be loaded\nvia the module system (fragmentName + suffix \".fragment.[typeextension]\") and which defines the Fragment content.\nIf oController is given, the (event handler) methods referenced in the Fragment will be called on this controller.\nNote that Fragments may require a Controller to be given and certain methods to be available.\n\nThe Fragment types \"XML\", \"JS\" and \"HTML\" are available by default; additional Fragment types can be implemented\nand added using the sap.ui.core.Fragment.registerType() function.\n\n\nAdvanced usage:\nTo instantiate a Fragment and give further configuration options, call this method as:\n    sap.ui.fragment(oFragmentConfig, [oController]);\nThe oFragmentConfig object can have the following properties:\n- \"fragmentName\": the name of the Fragment, as above\n- \"fragmentContent\": the definition of the Fragment content itself. When this property is given, any given name is ignored.\n        The type of this property depends on the Fragment type, e.g. it could be a string for XML Fragments.\n- \"type\": the type of the Fragment, as above (mandatory)\n- \"id\": the ID of the Fragment (optional)\nFurther properties may be supported by future or custom Fragment types. Any given properties\nwill be forwarded to the Fragment implementation.\n\nIf you want to give a fixed ID for the Fragment, please use the advanced version of this method call with the\nconfiguration object or use the typed factories like sap.ui.xmlfragment(...) or sap.ui.jsfragment(...).\nOtherwise the Fragment ID is generated. In any case, the Fragment ID will be used as prefix for the ID of\nall contained controls.",
					"resource": "sap/ui/core/Fragment.js"
				},
				{
					"name": "getCore",
					"module": "sap/ui/core/Core",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "the API of the current SAPUI5 Core instance."
					},
					"description": "Retrieve the {@link sap.ui.core.Core SAPUI5 Core} instance for the current window.",
					"resource": "sap/ui/core/Core.js"
				},
				{
					"name": "getVersionInfo",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object|undefined|Promise",
						"description": "the full version info, the library specific one,\n                                   undefined (if library is not listed or there was an error and \"failOnError\" is set to \"false\")\n                                   or a Promise which resolves with one of them"
					},
					"parameters": [
						{
							"name": "mOptions",
							"type": "string|object",
							"optional": true,
							"parameterProperties": {
								"library": {
									"name": "library",
									"type": "boolean",
									"optional": true,
									"description": "name of the library (e.g. \"sap.ui.core\")"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "whether \"sap-ui-version.json\" should be loaded asynchronously"
								},
								"failOnError": {
									"name": "failOnError",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "whether to propagate load errors or not (not relevant for async loading)"
								}
							},
							"description": "name of the library (e.g. \"sap.ui.core\") or a object map (see below)"
						}
					],
					"description": "Loads the version info file (resources/sap-ui-version.json) and returns\nit or if a library name is specified then the version info of the individual\nlibrary will be returned.\n\nIn case of the version info file is not available an error will occur when\ncalling this function."
				},
				{
					"name": "htmlfragment",
					"module": "sap/ui/core/Fragment",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Control|sap.ui.core.Control[]",
						"description": "the root Control(s) of the created Fragment instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": true,
							"description": "id of the newly created Fragment"
						},
						{
							"name": "vFragment",
							"type": "string|object",
							"optional": false,
							"description": "name of the Fragment (or Fragment configuration as described above, in this case no sId may be given. Instead give the id inside the config object, if desired.)"
						},
						{
							"name": "oController",
							"type": "sap.ui.core.mvc.Controller",
							"optional": true,
							"description": "a Controller to be used for event handlers in the Fragment"
						}
					],
					"description": "Instantiates an HTML-based Fragment.\n\nTo instantiate a Fragment, call this method as:\n   sap.ui.htmlfragment([sId], sFragmentName, [oController]);\nThe Fragment instance ID is optional and will be used as prefix for the ID of all\ncontained controls. If no ID is passed, controls will not be prefixed.\nThe sFragmentName must correspond to an HTML Fragment which can be loaded\nvia the module system (fragmentName + \".fragment.html\") and which defines the Fragment.\nIf oController is given, the methods referenced in the Fragment will be called on this controller.\nNote that Fragments may require a Controller to be given and certain methods to be available.\n\n\nAdvanced usage:\nTo instantiate a Fragment and optionally directly give the HTML definition instead of loading it from a file,\ncall this method as:\n    sap.ui.htmlfragment(oFragmentConfig, [oController]);\nThe oFragmentConfig object can have a either a \"fragmentName\" or a \"fragmentContent\" property.\nfragmentContent is optional and can hold the Fragment definition as XML string; if not\ngiven, fragmentName must be given and the Fragment content definition is loaded by the module system.\nAgain, if oController is given, the methods referenced in the Fragment will be called on this controller.",
					"resource": "sap/ui/core/Fragment.js"
				},
				{
					"name": "htmlview",
					"module": "sap/ui/core/mvc/HTMLView",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.mvc.HTMLView|undefined",
						"description": "the created HTMLView instance in the creation case, otherwise undefined"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": true,
							"description": "id of the newly created view, only allowed for instance creation"
						},
						{
							"name": "vView",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"description": "defines how the view source is loaded and rendered later on"
								}
							},
							"description": "name or implementation of the view."
						}
					],
					"description": "Defines or creates an instance of a declarative HTML view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<ul>\n<li>View Definition <code>sap.ui.htmlview(sId, vView)</code>: Defines a view of the given name with the given\nimplementation. sId must be the views name, vView must be an object and can contain\nimplementations for any of the hooks provided by HTMLView</li>\n<li>View Instantiation <code>sap.ui.htmlview(sId?, vView)</code>: Creates an instance of the view with the given name (and id)</li>.\n</ul>\n\nAny other call signature will lead to a runtime error. If the id is omitted in the second variant, an id will\nbe created automatically.",
					"resource": "sap/ui/core/mvc/HTMLView.js"
				},
				{
					"name": "jsfragment",
					"module": "sap/ui/core/Fragment",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Control|sap.ui.core.Control[]",
						"description": "the root Control(s) of the created Fragment instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": true,
							"description": "id of the newly created Fragment"
						},
						{
							"name": "sFragmentName",
							"type": "string|object",
							"optional": false,
							"description": "name of the Fragment (or Fragment configuration as described above, in this case no sId may be given. Instead give the id inside the config object, if desired)"
						},
						{
							"name": "oController",
							"type": "sap.ui.core.mvc.Controller",
							"optional": true,
							"description": "a Controller to be used for event handlers in the Fragment"
						}
					],
					"description": "Defines OR instantiates an HTML-based Fragment.\n\nTo define a JS Fragment, call this method as:\n   sap.ui.jsfragment(sName, oFragmentDefinition)\nWhere:\n- \"sName\" is the name by which this fragment can be found and instantiated. If defined in its own file,\n   in order to be found by the module loading system, the file location and name must correspond to sName\n   (path + file name must be: fragmentName + \".fragment.js\").\n- \"oFragmentDefinition\" is an object at least holding the \"createContent(oController)\" method which defines\n   the Fragment content. If given during instantiation, the createContent method receives a Controller\n   instance (otherwise oController is undefined) and the return value must be one sap.ui.core.Control\n   (which could have any number of children).\n\n\nTo instantiate a JS Fragment, call this method as:\n   sap.ui.jsfragment([sId], sFragmentName, [oController]);\nThe Fragment ID is optional (generated if not given) and the Fragment implementation CAN use it\nto make contained controls unique (this depends on the implementation: some JS Fragments may choose\nnot to support multiple instances within one application and not use the ID prefixing).\nThe sFragmentName must correspond to a JS Fragment which can be loaded\nvia the module system (fragmentName + \".fragment.js\") and which defines the Fragment.\nIf oController is given, the methods referenced in the Fragment will be called on this controller.\nNote that Fragments may require a Controller to be given and certain methods to be available.",
					"resource": "sap/ui/core/Fragment.js"
				},
				{
					"name": "jsonview",
					"module": "sap/ui/core/mvc/JSONView",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.mvc.JSONView",
						"description": "the created JSONView instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": true,
							"description": "id of the newly created view"
						},
						{
							"name": "vView",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"viewName": {
									"name": "viewName",
									"type": "string",
									"optional": true,
									"description": "name of a view resource in module name notation (without suffix)"
								},
								"viewContent": {
									"name": "viewContent",
									"type": "string|object",
									"optional": true,
									"description": "view definition as a JSON string or an object literal"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"description": "defines how the view source is loaded and rendered later on"
								},
								"controller": {
									"name": "controller",
									"type": "sap.ui.core.mvc.Controller",
									"optional": true,
									"description": "controller to be used for this view instance"
								}
							},
							"description": "name of a view resource or view configuration as described above."
						}
					],
					"description": "Creates a JSON view of the given name and id.\n\nThe <code>viewName</code> must either correspond to a JSON module that can be loaded\nvia the module system (viewName + suffix \".view.json\") and which defines the view or it must\nbe a configuration object for a view.\nThe configuration object can have a viewName, viewContent and a controller property. The viewName\nbehaves as described above, viewContent can hold the view description as JSON string or as object literal.\n\n<strong>Note</strong>: when an object literal is given, it might be modified during view construction.\n\nThe controller property can hold an controller instance. If a controller instance is given,\nit overrides the controller defined in the view.\n\nLike with any other control, an id is optional and will be created when missing.",
					"resource": "sap/ui/core/mvc/JSONView.js"
				},
				{
					"name": "jsview",
					"module": "sap/ui/core/mvc/JSView",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.mvc.JSView|undefined",
						"description": "the created JSView instance in the creation case, otherwise undefined"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": true,
							"description": "id of the newly created view, only allowed for instance creation"
						},
						{
							"name": "vView",
							"type": "string|object",
							"optional": false,
							"description": "name or implementation of the view."
						},
						{
							"name": "bAsync",
							"type": "boolean",
							"optional": true,
							"description": "defines how the view source is loaded and rendered later on (only relevant for instantiation, ignored for everything else)"
						}
					],
					"description": "Defines or creates an instance of a JavaScript view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<ul>\n<li>View Definition <code>sap.ui.jsview(sId, vView)</code>: Defines a view of the given name with the given\nimplementation. sId must be the view's name, vView must be an object and can contain\nimplementations for any of the hooks provided by JSView</li>\n\n<li>View Instantiation <code>sap.ui.jsview(sId?, vView)</code>: Creates an instance of the view with the given name (and id).\nIf no view implementation has been defined for that view name, a JavaScript module with the same name and with suffix \"view.js\" will be loaded\nand executed. The module should contain a view definition (1st. variant above). </li>\n</ul>\n\nAny other call signature will lead to a runtime error. If the id is omitted in the second variant, an id will\nbe created automatically.",
					"resource": "sap/ui/core/mvc/JSView.js"
				},
				{
					"name": "lazyRequire",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Fully qualified name (dot notation) of the class that should be prepared"
						},
						{
							"name": "sMethods",
							"type": "string",
							"optional": true,
							"defaultValue": "'new'",
							"description": "space separated list of additional (static) methods that should be created as stubs"
						},
						{
							"name": "sModuleName",
							"type": "string",
							"optional": true,
							"description": "name of the module to load, defaults to the class name"
						}
					],
					"description": "Creates a lazy loading stub for a given class <code>sClassName</code>.\n\nIf the class has been loaded already, nothing is done. Otherwise a stub object\nor constructor and - optionally - a set of stub methods are created.\nAll created stubs will load the corresponding module on execution\nand then delegate to their counterpart in the loaded module.\n\nWhen no methods are given or when the list of methods contains the special name\n\"new\" (which is an operator can't be used as method name in JavaScript), then a\nstub <b>constructor</b> for class <code>sClassName</code> is created.\nOtherwise, a plain object is created.\n\n<b>Note</b>: Accessing any stub as a plain object without executing it (no matter\nwhether it is a function or an object) won't load the module and therefore most like\nwon't work as expected. This is a fundamental restriction of the lazy loader approach.\nIt could only be fixed with JavaScript 1.5 features that are not available in all\nUI5 target browsers (e.g. not in IE8).\n\n<b>Note</b>: As a side effect of this method, the namespace containing the given\nclass is created <b>immediately</b>."
				},
				{
					"name": "localResources",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sNamespace",
							"type": "string",
							"optional": false,
							"description": "Namespace prefix for which to load resources relative to the application root folder"
						}
					],
					"description": "Redirects access to resources that are part of the given namespace to a location\nrelative to the assumed <b>application root folder</b>.\n\nAny UI5 managed resource (view, controller, control, JavaScript module, CSS file, etc.)\nwhose resource name starts with <code>sNamespace</code>, will be loaded from an\nequally named subfolder of the <b>application root folder</b>.\nIf the resource name consists of multiple segments (separated by a dot), each segment\nis assumed to represent an individual folder. In other words: when a resource name is\nconverted to an URL, any dots ('.') are converted to slashes ('/').\n\n<b>Limitation:</b> For the time being, the <b>application root folder</b> is assumed to be\nthe same as the folder where the current page resides in.\n\nUsage sample:\n<pre>\n  // Let UI5 know that resources, whose name starts with \"com.mycompany.myapp\"\n  // should be loaded from the URL location \"./com/mycompany/myapp\"\n  sap.ui.localResources(\"com.mycompany.myapp\");\n\n  // The following call implicitly will use the mapping done by the previous line\n  // It will load a view from ./com/mycompany/myapp/views/Main.view.xml\n  sap.ui.view({ view : \"com.mycompany.myapp.views.Main\", type : sap.ui.core.mvc.ViewType.XML});\n</pre>\n\nWhen applications need a more flexible mapping between resource names and their location,\nthey can use {@link jQuery.sap.registerModulePath}.\n\nIt is intended to make this configuration obsolete in future releases, but for the time\nbeing, applications must call this method when they want to store resources relative to\nthe assumed application root folder."
				},
				{
					"name": "namespace",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "the innermost namespace of the hierarchy"
					},
					"parameters": [
						{
							"name": "sNamespace",
							"type": "string",
							"optional": false
						}
					],
					"description": "Ensures that a given a namespace or hierarchy of nested namespaces exists in the\ncurrent <code>window</code>.",
					"deprecated": {
						"text": "Use jQuery.sap.declare or jQuery.sap.getObject(...,0) instead"
					}
				},
				{
					"name": "require",
					"module": "jquery.sap.global",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "any|undefined",
						"description": "a single module value or undefined"
					},
					"parameters": [
						{
							"name": "vDependencies",
							"type": "string|string[]",
							"optional": false,
							"description": "dependency (dependencies) to resolve"
						},
						{
							"name": "fnCallback",
							"type": "function",
							"optional": true,
							"description": "callback function to execute after resolving an array of dependencies"
						}
					],
					"description": "Resolves one or more module dependencies.\n\n<b>Synchronous Retrieval of a Single Module Value</b>\n\nWhen called with a single string, that string is assumed to be the name of an already loaded\nmodule and the value of that module is returned. If the module has not been loaded yet,\nor if it is a Non-UI5 module (e.g. third party module), <code>undefined</code> is returned.\nThis signature variant allows synchronous access to module values without initiating module loading.\n\nSample:\n<pre>\n  var JSONModel = sap.ui.require(\"sap/ui/model/json/JSONModel\");\n</pre>\n\nFor modules that are known to be UI5 modules, this signature variant can be used to check whether\nthe module has been loaded.\n\n<b>Asynchronous Loading of Multiple Modules</b>\n\nIf an array of strings is given and (optionally) a callback function, then the strings\nare interpreted as module names and the corresponding modules (and their transitive\ndependencies) are loaded. Then the callback function will be called asynchronously.\nThe module values of the specified modules will be provided as parameters to the callback\nfunction in the same order in which they appeared in the dependencies array.\n\nThe return value for the asynchronous use case is <code>undefined</code>.\n\n<pre>\n  sap.ui.require(['sap/ui/model/json/JSONModel', 'sap/ui/core/UIComponent'], function(JSONModel,UIComponent) {\n\n    var MyComponent = UIComponent.extend('MyComponent', {\n      ...\n    });\n    ...\n\n  });\n</pre>\n\nThis method uses the same variation of the {@link jQuery.sap.getResourcePath unified resource name}\nsyntax that {@link sap.ui.define} uses: module names are specified without the implicit extension '.js'.\nRelative module names are not supported.",
					"experimental": {
						"since": "1.27.0",
						"text": "not all aspects of sap.ui.require are settled yet. E.g. the return value\nof the asynchronous use case might change (currently it is undefined)."
					},
					"resource": "jquery.sap.global.js"
				},
				{
					"name": "resource",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the URL of the requested resource"
					},
					"parameters": [
						{
							"name": "sLibraryName",
							"type": "string",
							"optional": false,
							"description": "the name of a library, like \"sap.ui.commons\""
						},
						{
							"name": "sResourcePath",
							"type": "string",
							"optional": false,
							"description": "the relative path of a resource inside this library, like \"img/mypic.png\" or \"themes/my_theme/img/mypic.png\""
						}
					],
					"description": "Returns the URL of a resource that belongs to the given library and has the given relative location within the library.\nThis is mainly meant for static resources like images that are inside the library.\nIt is NOT meant for access to JavaScript modules or anything for which a different URL has been registered with jQuery.sap.registerModulePath(). For\nthese cases use jQuery.sap.getModulePath().\nIt DOES work, however, when the given sResourcePath starts with \"themes/\" (= when it is a theme-dependent resource). Even when for this theme a different\nlocation outside the normal library location is configured."
				},
				{
					"name": "setRoot",
					"module": "sap/ui/core/Core",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "oDomRef",
							"type": "string|Element|sap.ui.core.Control",
							"optional": false,
							"description": "a DOM Element or Id String of the UIArea"
						},
						{
							"name": "oControl",
							"type": "sap.ui.base.Interface|sap.ui.core.Control",
							"optional": false,
							"description": "the Control that should be added to the <code>UIArea</code>."
						}
					],
					"description": "Displays the control tree with the given root inside the area of the given\nDOM reference (or inside the DOM node with the given ID) or in the given Control.\n\nExample:\n<pre>\n  &lt;div id=\"SAPUI5UiArea\">&lt;/div>\n  &lt;script>\n    var oRoot = new sap.ui.commons.Label();\n    oRoot.setText(\"Hello world!\");\n    sap.ui.setRoot(\"SAPUI5UiArea\", oRoot);\n  &lt;/script>\n</pre>\n<p>\n\nThis is a shortcut for <code>sap.ui.getCore().setRoot()</code>.\n\nInternally, if a string is given that does not identify an UIArea or a control\nthen implicitly a new <code>UIArea</code> is created for the given DOM reference\nand the given control is added.",
					"deprecated": {
						"text": "Use function <code>placeAt</code> of <code>sap.ui.core.Control</code> instead."
					},
					"resource": "sap/ui/core/Core.js"
				},
				{
					"name": "template",
					"module": "sap/ui/core/tmpl/Template",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.tmpl.Template|sap.ui.core.tmpl.Template[]",
						"description": "the created Template instance\n        or in case of usage without parameters any array of templates is returned"
					},
					"parameters": [
						{
							"name": "oTemplate",
							"type": "string|DomRef|object",
							"optional": true,
							"parameterProperties": {
								"id": {
									"name": "id",
									"type": "string",
									"optional": false,
									"description": "the ID of the Template / the ID  of the DOM element containing the source of the Template</li>"
								},
								"domref": {
									"name": "domref",
									"type": "Element",
									"optional": false,
									"description": "the DOM element containing the source of the Template</li>"
								},
								"type": {
									"name": "type",
									"type": "string",
									"optional": true,
									"description": "the type of the Template</li>"
								},
								"src": {
									"name": "src",
									"type": "string",
									"optional": true,
									"description": "the URL to lookup the template</li> (<i>experimental!</i>)"
								},
								"control": {
									"name": "control",
									"type": "string",
									"optional": false,
									"description": "the fully qualified name of the control to declare</li> (<i>experimental!</i>)"
								}
							},
							"description": "the ID or the DOM reference to the template to lookup or a configuration object containing the src, type and eventually the ID of the Template."
						}
					],
					"description": "Creates a Template for the given ID, DOM reference or a configuration object.\n\nIf no parameter is defined, this function makes a lookup of DOM elements\nwhich are specifying a type attribute. If the value of this type attribute\nmatches a registered type then the content of this DOM element will be\nused to create a new <code>Template</code> instance.\n\nIf you want to lookup all kind of existing and known templates and parse them\ndirectly you can simply call:\n<pre>\n  sap.ui.template();\n</pre>\n\nTo parse a concrete DOM element you can do so by using this function in the\nfollowing way:\n<pre>\n  sap.ui.template(\"theTemplateId\");\n</pre>\n\nOr you can pass the reference to a DOM element and use this DOM element as\na source for the template:\n<pre>\n  sap.ui.template(oDomRef);\n</pre>\n\nThe last option to use this function is to pass the information via a\nconfiguration object. This configuration object can be used to pass a\ncontext for the templating framework when compiling the template:\n<pre>\n  var oTemplateById = sap.ui.template({\n    id: \"theTemplateId\",\n    context: { ... }\n  });\n\n  var oTemplateByDomRef = sap.ui.template({\n    domref: oDomRef,\n    context: { ... }\n  });\n</pre>\n\nIt can also be used to load a template from another file:\n<pre>\n  var oTemplate = sap.ui.template({\n    id: \"myTemplate\",\n    src: \"myTemplate.tmpl\"\n  });\n\n  var oTemplateWithContext = sap.ui.template({\n    id: \"myTemplate\",\n    src: \"myTemplate.tmpl\",\n    context: { ... }\n  });\n</pre>",
					"resource": "sap/ui/core/tmpl/Template.js"
				},
				{
					"name": "templateview",
					"module": "sap/ui/core/mvc/TemplateView",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.mvc.TemplateView|undefined",
						"description": "the created TemplateView instance in the creation case, otherwise undefined"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": true,
							"description": "id of the newly created view, only allowed for instance creation"
						},
						{
							"name": "vView",
							"type": "string|object",
							"optional": false,
							"description": "name or implementation of the view."
						}
					],
					"description": "Defines or creates an instance of a template view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<ul>\n<li>View Definition <code>sap.ui.templateview(sId, vView)</code>: Defines a view of the given name with the given\nimplementation. sId must be the views name, vView must be an object and can contain\nimplementations for any of the hooks provided by templateview</li>\n<li>View Instantiation <code>sap.ui.templateview(sId?, vView)</code>: Creates an instance of the view with the given name (and id)</li>.\n</ul>\n\nAny other call signature will lead to a runtime error. If the id is omitted in the second variant, an id will\nbe created automatically.",
					"resource": "sap/ui/core/mvc/TemplateView.js"
				},
				{
					"name": "view",
					"module": "sap/ui/core/mvc/View",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "the created View instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "id of the newly created view, only allowed for instance creation"
						},
						{
							"name": "vView",
							"type": "string|object",
							"optional": true,
							"parameterProperties": {
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"description": "defines how the view source is loaded and rendered later on"
								}
							},
							"description": "the view name or view configuration object"
						}
					],
					"description": "Creates a view of the given type, name and with the given id.\n\nThe <code>vView</code> configuration object can have the following properties for the view\ninstantiation:\n<ul>\n<li>The ID <code>vView.id</code> specifies an ID for the View instance. If no ID is given,\nan ID will be generated.</li>\n<li>The view name <code>vView.viewName</code> corresponds to an XML module that can be loaded\nvia the module system (vView.viewName + suffix \".view.xml\")</li>\n<li>The controller instance <code>vView.controller</code> must be a valid controller implementation.\nThe given controller instance overrides the controller defined in the view definition</li>\n<li>The view type <code>vView.type</code> specifies what kind of view will be instantiated. All valid\nview types are listed in the enumeration sap.ui.core.mvc.ViewType.</li>\n<li>The view data <code>vView.viewData</code> can hold user specific data. This data is available\nduring the whole lifecycle of the view and the controller</li>\n<li>The view loading mode <code>vView.async</code> must be a boolean and defines if the view source is loaded\nsynchronously or asynchronously. In async mode, the view is rendered empty initially, and re-rendered with the\nloaded view content.</li>\n<li><code>vView.preprocessors</code></li> can hold a map from the specified preprocessor type (e.g. \"xml\") to an array of\npreprocessor configurations; each configuration consists of a <code>preprocessor</code> property (optional when\nregistered as on-demand preprocessor) and may contain further preprocessor-specific settings. The preprocessor can\nbe either a module name as string implementation of {@link sap.ui.core.mvc.View.Preprocessor} or a function according to\n{@link sap.ui.core.mvc.View.Preprocessor.process}. Do not set properties starting with underscore like <code>_sProperty</code>\nproperty, these are reserved for internal purposes. When several preprocessors are provided for one hook, it has to be made\nsure that they do not conflict when being processed serially.\n\n<strong>Note</strong>: These preprocessors are only available to this instance. For global or\non-demand availability use {@link sap.ui.core.mvc.XMLView.registerPreprocessor}.\n\n<strong>Note</strong>: Please note that preprocessors in general are currently only available\nto XMLViews.\n\n<strong>Note</strong>: Preprocessors only work in async views and will be ignored when the view is instantiated\nin sync mode by default, as this could have unexpected side effects. You may override this behaviour by setting the\nbSyncSupport flag of the preprocessor to true.",
					"resource": "sap/ui/core/mvc/View.js"
				},
				{
					"name": "xmlfragment",
					"module": "sap/ui/core/Fragment",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Control|sap.ui.core.Control[]",
						"description": "the root Control(s) of the created Fragment instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": true,
							"description": "id of the newly created Fragment"
						},
						{
							"name": "vFragment",
							"type": "string|object",
							"optional": false,
							"description": "name of the Fragment (or Fragment configuration as described above, in this case no sId may be given. Instead give the id inside the config object, if desired)"
						},
						{
							"name": "oController",
							"type": "sap.ui.core.mvc.Controller",
							"optional": true,
							"description": "a Controller to be used for event handlers in the Fragment"
						}
					],
					"description": "Instantiates an XML-based Fragment.\n\nTo instantiate a Fragment, call this method as:\n   sap.ui.xmlfragment([sId], sFragmentName, [oController]);\nThe Fragment instance ID is optional and will be used as prefix for the ID of all\ncontained controls. If no ID is passed, controls will not be prefixed.\nThe sFragmentName must correspond to an XML Fragment which can be loaded\nvia the module system (fragmentName + \".fragment.xml\") and which defines the Fragment.\nIf oController is given, the methods referenced in the Fragment will be called on this controller.\nNote that Fragments may require a Controller to be given and certain methods to be available.\n\n\nAdvanced usage:\nTo instantiate a Fragment and optionally directly give the XML definition instead of loading it from a file,\ncall this method as:\n    sap.ui.xmlfragment(oFragmentConfig, [oController]);\nThe oFragmentConfig object can have a either a \"fragmentName\" or a \"fragmentContent\" property.\nfragmentContent is optional and can hold the Fragment definition as XML string; if not\ngiven, fragmentName must be given and the Fragment content definition is loaded by the module system.\nAgain, if oController is given, the methods referenced in the Fragment will be called on this controller.",
					"resource": "sap/ui/core/Fragment.js"
				},
				{
					"name": "xmlview",
					"module": "sap/ui/core/mvc/XMLView",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.mvc.XMLView",
						"description": "the created XMLView instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": true,
							"description": "ID of the newly created view"
						},
						{
							"name": "vView",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"viewName": {
									"name": "viewName",
									"type": "string",
									"optional": true,
									"description": "Name of the view resource in module name notation (without suffix)"
								},
								"viewContent": {
									"name": "viewContent",
									"type": "string|Document",
									"optional": true,
									"description": "XML string or XML document that defines the view"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"description": "Defines how the view source is loaded and rendered later on"
								},
								"cache": {
									"name": "cache",
									"type": "object",
									"optional": true,
									"parameterProperties": {
										"keys": {
											"name": "keys",
											"type": "(string|Promise)[]",
											"optional": true,
											"description": "Array with strings or Promises resolving with strings"
										}
									},
									"description": "Cache configuration, only for <code>async</code> views; caching gets active\nwhen this object is provided with vView.cache.keys array; keys are used to store data in the cache and for\ninvalidation of the cache"
								},
								"preprocessors": {
									"name": "preprocessors",
									"type": "object",
									"optional": true,
									"description": "Preprocessors configuration, see {@link sap.ui.core.mvc.View}"
								},
								"controller": {
									"name": "controller",
									"type": "sap.ui.core.mvc.Controller",
									"optional": true,
									"description": "Controller instance to be used for this view"
								}
							},
							"description": "Name of the view or a view configuration object as described above"
						}
					],
					"description": "Instantiates an XMLView of the given name and with the given ID.\n\nThe <code>viewName</code> must either correspond to an XML module that can be loaded\nvia the module system (viewName + suffix \".view.xml\") and which defines the view, or it must\nbe a configuration object for a view.\nThe configuration object can have a <code>viewName</code>, <code>viewContent</code> and a <code>controller\n</code> property. The <code>viewName</code> behaves as described above. <code>viewContent</code> is optional\nand can hold a view description as XML string or as already parsed XML Document. If not given, the view content\n definition is loaded by the module system.\n\n<strong>Note</strong>: if a <code>Document</code> is given, it might be modified during view construction.\n\n<strong>Note</strong>: if you enable caching, you need to take care of the invalidation via keys. Automatic\ninvalidation takes only place if the UI5 version or the component descriptor (manifest.json) change. This is\nstill an experimental feature and may experience slight changes of the invalidation parameters or the cache\nkey format.\n\nThe controller property can hold an controller instance. If a controller instance is given,\nit overrides the controller defined in the view.\n\nLike with any other control, ID is optional and one will be created automatically.",
					"resource": "sap/ui/core/mvc/XMLView.js"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.app.Application",
			"basename": "Application",
			"resource": "sap/ui/app/Application.js",
			"module": "sap/ui/app/Application",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Component",
			"description": "Base class for application classes",
			"experimental": {
				"since": "1.11.1",
				"text": "The Application class is still under construction, so some implementation details can be changed in future."
			},
			"deprecated": {
				"since": "1.15.1",
				"text": "The Component class is enhanced to take care about the Application code."
			},
			"ui5-metadata": {
				"stereotype": "component",
				"properties": [
					{
						"name": "root",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"methods": [
							"getRoot",
							"setRoot"
						]
					},
					{
						"name": "config",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"methods": [
							"getConfig",
							"setConfig"
						]
					}
				],
				"aggregations": [
					{
						"name": "rootComponent",
						"singularName": "rootComponent",
						"type": "sap.ui.core.UIComponent",
						"cardinality": "0..1",
						"visibility": "public",
						"methods": [
							"getRootComponent",
							"destroyRootComponent",
							"setRootComponent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "optional id for the application; generated automatically if\n           no non-empty id is given Note: this can be omitted, no matter\n           whether <code>mSettings</code> will be given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the\n           new application instance"
					}
				],
				"description": "Abstract application class. Extend this class to create a central application class.\n\nOnly one instance is allowed.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "createRootComponent",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.UIComponent",
						"description": "the root component"
					},
					"description": "Creates and returns the root component. Override this method in your application implementation, if you want to override the default creation by metadata."
				},
				{
					"name": "destroy",
					"visibility": "public"
				},
				{
					"name": "destroyRootComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.app.Application",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the rootComponent in the aggregation <code>rootComponent</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.app.Application with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Component.extend}."
				},
				{
					"name": "getConfig",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>config</code>"
					},
					"description": "Gets current value of property <code>config</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.app.Application."
				},
				{
					"name": "getRoot",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>root</code>"
					},
					"description": "Gets current value of property <code>root</code>."
				},
				{
					"name": "getRootComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIComponent"
					},
					"description": "Gets content of aggregation <code>rootComponent</code>."
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The root component"
					},
					"since": "1.13.1",
					"description": "Returns the application root component.",
					"deprecated": {}
				},
				{
					"name": "main",
					"visibility": "public",
					"description": "The main method is called when the DOM and UI5 is completely loaded. Override this method in your Application class implementation to execute code which relies on a loaded DOM / UI5."
				},
				{
					"name": "onBeforeExit",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "return a string if a prompt should be displayed to the user confirming closing the application (e.g. when the application is not yet saved)."
					},
					"description": "On before exit application hook. Override this method in your Application class implementation, to handle cleanup before the real exit or to prompt a question to the user,\nif the application should be exited."
				},
				{
					"name": "onError",
					"visibility": "public",
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "The error message."
						},
						{
							"name": "sFile",
							"type": "string",
							"optional": false,
							"description": "The file where the error occurred"
						},
						{
							"name": "iLine",
							"type": "number",
							"optional": false,
							"description": "The line number of the error"
						}
					],
					"description": "On error hook. Override this method in your Application class implementation to listen to unhandled errors."
				},
				{
					"name": "onExit",
					"visibility": "public",
					"description": "On exit application hook. Override this method in your Application class implementation, to handle cleanup of the application."
				},
				{
					"name": "setConfig",
					"visibility": "public",
					"since": "1.13.1",
					"parameters": [
						{
							"name": "vConfig",
							"type": "string|object|sap.ui.model.Model",
							"optional": false,
							"description": "the configuration model, the configuration object or a URI string to load a JSON configuration file."
						}
					],
					"description": "Sets the configuration model."
				},
				{
					"name": "setRoot",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.app.Application",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sRoot",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>root</code>"
						}
					],
					"description": "Sets a new value for property <code>root</code>.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setRootComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.app.Application",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRootComponent",
							"type": "sap.ui.core.UIComponent",
							"optional": false,
							"description": "The rootComponent to set"
						}
					],
					"description": "Sets the aggregated <code>rootComponent</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.app.MockServer",
			"basename": "MockServer",
			"resource": "sap/ui/app/MockServer.js",
			"module": "sap/ui/app/MockServer",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Class to mock a server",
			"experimental": {
				"since": "1.13.0",
				"text": "The mock server is still under construction, so some implementation details can be changed in future."
			},
			"deprecated": {
				"since": "1.15.1",
				"text": "The mock server code has been moved to sap.ui.core.util - see {@link sap.ui.core.util.MockServer}"
			},
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new server object; generated automatically if no non-empty id is given\n     Note: this can be omitted, no matter whether <code>mSettings</code> will be given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial property values, aggregated objects etc. for the new object"
					},
					{
						"name": "oScope",
						"type": "object",
						"optional": true,
						"description": "scope object for resolving string based type and formatter references in bindings"
					}
				],
				"description": "Creates a mocked server. This helps to mock all or some backend calls, e.g. for OData/JSON Models or simple XHR calls, without\nchanging the application code. This class can also be used for qunit tests."
			}
		},
		{
			"kind": "namespace",
			"name": "sap.ui.base",
			"basename": "base",
			"resource": "sap/ui/base/Object.js",
			"module": "sap/ui/base/Object",
			"static": true,
			"visibility": "public",
			"description": "SAPUI5 base classes"
		},
		{
			"kind": "class",
			"name": "sap.ui.base.Event",
			"basename": "Event",
			"resource": "sap/ui/base/Event.js",
			"module": "sap/ui/base/Event",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"implements": [
				"sap.ui.base.Poolable"
			],
			"description": "An Event object consisting of an id, a source and a map of parameters",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": false,
						"description": "The id of the event"
					},
					{
						"name": "oSource",
						"type": "sap.ui.base.EventProvider",
						"optional": false,
						"description": "The source of the event"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": false,
						"description": "A map of parameters for this event"
					}
				],
				"description": "Creates an event with the given <code>sId</code>, linked to the provided <code>oSource</code> and enriched with the <code>mParameters</code>."
			},
			"methods": [
				{
					"name": "cancelBubble",
					"visibility": "public",
					"description": "Cancel bubbling of the event.\n\n<b>Note:</b> This function only has an effect if the bubbling of the event is supported by the event source."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.base.Event with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The id of the event"
					},
					"description": "Returns the id of the event."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.base.Event."
				},
				{
					"name": "getParameter",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The value for the named parameter"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The name of the parameter to return"
						}
					],
					"description": "Returns the value of the parameter with the given sName."
				},
				{
					"name": "getParameters",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "All parameters of the event keyed by name"
					},
					"description": "Returns all parameter values of the event keyed by their names."
				},
				{
					"name": "getSource",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.EventProvider",
						"description": "The source of the event"
					},
					"description": "Returns the event provider on which the event was fired."
				},
				{
					"name": "preventDefault",
					"visibility": "public",
					"description": "Prevent the default action of this event.\n\n<b>Note:</b> This function only has an effect if preventing the default action of the event is supported by the event source."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.base.EventProvider",
			"basename": "EventProvider",
			"resource": "sap/ui/base/EventProvider.js",
			"module": "sap/ui/base/EventProvider",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Provides eventing capabilities for objects like attaching or detaching event handlers for events which are notified when events are fired.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Creates an instance of EventProvider."
			},
			"methods": [
				{
					"name": "attachEvent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.EventProvider",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "The identifier of the event to listen for"
						},
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An object that will be passed to the handler along with the event object when the event is fired"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to call when the event occurs. This function will be called in the context of the\n                      <code>oListener</code> instance (if present) or on the event provider instance. The event\n                      object ({@link sap.ui.base.Event}) is provided as first argument of the handler. Handlers must not change\n                      the content of the event. The second argument is the specified <code>oData</code> instance (if present)."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wants to be notified when the event occurs (<code>this</code> context within the\n                       handler function). If it is not specified, the handler function is called in the context of the event provider."
						}
					],
					"description": "Attaches an event handler to the event with the given identifier."
				},
				{
					"name": "attachEventOnce",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.EventProvider",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "The identifier of the event to listen for"
						},
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An object that will be passed to the handler along with the event object when the event is fired"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to call when the event occurs. This function will be called in the context of the\n                      <code>oListener</code> instance (if present) or on the event provider instance. The event\n                      object ({@link sap.ui.base.Event}) is provided as first argument of the handler. Handlers must not change\n                      the content of the event. The second argument is the specified <code>oData</code> instance (if present)."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wants to be notified when the event occurs (<code>this</code> context within the\n                       handler function). If it is not specified, the handler function is called in the context of the event provider."
						}
					],
					"description": "Attaches an event handler, called one time only, to the event with the given identifier.\n\nWhen the event occurs, the handler function is called and the handler registration is automatically removed afterwards."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Cleans up the internal structures and removes all event handlers.\n\nThe object must not be used anymore after destroy was called."
				},
				{
					"name": "detachEvent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.EventProvider",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "The identifier of the event to detach from"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to detach from the event"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wanted to be notified when the event occurred"
						}
					],
					"description": "Removes a previously attached event handler from the event with the given identifier.\n\nThe passed parameters must match those used for registration with {@link #attachEvent} beforehand."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.base.EventProvider with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "fireEvent",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.EventProvider|boolean",
						"description": "Returns <code>this</code> to allow method chaining. When <code>preventDefault</code> is supported on the fired event\n                                            the function returns <code>true</code> if the default action should be executed, <code>false</code> otherwise."
					},
					"parameters": [
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "The identifier of the event to fire"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "The parameters which should be carried by the event"
						},
						{
							"name": "bAllowPreventDefault",
							"type": "boolean",
							"optional": true,
							"description": "Defines whether function <code>preventDefault</code> is supported on the fired event"
						},
						{
							"name": "bEnableEventBubbling",
							"type": "boolean",
							"optional": true,
							"description": "Defines whether event bubbling is enabled on the fired event. Set to <code>true</code> the event is also forwarded to the parent(s)\n                                  of the event provider ({@link #getEventingParent}) until the bubbling of the event is stopped or no parent is available anymore."
						}
					],
					"description": "Fires an {@link sap.ui.base.Event event} with the given settings and notifies all attached event handlers."
				},
				{
					"name": "getEventingParent",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.EventProvider",
						"description": "The parent event provider"
					},
					"description": "Returns the parent in the eventing hierarchy of this object.\n\nPer default this returns null, but if eventing is used in objects, which are hierarchically\nstructured, this can be overwritten to make the object hierarchy visible to the eventing and\nenables the use of event bubbling within this object hierarchy."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.base.EventProvider."
				},
				{
					"name": "hasListeners",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "Whether there are any registered event handlers"
					},
					"parameters": [
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "The identifier of the event"
						}
					],
					"description": "Returns whether there are any registered event handlers for the event with the given identifier."
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "A string description of this event provider"
					},
					"description": "Returns a string representation of this object.\n\nIn case there is no class or id information, a simple static string is returned.\nSubclasses should override this method."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.base.Interface",
			"basename": "Interface",
			"resource": "sap/ui/base/Interface.js",
			"module": "sap/ui/base/Interface",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "A class that creates an Interface for an existing class. If a class returns the interface in its constructor,\n       only the defined functions will be visible, no internals of the class can be accessed.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oObject",
						"type": "sap.ui.base.Object",
						"optional": false,
						"description": "the instance that needs an interface created"
					},
					{
						"name": "aMethods",
						"type": "string[]",
						"optional": false,
						"description": "the names of the methods, that should be available on this interface"
					}
				],
				"description": "Constructs an instance of sap.ui.base.Interface which restricts access to methods marked as public."
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.base.ManagedObject",
			"basename": "ManagedObject",
			"resource": "sap/ui/base/ManagedObject.js",
			"module": "sap/ui/base/ManagedObject",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"description": "Base Class that introduces some basic concepts like state management or databinding.\n\nNew subclasses of ManagedObject are created with a call to {@link #.extend ManagedObject.extend} and can make use\nof the following managed features:\n\n<b>Properties</b><br>\nManaged properties represent the state of a ManagedObject. They can store a single value of a simple data type\n(like 'string' or 'int'). They have a <i>name</i> (e.g. 'size') and methods to get the current value (<code>getSize</code>)\nor to set a new value (<code>setSize</code>). When a property is modified, the ManagedObject is marked as invalidated.\nA managed property can be bound against a property in a {@link sap.ui.model.Model} by using the {@link #bindProperty} method.\nUpdates to the model property will be automatically reflected in the managed property and - if TwoWay databinding is active,\nchanges to the managed property will be reflected in the model. An existing binding can be removed by calling {@link #unbindProperty}.\n\nIf a ManagedObject is cloned, the clone will have the same values for its managed properties as the source of the\nclone - if the property wasn't bound. If it is bound, the property in the clone will be bound to the same\nmodel property as in the source.\n\nDetails about the declaration of a managed property, the metadata that describes it and the set of methods that are automatically\ngenerated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend } method.\n\n\n<b>Aggregations</b><br>\nManaged aggregations can store one or more references to other ManagedObjects. They are a mean to control the lifecycle\nof the aggregated objects: one ManagedObject can be aggregated by at most one parent ManagedObject at any time.\nWhen a ManagedObject is destroyed, all aggregated objects are destroyed as well and the object itself is removed from\nits parent. That is, aggregations won't contain destroyed objects or null/undefined.\n\nAggregations have a <i>name</i> ('e.g 'header' or 'items'), a <i>cardinality</i> ('0..1' or '0..n') and are of a specific\n<i>type</i> (which must be a subclass of ManagedObject as well or a UI5 interface). A ManagedObject will provide methods to\nset or get the aggregated object for a specific aggregation of cardinality 0..1 (e.g. <code>setHeader</code>, <code>getHeader</code>\nfor an aggregation named 'header'). For an aggregation of cardinality 0..n, there are methods to get all aggregated objects\n(<code>getItems</code>), to locate an object in the aggregation (e.g. <code>indexOfItem</code>), to add, insert or remove\na single aggregated object (<code>addItem</code>, <code>insertItem</code>, <code>removeItem</code>) or to remove or destroy\nall objects from an aggregation (<code>removeAllItems</code>, <code>destroyItems</code>).\n\nDetails about the declaration of a managed aggregation, the metadata that describes it and the set of methods that are automatically\ngenerated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nAggregations of cardinality 0..n can be bound to a collection in a model by using {@link #bindAggregation} (and unbound again\nusing {@link #unbindAggregation}). For each context in the model collection, a corresponding object will be created in the\nmanaged aggregation, either by cloning a template object or by calling a factory function.\n\nAggregations also control the databinding context of bound objects: by default, aggregated objects inherit all models\nand binding contexts from their parent object.\n\nWhen a ManagedObject is cloned, all aggregated objects will be cloned as well - but only if they haven't been added by\ndatabinding. In that case, the aggregation in the clone will be bound to the same model collection.\n\n\n<b>Associations</b><br>\nManaged associations also form a relationship between objects, but they don't define a lifecycle for the\nassociated objects. They even can 'break' in the sense that an associated object might have been destroyed already\nalthough it is still referenced in an association. For the same reason, the internal storage for associations\nare not direct object references but only the IDs of the associated target objects.\n\nAssociations have a <i>name</i> ('e.g 'initialFocus'), a <i>cardinality</i> ('0..1' or '0..n') and are of a specific <i>type</i>\n(which must be a subclass of ManagedObject as well or a UI5 interface). A ManagedObject will provide methods to set or get\nthe associated object for a specific association of cardinality 0..1 (e.g. <code>setInitialFocus</code>, <code>getInitialFocus</code>).\nFor an association of cardinality 0..n, there are methods to get all associated objects (<code>getRefItems</code>),\nto add, insert or remove a single associated object (<code>addRefItem</code>,\n<code>insertRefItem</code>, <code>removeRefItem</code>) or to remove all objects from an association\n(<code>removeAllRefItems</code>).\n\nDetails about the declaration of a managed association, the metadata that describes it and the set of methods that are automatically\ngenerated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nAssociations can't be bound to the model.\n\nWhen a ManagedObject is cloned, the result for an association depends on the relationship between the associated target\nobject and the root of the clone operation: if the associated object is part of the to-be-cloned object tree (reachable\nvia aggregations from the root of the clone operation), then the cloned association will reference the clone of the\nassociated object. Otherwise it will reference the same object as in the original tree.\nWhen a ManagedObject is destroyed, other objects that are only associated, are not affected by the destroy operation.\n\n\n<b>Events</b><br>\nManaged events provide a mean for communicating important state changes to an arbitrary number of 'interested' listeners.\nEvents have a <i>name</i> and (optionally) a set of <i>parameters</i>. For each event there will be methods to add or remove an event\nlistener as well as a method to fire the event. (e.g. <code>attachChange</code>, <code>detachChange</code>, <code>fireChange</code>\nfor an event named 'change').\n\nDetails about the declaration of a managed events, the metadata that describes it and the set of methods that are automatically\ngenerated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nWhen a ManagedObject is cloned, all listeners registered for any event in the clone source are also registered to the\nclone. Later changes are not reflected in any direction (neither from source to clone nor vice versa).\n\n\n<a name=\"lowlevelapi\"><b>Low Level APIs:</b></a><br>\nThe prototype of ManagedObject provides several generic, low level APIs to manage properties, aggregations, associations\nand events. These generic methods are solely intended for implementing higher level, non-generic methods that manage\na single managed property etc. (e.g. a function <code>setSize(value)</code> that sets a new value for property 'size').\n{@link sap.ui.base.ManagedObject.extend} creates default implementations of those higher level APIs for all managed aspects.\nThe implementation of a subclass then can override those default implementations with a more specific implementation,\ne.g. to implement a side effect when a specific property is set or retrieved.\nIt is therefore important to understand that the generic low-level methods ARE NOT SUITABLE FOR GENERIC ACCESS to the\nstate of a managed object, as that would bypass the overriding higher level methods and their side effects.",
			"ui5-metadata": {
				"stereotype": "object",
				"specialSettings": [
					{
						"name": "id",
						"type": "sap.ui.core.ID",
						"visibility": "public",
						"description": "Unique ID of this instance.\nIf not given, a so called autoID will be generated by the framework.\nAutoIDs use a unique prefix that must not be used for Ids that the application (or other code) creates.\nIt can be configured option 'autoIDPrefix', see {@link sap.ui.core.Configuration}."
					},
					{
						"name": "models",
						"type": "object",
						"visibility": "public",
						"description": "A map of model instances to which the object should be attached.\nThe models are keyed by their model name. For the default model, String(undefined) is expected."
					},
					{
						"name": "bindingContexts",
						"type": "object",
						"visibility": "public",
						"description": "A map of model instances to which the object should be attached.\nThe models are keyed by their model name. For the default model, String(undefined) is expected."
					},
					{
						"name": "objectBindings",
						"type": "object",
						"visibility": "public",
						"description": "A map of model instances to which the object should be attached.\nThe models are keyed by their model name. For the default model, String(undefined) is expected."
					},
					{
						"name": "Type",
						"type": "string",
						"visibility": "hidden",
						"description": "Used by ManagedObject.create."
					}
				],
				"events": [
					{
						"name": "validationSuccess",
						"visibility": "public",
						"description": "Fired after a new value for a bound property has been propagated to the model.\nOnly fired, when the binding uses a data type.",
						"parameters": {
							"element": {
								"name": "element",
								"type": "sap.ui.base.ManagedObject",
								"description": "ManagedObject instance whose property initiated the model update."
							},
							"property": {
								"name": "property",
								"type": "string",
								"description": "Name of the property for which the bound model property has been updated."
							},
							"type": {
								"name": "type",
								"type": "sap.ui.model.Type",
								"description": "Data type used in the binding."
							},
							"newValue": {
								"name": "newValue",
								"type": "any",
								"description": "New value (external representation) as propagated to the model.\n\n<b>Note: </b>the model might modify (normalize) the value again and this modification\nwill be stored in the ManagedObject. The 'newValue' parameter of this event contains\nthe value <b>before</b> such a normalization."
							},
							"oldValue": {
								"name": "oldValue",
								"type": "any",
								"description": "Old value (external representation) as previously stored in the ManagedObject."
							}
						},
						"methods": [
							"attachValidationSuccess",
							"detachValidationSuccess",
							"fireValidationSuccess"
						]
					},
					{
						"name": "validationError",
						"visibility": "public",
						"description": "Fired when a new value for a bound property should have been propagated to the model,\nbut validating the value failed with an exception.",
						"parameters": {
							"element": {
								"name": "element",
								"type": "sap.ui.base.ManagedObject",
								"description": "ManagedObject instance whose property initiated the model update."
							},
							"property": {
								"name": "property",
								"type": "string",
								"description": "Name of the property for which the bound model property should have been been updated."
							},
							"type": {
								"name": "type",
								"type": "sap.ui.model.Type",
								"description": "Data type used in the binding."
							},
							"newValue": {
								"name": "newValue",
								"type": "any",
								"description": "New value (external representation) as parsed and validated by the binding."
							},
							"oldValue": {
								"name": "oldValue",
								"type": "any",
								"description": "Old value (external representation) as previously stored in the ManagedObject."
							},
							"message": {
								"name": "message",
								"type": "string",
								"description": "Localized message describing the validation issues"
							}
						},
						"methods": [
							"attachValidationError",
							"detachValidationError",
							"fireValidationError"
						]
					},
					{
						"name": "parseError",
						"visibility": "public",
						"description": "Fired when a new value for a bound property should have been propagated to the model,\nbut parsing the value failed with an exception.",
						"parameters": {
							"element": {
								"name": "element",
								"type": "sap.ui.base.ManagedObject",
								"description": "ManagedObject instance whose property initiated the model update."
							},
							"property": {
								"name": "property",
								"type": "string",
								"description": "Name of the property for which the bound model property should have been been updated."
							},
							"type": {
								"name": "type",
								"type": "sap.ui.model.Type",
								"description": "Data type used in the binding."
							},
							"newValue": {
								"name": "newValue",
								"type": "any",
								"description": "New value (external representation) as parsed by the binding."
							},
							"oldValue": {
								"name": "oldValue",
								"type": "any",
								"description": "Old value (external representation) as previously stored in the ManagedObject."
							},
							"message": {
								"name": "message",
								"type": "string",
								"description": "Localized message describing the parse error"
							}
						},
						"methods": [
							"attachParseError",
							"detachParseError",
							"fireParseError"
						]
					},
					{
						"name": "formatError",
						"visibility": "public",
						"description": "Fired when a new value for a bound property should have been propagated from the model,\nbut formatting the value failed with an exception.",
						"parameters": {
							"element": {
								"name": "element",
								"type": "sap.ui.base.ManagedObject",
								"description": "ManagedObject instance whose property should have received the model update."
							},
							"property": {
								"name": "property",
								"type": "string",
								"description": "Name of the property for which the binding should have been updated."
							},
							"type": {
								"name": "type",
								"type": "sap.ui.model.Type",
								"description": "Data type used in the binding (if any)."
							},
							"newValue": {
								"name": "newValue",
								"type": "any",
								"description": "New value (model representation) as propagated from the model."
							},
							"oldValue": {
								"name": "oldValue",
								"type": "any",
								"description": "Old value (external representation) as previously stored in the ManagedObject."
							}
						},
						"methods": [
							"attachFormatError",
							"detachFormatError",
							"fireFormatError"
						]
					},
					{
						"name": "modelContextChange",
						"visibility": "public",
						"description": "Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)",
						"methods": [
							"attachModelContextChange",
							"detachModelContextChange",
							"fireModelContextChange"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new managed object; generated automatically if no non-empty id is given\n     Note: this can be omitted, no matter whether <code>mSettings</code> will be given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Optional map/JSON-object with initial property values, aggregated objects etc. for the new object"
					},
					{
						"name": "oScope",
						"type": "object",
						"optional": true,
						"description": "Scope object for resolving string based type and formatter references in bindings.\n     When a scope object is given, <code>mSettings</code> cannot be omitted, at least <code>null</code> or an empty object literal must be given."
					}
				],
				"description": "Constructs and initializes a managed object with the given <code>sId</code> and settings.\n\nIf the optional <code>mSettings</code> are given, they must be a simple object\nthat defines values for properties, aggregations, associations or events keyed by their name.\n\n<b>Valid Names and Value Ranges:</b>\n\nThe property (key) names supported in the object literal are exactly the (case sensitive)\nnames documented in the JSDoc for the properties, aggregations, associations and events\nof the current class and its base classes. Note that for 0..n aggregations and associations this\nname usually is the plural name, whereas it is the singular name in case of 0..1 relations.\n\nIf a key name is ambiguous for a specific managed object class (e.g. a property has the same\nname as an event), then this method prefers property, aggregation, association and\nevent in that order. To resolve such ambiguities, the keys can be prefixed with\n<code>aggregation:</code>, <code>association:</code> or <code>event:</code>\n(such keys containing a colon (':') must be quoted to be valid Javascript).\n\nThe possible values for a setting depend on its kind:\n<ul>\n<li>for simple properties, the value has to match the documented type of the property (no type conversion occurs)\n<li>for 0..1 aggregations, the value has to be an instance of the aggregated type\n<li>for 0..n aggregations, the value has to be an array of instances of the aggregated type or a single instance\n<li>for 0..1 associations, an instance of the associated type or an id (string) is accepted\n<li>for 0..n associations, an array of instances of the associated type or of IDs is accepted\n<li>for events either a function (event handler) is accepted or an array of length 2\n    where the first element is a function and the 2nd element is an object to invoke the method on.\n</ul>\n\nEach subclass should document the name and type of its supported settings in its constructor documentation.\n\nBesides the settings documented below, ManagedObject itself supports the following special settings:\n<ul>\n<li><code>id : <i>sap.ui.core.ID</i></code> an ID for the new instance. Some subclasses (Element, Component) require the id\n  to be unique in a specific scope (e.g. an Element Id must be unique across all Elements, a Component id must\n  be unique across all Components).\n<li><code>models : <i>object</i></code> a map of {@link sap.ui.model.Model} instances keyed by their model name (alias).\n  Each entry with key <i>k</i> in this object has the same effect as a call <code>this.setModel(models[k], k);</code>.</li>\n<li><code>bindingContexts : <i>object</i></code> a map of {@link sap.ui.model.Context} instances keyed by their model name.\n  Each entry with key <i>k</i> in this object has the same effect as a call <code>this.setBindingContext(bindingContexts[k], k);</code></li>\n<li><code>objectBindings : <i>object</i></code>  a map of binding paths keyed by the corresponding model name.\n  Each entry with key <i>k</i> in this object has the same effect as a call <code>this.bindObject(objectBindings[k], k);</code></li>\n</ul>"
			},
			"events": [
				{
					"name": "formatError",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"element": {
											"name": "element",
											"type": "sap.ui.base.ManagedObject",
											"optional": false,
											"description": "ManagedObject instance whose property should have received the model update."
										},
										"property": {
											"name": "property",
											"type": "string",
											"optional": false,
											"description": "Name of the property for which the binding should have been updated."
										},
										"type": {
											"name": "type",
											"type": "sap.ui.model.Type",
											"optional": false,
											"description": "Data type used in the binding (if any)."
										},
										"newValue": {
											"name": "newValue",
											"type": "any",
											"optional": false,
											"description": "New value (model representation) as propagated from the model."
										},
										"oldValue": {
											"name": "oldValue",
											"type": "any",
											"optional": false,
											"description": "Old value (external representation) as previously stored in the ManagedObject."
										}
									}
								}
							}
						}
					],
					"description": "Fired when a new value for a bound property should have been propagated from the model,\nbut formatting the value failed with an exception."
				},
				{
					"name": "modelContextChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)"
				},
				{
					"name": "parseError",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"element": {
											"name": "element",
											"type": "sap.ui.base.ManagedObject",
											"optional": false,
											"description": "ManagedObject instance whose property initiated the model update."
										},
										"property": {
											"name": "property",
											"type": "string",
											"optional": false,
											"description": "Name of the property for which the bound model property should have been been updated."
										},
										"type": {
											"name": "type",
											"type": "sap.ui.model.Type",
											"optional": false,
											"description": "Data type used in the binding."
										},
										"newValue": {
											"name": "newValue",
											"type": "any",
											"optional": false,
											"description": "New value (external representation) as parsed by the binding."
										},
										"oldValue": {
											"name": "oldValue",
											"type": "any",
											"optional": false,
											"description": "Old value (external representation) as previously stored in the ManagedObject."
										},
										"message": {
											"name": "message",
											"type": "string",
											"optional": false,
											"description": "Localized message describing the parse error"
										}
									}
								}
							}
						}
					],
					"description": "Fired when a new value for a bound property should have been propagated to the model,\nbut parsing the value failed with an exception."
				},
				{
					"name": "validationError",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"element": {
											"name": "element",
											"type": "sap.ui.base.ManagedObject",
											"optional": false,
											"description": "ManagedObject instance whose property initiated the model update."
										},
										"property": {
											"name": "property",
											"type": "string",
											"optional": false,
											"description": "Name of the property for which the bound model property should have been been updated."
										},
										"type": {
											"name": "type",
											"type": "sap.ui.model.Type",
											"optional": false,
											"description": "Data type used in the binding."
										},
										"newValue": {
											"name": "newValue",
											"type": "any",
											"optional": false,
											"description": "New value (external representation) as parsed and validated by the binding."
										},
										"oldValue": {
											"name": "oldValue",
											"type": "any",
											"optional": false,
											"description": "Old value (external representation) as previously stored in the ManagedObject."
										},
										"message": {
											"name": "message",
											"type": "string",
											"optional": false,
											"description": "Localized message describing the validation issues"
										}
									}
								}
							}
						}
					],
					"description": "Fired when a new value for a bound property should have been propagated to the model,\nbut validating the value failed with an exception."
				},
				{
					"name": "validationSuccess",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"element": {
											"name": "element",
											"type": "sap.ui.base.ManagedObject",
											"optional": false,
											"description": "ManagedObject instance whose property initiated the model update."
										},
										"property": {
											"name": "property",
											"type": "string",
											"optional": false,
											"description": "Name of the property for which the bound model property has been updated."
										},
										"type": {
											"name": "type",
											"type": "sap.ui.model.Type",
											"optional": false,
											"description": "Data type used in the binding."
										},
										"newValue": {
											"name": "newValue",
											"type": "any",
											"optional": false,
											"description": "New value (external representation) as propagated to the model.\n\n<b>Note: </b>the model might modify (normalize) the value again and this modification\nwill be stored in the ManagedObject. The 'newValue' parameter of this event contains\nthe value <b>before</b> such a normalization."
										},
										"oldValue": {
											"name": "oldValue",
											"type": "any",
											"optional": false,
											"description": "Old value (external representation) as previously stored in the ManagedObject."
										}
									}
								}
							}
						}
					],
					"description": "Fired after a new value for a bound property has been propagated to the model.\nOnly fired, when the binding uses a data type."
				}
			],
			"methods": [
				{
					"name": "_onContextualSettingsChanged",
					"visibility": "restricted",
					"description": "Hook method to let descendants of ManagedObject know when propagated contextual settings have changed"
				},
				{
					"name": "addAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "the string identifying the aggregation that <code>oObject</code> should be added to."
						},
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the object to add; if empty, nothing is added"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this ManagedObject as well as the added child are not marked as changed"
						}
					],
					"description": "Adds some entity <code>oObject</code> to the aggregation identified by <code>sAggregationName</code>.\n\nIf the given object is not valid with regard to the aggregation (if it is not an instance\nof the type specified for that aggregation) or when the method is called for an aggregation\nof cardinality 0..1, then an Error is thrown (see {@link #validateAggregation}.\n\nIf the aggregation already has content, the new object will be added after the current content.\nIf the new object was already contained in the aggregation, it will be moved to the end.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically add an object to an aggregation.\nUse the concrete method add<i>XYZ</i> for aggregation 'XYZ' or the generic {@link #applySettings} instead."
				},
				{
					"name": "addAssociation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAssociationName",
							"type": "string",
							"optional": false,
							"description": "the string identifying the association the object should be added to."
						},
						{
							"name": "sId",
							"type": "string|sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the ID of the ManagedObject object to add; if empty, nothing is added; if a <code>sap.ui.base.ManagedObject</code> is given, its ID is added"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this managed object as well as the newly associated object are not marked as changed"
						}
					],
					"description": "Adds some object with the ID <code>sId</code> to the association identified by <code>sAssociationName</code> and\nmarks this ManagedObject as changed.\n\nThis method does not avoid duplicates.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically add an object to an association.\nUse the concrete method add<i>XYZ</i> for association 'XYZ' or the generic {@link #applySettings} instead."
				},
				{
					"name": "addPropagationListener",
					"visibility": "restricted",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "listener",
							"type": "function",
							"optional": false,
							"description": "function"
						}
					],
					"description": "Adds a listener function that will be called during each propagation step on every control"
				},
				{
					"name": "applySettings",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mSettings",
							"type": "object",
							"optional": false,
							"description": "the settings to apply to this managed object"
						},
						{
							"name": "oScope",
							"type": "object",
							"optional": true,
							"description": "Scope object to resolve types and formatters"
						}
					],
					"description": "Sets all the properties, aggregations, associations and event handlers as given in\nthe object literal <code>mSettings</code>. If a property, aggregation, etc.\nis not listed in <code>mSettings</code>, then its value is not changed by this method.\n\nFor properties and 0..1 aggregations/associations, any given setting overwrites\nthe current value. For 0..n aggregations, the given values are appended; event\nlisteners are registered in addition to existing ones.\n\nFor the possible keys and values in <code>mSettings</code> see the general\ndocumentation in {@link sap.ui.base.ManagedObject} or the specific documentation\nof the constructor of the concrete managed object class."
				},
				{
					"name": "attachFormatError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>formatError</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.base.ManagedObject</code> itself.\r\rFired when a new value for a bound property should have been propagated from the model,\nbut formatting the value failed with an exception."
				},
				{
					"name": "attachModelContextChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>modelContextChange</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.base.ManagedObject</code> itself.\r\rFired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)"
				},
				{
					"name": "attachParseError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>parseError</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.base.ManagedObject</code> itself.\r\rFired when a new value for a bound property should have been propagated to the model,\nbut parsing the value failed with an exception."
				},
				{
					"name": "attachValidationError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>validationError</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.base.ManagedObject</code> itself.\r\rFired when a new value for a bound property should have been propagated to the model,\nbut validating the value failed with an exception."
				},
				{
					"name": "attachValidationSuccess",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>validationSuccess</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.base.ManagedObject</code> itself.\r\rFired after a new value for a bound property has been propagated to the model.\nOnly fired, when the binding uses a data type."
				},
				{
					"name": "bindAggregation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the aggregation to bind"
						},
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"path": {
									"name": "path",
									"type": "string",
									"optional": false,
									"description": "the binding path"
								},
								"template": {
									"name": "template",
									"type": "sap.ui.base.ManagedObject",
									"optional": false,
									"description": "the template to clone for each item in the aggregation"
								},
								"templateShareable": {
									"name": "templateShareable",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "option to enable that the template will be shared which means that it won't be destroyed or cloned automatically"
								},
								"factory": {
									"name": "factory",
									"type": "function",
									"optional": false,
									"description": "the factory function"
								},
								"startIndex": {
									"name": "startIndex",
									"type": "number",
									"optional": false,
									"description": "the first entry of the list to be created"
								},
								"length": {
									"name": "length",
									"type": "number",
									"optional": false,
									"description": "the amount of entries to be created (may exceed the size limit of the model)"
								},
								"sorter": {
									"name": "sorter",
									"type": "sap.ui.model.Sorter|sap.ui.model.Sorter[]",
									"optional": true,
									"description": "the initial sort order (optional)"
								},
								"filters": {
									"name": "filters",
									"type": "sap.ui.model.Filter[]",
									"optional": true,
									"description": "the predefined filters for this aggregation (optional)"
								},
								"key": {
									"name": "key",
									"type": "string|function",
									"optional": false,
									"description": "the name of the key property or a function getting the context as only parameter to calculate a key for entries. This can be used to improve update behaviour in models, where a key is not already available."
								},
								"parameters": {
									"name": "parameters",
									"type": "object",
									"optional": true,
									"description": "a map of parameters which is passed to the binding.\nThe supported parameters are listed in the corresponding model-specific implementation of <code>sap.ui.model.ListBinding</code> or <code>sap.ui.model.TreeBinding</code>."
								},
								"groupHeaderFactory": {
									"name": "groupHeaderFactory",
									"type": "function",
									"optional": true,
									"description": "a factory function to generate custom group visualization (optional)"
								}
							},
							"description": "the binding info"
						}
					],
					"description": "Bind an aggregation to the model.\n\nThe bound aggregation will use the given template, clone it for each item\nwhich exists in the bound list and set the appropriate binding context.\nThis is a generic method which can be used to bind any aggregation to the\nmodel. A managed object may flag aggregations in the metamodel with\nbindable=\"bindable\" to get typed bind<i>Something</i> methods for those aggregations."
				},
				{
					"name": "bindContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the binding path"
						}
					],
					"description": "Bind the object to the referenced entity in the model, which is used as the binding context\nto resolve bound properties or aggregations of the object itself and all of its children\nrelatively to the given path.",
					"deprecated": {
						"since": "1.11.1",
						"text": "please use bindElement instead."
					}
				},
				{
					"name": "bindObject",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "vPath",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"path": {
									"name": "path",
									"type": "string",
									"optional": false,
									"description": "the binding path"
								},
								"parameters": {
									"name": "parameters",
									"type": "object",
									"optional": true,
									"description": "map of additional parameters for this binding"
								},
								"model": {
									"name": "model",
									"type": "string",
									"optional": true,
									"description": "name of the model"
								},
								"events": {
									"name": "events",
									"type": "object",
									"optional": true,
									"description": "map of event listeners for the binding events"
								}
							},
							"description": "the binding path or an object with more detailed binding options"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "map of additional parameters for this binding (only taken into account when vPath is a string in that case the properties described for vPath above are valid here).\nThe supported parameters are listed in the corresponding model-specific implementation of <code>sap.ui.model.ContextBinding</code>."
						}
					],
					"description": "Bind the object to the referenced entity in the model, which is used as the binding context\nto resolve bound properties or aggregations of the object itself and all of its children\nrelatively to the given path.\nIf a relative binding path is used, this will be applied whenever the parent context changes.\nThere is no difference between {@link sap.ui.core.Element#bindElement} and {@link sap.ui.base.ManagedObject#bindObject}."
				},
				{
					"name": "bindProperty",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the property to bind"
						},
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"path": {
									"name": "path",
									"type": "string",
									"optional": false,
									"description": "Path in the model to bind to, either an absolute path or relative to the binding\n           context for the corresponding model"
								},
								"model": {
									"name": "model",
									"type": "string",
									"optional": true,
									"description": "Name of the model to bind against or <code>undefined</code> for the default model"
								},
								"formatter": {
									"name": "formatter",
									"type": "function",
									"optional": true,
									"description": "Function to convert model data into a property value"
								},
								"useRawValues": {
									"name": "useRawValues",
									"type": "boolean",
									"optional": true,
									"description": "Whether the parameters to the formatter function should be passed as raw values.\n           In this case the specified types for the binding parts are not used and the values\n           are not formatted.\n\n           <b>Note</b>: use this flag only when using multiple bindings. If you use only one\n           binding and want raw values then simply don't specify a type for that binding."
								},
								"type": {
									"name": "type",
									"type": "sap.ui.model.Type|string",
									"optional": true,
									"description": "A type object or the name of a type class to create such a type object; the type\n           will be used for converting model data to a property value (aka \"formatting\") and\n           vice versa (in binding mode <code>TwoWay</code>, aka \"parsing\")"
								},
								"targetType": {
									"name": "targetType",
									"type": "string",
									"optional": true,
									"description": "Target type to be used by the type when formatting model data, for example \"boolean\"\n           or \"string\" or \"any\"; defaults to the property's type"
								},
								"formatOptions": {
									"name": "formatOptions",
									"type": "object",
									"optional": true,
									"description": "Format options to be used for the type; only taken into account when the type is\n           specified by its name - a given type object won't be modified"
								},
								"constraints": {
									"name": "constraints",
									"type": "object",
									"optional": true,
									"description": "Additional constraints to be used when constructing a type object from a type name,\n           ignored when a type object is given"
								},
								"mode": {
									"name": "mode",
									"type": "sap.ui.model.BindingMode",
									"optional": true,
									"defaultValue": "Default",
									"description": "Binding mode to be used for this property binding (e.g. one way)"
								},
								"parameters": {
									"name": "parameters",
									"type": "object",
									"optional": true,
									"description": "Map of parameters which is passed to the binding; the supported parameters are listed\n           in the corresponding model-specific implementation of <code>sap.ui.model.PropertyBinding</code>."
								},
								"parts": {
									"name": "parts",
									"type": "object[]",
									"optional": true,
									"description": "Array of binding info objects for the parts of a composite binding; the structure of\n           each binding info is the same as described for the <code>oBindingInfo</code> as a whole.\n\n           <b>Note</b>: recursive composite bindings are currently not supported"
								}
							},
							"description": "Binding information"
						}
					],
					"description": "Binds a property to the model.\n\nThe Setter for the given property will be called with the value retrieved from the data model.\nWhen the binding mode is <code>OneTime</code>, the property will be set only once. When it is\n<code>OneWay</code>, the property will be updated whenever the corresponding data in the model changes.\nIn mode <code>TwoWay</code>, changes to the property (not originating in the model) will be\nreported back to the model (typical use case: user interaction changes the value of a control).\n\nThis is a generic method which can be used to bind any property to the model. A managed\nobject may flag any property in its metadata with <code>bindable=\"bindable\"</code> to additionally\nprovide named methods to bind and unbind the corresponding property.\n\n\n<b>Composite Binding</b><br>\nA composite property binding which combines data from multiple model paths can be declared using\nthe <code>parts</code> parameter instead of <code>path</code>. The <code>formatter</code> function\nor a {@link sap.ui.model.CompositeType composite type} then can be used to combine the parts,\nProperties with a composite binding are also known as \"calculated fields\".\n\nExample:\n<pre>\n  oTxt.bindValue({\n    parts: [\n      {path: \"/firstName\", type: \"sap.ui.model.type.String\"},\n      {path: \"myModel2>/lastName\"}\n    ]\n  });\n</pre>\n\nNote that a composite binding will be forced into mode <code>OneWay</code> when one of the\nbinding parts is not in mode <code>TwoWay</code>.\n\n\n<b>Formatter Functions</b><br>\nWhen a formatter function is specified for the binding or for a binding part, it will be\ncalled with the value of the bound model property. After setting the initial property value,\nthe formatter function will only be called again when the bound model property changes\n(simple property binding) or when at least one of the bound model properties changes\n(formatter function of a composite binding). Note that a binding only monitors the\nbound model data for changes. Dependencies of the formatter implementation to other model\ndata is not known to the binding and changes won't be detected.\n\nWhen the formatter for a property binding (simple or composite) is called, the managed object\nwill be given as <code>this</code> context. For formatters of binding parts in a composite\nbinding, this is not the case."
				},
				{
					"name": "clone",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to the newly created clone"
					},
					"parameters": [
						{
							"name": "sIdSuffix",
							"type": "string",
							"optional": true,
							"description": "a suffix to be appended to the cloned object ID"
						},
						{
							"name": "aLocalIds",
							"type": "string[]",
							"optional": true,
							"description": "an array of local IDs within the cloned hierarchy (internally used)"
						},
						{
							"name": "oOptions",
							"type": "Object",
							"optional": true,
							"description": "configuration object"
						},
						{
							"name": "cloneChildren",
							"type": "boolean",
							"optional": true,
							"defaultValue": true,
							"description": "Whether associations and aggregations will be cloned"
						},
						{
							"name": "cloneBindings",
							"type": "boolean",
							"optional": true,
							"defaultValue": true,
							"description": "Whether bindings will be cloned"
						}
					],
					"description": "Clones a tree of objects starting with the object on which clone is called first (root object).\n\nThe IDs within the newly created clone tree are derived from the original IDs by appending\nthe given <code>sIdSuffix</code> (if no suffix is given, one will be created; it will be\nunique across multiple clone calls).\n\nThe <code>oOptions</code> configuration object can have the following properties:\n<ul>\n<li>The boolean value <code>cloneChildren</code> specifies whether associations/aggregations will be cloned</li>\n<li>The boolean value <code>cloneBindings</code> specifies if bindings will be cloned</li>\n</ul>\n\nFor each cloned object the following settings are cloned based on the metadata of the object and the defined options:\n<ul>\n<li>all properties that are not bound. If <code>cloneBinding</code> is <code>false</code>,\n    even these properties will be cloned; the values are used by reference, they are not cloned</li>\n<li>all aggregated objects that are not bound. If <code>cloneBinding</code> is <code>false</code>,\n    even the ones that are bound will be cloned; they are all cloned recursively using the same\n    <code>sIdSuffix</code></li>\n<li>all associated controls; when an association points to an object inside the cloned object tree,\n    then the cloned association will be modified to that it points to the clone of the target object.\n    When the association points to a managed object outside of the cloned object tree, then its\n    target won't be changed.</li>\n<li>all models set via <code>setModel()</code>; used by reference </li>\n<li>all property and aggregation bindings (if <code>cloneBindings</code> is <code>true</code>);\n    the pure binding information (path, model name) is cloned, but all other information like\n    template control or factory function, data type or formatter function are copied by reference.\n    The bindings themselves are created anew as they are specific for the combination (object, property, model).\n    As a result, any later changes to a binding of the original object are not reflected\n    in the clone, but changes to e.g the type or template etc. are.</li>\n</ul>\n\nEach clone is created by first collecting the above mentioned settings and then creating\na new instance with the normal constructor function. As a result, any side effects of\nmutator methods (<code>setProperty</code> etc.) or init hooks are repeated during clone creation.\nThere is no need to override <code>clone()</code> just to reproduce these internal settings!\n\nCustom controls however can override <code>clone()</code> to implement additional clone steps.\nThey usually will first call <code>clone()</code> on the super class and then modify the\nreturned clone accordingly.\n\nApplications <b>must never provide</b> the second parameter <code>aLocaleIds</code>.\nIt is determined automatically for the root object (and its non-existence also serves as\nan indicator for the root object). Specifying it will break the implementation of <code>clone()</code>."
				},
				{
					"name": "create",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "<code>vData</code>",
							"type": "sap.ui.base.ManagedObject|object",
							"optional": false,
							"description": "the data to create the object from"
						},
						{
							"name": "oKeyInfo",
							"type": "object",
							"optional": true
						},
						{
							"name": "oScope",
							"type": "object",
							"optional": true,
							"description": "Scope object to resolve types and formatters in bindings"
						}
					],
					"description": "Creates a new ManagedObject from the given data.\n\nIf <code>vData</code> is a managed object already, that object is returned.\nIf <code>vData</code> is an object (literal), then a new object is created with <code>vData</code>\nas settings. The type of the object is either determined by a property of name <code>Type</code>\n(capital 'T') in the <code>vData</code> or by a property <code>type</code> (lower case 't')\nin the <code>oKeyInfo</code> object. In both cases, the type can be specified by name (dot separated\nname of the class) or by the constructor function of the class."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"parameters": [
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this ManagedObject is not marked as changed"
						}
					],
					"description": "Cleans up the resources associated with this object and all its aggregated children.\n\nAfter an object has been destroyed, it can no longer be used in!\n\nApplications should call this method if they don't need the object any longer."
				},
				{
					"name": "destroyAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "the name of the aggregation"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this ManagedObject is not marked as changed"
						}
					],
					"description": "Destroys (all) the managed object(s) in the aggregation named <code>sAggregationName</code> and empties the\naggregation. If the aggregation did contain any object, this ManagedObject is marked as changed.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically destroy all objects in an aggregation.\nUse the concrete method destroy<i>XYZ</i> for aggregation 'XYZ' instead."
				},
				{
					"name": "detachFormatError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>formatError</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachModelContextChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>modelContextChange</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachParseError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>parseError</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachValidationError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>validationError</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachValidationSuccess",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>validationSuccess</code> event of this <code>sap.ui.base.ManagedObject</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "object literal with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to <code>sap.ui.base.ManagedObjectMetadata</code>."
						}
					],
					"description": "Defines a new subclass of ManagedObject with name <code>sClassName</code> and enriches it with\nthe information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> can contain the same information that {@link sap.ui.base.Object.extend} already accepts,\nplus the following new properties in the 'metadata' object literal:\n\n<ul>\n<li><code>library : <i>string</i></code></li>\n<li><code>properties : <i>object</i></code></li>\n<li><code>defaultProperty : <i>string</i></code></li>\n<li><code>aggregations : <i>object</i></code></li>\n<li><code>defaultAggregation : <i>string</i></code></li>\n<li><code>associations : <i>object</i></code></li>\n<li><code>events : <i>object</i></code></li>\n<li><code>specialSettings : <i>object</i></code>// this one is still experimental and not for public usage!</li>\n</ul>\n\nEach of these properties is explained in more detail lateron.\n\nExample:\n<pre>\nManagedObect.extend('sap.mylib.MyClass', {\n  metadata : {\n    library: 'sap.mylib',\n    properties : {\n      value: 'string',\n      width: 'sap.ui.core.CSSSize',\n      height: { type: 'sap.ui.core.CSSSize', defaultValue: '100%' }\n    },\n    defaultProperty : 'value',\n    aggregations : {\n      header : { type: 'sap.mylib.FancyHeader', multiple : false }\n      items : 'sap.ui.core.Control'\n    },\n    defaultAggregation : 'items',\n    associations : {\n      initiallyFocused : { type: 'sap.ui.core.Control' }\n    },\n    events: {\n      beforeOpen : {\n        parameters : {\n          opener : 'sap.ui.core.Control'\n        }\n      }\n    },\n  },\n\n  init: function() {\n  }\n\n}); // end of 'extend' call\n</pre>\n\nDetailed explanation of properties<br>\n\n\n<b>'library'</b> : <i>string</i><br>\nName of the library that the new subclass should belong to. If the subclass is a control or element, it will\nautomatically register with that library so that authoring tools can discover it.\nBy convention, the name of the subclass should have the library name as a prefix, e.g. 'sap.ui.commons.Panel' belongs\nto library 'sap.ui.commons'.\n\n\n<b>'properties'</b> : <i>object</i><br>\nAn object literal whose properties each define a new managed property in the ManagedObject subclass.\nThe value can either be a simple string which then will be assumed to be the type of the new property or it can be\nan object literal with the following properties\n<ul>\n<li><code>type: <i>string</i></code> type of the new property. Must either be one of the built-in types 'string', 'boolean', 'int', 'float', 'object' or 'any', or a\n    type created and registered with {@link sap.ui.base.DataType.createType} or an array type based on one of the previous types.</li>\n<li><code>group:<i>string</i></code> a semantic grouping of the properties, intended to be used in design time tools.\n    Allowed values are (case sensitive): Accessibility, Appearance, Behavior, Data, Designtime, Dimension, Identification, Misc</li>\n<li><code>defaultValue: <i>any</i></code> the default value for the property or null if there is no defaultValue.</li>\n<li><code>bindable: <i>boolean|string</i></code> (either can be omitted or set to the boolean value <code>true</code> or the magic string 'bindable')\n    If set to <code>true</code> or 'bindable', additional named methods <code>bind<i>Name</i></code> and <code>unbind<i>Name</i></code> are generated as convenience.\n    Despite its name, setting this flag is not mandatory to make the managed property bindable. The generic methods {@link #bindProperty} and\n    {@link #unbindProperty} can always be used. </li>\n</ul>\nProperty names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$].\nIf an aggregation in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will\nbe used as generic documentation of the aggregation.\n\nFor each public property 'foo', the following methods will be created by the \"extend\" method and will be added to the\nprototype of the subclass:\n<ul>\n<li>getFoo() - returns the current value of property 'foo'. Internally calls {@link #getProperty}\n<li>setFoo(v) - sets 'v' as the new value of property 'foo'. Internally calls {@link #setProperty}\n<li>bindFoo(c) - (only if property was defined to be 'bindable'): convenience function that wraps {@link #bindProperty}\n<li>unbindFoo() - (only if property was defined to be 'bindable'): convenience function that wraps {@link #unbindProperty}\n</ul>\n\n\n<b>'defaultProperty'</b> : <i>string</i><br>\nWhen specified, the default property must match the name of one of the properties defined for the new subclass (either own or inherited).\nThe named property can be used to identify the main property to be used for bound data. E.g. the value property of a field control.\n\n\n<b>'aggregations'</b> : <i>object</i><br>\nAn object literal whose properties each define a new aggregation in the ManagedObject subclass.\nThe value can either be a simple string which then will be assumed to be the type of the new aggregation or it can be\nan object literal with the following properties\n<ul>\n<li><code>type: <i>string</i></code> type of the new aggregation. must be the full global name of a ManagedObject subclass (in dot notation, e.g. 'sap.m.Button')</li>\n<li><code>[multiple]: <i>boolean</i></code> whether the aggregation is a 0..1 (false) or a 0..n aggregation (true), defaults to true </li>\n<li><code>[singularName]: <i>string</i></code>. Singular name for 0..n aggregations. For 0..n aggregations the name by convention should be the plural name.\n    Methods affecting multiple objects in an aggregation will use the plural name (e.g. getItems(), whereas methods that deal with a single object will use\n    the singular name (e.g. addItem). The framework knows a set of common rules for building plural form of English nouns and uses these rules to determine\n    a singular name on its own. if that name is wrong, a singluarName can be specified with this property. </li>\n<li>[visibility]: <i>string</i></code> either 'hidden' or 'public', defaults to 'public'. Aggregations that belong to the API of a class must be 'public' whereas\n    'hidden' aggregations typically are used for the implementation of composite classes (e.g. composite controls) </li>\n<li><code>bindable: <i>boolean|string</i></code> (either can be omitted or set to the boolean value <code>true</code> or the magic string 'bindable')\n    If set to <code>true</code> or 'bindable', additional named methods <code>bind<i>Name</i></code> and <code>unbind<i>Name</i></code> are generated as convenience.\n    Despite its name, setting this flag is not mandatory to make the managed aggregation bindable. The generic methods {@link #bindAggregation} and\n    {@link #unbindAggregation} can always be used. </li>\n</ul>\nAggregation names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$].\nThe name for a hidden aggregations might start with an underscore.\nIf an aggregation in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will\nbe used as generic documentation of the aggregation.\n\nFor each public aggregation 'item' of cardinality 0..1, the following methods will be created by the \"extend\" method and will be added to the\nprototype of the subclass:\n<ul>\n<li>getItem() - returns the current value of aggregation 'item'. Internally calls {@link #getAggregation} with a default value of <code>undefined</code></li>\n<li>setItem(o) - sets 'o' as the new aggregated object in aggregation 'item'. Internally calls {@link #setAggregation}</li>\n<li>destroyItem(o) - destroy a currently aggregated object in aggregation 'item' and clears the aggregation. Internally calls {@link #destroyAggregation}</li>\n<li>bindItem(c) - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #bindAggregation}</li>\n<li>unbindItem() - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #unbindAggregation}</li>\n</ul>\nFor a public aggregation 'items' of cardinality 0..n, the following methods will be created:\n<ul>\n<li>getItems() - returns an array with the objects contained in aggregation 'items'. Internally calls {@link #getAggregation} with a default value of <code>[]</code></li>\n<li>addItem(o) - adds an object as last element in the aggregation 'items'. Internally calls {@link #addAggregation}</li>\n<li>insertItem(o,p) - inserts an object into the aggregation 'items'. Internally calls {@link #insertAggregation}</li>\n<li>removeItem(v) - removes an object from the aggregation 'items'. Internally calls {@link #removeAggregation}</li>\n<li>removeItems() - removes all object from the aggregation 'items'. Internally calls {@link #removeAllAggregation}</li>\n<li>destroyItems() - destroy all currently aggregated objects in aggregation 'items' and clears the aggregation. Internally calls {@link #destroyAggregation}</li>\n<li>bindItems(c) - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #bindAggregation}</li>\n<li>unbindItems() - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #unbindAggregation}</li>\n</ul>\nFor private or hidden aggregations, no methods are generated.\n\n\n<b>'defaultAggregation'</b> : <i>string</i><br>\nWhen specified, the default aggregation must match the name of one of the aggregations defined for the new subclass (either own or inherited).\nThe named aggregation will be used in contexts where no aggregation is specified. E,g. when an object in an XMLView embeds other objects without\nnaming an aggregation, as in the following example:\n<pre>\n &lt;!-- assuming the defaultAggregation for Dialog is 'content' -->\n &lt;Dialog>\n   &lt;Text/>\n   &lt;Button/>\n &lt;/Dialog>\n</pre>\n\n\n<b>'associations'</b> : <i>object</i><br>\nAn object literal whose properties each define a new association of the ManagedObject subclass.\nThe value can either be a simple string which then will be assumed to be the type of the new association or it can be\nan object literal with the following properties\n<ul>\n<li><code>type: <i>string</i></code> type of the new association</li>\n<li><code>multiple: <i>boolean</i></code> whether the association is a 0..1 (false) or a 0..n association (true), defaults to false(1) for associations</li>\n<li><code>[singularName]: <i>string</i></code>. Singular name for 0..n associations. For 0..n associations the name by convention should be the plural name.\n    Methods affecting multiple objects in an association will use the plural name (e.g. getItems(), whereas methods that deal with a single object will use\n    the singular name (e.g. addItem). The framework knows a set of common rules for building plural form of English nouns and uses these rules to determine\n    a singular name on its own. if that name is wrong, a singluarName can be specified with this property.</li>\n</ul>\nAssociation names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$].\nIf an association in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will\nbe used as generic documentation of the association.\n\nFor each association 'ref' of cardinality 0..1, the following methods will be created by the \"extend\" method and will be added to the\nprototype of the subclass:\n<ul>\n<li>getRef() - returns the current value of association 'item'. Internally calls {@link #getAssociation} with a default value of <code>undefined</code></li>\n<li>setRef(o) - sets 'o' as the new associated object in association 'item'. Internally calls {@link #setAssociation}</li>\n</ul>\nFor a public association 'refs' of cardinality 0..n, the following methods will be created:\n<ul>\n<li>getRefs() - returns an array with the objects contained in association 'items'. Internally calls {@link #getAssociation} with a default value of <code>[]</code></li>\n<li>addRef(o) - adds an object as last element in the association 'items'. Internally calls {@link #addAssociation}</li>\n<li>removeRef(v) - removes an object from the association 'items'. Internally calls {@link #removeAssociation}</li>\n<li>removeAllRefs() - removes all objects from the association 'items'. Internally calls {@link #removeAllAssociation}</li>\n</ul>\n\n\n<b>'events'</b> : <i>object</i><br>\nAn object literal whose properties each define a new event of the ManagedObject subclass.\nThe value can either be a simple string which then will be assumed to be the type of the new association or it can be\nan object literal with the following properties\n<ul>\n<li><code>allowPreventDefault: <i>boolean</i></code> whether the event allows to prevented the default behavior of the event source</li>\n<li><code>parameters: <i>object</i></code> an object literal that describes the parameters of this event. </li>\n</ul>\nEvent names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$].\nIf an event in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will be used\nas generic documentation of the event.\n\nFor each event 'Some' the following methods will be created by the \"extend\" method and will be added to the\nprototype of the subclass:\n<ul>\n<li>attachSome(fn,o) - registers a listener for the event. Internally calls {@link #attachEvent}</li>\n<li>detachSome(fn,o) - deregisters a listener for the event. Internally calls {@link #detachEvent}</li>\n<li>fireSome() - fire the event. Internally calls {@link #fireEvent}</li>\n</ul>\n\n\n<b>'specialSettings'</b> : <i>object</i><br>\nSpecial settings are an experimental feature and MUST NOT BE USED by controls or applications outside of the sap.ui.core project."
				},
				{
					"name": "findAggregatedObjects",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject[]",
						"description": "Array of aggregated objects that passed the check"
					},
					"parameters": [
						{
							"name": "bRecursive",
							"type": "boolean",
							"optional": false,
							"description": "Whether the whole aggregation tree should be searched"
						},
						{
							"name": "fnCondition",
							"type": "boolean",
							"optional": true,
							"description": "Objects for which this function returns a falsy value will not be added\n         to the result array"
						}
					],
					"description": "Searches and returns all aggregated objects that pass the given check function.\n\nWhen the search is done recursively (<code>bRecursive === true</code>), it will be\nexecuted depth-first and ancestors will be added to the result array before their descendants.\n\nIf no check function is given, all aggregated objects will pass the check and be added\nto the result array.\n\n<b>Take care: this operation might be expensive.</b>"
				},
				{
					"name": "fireFormatError",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"element": {
									"name": "element",
									"type": "sap.ui.base.ManagedObject",
									"optional": true,
									"description": "ManagedObject instance whose property should have received the model update."
								},
								"property": {
									"name": "property",
									"type": "string",
									"optional": true,
									"description": "Name of the property for which the binding should have been updated."
								},
								"type": {
									"name": "type",
									"type": "sap.ui.model.Type",
									"optional": true,
									"description": "Data type used in the binding (if any)."
								},
								"newValue": {
									"name": "newValue",
									"type": "any",
									"optional": true,
									"description": "New value (model representation) as propagated from the model."
								},
								"oldValue": {
									"name": "oldValue",
									"type": "any",
									"optional": true,
									"description": "Old value (external representation) as previously stored in the ManagedObject."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>formatError</code> to attached listeners."
				},
				{
					"name": "fireModelContextChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>modelContextChange</code> to attached listeners."
				},
				{
					"name": "fireParseError",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"element": {
									"name": "element",
									"type": "sap.ui.base.ManagedObject",
									"optional": true,
									"description": "ManagedObject instance whose property initiated the model update."
								},
								"property": {
									"name": "property",
									"type": "string",
									"optional": true,
									"description": "Name of the property for which the bound model property should have been been updated."
								},
								"type": {
									"name": "type",
									"type": "sap.ui.model.Type",
									"optional": true,
									"description": "Data type used in the binding."
								},
								"newValue": {
									"name": "newValue",
									"type": "any",
									"optional": true,
									"description": "New value (external representation) as parsed by the binding."
								},
								"oldValue": {
									"name": "oldValue",
									"type": "any",
									"optional": true,
									"description": "Old value (external representation) as previously stored in the ManagedObject."
								},
								"message": {
									"name": "message",
									"type": "string",
									"optional": true,
									"description": "Localized message describing the parse error"
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>parseError</code> to attached listeners."
				},
				{
					"name": "fireValidationError",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"element": {
									"name": "element",
									"type": "sap.ui.base.ManagedObject",
									"optional": true,
									"description": "ManagedObject instance whose property initiated the model update."
								},
								"property": {
									"name": "property",
									"type": "string",
									"optional": true,
									"description": "Name of the property for which the bound model property should have been been updated."
								},
								"type": {
									"name": "type",
									"type": "sap.ui.model.Type",
									"optional": true,
									"description": "Data type used in the binding."
								},
								"newValue": {
									"name": "newValue",
									"type": "any",
									"optional": true,
									"description": "New value (external representation) as parsed and validated by the binding."
								},
								"oldValue": {
									"name": "oldValue",
									"type": "any",
									"optional": true,
									"description": "Old value (external representation) as previously stored in the ManagedObject."
								},
								"message": {
									"name": "message",
									"type": "string",
									"optional": true,
									"description": "Localized message describing the validation issues"
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>validationError</code> to attached listeners."
				},
				{
					"name": "fireValidationSuccess",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"element": {
									"name": "element",
									"type": "sap.ui.base.ManagedObject",
									"optional": true,
									"description": "ManagedObject instance whose property initiated the model update."
								},
								"property": {
									"name": "property",
									"type": "string",
									"optional": true,
									"description": "Name of the property for which the bound model property has been updated."
								},
								"type": {
									"name": "type",
									"type": "sap.ui.model.Type",
									"optional": true,
									"description": "Data type used in the binding."
								},
								"newValue": {
									"name": "newValue",
									"type": "any",
									"optional": true,
									"description": "New value (external representation) as propagated to the model.\n\n<b>Note: </b>the model might modify (normalize) the value again and this modification\nwill be stored in the ManagedObject. The 'newValue' parameter of this event contains\nthe value <b>before</b> such a normalization."
								},
								"oldValue": {
									"name": "oldValue",
									"type": "any",
									"optional": true,
									"description": "Old value (external representation) as previously stored in the ManagedObject."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>validationSuccess</code> to attached listeners."
				},
				{
					"name": "getAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject|Array",
						"description": "the aggregation array in case of 0..n-aggregations or the managed object or null in case of 0..1-aggregations"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "the name of the aggregation"
						},
						{
							"name": "oDefaultForCreation",
							"type": "sap.ui.base.ManagedObject|Array",
							"optional": false,
							"description": "the object that is used in case the current aggregation is empty"
						}
					],
					"description": "Returns the aggregated object(s) for the named aggregation of this ManagedObject.\n\nIf the aggregation does not contain any objects(s), the given <code>oDefaultForCreation</code>\n(or <code>null</code>) is set as new value of the aggregation and returned to the caller.\n\n<b>Note:</b> the need to specify a default value and the fact that it is stored as\nnew value of a so far empty aggregation is recognized as a shortcoming of this API\nbut can no longer be changed for compatibility reasons.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically read the content of an aggregation.\nUse the concrete method get<i>XYZ</i> for aggregation 'XYZ' instead."
				},
				{
					"name": "getAssociation",
					"visibility": "protected",
					"returnValue": {
						"type": "string|string[]",
						"description": "the ID of the associated managed object or an array of such IDs; may be null if the association has not been populated"
					},
					"parameters": [
						{
							"name": "sAssociationName",
							"type": "string",
							"optional": false,
							"description": "the name of the association"
						},
						{
							"name": "oDefaultForCreation",
							"type": "object",
							"optional": false,
							"description": "the object that is used in case the current aggregation is empty (only null or empty array allowed)"
						}
					],
					"description": "Returns the content of the association with the given name.\n\nFor associations of cardinality 0..1, a single string with the ID of an associated\nobject is returned (if any). For cardinality 0..n, an array with the IDs of the\nassociated objects is returned.\n\nIf the association does not contain any objects(s), the given <code>oDefaultForCreation</code>\nis set as new value of the association and returned to the caller. The only supported values for\n<code>oDefaultForCreation</code> are <code>null</code> and <code>undefined</code> in the case of\ncardinality 0..1 and <code>null</code>, <code>undefined</code> or an empty array (<code>[]</code>)\nin case of cardinality 0..n. If the argument is omitted, <code>null</code> is used independently\nfrom the cardinality.\n\n<b>Note:</b> the need to specify a default value and the fact that it is stored as\nnew value of a so far empty association is recognized as a shortcoming of this API\nbut can no longer be changed for compatibility reasons.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically retrieve the content of an association.\nUse the concrete method get<i>XYZ</i> for association 'XYZ' instead."
				},
				{
					"name": "getBinding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Binding",
						"description": "the binding for the given name"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of the property or aggregation"
						}
					],
					"description": "Get the binding object for a specific aggregation/property"
				},
				{
					"name": "getBindingContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context",
						"description": "The binding context of this object"
					},
					"parameters": [
						{
							"name": "sModelName",
							"type": "string",
							"optional": true,
							"description": "the name of the model or <code>undefined</code>"
						}
					],
					"description": "Get the binding context of this object for the given model name.\n\nIf the object does not have a binding context set on itself and has no own model set,\nit will use the first binding context defined in its parent hierarchy.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null</code>,\nthe empty string <code>\"\"</code> or the string literals <code>\"null\"</code> or <code>\"undefined\"</code> as model name.\n\nNote: A ManagedObject inherits binding contexts from the Core only when it is a descendant of an UIArea."
				},
				{
					"name": "getBindingInfo",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "the binding info object, containing at least a path property\n                  and, depending on the binding type, additional properties"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of the property or aggregation"
						}
					],
					"description": "Returns the binding infos for the given property or aggregation. The binding info contains information about path, binding object, format options,\nsorter, filter etc. for the property or aggregation."
				},
				{
					"name": "getBindingPath",
					"visibility": "protected",
					"returnValue": {
						"type": "string",
						"description": "the binding path for the given name"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of the property or aggregation"
						}
					],
					"description": "Get the binding path for a specific aggregation/property"
				},
				{
					"name": "getEventingParent",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.EventProvider",
						"description": "the parent event provider"
					},
					"description": "Returns the parent managed object as new eventing parent to enable control event bubbling\nor <code>null</code> if this object hasn't been added to a parent yet."
				},
				{
					"name": "getId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the objects's Id."
					},
					"description": "Returns the object's Id."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObjectMetadata",
						"description": "Metadata for the class of the object"
					},
					"description": "Returns the metadata for the class that this object belongs to."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.ManagedObjectMetadata",
						"description": "Metadata for the ManagedObject class."
					},
					"description": "Returns the metadata for the ManagedObject class."
				},
				{
					"name": "getModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "oModel"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string|undefined",
							"optional": true,
							"description": "name of the model to be retrieved"
						}
					],
					"description": "Get the model to be used for data bindings with the given model name.\nIf the object does not have a model set on itself, it will use the first\nmodel defined in its parent hierarchy.\n\nThe name can be omitted to reference the default model or it must be a non-empty string.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null</code>,\nthe empty string <code>\"\"</code> or the string literals <code>\"null\"</code> or <code>\"undefined\"</code> as model name."
				},
				{
					"name": "getObjectBinding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Binding",
						"description": "the element binding for the given model name"
					},
					"parameters": [
						{
							"name": "sModelName",
							"type": "string",
							"optional": false,
							"description": "the name of the model"
						}
					],
					"description": "Get the object binding object for a specific model"
				},
				{
					"name": "getOriginInfo",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "a map of properties describing the origin of this property value or null"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "the name of the property"
						}
					],
					"description": "Returns the origin info for the value of the given property.\n\nThe origin info might contain additional information for translatable\ntexts. The bookkeeping of this information is not active by default and must be\nactivated by configuration. Even then, it might not be present for all properties\nand their values depending on where the value came form."
				},
				{
					"name": "getParent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "The technical parent managed object or <code>null</code>"
					},
					"description": "Returns the parent managed object or <code>null</code> if this object hasn't been added to a parent yet.\n\nThe parent returned by this method is the technical parent used for data binding, invalidation,\nrendering etc. It might differ from the object on which the application originally added this object\n(the so called 'API parent'): some composite controls internally use hidden controls or containers\nto store their children. This method will return the innermost container that technically contains this\nobject as a child.\n\n<b>Example:</b>\n\nAssume that a <code>Dialog</code> internally uses a (hidden) <code>VerticalLayout</code> to store its content:\n\n<pre>\n  Dialog (API parent)\n   \\__ VerticalLayout (hidden composite part)\n      \\__ Text (API child)\n</pre>\n\nIf you add some content by calling the <code>Dialog.prototype.addContent</code> API, this will lead\nto the following observations:\n\n<pre>\n  oDialog.addContent(oText);\n  console.log(oText.getParent() === oDialog);  // false\n  console.log(oText.getParent() instanceof VerticalLayout); // true\n  console.log(oText.getParent().getParent() === oDialog); // true now, but might fail with later versions\n</pre>\n\nTechnically, from API perspective, <code>oText</code> is added as a child to <code>Dialog</code>.\nBut internally, the <code>Dialog</code> adds the child to the hidden <code>VerticalLayout</code> container.\nIf you now call the <code>getParent</code> method of the child, you will get the internal\n<code>VerticalLayout</code> object and not the <code>Dialog</code> API parent.\n\n<b>Note: </b> The internal (hidden) structure of a composite control is not fixed and may be changed\n(see also our \"Compatibility Rules\"). Therefore, you should <b>never</b> rely on a specific structure or\nobject being returned by <code>getParent</code>.\n\n<b>Note: </b> There is no API to determine the original API parent."
				},
				{
					"name": "getProperty",
					"visibility": "protected",
					"returnValue": {
						"type": "any",
						"description": "the value of the property"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "the name of the property"
						}
					],
					"description": "Returns the value for the property with the given <code>sPropertyName</code>.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically retrieve the value of a property.\nUse the concrete method get<i>XYZ</i> for property 'XYZ' instead."
				},
				{
					"name": "hasModel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether a model reference exists or not"
					},
					"description": "Check if any model is set to the ManagedObject or to one of its parents (including UIArea and Core).\n\nNote: A ManagedObject inherits models from the Core only when it is a descendant of an UIArea."
				},
				{
					"name": "indexOfAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "int",
						"description": "the index of the provided managed object in the aggregation."
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "the name of the aggregation"
						},
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the ManagedObject whose index is looked for."
						}
					],
					"description": "Searches for the provided ManagedObject in the named aggregation and returns its\n0-based index if found, or -1 otherwise. Returns -2 if the given named aggregation\nis of cardinality 0..1 and doesn't reference the given object.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically determine the position of an object in an aggregation.\nUse the concrete method indexOf<i>XYZ</i> for aggregation 'XYZ' instead."
				},
				{
					"name": "insertAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "the string identifying the aggregation the managed object <code>oObject</code>\n           should be inserted into."
						},
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the ManagedObject to add; if empty, nothing is inserted."
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the managed object should be inserted at; for a negative\n           value <code>iIndex</code>, <code>oObject</code> is inserted at position 0; for a value\n           greater than the current size of the aggregation, <code>oObject</code> is inserted at\n           the last position"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this ManagedObject as well as the added child are not marked as changed"
						}
					],
					"description": "Inserts managed object <code>oObject</code> to the aggregation named <code>sAggregationName</code> at\nposition <code>iIndex</code>.\n\nIf the given object is not valid with regard to the aggregation (if it is not an instance\nof the type specified for that aggregation) or when the method is called for an aggregation\nof cardinality 0..1, then an Error is thrown (see {@link #validateAggregation}.\n\nIf the given index is out of range with respect to the current content of the aggregation,\nit is clipped to that range (0 for iIndex < 0, n for iIndex > n).\n\nPlease note that this method does not work as expected when an object is added\nthat is already part of the aggregation. In order to change the index of an object\ninside an aggregation, first remove it, then insert it again.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically insert an object into an aggregation.\nUse the concrete method insert<i>XYZ</i> for aggregation 'XYZ' instead."
				},
				{
					"name": "invalidate",
					"visibility": "protected",
					"description": "This triggers rerendering of itself and its children.<br/> As <code>sap.ui.base.ManagedObject</code> \"bubbles up\" the\ninvalidate, changes to child-<code>Elements</code> will also result in rerendering of the whole sub tree."
				},
				{
					"name": "isBound",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether a binding exists for the given name"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of the property or aggregation"
						}
					],
					"description": "Find out whether a property or aggregation is bound"
				},
				{
					"name": "isInvalidateSuppressed",
					"visibility": "protected",
					"returnValue": {
						"description": "boolean"
					},
					"description": "Returns whether rerendering is currently suppressed on this ManagedObject"
				},
				{
					"name": "isTreeBinding",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "whether tree binding should be used or list binding. Default is false. Override method to change this behavior."
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the aggregation to bind (e.g. nodes for a tree managed object)"
						}
					],
					"description": "This method is used internally and should only be overridden by a tree managed object which utilizes the tree binding.\n In this case and if the aggregation is a tree node the overridden method should then return true.\n If true is returned the tree binding will be used instead of the list binding."
				},
				{
					"name": "propagateMessages",
					"visibility": "protected",
					"since": "1.28",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The property name"
						},
						{
							"name": "aMessages",
							"type": "array",
							"optional": false,
							"description": "The messages"
						}
					],
					"description": "Generic method which is called, whenever messages for this object exists."
				},
				{
					"name": "refreshAggregation",
					"visibility": "protected",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the aggregation to refresh"
						}
					],
					"description": "Generic method which can be called, when an aggregation needs to be refreshed.\nThis method does not make any change on the aggregation, but just calls the\n<code>getContexts</code> method of the binding to trigger fetching of new data.\n\nSubclasses should call this method only in the implementation of a named refresh method\nand for no other purposes. The framework might change the conditions under which the method\nis called and the method implementation might rely on those conditions."
				},
				{
					"name": "removeAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "the removed object or null"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "the string identifying the aggregation that the given object should be removed from"
						},
						{
							"name": "vObject",
							"type": "int|string|sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the position or ID of the ManagedObject that should be removed or that ManagedObject itself;\n           if <code>vObject</code> is invalid, a negative value or a value greater or equal than the current size\n           of the aggregation, nothing is removed."
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this ManagedObject is not marked as changed"
						}
					],
					"description": "Removes an object from the aggregation named <code>sAggregationName</code> with cardinality 0..n.\n\nThe removed object is not destroyed nor is it marked as changed.\n\nIf the given object is found in the aggregation, it is removed, it's parent relationship\nis unset and this ManagedObject is marked as changed. The removed object is returned as\nresult of this method. If the object could not be found, <code>undefined</code> is returned.\n\nThis method must only be called for aggregations of cardinality 0..n. The only way to remove objects\nfrom a 0..1 aggregation is to set a <code>null</code> value for them.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically remove an object from an aggregation.\nUse the concrete method remove<i>XYZ</i> for aggregation 'XYZ' instead."
				},
				{
					"name": "removeAllAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "Array",
						"description": "an array of the removed elements (might be empty)"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "the name of the aggregation"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this ManagedObject is not marked as changed"
						}
					],
					"description": "Removes all objects from the 0..n-aggregation named <code>sAggregationName</code>.\n\nThe removed objects are not destroyed nor are they marked as changed.\n\nAdditionally, it clears the parent relationship of all removed objects, marks this\nManagedObject as changed and returns an array with the removed objects.\n\nIf the aggregation did not contain any objects, an empty array is returned and this\nManagedObject is not marked as changed.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically remove all objects from an aggregation.\nUse the concrete method removeAll<i>XYZ</i> for aggregation 'XYZ' instead."
				},
				{
					"name": "removeAllAssociation",
					"visibility": "protected",
					"returnValue": {
						"type": "Array",
						"description": "an array with the IDs of the removed objects (might be empty)"
					},
					"parameters": [
						{
							"name": "sAssociationName",
							"type": "string",
							"optional": false,
							"description": "the name of the association"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this ManagedObject is not marked as changed"
						}
					],
					"description": "Removes all the objects in the 0..n-association named <code>sAssociationName</code> and returns an array\nwith their IDs. This ManagedObject is marked as changed, if the association contained any objects.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically remove all object from an association.\nUse the concrete method removeAll<i>XYZ</i> for association 'XYZ' instead."
				},
				{
					"name": "removeAssociation",
					"visibility": "protected",
					"returnValue": {
						"type": "string|null",
						"description": "ID of the removed <code>ManagedObject</code> or <code>null</code>"
					},
					"parameters": [
						{
							"name": "sAssociationName",
							"type": "string",
							"optional": false,
							"description": "the string identifying the association the <code>ManagedObject</code> should be removed from."
						},
						{
							"name": "vObject",
							"type": "int|string|sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the position or ID of the <code>ManagedObject</code> to remove or the <code>ManagedObject</code> itself; if <code>vObject</code> is invalid input,\n           a negative value or a value greater or equal than the current size of the association, nothing is removed"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if <code>true</code>, the managed object is not marked as changed"
						}
					],
					"description": "Removes a <code>ManagedObject</code> from the association named <code>sAssociationName</code>.\n\nIf an object is removed, the ID of that object is returned and this <code>ManagedObject</code> is\nmarked as changed. Otherwise <code>null</code> is returned.\n\nIf the same object was added multiple times to the same association, only a single\noccurrence of it will be removed by this method. If the object is not found or if the\nparameter can't be interpreted neither as a <code>ManagedObject</code> (or ID) nor as an index in\nthe association, nothing will be removed. The same is true if an index is given and if\nthat index is out of range for the association.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically remove an object from an association.\nUse the concrete method remove<i>XYZ</i> for association 'XYZ' instead."
				},
				{
					"name": "removePropagationListener",
					"visibility": "restricted",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "listener",
							"type": "function",
							"optional": false,
							"description": "function"
						}
					],
					"description": "remove a propagation listener"
				},
				{
					"name": "setAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "name of an 0..1 aggregation"
						},
						{
							"name": "oObject",
							"type": "object",
							"optional": false,
							"description": "the managed object that is set as aggregated object"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this ManagedObject is not marked as changed"
						}
					],
					"description": "Sets a new object in the named 0..1 aggregation of this ManagedObject and\nmarks this ManagedObject as changed.\n\nIf the given object is not valid with regard to the aggregation (if it is not an instance\nof the type specified for that aggregation) or when the method is called for an aggregation\nof cardinality 0..n, then an Error is thrown (see {@link #validateAggregation}.\n\nIf the new object is the same as the currently aggregated object, then the internal state\nis not modified and this ManagedObject is not marked as changed.\n\nIf the given object is different, the parent of a previously aggregated object is cleared\n(it must have been this ManagedObject before), the parent of the given object is set to this\nManagedObject and {@link #invalidate} is called for this object.\n\nNote that this method does neither return nor destroy the previously aggregated object.\nThis behavior is inherited by named set methods (see below) in subclasses.\nTo avoid memory leaks, applications therefore should first get the aggregated object,\nkeep a reference to it or destroy it, depending on their needs, and only then set a new\nobject.\n\nNote that ManagedObject only implements a single level of change tracking: if a first\ncall to setAggregation recognizes a change, 'invalidate' is called. If another call to\nsetAggregation reverts that change, invalidate() will be called again, the new status\nis not recognized as being 'clean' again.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically set an object in an aggregation.\nUse the concrete method set<i>XYZ</i> for aggregation 'XYZ' or the generic {@link #applySettings} instead."
				},
				{
					"name": "setAssociation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAssociationName",
							"type": "string",
							"optional": false,
							"description": "name of the association"
						},
						{
							"name": "sId",
							"type": "string|sap.ui.base.ManagedObject",
							"optional": false,
							"description": "the ID of the managed object that is set as an association, or the managed object itself or null"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, the managed objects invalidate method is not called"
						}
					],
					"description": "Sets the associated object for the given managed association of cardinality '0..1' and\nmarks this ManagedObject as changed.\n\nThe associated object can either be given by itself or by its id. If <code>null</code> or\n<code>undefined</code> is given, the association is cleared.\n\n<b>Note:</b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically set an object in an association.\nUse the concrete method set<i>XYZ</i> for association 'XYZ' or the generic {@link #applySettings} instead."
				},
				{
					"name": "setBindingContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the new binding context for this object"
						},
						{
							"name": "sModelName",
							"type": "string",
							"optional": true,
							"description": "the name of the model to set the context for or <code>undefined</code>"
						}
					],
					"description": "Set the binding context for this ManagedObject for the model with the given name.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null</code>,\nthe empty string <code>\"\"</code> or the string literals <code>\"null\"</code> or <code>\"undefined\"</code> as model name.\n\nNote: A ManagedObject inherits binding contexts from the Core only when it is a descendant of an UIArea."
				},
				{
					"name": "setModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oModel",
							"type": "sap.ui.model.Model",
							"optional": false,
							"description": "the model to be set or <code>null</code> or <code>undefined</code>"
						},
						{
							"name": "sName",
							"type": "string",
							"optional": true,
							"description": "the name of the model or <code>undefined</code>"
						}
					],
					"description": "Sets or unsets a model for the given model name for this ManagedObject.\n\nThe <code>sName</code> must either be <code>undefined</code> (or omitted) or a non-empty string.\nWhen the name is omitted, the default model is set/unset.\n\nWhen <code>oModel</code> is <code>null</code> or <code>undefined</code>, a previously set model\nwith that name is removed from this ManagedObject. If an ancestor (parent, UIArea or Core) has a model\nwith that name, this ManagedObject will immediately inherit that model from its ancestor.\n\nAll local bindings that depend on the given model name are updated (created if the model references\nbecame complete now; updated, if any model reference has changed; removed if the model references\nbecame incomplete now).\n\nAny change (new model, removed model, inherited model) is also applied to all aggregated descendants\nas long as a descendant doesn't have its own model set for the given name.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null</code>,\nthe empty string <code>\"\"</code> or the string literals <code>\"null\"</code> or <code>\"undefined\"</code> as model name.\n\nNote: By design, it is not possible to hide an inherited model by setting a <code>null</code> or\n<code>undefined</code> model. Applications can set an empty model to achieve the same.\n\nNote: A ManagedObject inherits models from the Core only when it is a descendant of an UIArea."
				},
				{
					"name": "setProperty",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "name of the property to set"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "value to set the property to"
						},
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, the managed object is not marked as changed"
						}
					],
					"description": "Sets the given value for the given property after validating and normalizing it,\nmarks this object as changed.\n\nIf the value is not valid with regard to the declared data type of the property,\nan Error is thrown. In case <code>null</code> or <code>undefined</code> is passed,\nthe default value for this property is used (see {@link #validateProperty}. If the validated and normalized\n<code>oValue</code> equals the current value of the property, the internal state of\nthis object is not changed. If the value changes, it is stored internally and\nthe {@link #invalidate} method is called on this object. In the case of TwoWay\ndatabinding, the bound model is informed about the property change.\n\nNote that ManagedObject only implements a single level of change tracking: if a first\ncall to setProperty recognizes a change, 'invalidate' is called. If another call to\nsetProperty reverts that change, invalidate() will be called again, the new status\nis not recognized as being 'clean' again.\n\n<b>Note:</b> This method is a low level API as described in <a href=\"#lowlevelapi\">the class documentation</a>.\nApplications or frameworks must not use this method to generically set a property.\nUse the concrete method set<i>XYZ</i> for property 'XYZ' or the generic {@link #applySettings} instead."
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "a string description of this managed object"
					},
					"description": "Returns a simple string representation of this managed object.\n\nMainly useful for tracing purposes."
				},
				{
					"name": "unbindAggregation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of the aggregation"
						},
						{
							"name": "bSuppressReset",
							"type": "boolean",
							"optional": false,
							"description": "whether the reset to empty aggregation when unbinding should be suppressed"
						}
					],
					"description": "Unbind the aggregation from the model"
				},
				{
					"name": "unbindContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "sModelName",
							"type": "string",
							"optional": true,
							"description": "name of the model to remove the context for."
						}
					],
					"description": "Removes the defined binding context of this object, all bindings will now resolve\nrelative to the parent context again.",
					"deprecated": {
						"since": "1.11.1",
						"text": "please use unbindElement instead."
					}
				},
				{
					"name": "unbindObject",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "sModelName",
							"type": "string",
							"optional": true,
							"description": "name of the model to remove the context for."
						}
					],
					"description": "Removes the defined binding context of this object, all bindings will now resolve\nrelative to the parent context again."
				},
				{
					"name": "unbindProperty",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of the property"
						},
						{
							"name": "bSuppressReset",
							"type": "boolean",
							"optional": false,
							"description": "whether the reset to the default value when unbinding should be suppressed"
						}
					],
					"description": "Unbind the property from the model"
				},
				{
					"name": "updateAggregation",
					"visibility": "protected",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the aggregation to update"
						}
					],
					"description": "Generic method which is called whenever an aggregation binding has changed.\n\nDepending on the type of the list binding and on additional configuration, this method either\ndestroys all elements in the aggregation <code>sName</code> and recreates them anew\nor tries to reuse as many existing objects as possible. It is up to the method which\nstrategy it uses.\n\nIn case a managed object needs special handling for an aggregation binding, it can create\na named update method (e.g. <code>update<i>Rows</i></code> for an aggregation <code>rows</code>)\nwhich then will be called by the framework instead of this generic method.\n\nSubclasses should call this method only in the implementation of such a named update method\nand for no other purposes. The framework might change the conditions under which the method\nis called and the method implementation might rely on those conditions."
				},
				{
					"name": "validateAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject|any",
						"description": "the passed object"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "the name of the aggregation"
						},
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject|any",
							"optional": false,
							"description": "the aggregated object or a primitive value"
						},
						{
							"name": "bMultiple",
							"type": "boolean",
							"optional": false,
							"description": "whether the caller assumes the aggregation to have cardinality 0..n"
						}
					],
					"description": "Checks whether the given value is of the proper type for the given aggregation name.\n\nThis method is already called by {@link #setAggregation}, {@link #addAggregation} and {@link #insertAggregation}.\nIn many cases, subclasses of ManagedObject don't need to call it again in their mutator methods."
				},
				{
					"name": "validateProperty",
					"visibility": "protected",
					"returnValue": {
						"type": "any",
						"description": "the normalized value for the passed value or for the default value if null or undefined was passed"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "the name of the property"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "the value"
						}
					],
					"description": "Checks whether the given value is of the proper type for the given property name.\n\nIn case <code>null</code> or <code>undefined</code> is passed, the default value for\nthis property is used as value. If no default value is defined for the property, the\ndefault value of the type of the property is used.\n\nIf the property has a data type that is an instance of sap.ui.base.DataType and if\na <code>normalize</code> function is defined for that type, that function will be\ncalled with the resulting value as only argument. The result of the function call is\nthen used instead of the raw value.\n\nThis method is called by {@link #setProperty}. In many cases, subclasses of\nManagedObject don't need to call it themselves."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.base.ManagedObjectMetadata",
			"basename": "ManagedObjectMetadata",
			"resource": "sap/ui/base/ManagedObjectMetadata.js",
			"module": "sap/ui/base/ManagedObjectMetadata",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "0.8.6",
			"description": "<strong>Note about Info Objects</strong>\n\nSeveral methods in this class return info objects that describe a property,\naggregation, association or event of the class described by this metadata object.\nThe type, structure and behavior of these info objects is not yet documented and\nnot part of the stable, public API.\n\nCode using such methods and the returned info objects therefore needs to be aware\nof the following restrictions:\n\n<ul>\n<li>the set of properties exposed by each info object, their type and value\n    might change as well as the class of the info object itself.\n\n    Properties that represent settings provided during class definition\n    (in the oClassInfo parameter of the 'extend' call, e.g. 'type', 'multiple'\n    of an aggregation) are more likely to stay the same than additional, derived\n    properties like '_iKind'.</li>\n\n<li>info objects must not be modified / enriched although they technically could.</li>\n\n<li>the period of validity of info objects is not defined. They should be\n    referenced only for a short time and not be kept as members of long living\n    objects or closures.</li>\n\n</ul>",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sClassName",
						"type": "string",
						"optional": false,
						"description": "fully qualified name of the described class"
					},
					{
						"name": "oClassInfo",
						"type": "object",
						"optional": false,
						"description": "static info to construct the metadata from"
					}
				],
				"description": "Creates a new metadata object that describes a subclass of ManagedObject.\n\n<b>Note:</b> Code outside the <code>sap.ui.base</code> namespace must not call this\nconstructor directly. Instances will be created automatically when a new class is\ndefined with one of the {@link sap.ui.base.ManagedObject.extend <i>SomeClass</i>.extend}\nmethods.\n\n<b>Note</b>: throughout this class documentation, the described subclass of ManagedObject\nis referenced as <i>the described class</i>."
			},
			"methods": [
				{
					"name": "getAggregation",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "An info object describing the aggregation or <code>undefined</code>"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": true,
							"description": "name of the aggregation or empty"
						}
					],
					"description": "Returns an info object for the named public aggregation of the described class\nno matter whether the aggregation was defined by the class itself or by one of its\nancestor classes.\n\nIf neither the class nor its ancestor classes define a public aggregation with the given\nname, <code>undefined</code> is returned.\n\nIf the name is not given (or has a falsy value), then it is substituted by the\nname of the default aggregation of the 'described class' (if any).\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getAggregations",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of aggregation info objects keyed by aggregation names"
					},
					"description": "Returns a map of info objects for the public aggregations of the described class.\nAggregations declared by ancestor classes are not included.\n\nThe returned map keys the aggregation info objects by their name.\nIn case of 0..1 aggregations this is the singular name, otherwise it is the plural name.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getAllAggregations",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of aggregation info objects keyed by aggregation names"
					},
					"description": "Returns a map of info objects for all public aggregations of the described class,\nincluding public aggregations form the ancestor classes.\n\nThe returned map keys the aggregation info objects by their name.\nIn case of 0..1 aggregations this is the singular name, otherwise it is the plural\nname.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getAllAssociations",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of association info objects keyed by association names"
					},
					"description": "Returns a map of info objects for all public associations of the described class,\nincluding public associations form the ancestor classes.\n\nThe returned map keys the association info objects by their name.\nIn case of 0..1 associations this is the singular name, otherwise it is the plural name.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getAllEvents",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of event info objects keyed by event names"
					},
					"description": "Returns a map of info objects for all public events of the described class,\nincluding public events form the ancestor classes.\n\nThe returned map keys the event info objects by their name.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getAllPrivateAggregations",
					"visibility": "protected",
					"returnValue": {
						"type": "map",
						"description": "Map of aggregation infos keyed by aggregation names"
					},
					"description": "Returns a map of info objects for all private (hidden) aggregations of the described class,\nincluding private aggregations from the ancestor classes.\n\nThe returned map contains aggregation info objects keyed by the aggregation name.\nIn case of 0..1 aggregations this is the singular name, otherwise it is the plural name.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getAllProperties",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of property info objects keyed by the property names"
					},
					"description": "Returns a map of info objects for all public properties of the described class,\nincluding public properties from the ancestor classes.\n\nThe returned map keys the property info objects by their name.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getAssociation",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "An info object describing the association or <code>undefined</code>"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the association"
						}
					],
					"description": "Returns an info object for the named public association of the described class,\nno matter whether the association was defined by the class itself or by one of its\nancestor classes.\n\nIf neither the described class nor its ancestor classes define an association with\nthe given name, <code>undefined</code> is returned.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getAssociations",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of association info objects keyed by association names"
					},
					"description": "Returns a map of info objects for all public associations of the described class.\nAssociations declared by ancestor classes are not included.\n\nThe returned map keys the association info objects by their name.\nIn case of 0..1 associations this is the singular name, otherwise it is the plural name.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getEvent",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "An info object describing the event or <code>undefined</code>"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the event"
						}
					],
					"description": "Returns an info object for the named public event of the described class,\nno matter whether the event was defined by the class itself or by one of its\nancestor classes.\n\nIf neither the described class nor its ancestor classes define an event with the\ngiven name, <code>undefined</code> is returned.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getEvents",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of event info objects keyed by event names"
					},
					"description": "Returns a map of info objects for the public events of the described class.\nEvents declared by ancestor classes are not included.\n\nThe returned map keys the event info objects by their name.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getLibraryName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the name of the library"
					},
					"description": "Returns the name of the library that contains the described UIElement."
				},
				{
					"name": "getManagedAggregation",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "aggregation info object or undefined"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "name of the aggregation to be retrieved or empty"
						}
					],
					"description": "Returns the info object for the named public or private aggregation declared by the\ndescribed class or by any of its ancestors.\n\nIf the name is not given (or has a falsy value), then it is substituted by the\nname of the default aggregation of the described class (if it is defined).\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getProperties",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of property info objects keyed by the property names"
					},
					"description": "Returns a map of info objects for the public properties of the described class.\nProperties declared by ancestor classes are not included.\n\nThe returned map keys the property info objects by their name.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "An info object describing the property or <code>undefined</code>"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the property"
						}
					],
					"description": "Returns an info object for the named public property of the described class,\nno matter whether the property was defined by the class itself or by one of its\nancestor classes.\n\nIf neither the described class nor its ancestor classes define a property with the\ngiven name, <code>undefined</code> is returned.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "getPropertyDefaults",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of default values keyed by property names"
					},
					"description": "Returns a map of default values for all properties declared by the\ndescribed class and its ancestors, keyed by the property name."
				},
				{
					"name": "getPropertyLikeSetting",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "An info object describing the property or aggregation or <code>undefined</code>"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the property like setting"
						}
					],
					"description": "Returns an info object for a public setting with the given name that either is\na managed property or a managed aggregation of cardinality 0..1 and with at least\none simple alternative type. The setting can be defined by the class itself or\nby one of its ancestor classes.\n\nIf neither the described class nor its ancestor classes define a suitable setting\nwith the given name, <code>undefined</code> is returned.\n\n<b>Warning:</b> Type, structure and behavior of the returned info objects is not documented\n  and therefore not part of the API. See the {@link #constructor Notes about Info objects}\n  in the constructor documentation of this class."
				},
				{
					"name": "hasAggregation",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true, if the aggregation exists"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the aggregation"
						}
					],
					"description": "Checks the existence of the given aggregation by its name."
				},
				{
					"name": "hasAssociation",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true, if the association exists"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the association"
						}
					],
					"description": "Checks the existence of the given association by its name"
				},
				{
					"name": "hasEvent",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true, if the event exists"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the event"
						}
					],
					"description": "Checks the existence of the given event by its name"
				},
				{
					"name": "hasProperty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true, if the property exists"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the property"
						}
					],
					"description": "Checks the existence of the given property by its name"
				},
				{
					"name": "isGeneratedId",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "whether the ID is likely to be generated"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "the ID that should be tested"
						}
					],
					"description": "Test whether a given ID looks like it was automatically generated.\n\nExamples:\n<pre>\nTrue for:\n  \"foo--__bar04--baz\"\n  \"foo--__bar04\"\n  \"__bar04--baz\"\n  \"__bar04\"\n  \"__bar04--\"\n  \"__bar04--foo\"\nFalse for:\n  \"foo__bar04\"\n  \"foo__bar04--baz\"\n</pre>\n\nSee {@link sap.ui.base.ManagedObjectMetadata.prototype.uid} for details on ID generation."
				},
				{
					"name": "uid",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "A (hopefully unique) control ID"
					},
					"description": "Calculates a new ID for an instance of this class.\n\nNote that the calculated short name part is usually not unique across\nall classes, but doesn't have to be. It might even be empty when the\nclass name consists of invalid characters only."
				},
				{
					"name": "uid",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "A (hopefully unique) control id"
					},
					"parameters": [
						{
							"name": "sIdPrefix",
							"type": "string",
							"optional": false,
							"description": "prefix for the new ID"
						}
					],
					"description": "Calculates a new ID based on a prefix.\n\nTo guarantee uniqueness of the generated IDs across all ID prefixes,\nprefixes must not end with digits."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.base.Metadata",
			"basename": "Metadata",
			"resource": "sap/ui/base/Metadata.js",
			"module": "sap/ui/base/Metadata",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "0.8.6",
			"description": "Metadata for a class.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sClassName",
						"type": "string",
						"optional": false,
						"description": "fully qualified name of the described class"
					},
					{
						"name": "oClassInfo",
						"type": "object",
						"optional": false,
						"description": "info to construct the class and its metadata from"
					}
				],
				"description": "Creates a new metadata object from the given static infos.\n\nNote: throughout this class documentation, the described subclass of Object\nis referenced as <i>the described class</i>."
			},
			"methods": [
				{
					"name": "getAllPublicMethods",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "array with names of all public methods provided by the described class and its ancestors"
					},
					"description": "Returns an array with the names of all public methods declared by the described class\nand its ancestors."
				},
				{
					"name": "getClass",
					"visibility": "public",
					"returnValue": {
						"type": "function",
						"description": "class described by this metadata"
					},
					"description": "Returns the (constructor of the) described class"
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "name of the described class"
					},
					"description": "Returns the fully qualified name of the described class"
				},
				{
					"name": "getParent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "metadata of the base class"
					},
					"description": "Returns the metadata object of the base class of the described class\nor null if the class has no (documented) base class."
				},
				{
					"name": "getPublicMethods",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "array with names of public methods declared by the described class"
					},
					"description": "Returns an array with the names of the public methods declared by the described class."
				},
				{
					"name": "isAbstract",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the class is abstract"
					},
					"description": "Returns whether the described class is abstract"
				},
				{
					"name": "isDeprecated",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the class is considered deprecated"
					},
					"since": "1.26.4",
					"description": "Whether the described class is deprecated and should not be used any more"
				},
				{
					"name": "isFinal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the class is final"
					},
					"description": "Returns whether the described class is final"
				},
				{
					"name": "isInstanceOf",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether this class implements the interface"
					},
					"parameters": [
						{
							"name": "sInterface",
							"type": "string",
							"optional": false,
							"description": "name of the interface to test for (in dot notation)"
						}
					],
					"description": "Checks whether the described class or one of its ancestor classes implements the given interface."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.base.Object",
			"basename": "Object",
			"resource": "sap/ui/base/Object.js",
			"module": "sap/ui/base/Object",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"description": "Base class for all SAPUI5 Objects",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a sap.ui.base.Object."
			},
			"methods": [
				{
					"name": "defineClass",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "the created metadata object"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of an (already declared) constructor function"
						},
						{
							"name": "oStaticInfo",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"baseType": {
									"name": "baseType",
									"type": "string",
									"optional": false,
									"description": "qualified name of a base class"
								},
								"publicMethods": {
									"name": "publicMethods",
									"type": "string[]",
									"optional": false,
									"description": "array of names of public methods"
								}
							},
							"description": "static info used to create the metadata object"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.base.Metadata."
						}
					],
					"description": "Creates metadata for a given class and attaches it to the constructor and prototype of that class.\n\nAfter creation, metadata can be retrieved with getMetadata().\n\nThe static info can at least contain the following entries:\n<ul>\n<li>baseType: {string} fully qualified name of a base class or empty\n<li>publicMethods: {string} an array of method names that will be visible in the interface proxy returned by {@link #getInterface}\n</ul>",
					"deprecated": {
						"since": "1.3.1",
						"text": "Use the static <code>extend</code> method of the desired base class (e.g. {@link sap.ui.base.Object.extend})"
					}
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Destructor method for objects"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"since": "1.3.1",
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "structured object with informations about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor function for the metadata object. If not given, it defaults to sap.ui.base.Metadata."
						}
					],
					"description": "Creates a subclass of class sap.ui.base.Object with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain three kinds of informations:\n<ul>\n<li><code>metadata:</code> an (optional) object literal with metadata about the class.\nThe information in the object literal will be wrapped by an instance of {@link sap.ui.base.Metadata Metadata}\nand might contain the following information\n<ul>\n<li><code>interfaces:</code> {string[]} (optional) set of names of implemented interfaces (defaults to no interfaces)</li>\n<li><code>publicMethods:</code> {string[]} (optional) list of methods that should be part of the public\nfacade of the class</li>\n<li><code>abstract:</code> {boolean} (optional) flag that marks the class as abstract (purely informational, defaults to false)</li>\n<li><code>final:</code> {boolean} (optional) flag that marks the class as final (defaults to false)</li>\n</ul>\nSubclasses of sap.ui.base.Object can enrich the set of supported metadata (e.g. see {@link sap.ui.core.Element.extend}).\n</li>\n\n<li><code>constructor:</code> a function that serves as a constructor function for the new class.\nIf no constructor function is given, the framework creates a default implementation that delegates all\nits arguments to the constructor function of the base class.\n</li>\n\n<li><i>any-other-name:</i> any other property in the <code>oClassInfo</code> is copied into the prototype\nobject of the newly created class. Callers can thereby add methods or properties to all instances of the\nclass. But be aware that the given values are shared between all instances of the class. Usually, it doesn't\nmake sense to use primitive values here other than to declare public constants.\n</li>\n\n</ul>\n\nThe prototype object of the newly created class uses the same prototype as instances of the base class\n(prototype chaining).\n\nA metadata object is always created, even if there is no <code>metadata</code> entry in the <code>oClassInfo</code>\nobject. A getter for the metadata is always attached to the prototype and to the class (constructor function)\nitself.\n\nLast but not least, with the third argument <code>FNMetaImpl</code> the constructor of a metadata class\ncan be specified. Instances of that class will be used to represent metadata for the newly created class\nand for any subclass created from it. Typically, only frameworks will use this parameter to enrich the\nmetadata for a new class hierarchy they introduce (e.g. {@link sap.ui.core.Element.extend Element})."
				},
				{
					"name": "getInterface",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.Interface",
						"description": "the public interface of the object"
					},
					"description": "Returns the public interface of the object."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"returnValue": {
						"description": "{sap.ui.base.Metadata] metadata for the class of the object"
					},
					"description": "Returns the metadata for the class that this object belongs to.\n\nThis method is only defined when metadata has been declared by using {@link sap.ui.base.Object.defineClass}\nor {@link sap.ui.base.Object.extend}."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.base.ObjectPool",
			"basename": "ObjectPool",
			"resource": "sap/ui/base/ObjectPool.js",
			"module": "sap/ui/base/ObjectPool",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Manages a pool of objects all of the same type;\nthe type has to be specified at pool construction time.\n\nMaintains a list of free objects of the given type.\nIf {@link sap.ui.base.ObjectPool.prototype.borrowObject} is called, an existing free object\nis taken from the pool and the <code>init</code> method is called on this\nobject.\n\nWhen no longer needed, any borrowed object should be returned to\nthe pool by calling {@link #returnObject}. At that point in time,\nthe reset method is called on the object and the object is added to the\nlist of free objects.\n\nSee {@link sap.ui.base.Poolable} for a description of the contract for poolable objects.\n\nExample:\n<pre>\n  this.oEventPool = new sap.ui.base.ObjectPool(sap.ui.base.Event);\n  var oEvent = this.oEventPool.borrowObject(iEventId, mParameters);\n</pre>",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oObjectClass",
						"type": "function",
						"optional": false,
						"description": "constructor for the class of objects that this pool should manage"
					}
				],
				"description": "Creates an ObjectPool instance based on the given oObjectClass.&lt;br/&gt;\nIf there is a free pooled instance, returns that one, otherwise creates a new one.&lt;br/&gt;\nIn order to be maintained by the ObjectPool, oObjectClass must implement\nmethods described in the class description."
			},
			"methods": [
				{
					"name": "borrowObject",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the borrowed object of the same type that has been specified for this pool"
					},
					"parameters": [
						{
							"name": "any",
							"type": "any",
							"optional": true,
							"description": "optional initialization parameters for the borrowed object"
						}
					],
					"description": "Borrows a free object from the pool. Any arguments to this method\nare forwarded to the init method of the borrowed object."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.base.ObjectPool with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.base.ObjectPool."
				},
				{
					"name": "returnObject",
					"visibility": "public",
					"parameters": [
						{
							"name": "oObject",
							"type": "object",
							"optional": false,
							"description": "the object to return to the pool"
						}
					],
					"description": "Returns an object to the pool. The object must have been borrowed from this\npool beforehand. The reset method is called on the object before it is added\nto the set of free objects."
				}
			]
		},
		{
			"kind": "interface",
			"name": "sap.ui.base.Poolable",
			"basename": "Poolable",
			"resource": "sap/ui/base/ObjectPool.js",
			"module": "sap/ui/base/ObjectPool",
			"static": true,
			"visibility": "public",
			"description": "Contract for objects that can be pooled by ObjectPool",
			"methods": [
				{
					"name": "init",
					"visibility": "public",
					"description": "Called by the object pool when this instance will be actived for a caller.\nThe same method will be called after a new instance has been created by an otherwise\nexhausted pool.\n\nIf the caller provided any arguments to {@link sap.ui.base.ObjectPool#borrowObject}\nall arguments will be propagated to this method."
				},
				{
					"name": "reset",
					"visibility": "public",
					"description": "Called by the object pool when an instance is returned to the pool.\nWhile no specific implementation is required, poolable objects in general\nshould clean all caller specific state (set to null) in this method to\navoid memory leaks and to enforce garbage collection of the caller state."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core",
			"basename": "core",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "The SAPUI5 Core Runtime.\n\nContains the UI5 jQuery plugins (jQuery.sap.*), the Core and all its components,\nbase classes for Controls, Components and the Model View Controller classes.",
			"methods": [
				{
					"name": "CustomStyleClassSupport",
					"module": "sap/ui/core/CustomStyleClassSupport",
					"export": "",
					"visibility": "public",
					"static": true,
					"description": "Applies the support for custom style classes on the prototype of a <code>sap.ui.core.Element</code>.\n\nAll controls (subclasses of <code>sap.ui.core.Control</code>) provide the support custom style classes. The control API provides functions\nto the application which allow it to add, remove or change style classes for the control.\nIn general, this option is not available for elements because elements do not necessarily have a representation in the DOM.\n\nThis function can be used by a control developer to explicitly enrich the API of his/her element implementation with the API functions\nfor the custom style class support. It must be called on the prototype of the element.\n\n<b>Usage Example:</b>\n<pre>\nsap.ui.define(['sap/ui/core/Element', 'sap/ui/core/CustomStyleClassSupport'], function(Element, CustomStyleClassSupport) {\n   \"use strict\";\n   var MyElement = Element.extend(\"my.MyElement\", {\n      metadata : {\n         //...\n      }\n      //...\n   });\n\n   CustomStyleClassSupport.apply(MyElement.prototype);\n\n   return MyElement;\n}, true);\n</pre>\n\nFurthermore, the function <code>oRenderManager.writeClasses(oElement);</code> ({@link sap.ui.core.RenderManager#writeClasses}) must be called within\nthe renderer of the control to which the element belongs, when writing the root tag of the element. This ensures the classes are written to the HTML.\n\nThis function adds the following functions to the elements prototype:\n<ul>\n<li><code>addStyleClass</code>: {@link sap.ui.core.Control#addStyleClass}</li>\n<li><code>removeStyleClass</code>: {@link sap.ui.core.Control#removeStyleClass}</li>\n<li><code>toggleStyleClass</code>: {@link sap.ui.core.Control#toggleStyleClass}</li>\n<li><code>hasStyleClass</code>: {@link sap.ui.core.Control#hasStyleClass}</li>\n</ul>\nIn addition the clone function of the element is extended to ensure that the custom style classes are also available on the cloned element.\n\n<b>Note:</b> This function can only be used <i>within</i> control development. An application cannot add style class support on existing elements by calling this function.",
					"resource": "sap/ui/core/CustomStyleClassSupport.js"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.AccessibleLandmarkRole",
			"basename": "AccessibleLandmarkRole",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "AccessibleLandmarkRole",
			"static": true,
			"visibility": "public",
			"description": "Defines the accessible landmark roles for ARIA support. This enumeration is used with the AccessibleRole control property.\nFor more information, goto \"Roles for Accessible Rich Internet Applications (WAI-ARIA Roles)\" at the www.w3.org homepage.",
			"properties": [
				{
					"name": "Banner",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Represents the ARIA role <code>banner</code>.\n\nA banner usually appears at the top of the page and typically spans the full width."
				},
				{
					"name": "Complementary",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Represents the ARIA role <code>complementary</code>.\n\nA section of the page, designed to be complementary to the main content at a similar level in the DOM hierarchy."
				},
				{
					"name": "Main",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Represents the ARIA role <code>main</code>.\n\nThe main content of a page."
				},
				{
					"name": "Navigation",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Represents the ARIA role <code>navigation</code>.\n\nA region that contains a collection of items and objects that, as a whole, combine to create a navigation facility."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "No explicit role is applicable.\n\nThe interpretation of this value depends on the control / element which defines a property with this type.\nNormally this value means that no accessible landmark should be written."
				},
				{
					"name": "Region",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Represents the ARIA role <code>region</code>.\n\nA section of a page, that is important enough to be included in a page summary or table of contents."
				},
				{
					"name": "Search",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Represents the ARIA role <code>search</code>.\n\nA region that contains a collection of items and objects that, as a whole, combine to create a search facility."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.AccessibleRole",
			"basename": "AccessibleRole",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "AccessibleRole",
			"static": true,
			"visibility": "public",
			"description": "Defines the accessible roles for ARIA support. This enumeration is used with the AccessibleRole control property.\nFor more information, goto \"Roles for Accessible Rich Internet Applications (WAI-ARIA Roles)\" at the www.w3.org homepage.",
			"properties": [
				{
					"name": "Alert",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A message with an alert or error information."
				},
				{
					"name": "AlertDialog",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A separate window with an alert or error information."
				},
				{
					"name": "Application",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A software unit executing a set of tasks for the user."
				},
				{
					"name": "Banner",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Usually defined as the advertisement at the top of a web page.\nThe banner content typically contains the site or company logo, or other key advertisements."
				},
				{
					"name": "Button",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Allows user-triggered actions."
				},
				{
					"name": "Checkbox",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A control that has three possible values: true, false, mixed."
				},
				{
					"name": "ColumnHeader",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A table cell containing header information for a column."
				},
				{
					"name": "Combobox",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Allows selecting an item from a list, or to enter data directly in the input field."
				},
				{
					"name": "ContentInfo",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Information about the content on the page. Examples are footnotes, copyrights, or links to privacy statements."
				},
				{
					"name": "Definition",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The content of the associated element represents a definition.\nIf there is a definition element within the content, this one represents the term being defined."
				},
				{
					"name": "Description",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Descriptive content for a page element."
				},
				{
					"name": "Dialog",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A small window that is designed to interrupt the current application processing\nin order to inform the user and to get some response."
				},
				{
					"name": "Directory",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A list of references to members of a single group."
				},
				{
					"name": "Document",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Content that contains related information, such as a book."
				},
				{
					"name": "Grid",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Contains cells of tabular data arranged in rows and columns, for example in a table."
				},
				{
					"name": "GridCell",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A table cell in a grid where the cells can be active, editable, and selectable.\nCells may have functional relationships to controls, for example."
				},
				{
					"name": "Group",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A section of user interface objects."
				},
				{
					"name": "Heading",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A heading for a section of the page."
				},
				{
					"name": "Img",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A container for a collection of elements that form an image."
				},
				{
					"name": "Link",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "An interactive reference to a resource."
				},
				{
					"name": "List",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A container for non-interactive list items which are the children of the list."
				},
				{
					"name": "Listbox",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A widget that allows the user to select one or more items from a list.\nThe items within the list are static and can contain images."
				},
				{
					"name": "ListItem",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A single item in a list."
				},
				{
					"name": "Log",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "An area where new information is added, or old information disappears.\nInformation types are chat logs, messaging, or error logs, for example.\nThe log contains a sequence: New information is always added to the end of the log."
				},
				{
					"name": "Main",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Defines the main content of a document."
				},
				{
					"name": "Marquee",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Is used to scroll text across the page."
				},
				{
					"name": "Menu",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Offers a list of choices to the user."
				},
				{
					"name": "Menubar",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A container for menu items where each item may activate a submenu."
				},
				{
					"name": "MenuItem",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A child in a menu."
				},
				{
					"name": "MenuItemCheckbox",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A checkable menu item (tri-state)."
				},
				{
					"name": "MenuItemRadio",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A menu item which is part of a group of menuitemradio roles."
				},
				{
					"name": "Navigation",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A collection of links suitable for use when navigating the document or related documents."
				},
				{
					"name": "Note",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The content is parenthetic or ancillary to the main content of the resource."
				},
				{
					"name": "Option",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A selectable item in a list represented by a select."
				},
				{
					"name": "Presentation",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "An element whose role is presentational does not need to be mapped to the accessibility API."
				},
				{
					"name": "ProgressBar",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Shows the execution progress in applications providing functions that take a long time."
				},
				{
					"name": "Radio",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "An option in single-select list. Only one radio control in a radiogroup can be selected at the same time."
				},
				{
					"name": "RadioGroup",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A group of radio controls."
				},
				{
					"name": "Region",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A large section on the web page."
				},
				{
					"name": "Row",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A row of table cells."
				},
				{
					"name": "RowHeader",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A table cell containing header information for a row."
				},
				{
					"name": "Search",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A search section of a web document. In many cases, this is a form used to submit search requests about the site,\nor a more general Internet wide search service."
				},
				{
					"name": "Secondary",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A unique section of the document. In the case of a portal, this may include time display, weather forecast,\nor stock price."
				},
				{
					"name": "SeeAlso",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Indicates that the element contains content that is related to the main content of the page."
				},
				{
					"name": "Separator",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A line or bar that separates sections of content."
				},
				{
					"name": "Slider",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A user input where the user selects an input in a given range. This form of range expects an analogous keyboard\ninterface."
				},
				{
					"name": "SpinButton",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Allows users to select a value from a list of given entries where exactly one value is displayed at runtime, and\nthe other ones can be displayed by scrolling using the arrow up and arrow down key."
				},
				{
					"name": "Status",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A container for processing advisory information."
				},
				{
					"name": "Tab",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A header for a tab panel."
				},
				{
					"name": "Tablist",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A list of tabs which are references to tab panels."
				},
				{
					"name": "Tabpanel",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A container for the resources associated with a tab."
				},
				{
					"name": "Textbox",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Inputs that allow free-form text as their value."
				},
				{
					"name": "Timer",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A numerical counter which indicates an amount of elapsed time from a start point,\nor of the time remaining until a certain end point."
				},
				{
					"name": "Toolbar",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A collection of commonly used functions represented in compact visual form."
				},
				{
					"name": "Tooltip",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A popup that displays a description for an element when the user passes over or rests on that element.\nSupplement to the normal tooltip processing of the user agent."
				},
				{
					"name": "Tree",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A form of a list (tree) having groups (subtrees) inside groups (subtrees), where the sub trees can be collapsed and expanded."
				},
				{
					"name": "TreeGrid",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A grid whose rows are expandable and collapsable in the same manner as the ones of trees."
				},
				{
					"name": "TreeItem",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A tree node"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.AppCacheBuster",
			"basename": "AppCacheBuster",
			"resource": "sap/ui/core/AppCacheBuster.js",
			"module": "sap/ui/core/AppCacheBuster",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "The AppCacheBuster is used to hook into URL relevant functions in jQuery\nand SAPUI5 and rewrite the URLs with a timestamp segment. The timestamp\ninformation is fetched from the server and used later on for the URL\nrewriting.",
			"methods": [
				{
					"name": "convertURL",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "modified URL when matching the index or unmodified when not"
					},
					"parameters": [
						{
							"name": "sUrl",
							"type": "string",
							"optional": false,
							"description": "any URL"
						}
					],
					"description": "Converts the given URL if it matches a URL in the cachebuster index.\nIf not then the same URL will be returned. To prevent URLs from being\nmodified by the application cachebuster you can implement the function\n<code>sap.ui.core.AppCacheBuster.handleURL</code>."
				},
				{
					"name": "handleURL",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> to rewrite or <code>false</code> to ignore"
					},
					"parameters": [
						{
							"name": "sUrl",
							"type": "string",
							"optional": false,
							"description": "any URL"
						}
					],
					"description": "Callback function which can be overwritten to programmatically decide\nwhether to rewrite the given URL or not."
				},
				{
					"name": "normalizeURL",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "normalized URL"
					},
					"parameters": [
						{
							"name": "sUrl",
							"type": "string",
							"optional": false,
							"description": "any URL"
						}
					],
					"description": "Normalizes the given URL and make it absolute."
				},
				{
					"name": "register",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "base",
							"type": "string",
							"optional": false,
							"description": "URL of an application providing a cachebuster index file"
						}
					],
					"description": "Registers an application. Loads the cachebuster index file from this\nlocations. All registered files will be considered by the cachebuster\nand the URLs will be prefixed with the timestamp of the index file."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.BarColor",
			"basename": "BarColor",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "BarColor",
			"static": true,
			"visibility": "public",
			"description": "Configuration options for the colors of a progress bar",
			"properties": [
				{
					"name": "CRITICAL",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Color: yellow (#faf2b0)"
				},
				{
					"name": "NEGATIVE",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Color: red (#ff9a90)"
				},
				{
					"name": "NEUTRAL",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Color: blue (#b8d0e8)"
				},
				{
					"name": "POSITIVE",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Color: green (#b5e7a8)"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.BusyIndicator",
			"basename": "BusyIndicator",
			"resource": "sap/ui/core/BusyIndicator.js",
			"module": "sap/ui/core/BusyIndicator",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Provides methods to show or hide a waiting animation covering the whole\npage and blocking user interaction.",
			"events": [
				{
					"name": "Close",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false,
									"description": "is the instance\n                                   that fired the event"
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"$Busy": {
											"name": "$Busy",
											"type": "jQuery",
											"optional": false,
											"description": "is the jQuery object\n                                   of the BusyIndicator"
										}
									},
									"description": "provides all additional parameters\n                                   that are delivered with the event"
								}
							},
							"description": "is the event object"
						}
					],
					"description": "The <code>Close</code> event is fired, <strong>before</strong> the\n<code>BusyIndicator</code> has closed."
				},
				{
					"name": "Open",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false,
									"description": "is the instance\n                                   that fired the event"
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"$Busy": {
											"name": "$Busy",
											"type": "jQuery",
											"optional": false,
											"description": "is the jQuery object\n                                   of the BusyIndicator"
										}
									},
									"description": "provides all additional parameters\n                                   that are delivered with the event"
								}
							},
							"description": "is the event object"
						}
					],
					"description": "The <code>Open</code> event is fired, after the <code>BusyIndicator</code>\nhas opened."
				}
			],
			"methods": [
				{
					"name": "attachClose",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.BusyIndicator",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs.\n           This function will be called on the oListener-instance (if\n           present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function."
						}
					],
					"description": "Registers a handler for the \"close\" event"
				},
				{
					"name": "attachOpen",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.BusyIndicator",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This\n           function will be called on the oListener-instance (if present)\n           or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function."
						}
					],
					"description": "Registers a handler for the \"open\" event."
				},
				{
					"name": "detachClose",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.BusyIndicator",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The callback function to unregister"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Unregisters a handler for the \"close\" event"
				},
				{
					"name": "detachOpen",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.BusyIndicator",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The callback function to unregister"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Unregisters a handler for the \"open\" event"
				},
				{
					"name": "hide",
					"visibility": "public",
					"static": true,
					"description": "Removes the BusyIndicator from the screen"
				},
				{
					"name": "show",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "iDelay",
							"type": "int",
							"optional": true,
							"description": "The delay in milliseconds before opening the\n                      BusyIndicator. It is not opened if hide() is called\n                      before end of the delay. If no delay (or no valid\n                      delay) is given, the default value is used."
						}
					],
					"description": "Displays the BusyIndicator and starts blocking all user input.\nThis only happens after some delay and if after that delay the\nBusyIndicator.hide() has not yet been called in the meantime.\nThere is a certain default value for the delay, but that one can be\noverridden."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.BusyIndicatorUtils",
			"basename": "BusyIndicatorUtils",
			"resource": "sap/ui/core/BusyIndicatorUtils.js",
			"module": "sap/ui/core/BusyIndicatorUtils",
			"export": "",
			"static": true,
			"visibility": "public"
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.CalendarType",
			"basename": "CalendarType",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "CalendarType",
			"static": true,
			"visibility": "public",
			"description": "The types of Calendar",
			"properties": [
				{
					"name": "Gregorian",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Gregorian calendar"
				},
				{
					"name": "Islamic",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Islamic calendar"
				},
				{
					"name": "Japanese",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Japanese emperor calendar"
				},
				{
					"name": "Persian",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Persian Jalali calendar"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.Collision",
			"basename": "Collision",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Collision",
			"final": true,
			"static": true,
			"visibility": "public",
			"description": "Collision behavior: horizontal/vertical.\n\nDefines how the position of an element should be adjusted in case it overflows the window in some direction. For both\ndirections this can be \"flip\", \"fit\" or \"none\". If only one behavior is provided it is applied to both directions.\nExamples: \"flip\", \"fit none\"."
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Component",
			"basename": "Component",
			"resource": "sap/ui/core/Component.js",
			"module": "sap/ui/core/Component",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.9.2",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Base Class for Component.",
			"ui5-metadata": {
				"stereotype": "component",
				"specialSettings": [
					{
						"name": "componentData",
						"type": "any",
						"visibility": "public"
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Optional ID for the new control; generated automatically if\n           no non-empty ID is given. Note: this can be omitted, no matter\n           whether <code>mSettings</code> are given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Optional object with initial settings for the\n           new Component instance"
					}
				],
				"description": "Creates and initializes a new Component with the given <code>sId</code> and\nsettings.\n\nThe set of allowed entries in the <code>mSettings</code> object depends on\nthe concrete subclass and is described there. See {@link sap.ui.core.Component}\nfor a general description of this argument.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject} can be used."
			},
			"properties": [
				{
					"name": "_fnOnInstanceCreated",
					"visibility": "restricted",
					"static": true,
					"since": "1.43.0",
					"type": "undefined",
					"description": "Callback handler which will be executed once a component instance has\nbeen created by {#link sap.ui.component}. The component instance and the\nconfiguration object will be passed into the registered function.\nFor async scenarios (<code>vConfig.async = true</code>) a Promise can be provided as\nreturn value from the callback handler to delay resolving the Promise\nreturned by {@link sap.ui.component}.\nIn synchronous scenarios the return value will be ignored.\n\nExample usage:\n<pre>\nsap.ui.require(['sap/ui/core/Component'], function(Component) {\n  Component._fnOnInstanceCreated = function(oComponent, oConfig) {\n    // do some logic with the config\n\n    // optionally return a Promise\n    return doAsyncStuff();\n  };\n});\n</pre>\n<b>ATTENTION:</b> This hook must only be used by UI flexibility (library:\nsap.ui.fl) and will be replaced with a more generic solution!"
				}
			],
			"methods": [
				{
					"name": "exit",
					"visibility": "protected",
					"description": "Cleans up the Component instance before destruction.\n\nApplications must not call this hook method directly, it is called by the\nframework when the element is {@link #destroy destroyed}.\n\nSubclasses of Component should override this hook to implement any necessary\ncleanup."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Component with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "getComponentData",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "componentData"
					},
					"since": "1.15.0",
					"description": "Returns user specific data object"
				},
				{
					"name": "getEventBus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.EventBus",
						"description": "the event bus"
					},
					"since": "1.20.0",
					"description": "Returns the event bus of this component."
				},
				{
					"name": "getInterface",
					"visibility": "public"
				},
				{
					"name": "getManifest",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "manifest."
					},
					"since": "1.33.0",
					"description": "Returns the manifest defined in the metadata of the component.\nIf not specified, the return value is null."
				},
				{
					"name": "getManifestEntry",
					"visibility": "public",
					"returnValue": {
						"type": "any|null",
						"description": "Value of the manifest section or the key (could be any kind of value)"
					},
					"since": "1.33.0",
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "Either the manifest section name (namespace) or a concrete path"
						}
					],
					"description": "Returns the configuration of a manifest section or the value for a\nspecific path. If no section or key is specified, the return value is null.\n\nExample:\n<code>\n  {\n    \"sap.ui5\": {\n      \"dependencies\": {\n        \"libs\": {\n          \"sap.m\": {}\n        },\n        \"components\": {\n          \"my.component.a\": {}\n        }\n      }\n  });\n</code>\n\nThe configuration above can be accessed in the following ways:\n<ul>\n<li><b>By section/namespace</b>: <code>oComponent.getManifestEntry(\"sap.ui5\")</code></li>\n<li><b>By path</b>: <code>oComponent.getManifestEntry(\"/sap.ui5/dependencies/libs\")</code></li>\n</ul>\n\nBy section/namespace returns the configuration for the specified manifest\nsection and by path allows to specify a concrete path to a dedicated entry\ninside the manifest. The path syntax always starts with a slash (/)."
				},
				{
					"name": "getManifestObject",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Manifest",
						"description": "manifest."
					},
					"since": "1.33.0",
					"description": "Returns the manifest object."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentMetadata",
						"description": "Metadata for the specific class of the current instance."
					},
					"description": "Returns the metadata for the specific class of the current instance."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.ComponentMetadata",
						"description": "Metadata for the Component class."
					},
					"description": "Returns the metadata for the Component class."
				},
				{
					"name": "getOwnerComponentFor",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Component",
						"description": "the owner Component or <code>undefined</code>."
					},
					"since": "1.25.1",
					"parameters": [
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject",
							"optional": false,
							"description": "Object to retrieve the owner Component for"
						}
					],
					"description": "Returns the Component instance in whose \"context\" the given ManagedObject has been created\nor <code>undefined</code>.\n\nThis is a convenience wrapper around {@link sap.ui.core.Component.getOwnerIdFor Component.getOwnerIdFor}.\nIf the owner ID cannot be determined for reasons documented on <code>getOwnerForId</code>\nor when the Component for the determined ID no longer exists, <code>undefined</code>\nwill be returned."
				},
				{
					"name": "getOwnerIdFor",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "ID of the owner or <code>undefined</code>"
					},
					"since": "1.15.1",
					"parameters": [
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject",
							"optional": false,
							"description": "Object to retrieve the owner ID for"
						}
					],
					"description": "Returns the ID of the object in whose \"context\" the given ManagedObject has been created.\n\nFor objects that are not ManagedObjects or for which the owner is unknown,\n<code>undefined</code> will be returned as owner ID.\n\n<strong>Note</strong>: Ownership for objects is only checked by the framework at the time\nwhen they are created. It is not checked or updated afterwards. And it can only be detected\nwhile the {@link sap.ui.core.Component#runAsOwner Component.runAsOwner} function is executing.\nWithout further action, this is only the case while the content of an UIComponent is\n{@link sap.ui.core.UIComponent#createContent constructed} or when a\n{@link sap.ui.core.routing.Router Router} creates a new View and its content.\n\n<strong>Note</strong>: This method does not guarantee that the returned owner ID belongs\nto a Component. Currently, it always does. But future versions of UI5 might introduce a\nmore fine grained ownership concept, e.g. taking Views into account. Callers that\nwant to deal only with components as owners, should use the following method:\n{@link sap.ui.core.Component.getOwnerComponentFor Component.getOwnerComponentFor}.\nIt guarantees that the returned object (if any) will be a Component.\n\n<strong>Further note</strong> that only the ID of the owner is recorded. In rare cases,\nwhen the lifecycle of a ManagedObject is not bound to the lifecycle of its owner,\n(e.g. by the means of aggregations), then the owner might have been destroyed already\nwhereas the ManagedObject is still alive. So even the existence of an owner ID is\nnot a guarantee for the existence of the corresponding owner."
				},
				{
					"name": "getService",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "Promise which will be resolved with the Service interface"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sLocalServiceAlias",
							"type": "string",
							"optional": false,
							"description": "Local service alias as defined in the manifest.json"
						}
					],
					"description": "Returns a service interface for the {@link sap.ui.core.service.Service Service}\ndeclared in the descriptor for components (manifest.json). The declaration needs\nto be done in the <code>sap.ui5/services</code> section as follows:\n<pre>\n{\n  [...]\n  \"sap.ui5\": {\n    \"services\": {\n      \"myLocalServiceAlias\": {\n        \"factoryName\": \"my.ServiceFactory\",\n        [\"optional\": true]\n      }\n    }\n  }\n  [...]\n}\n</pre>\nThe service declaration is used to define a mapping between the local\nalias for the service that can be used in the Component and the name of\nthe service factory which will be used to create a service instance.\n\nThe <code>getService</code> function will look up the service factory and will\ncreate a new instance by using the service factory function\n{@link sap.ui.core.service.ServiceFactory#createInstance createInstance}\nThe optional property defines that the service is not mandatory and the\nusage will not depend on the availability of this service. When requesting\nan optional service the <code>getService</code> function will reject but\nthere will be no error logged in the console.\n\nWhen creating a new instance of the service the Component context will be\npassed as <code>oServiceContext</code> as follows:\n<pre>\n{\n  \"scopeObject\": this,     // the Component instance\n  \"scopeType\": \"component\" // the stereotype of the scopeObject\n}\n</pre>\n\nThe service will be created only once per Component and reused in future\ncalls to the <code>getService</code> function.\n<p>\nThis function will return a <code>Promise</code> which provides the service\ninterface when resolved. If the <code>factoryName</code> could not\nbe found in the {@link sap.ui.core.service.ServiceFactoryRegistry Service Factory Registry}\nor the service declaration in the descriptor for components (manifest.json)\nis missing the Promise will reject.\n\nThis is an example of how the <code>getService</code> function can be used:\n<pre>\noComponent.getService(\"myLocalServiceAlias\").then(function(oService) {\n  oService.doSomething();\n}).catch(function(oError) {\n  jQuery.sap.log.error(oError);\n});\n</pre>"
				},
				{
					"name": "init",
					"visibility": "protected",
					"description": "Initializes the Component instance after creation.\n\nApplications must not call this hook method directly, it is called by the\nframework while the constructor of an Component is executed.\n\nSubclasses of Component should override this hook to implement any necessary\ninitialization."
				},
				{
					"name": "onConfigChange",
					"visibility": "public",
					"since": "1.15.1",
					"parameters": [
						{
							"name": "sConfigKey",
							"type": "string",
							"optional": false,
							"description": "Error message."
						}
					],
					"description": "The hook which gets called when the static configuration of the component\nhas been changed by some configuration extension."
				},
				{
					"name": "onWindowBeforeUnload",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "a string if a prompt should be displayed to the user\n                 confirming closing the Component (e.g. when the Component is not yet saved)."
					},
					"since": "1.15.1",
					"description": "The window before unload hook. Override this method in your Component class\nimplementation, to handle cleanup before the real unload or to prompt a question\nto the user, if the component should be exited."
				},
				{
					"name": "onWindowError",
					"visibility": "public",
					"since": "1.15.1",
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "The error message."
						},
						{
							"name": "sFile",
							"type": "string",
							"optional": false,
							"description": "File where the error occurred"
						},
						{
							"name": "iLine",
							"type": "number",
							"optional": false,
							"description": "Line number of the error"
						}
					],
					"description": "The window error hook. Override this method in your Component class implementation\nto listen to unhandled errors."
				},
				{
					"name": "onWindowUnload",
					"visibility": "public",
					"since": "1.15.1",
					"description": "The window unload hook. Override this method in your Component class\nimplementation, to handle cleanup of the component once the window\nwill be unloaded (e.g. closed)."
				},
				{
					"name": "runAsOwner",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "result of function <code>fn</code>"
					},
					"since": "1.25.1",
					"parameters": [
						{
							"name": "fn",
							"type": "function",
							"optional": false,
							"description": "Function to execute"
						}
					],
					"description": "Calls the function <code>fn</code> once and marks all ManagedObjects\ncreated during that call as \"owned\" by this Component.\n\nNested calls of this method are supported (e.g. inside a newly created,\nnested component). The currently active owner Component will be remembered\nbefore executing <code>fn</code> and restored afterwards."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.ComponentContainer",
			"basename": "ComponentContainer",
			"resource": "sap/ui/core/ComponentContainer.js",
			"module": "sap/ui/core/ComponentContainer",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Component Container",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Component name, the package where the component is contained. This property can only be applied initially.",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "url",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The URL of the component. This property can only be applied initially.",
						"methods": [
							"getUrl",
							"setUrl"
						]
					},
					{
						"name": "handleValidation",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Enable/disable validation handling by MessageManager for this component.\nThe resulting Messages will be propagated to the controls.\nThis property can only be applied initially.",
						"methods": [
							"getHandleValidation",
							"setHandleValidation"
						]
					},
					{
						"name": "settings",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The settings object passed to the component when created. This property can only be applied initially.",
						"methods": [
							"getSettings",
							"setSettings"
						]
					},
					{
						"name": "propagateModel",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Defines whether binding information is propagated to the component.",
						"methods": [
							"getPropagateModel",
							"setPropagateModel"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Container width in CSS size",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Container height in CSS size",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "lifecycle",
						"type": "sap.ui.core.ComponentLifecycle",
						"defaultValue": "Legacy",
						"group": "Misc",
						"visibility": "public",
						"description": "Lifecycle behavior for the Component associated by the ComponentContainer.\nBy default the behavior is \"Legacy\" which means that the ComponentContainer\ntakes care to destroy the Component once the ComponentContainer is destroyed\nbut not when a new Component is associated.",
						"methods": [
							"getLifecycle",
							"setLifecycle"
						]
					}
				],
				"associations": [
					{
						"name": "component",
						"singularName": "component",
						"type": "sap.ui.core.UIComponent",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The component displayed in this ComponentContainer.",
						"methods": [
							"getComponent",
							"setComponent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ComponentContainer.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.ComponentContainer with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ID"
					},
					"description": "ID of the element which is the current target of the association <code>component</code>, or <code>null</code>."
				},
				{
					"name": "getHandleValidation",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>handleValidation</code>"
					},
					"description": "Gets current value of property <code>handleValidation</code>.\r\rEnable/disable validation handling by MessageManager for this component.\nThe resulting Messages will be propagated to the controls.\nThis property can only be applied initially.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\r\rContainer height in CSS size"
				},
				{
					"name": "getLifecycle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentLifecycle",
						"description": "Value of property <code>lifecycle</code>"
					},
					"description": "Gets current value of property <code>lifecycle</code>.\r\rLifecycle behavior for the Component associated by the ComponentContainer.\nBy default the behavior is \"Legacy\" which means that the ComponentContainer\ntakes care to destroy the Component once the ComponentContainer is destroyed\nbut not when a new Component is associated.\r\rDefault value is <code>Legacy</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.ComponentContainer."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\r\rComponent name, the package where the component is contained. This property can only be applied initially."
				},
				{
					"name": "getPropagateModel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>propagateModel</code>"
					},
					"description": "Gets current value of property <code>propagateModel</code>.\r\rDefines whether binding information is propagated to the component.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getSettings",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>settings</code>"
					},
					"description": "Gets current value of property <code>settings</code>.\r\rThe settings object passed to the component when created. This property can only be applied initially."
				},
				{
					"name": "getUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>url</code>"
					},
					"description": "Gets current value of property <code>url</code>.\r\rThe URL of the component. This property can only be applied initially."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\r\rContainer width in CSS size"
				},
				{
					"name": "setComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentContainer",
						"description": "the reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vComponent",
							"type": "string|sap.ui.core.UIComponent",
							"optional": false,
							"description": "Id of an element which becomes the new target of this component association. Alternatively, an element instance may be given."
						}
					],
					"description": "Sets the component of the container. Depending on the ComponentContainer's\nlifecycle this might destroy the old associated Component.\n\nOnce the component is associated with the container the cross connection\nto the component will be set and the models will be propagated if defined."
				},
				{
					"name": "setHandleValidation",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bHandleValidation",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>handleValidation</code>"
						}
					],
					"description": "Sets a new value for property <code>handleValidation</code>.\r\rEnable/disable validation handling by MessageManager for this component.\nThe resulting Messages will be propagated to the controls.\nThis property can only be applied initially.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\r\rContainer height in CSS size\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLifecycle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLifecycle",
							"type": "sap.ui.core.ComponentLifecycle",
							"optional": false,
							"description": "New value for property <code>lifecycle</code>"
						}
					],
					"description": "Sets a new value for property <code>lifecycle</code>.\r\rLifecycle behavior for the Component associated by the ComponentContainer.\nBy default the behavior is \"Legacy\" which means that the ComponentContainer\ntakes care to destroy the Component once the ComponentContainer is destroyed\nbut not when a new Component is associated.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>Legacy</code>."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\r\rComponent name, the package where the component is contained. This property can only be applied initially.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPropagateModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPropagateModel",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>propagateModel</code>"
						}
					],
					"description": "Sets a new value for property <code>propagateModel</code>.\r\rDefines whether binding information is propagated to the component.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setSettings",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oSettings",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>settings</code>"
						}
					],
					"description": "Sets a new value for property <code>settings</code>.\r\rThe settings object passed to the component when created. This property can only be applied initially.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUrl",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>url</code>"
						}
					],
					"description": "Sets a new value for property <code>url</code>.\r\rThe URL of the component. This property can only be applied initially.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ComponentContainer",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\r\rContainer width in CSS size\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.ComponentLifecycle",
			"basename": "ComponentLifecycle",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "ComponentLifecycle",
			"static": true,
			"visibility": "public",
			"description": "Enumeration for different lifecycle behaviors of Components created by the\nComponentContainer.",
			"properties": [
				{
					"name": "Application",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Application managed lifecycle means that the Application takes care\nto destroy the Components associated with the ComponentContainer."
				},
				{
					"name": "Container",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Container managed lifecycle means that the ComponentContainer takes\ncare to destroy the Components associated with the ComponentContainer\nonce the ComponentContainer is destroyed or a new Component is associated."
				},
				{
					"name": "Legacy",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Legacy lifecycle means that the ComponentContainer takes care\nto destroy the Component which is associated with the\nComponentContainer once the ComponentContainer is destroyed but\nnot when a new Component is associated."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.ComponentMetadata",
			"basename": "ComponentMetadata",
			"resource": "sap/ui/core/ComponentMetadata.js",
			"module": "sap/ui/core/ComponentMetadata",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.9.2",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sClassName",
						"type": "string",
						"optional": false,
						"description": "Fully qualified name of the class that is described by this metadata object"
					},
					{
						"name": "oStaticInfo",
						"type": "object",
						"optional": false,
						"description": "Static info to construct the metadata from"
					}
				],
				"description": "Creates a new metadata object for a Component subclass."
			},
			"methods": [
				{
					"name": "getComponentName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Component name"
					},
					"description": "Returns the name of the Component (which is the namespace only with the module name)"
				},
				{
					"name": "getComponents",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Required Components."
					},
					"description": "Returns array of components specified in the metadata of the Component.\nIf not specified or the array is empty, the return value is null.\n<p>\n<b>Important:</b></br>\nIf a Component is loaded using the manifest URL (or according the\n\"manifest first\" strategy), this function ignores the entries of the\nmanifest file! It returns only the entries which have been defined in\nthe Component metadata or in the proper Component manifest.",
					"deprecated": {
						"since": "1.27.1",
						"text": "Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/dependencies/components\")"
					}
				},
				{
					"name": "getConfig",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the value of the configuration property"
					},
					"since": "1.15.1",
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": true,
							"description": "Key of the configuration property"
						},
						{
							"name": "bDoNotMerge",
							"type": "boolean",
							"optional": true,
							"description": "If set to <code>true</code>, only the local configuration is returned"
						}
					],
					"description": "Returns a copy of the configuration property to disallow modifications.\nIf no key is specified it returns the complete configuration property",
					"deprecated": {
						"since": "1.27.1",
						"text": "Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/config\")"
					}
				},
				{
					"name": "getCustomEntry",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "custom Component configuration with the specified key."
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "Key of the custom configuration (must be prefixed with a namespace)"
						},
						{
							"name": "bMerged",
							"type": "boolean",
							"optional": false,
							"description": "Indicates whether the custom configuration is merged with the parent custom configuration of the Component."
						}
					],
					"description": "Returns the custom Component configuration entry with the specified key (this must be a JSON object).\nIf no key is specified, the return value is null.\n\nExample:\n<code>\n  sap.ui.core.Component.extend(\"sample.Component\", {\n      metadata: {\n          \"my.custom.config\" : {\n              \"property1\" : true,\n              \"property2\" : \"Something else\"\n          }\n      }\n  });\n</code>\n\nThe configuration above can be accessed via <code>sample.Component.getMetadata().getCustomEntry(\"my.custom.config\")</code>.",
					"deprecated": {
						"since": "1.27.1",
						"text": "Please use the sap.ui.core.ComponentMetadata#getManifestEntry"
					}
				},
				{
					"name": "getDependencies",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Component dependencies."
					},
					"description": "Returns the dependencies defined in the metadata of the Component. If not specified, the return value is null.\n<p>\n<b>Important:</b></br>\nIf a Component is loaded using the manifest URL (or according the\n\"manifest first\" strategy), this function ignores the entries of the\nmanifest file! It returns only the entries which have been defined in\nthe Component metadata or in the proper Component manifest.",
					"deprecated": {
						"since": "1.27.1",
						"text": "Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/dependencies\")"
					}
				},
				{
					"name": "getIncludes",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Included files."
					},
					"description": "Returns the array of the included files that the Component requires such\nas CSS and JavaScript. If not specified or the array is empty, the return\nvalue is null.\n<p>\n<b>Important:</b></br>\nIf a Component is loaded using the manifest URL (or according the\n\"manifest first\" strategy), this function ignores the entries of the\nmanifest file! It returns only the entries which have been defined in\nthe Component metadata or in the proper Component manifest.",
					"deprecated": {
						"since": "1.27.1",
						"text": "Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/resources\")"
					}
				},
				{
					"name": "getLibs",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Required libraries."
					},
					"description": "Returns array of libraries specified in metadata of the Component, that\nare automatically loaded when an instance of the component is created.\nIf not specified or the array is empty, the return value is null.\n<p>\n<b>Important:</b></br>\nIf a Component is loaded using the manifest URL (or according the\n\"manifest first\" strategy), this function ignores the entries of the\nmanifest file! It returns only the entries which have been defined in\nthe Component metadata or in the proper Component manifest.",
					"deprecated": {
						"since": "1.27.1",
						"text": "Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/dependencies/libs\")"
					}
				},
				{
					"name": "getManifest",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "manifest."
					},
					"since": "1.27.1",
					"description": "Returns the manifest defined in the metadata of the Component.\nIf not specified, the return value is null.",
					"deprecated": {
						"since": "1.33.0",
						"text": "Please use the sap.ui.core.Component#getManifest"
					}
				},
				{
					"name": "getManifestEntry",
					"visibility": "public",
					"returnValue": {
						"type": "any|null",
						"description": "Value of the manifest section or the key (could be any kind of value)"
					},
					"since": "1.27.1",
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "Either the manifest section name (namespace) or a concrete path"
						},
						{
							"name": "bMerged",
							"type": "boolean",
							"optional": true,
							"description": "Indicates whether the custom configuration is merged with the parent custom configuration of the Component."
						}
					],
					"description": "Returns the configuration of a manifest section or the value for a\nspecific path. If no section or key is specified, the return value is null.\n\nExample:\n<code>\n  {\n    \"sap.ui5\": {\n      \"dependencies\": {\n        \"libs\": {\n          \"sap.m\": {}\n        },\n        \"components\": {\n          \"my.component.a\": {}\n        }\n      }\n  });\n</code>\n\nThe configuration above can be accessed in the following ways:\n<ul>\n<li><b>By section/namespace</b>: <code>oComponent.getMetadata().getManifestEntry(\"sap.ui5\")</code></li>\n<li><b>By path</b>: <code>oComponent.getMetadata().getManifestEntry(\"/sap.ui5/dependencies/libs\")</code></li>\n</ul>\n\nBy section/namespace returns the configuration for the specified manifest\nsection and by path allows to specify a concrete path to a dedicated entry\ninside the manifest. The path syntax always starts with a slash (/).",
					"deprecated": {
						"since": "1.33.0",
						"text": "Please use the sap.ui.core.Component#getManifest"
					}
				},
				{
					"name": "getManifestObject",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Manifest",
						"description": "manifest."
					},
					"since": "1.33.0",
					"description": "Returns the manifest object."
				},
				{
					"name": "getMetadataVersion",
					"visibility": "protected",
					"returnValue": {
						"type": "int",
						"description": "metadata version (1: legacy metadata, 2: manifest)"
					},
					"since": "1.27.1",
					"description": "Returns the version of the metadata which could be 1 or 2. 1 is for legacy\nmetadata whereas 2 is for the manifest."
				},
				{
					"name": "getRawManifest",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "manifest"
					},
					"since": "1.29.0",
					"description": "Returns the raw manifest defined in the metadata of the Component.\nIf not specified, the return value is null.",
					"deprecated": {
						"since": "1.33.0",
						"text": "Please use the sap.ui.core.Component#getManifest"
					}
				},
				{
					"name": "getUI5Version",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Required version of UI5 or if not specified then null."
					},
					"description": "Returns the required version of SAPUI5 defined in the metadata of the\nComponent. If returned value is null, then no special UI5 version is\nrequired.\n<p>\n<b>Important:</b></br>\nIf a Component is loaded using the manifest URL (or according the\n\"manifest first\" strategy), this function ignores the entries of the\nmanifest file! It returns only the entries which have been defined in\nthe Component metadata or in the proper Component manifest.",
					"deprecated": {
						"since": "1.27.1",
						"text": "Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/dependencies/minUI5Version\")"
					}
				},
				{
					"name": "getVersion",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The version of the component."
					},
					"description": "Returns the version of the component. If not specified, the return value\nis null.\n<p>\n<b>Important:</b></br>\nIf a Component is loaded using the manifest URL (or according the\n\"manifest first\" strategy), this function ignores the entries of the\nmanifest file! It returns only the entries which have been defined in\nthe Component metadata or in the proper Component manifest.",
					"deprecated": {
						"since": "1.34.2",
						"text": "Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.app/applicationVersion/version\")"
					}
				},
				{
					"name": "isBaseClass",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "true if it is sap.ui.core.Component or sap.ui.core.UIComponent"
					},
					"since": "1.33.0",
					"description": "Returns whether the class of this metadata is a component base class\nor not."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Configuration",
			"basename": "Configuration",
			"resource": "sap/ui/core/Configuration.js",
			"module": "sap/ui/core/Configuration",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Collects and stores the configuration of the current environment.\n\nThe Configuration is initialized once when the {@link sap.ui.core.Core} is created.\nThere are different ways to set the environment configuration (in ascending priority):\n<ol>\n<li>System defined defaults\n<li>Server wide defaults, read from /sap-ui-config.json\n<li>Properties of the global configuration object window[\"sap-ui-config\"]\n<li>A configuration string in the data-sap-ui-config attribute of the bootstrap tag\n<li>Individual data-sap-ui-xyz attributes of the bootstrap tag\n<li>Using URL parameters\n<li>Setters in this Configuration object (only for some parameters)\n</ol>\n\nThat is, attributes of the DOM reference override the system defaults, URL parameters\noverride the DOM attributes (where empty URL parameters set the parameter back to its\nsystem default). Calling setters at runtime will override any previous settings\ncalculated during object creation.\n\nThe naming convention for parameters is:\n<ul>\n<li>in the URL : sap-ui-<i>PARAMETER-NAME</i>=\"value\"\n<li>in the DOM : data-sap-ui-<i>PARAMETER-NAME</i>=\"value\"\n</ul>\nwhere <i>PARAMETER-NAME</i> is the name of the parameter in lower case.\n\nValues of boolean parameters are case insensitive where \"true\" and \"x\" are interpreted as true.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Creates a new Configuration object."
			},
			"methods": [
				{
					"name": "applySettings",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"since": "1.38.6",
					"parameters": [
						{
							"name": "mSettings",
							"type": "object",
							"optional": false,
							"description": "Configuration options to apply"
						}
					],
					"description": "Applies multiple changes to the configuration at once.\n\nIf the changed settings contain localization related settings like <code>language</code>\nor <ode>calendarType</code>, then only a single <code>localizationChanged</code> event will\nbe fired. As the framework has to inform all existing components, elements, models etc.\nabout localization changes, using <code>applySettings</code> can significantly reduce the\noverhead for multiple changes, esp. when they occur after the UI has been created already.\n\nThe <code>mSettings</code> can contain any property <code><i>xyz</i></code> for which a\nsetter method <code>set<i>XYZ</i></code> exists in the API of this class.\nSimilarly, values for the {@link sap.ui.core.Configuration.FormatSettings format settings}\nAPI can be provided in a nested object with name <code>formatSettings</code>.",
					"examples": [
						{
							"caption": "Apply <code>language</code>, <code>calendarType</code> and several legacy\n         format settings in one call",
							"text": "sap.ui.getCore().getConfiguration().applySettings({\n    language: 'de',\n    calendarType: sap.ui.core.CalendarType.Gregorian,\n    formatSettings: {\n        legacyDateFormat: '1',\n        legacyTimeFormat: '1',\n        legacyNumberFormat: '1'\n    }\n});"
						}
					]
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Configuration with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getAccessibility",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the accessibility mode is used or not"
					},
					"description": "Returns whether the accessibility mode is used or not."
				},
				{
					"name": "getAnimation",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the animations are globally used"
					},
					"description": "Returns whether the animations are globally used."
				},
				{
					"name": "getAppCacheBuster",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "array of base URLs"
					},
					"description": "Base URLs to AppCacheBuster ETag-Index files."
				},
				{
					"name": "getAppCacheBusterHooks",
					"visibility": "restricted",
					"returnValue": {
						"type": "object",
						"description": "object containing the callback functions for the AppCacheBuster"
					},
					"description": "Object defining the callback hooks for the AppCacheBuster like e.g.\n<code>handleURL</code>, <code>onIndexLoad</code> or <code>onIndexLoaded</code>."
				},
				{
					"name": "getAppCacheBusterMode",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "\"sync\" | \"async\""
					},
					"description": "The loading mode (sync|async|batch) of the AppCacheBuster (sync is default)"
				},
				{
					"name": "getApplication",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "name of the application"
					},
					"description": "The name of the application to start or empty.",
					"experimental": {
						"since": "1.13.2"
					},
					"deprecated": {
						"since": "1.15.1",
						"text": "Please use the rootComponent configuration option {@link sap.ui.core.Configuration#getRootComponent}."
					}
				},
				{
					"name": "getAutoAriaBodyRole",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"since": "1.27.0",
					"description": "Returns whether the framework automatically adds automatically\nthe ARIA role 'application' to the HTML body or not."
				},
				{
					"name": "getCompatibilityVersion",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.Version",
						"description": "the used compatibility version"
					},
					"parameters": [
						{
							"name": "sFeature",
							"type": "string",
							"optional": false,
							"description": "the key of desired feature"
						}
					],
					"description": "Returns the used compatibility version for the given feature."
				},
				{
					"name": "getControllerCodeDeactivated",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "whether the activation of the controller code is suppressed or not"
					},
					"since": "1.26.4",
					"description": "Return whether the controller code is deactivated. During design mode the."
				},
				{
					"name": "getDebug",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the page runs in debug mode"
					},
					"description": "Returns whether the page runs in debug mode."
				},
				{
					"name": "getDesignMode",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "whether the design mode is active or not."
					},
					"since": "1.13.2",
					"description": "Return whether the design mode is active or not."
				},
				{
					"name": "getFiori2Adaptation",
					"visibility": "public",
					"returnValue": {
						"type": "boolean|string",
						"description": "false - no adaptation, true - full adaptation, comma-separated list - partial adaptation\nPossible values: style, collapse, title, back, hierarchy"
					},
					"description": "Returns whether the Fiori2Adaptation is on."
				},
				{
					"name": "getFormatLocale",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the format locale string with language and country code"
					},
					"description": "Returns the format locale string with language and region code. Falls back to\nlanguage configuration, in case it has not been explicitly defined."
				},
				{
					"name": "getFormatSettings",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration.FormatSettings",
						"description": "A FormatSettings object."
					},
					"description": "Returns a configuration object that bundles the format settings of UI5."
				},
				{
					"name": "getFrameOptions",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "frameOptions mode"
					},
					"description": "frameOptions mode (allow/deny/trusted)."
				},
				{
					"name": "getInspect",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the UI5 control inspector is displayed"
					},
					"description": "Returns whether the UI5 control inspector is displayed.\nHas only an effect when the sap-ui-debug module has been loaded"
				},
				{
					"name": "getLanguage",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Language string as configured"
					},
					"description": "Returns a string that identifies the current language.\n\nThe value returned by this methods in most cases corresponds to the exact value that has been\nconfigured by the user or application or that has been determined from the user agent settings.\nIt has not been normalized, but has been validated against a relaxed version of\n{@link http://www.ietf.org/rfc/bcp/bcp47.txt BCP47}, allowing underscores ('_') instead of the\nsuggested dashes ('-') and not taking the case of letters into account.\n\nThe exceptions mentioned above affect languages that have been specified via the URL parameter\n<code>sap-language</code>. That parameter by definition represents a SAP logon language code\n('ABAP language'). Most but not all of these language codes are valid ISO639 two-letter languages\nand as such are valid BCP47 language tags. For better BCP47 compliance, the framework\nmaps the following non-BCP47 SAP logon codes to a BCP47 substitute:\n<pre>\n   \"ZH\"  -->  \"zh-Hans\"         // script 'Hans' added to distinguish it from zh-Hant\n   \"ZF\"  -->  \"zh-Hant\"         // ZF is not a valid ISO639 code, use the compliant language + script 'Hant'\n\t\t \"    \"1Q\"  -->  \"en-US-x-saptrc\"  // special language code for supportability (tracing),\n                                   represented as en-US with a private extension\n   \"2Q\"  -->  \"en-US-x-sappsd\"  // special language code for supportability (pseudo translation),\n                                   represented as en-US with a private extension\n</pre>\n\nFor a normalized BCP47 tag, call {@link #getLanguageTag} or call {@link getLocale} to get a\n{@link sap.ui.core.Locale Locale} object matching the language."
				},
				{
					"name": "getLanguageTag",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The language tag for the current language, conforming to BCP47"
					},
					"description": "Returns a BCP47-compliant language tag for the current language.\n\nThe return value of this method is especially useful for an HTTP <code>Accept</code> header."
				},
				{
					"name": "getLocale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Locale",
						"description": "The locale"
					},
					"description": "Returns a Locale object for the current language.\n\nThe Locale is derived from the {@link #getLanguage language} property."
				},
				{
					"name": "getManifestFirst",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if a Component should load the manifest first"
					},
					"since": "1.33.0",
					"description": "Flag whether a Component should load the manifest first."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Configuration."
				},
				{
					"name": "getNoDuplicateIds",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether there should be an exception on any duplicate element IDs"
					},
					"description": "Returns whether there should be an exception on any duplicate element IDs."
				},
				{
					"name": "getOriginInfo",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the text info is collected"
					},
					"description": "Returns whether the text origin information is collected."
				},
				{
					"name": "getRootComponent",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "name of the root component"
					},
					"description": "The name of the root component to start or empty.",
					"experimental": {
						"since": "1.15.1"
					}
				},
				{
					"name": "getRTL",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the page uses the RTL text direction"
					},
					"description": "Returns whether the page uses the RTL text direction.\n\nIf no mode has been explicitly set (neither true nor false),\nthe mode is derived from the current language setting."
				},
				{
					"name": "getSAPLogonLanguage",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The SAP logon language code for the current language"
					},
					"description": "Returns a SAP logon language for the current language."
				},
				{
					"name": "getSuppressDeactivationOfControllerCode",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "whether the activation of the controller code is suppressed or not"
					},
					"since": "1.13.2",
					"description": "Return whether the activation of the controller code is suppressed."
				},
				{
					"name": "getTheme",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the theme name"
					},
					"description": "Returns the theme name"
				},
				{
					"name": "getUIDPrefix",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the prefix to be used"
					},
					"description": "Prefix to be used for automatically generated control IDs.\nDefault is a double underscore \"__\"."
				},
				{
					"name": "getVersion",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.Version",
						"description": "the version"
					},
					"description": "Returns the version of the framework.\n\nSimilar to <code>sap.ui.version</code>."
				},
				{
					"name": "getWhitelistService",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "whitelist service URL"
					},
					"description": "URL of the whitelist service."
				},
				{
					"name": "setCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.28.6",
					"parameters": [
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType|null",
							"optional": false,
							"description": "the new calendar type. Set it with null to clear the calendar type\n  and the calendar type is calculated based on the format settings and current locale."
						}
					],
					"description": "Sets the new calendar type to be used from now on in locale dependent functionalities (for example,\nformatting, translation texts, etc.)."
				},
				{
					"name": "setFormatLocale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFormatLocale",
							"type": "string|null",
							"optional": false,
							"description": "the new format locale as a BCP47 compliant language tag;\n  case doesn't matter and underscores can be used instead of dashes to separate\n  components (compatibility with Java Locale IDs)"
						}
					],
					"description": "Sets a new format locale to be used from now on for retrieving locale\nspecific formatters. Modifying this setting does not have an impact on\nthe retrieval of translated texts!\n\nCan either be set to a concrete value (a BCP47 or Java locale compliant\nlanguage tag) or to <code>null</code>. When set to <code>null</code> (default\nvalue) then locale specific formatters are retrieved for the current language.\n\nAfter changing the format locale, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link #setLanguage} for\ndetails and restrictions.\n\n<b>Note</b>: When a format locale is set, it has higher priority than a number,\ndate or time format defined with a call to <code>setLegacyNumberFormat</code>,\n<code>setLegacyDateFormat</code> or <code>setLegacyTimeFormat<code>.",
					"experimental": {
						"since": "1.11.1",
						"text": "See documentation of {@link #setLanguage} for restrictions."
					}
				},
				{
					"name": "setLanguage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLanguage",
							"type": "string",
							"optional": false,
							"description": "the new language as a BCP47 compliant language tag; case doesn't matter\n  and underscores can be used instead of dashes to separate components (compatibility with Java Locale IDs)"
						},
						{
							"name": "sSAPLogonLanguage",
							"type": "string",
							"optional": true,
							"description": "SAP language code that corresponds to the <code>sLanguage</code>;\n  if a value is specified, future calls to <code>getSAPLogonLanguage</code> will return that value;\n  if no value is specified, the framework will use the ISO639 language part of <code>sLanguage</code>\n  as SAP Logon language."
						}
					],
					"description": "Sets a new language to be used from now on for language/region dependent\nfunctionality (e.g. formatting, data types, translated texts, ...).\n\nWhen the language can't be interpreted as a BCP47 language (using the relaxed syntax\ndescribed in {@link #getLanguage}, an error will be thrown.\n\nWhen the language has changed, the Core will fire its\n{@link sap.ui.core.Core#event:localizationChanged localizationChanged} event.\n\nThe framework <strong>does not</strong> guarantee that already created, language\ndependent objects will be updated by this call. It therefore remains best practice\nfor applications to switch the language early, e.g. before any language dependent\nobjects are created. Applications that need to support more dynamic changes of\nthe language should listen to the <code>localizationChanged</code> event and adapt\nall language dependent objects that they use (e.g. by rebuilding their UI).\n\nCurrently, the framework notifies the following objects about a change of the\nlocalization settings before it fires the <code>localizationChanged</code> event:\n\n<ul>\n<li>date and number data types that are used in property bindings or composite\n    bindings in existing Elements, Controls, UIAreas or Components</li>\n<li>ResourceModels currently assigned to the Core, an UIArea, Component,\n    Element or Control</li>\n<li>Elements or Controls that implement the <code>onlocalizationChanged</code> hook\n    (note the lowercase 'l' in onlocalizationChanged)</li>\n</ul>\n\nIt furthermore derives the RTL mode from the new language, if no explicit RTL\nmode has been set. If the RTL mode changes, the following additional actions will be taken:\n\n<ul>\n<li>the URLs of already loaded library theme files will be changed</li>\n<li>the <code>dir</code> attribute of the page will be changed to reflect the new mode.</li>\n<li>all UIAreas will be invalidated (which results in a rendering of the whole UI5 UI)</li>\n</ul>\n\nThis method does not accept SAP language codes for <code>sLanguage</code>. Instead, a second\nparameter <code>sSAPLogonLanguage</code> can be provided with a SAP language code corresponding\nto the given language. A given value will be returned by the {@link #getSAPLogonLanguage} method.\nIt is up to the caller to provide a consistent pair of BCP47 language and SAP language code.\nThe SAP language code is only checked to be of length 2 and must consist of letters or digits only.",
					"experimental": {
						"since": "1.11.1",
						"text": "See method documentation for restrictions."
					}
				},
				{
					"name": "setRTL",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bRTL",
							"type": "boolean|null",
							"optional": false,
							"description": "new character orientation mode or <code>null</code>"
						}
					],
					"description": "Sets the character orientation mode to be used from now on.\n\nCan either be set to a concrete value (true meaning right-to-left,\nfalse meaning left-to-right) or to <code>null</code> which means that\nthe character orientation mode should be derived from the current\nlanguage (incl. region) setting.\n\nAfter changing the character orientation mode, the framework tries\nto update localization specific parts of the UI. See the documentation of\n{@link #setLanguage} for details and restrictions.",
					"experimental": {
						"since": "1.11.1",
						"text": "See documentation of {@link #setLanguage} for restrictions."
					}
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Configuration.FormatSettings",
			"basename": "FormatSettings",
			"resource": "sap/ui/core/Configuration.js",
			"module": "sap/ui/core/Configuration",
			"export": "FormatSettings",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Encapsulates configuration settings that are related to data formatting/parsing.\n\n<b>Note:</b> When format configuration settings are modified through this class,\nUI5 only ensures that formatter objects created after that point in time will honor\nthe modifications. To be on the safe side, applications should do any modifications\nearly in their lifecycle or recreate any model/UI that is locale dependent.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Configuration.FormatSettings with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getDatePattern",
					"visibility": "public",
					"description": "Returns the currently set date pattern or undefined if no pattern has been defined."
				},
				{
					"name": "getFormatLocale",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Locale",
						"description": "the format locale"
					},
					"description": "Returns the locale to be used for formatting.\n\nIf no such locale has been defined, this method falls back to the language,\nsee {@link sap.ui.core.Configuration#getLanguage Configuration.getLanguage()}.\n\nIf any user preferences for date, time or number formatting have been set,\nand if no format locale has been specified, then a special private use subtag\nis added to the locale, indicating to the framework that these user preferences\nshould be applied."
				},
				{
					"name": "getLegacyDateCalendarCustomizing",
					"visibility": "public",
					"returnValue": {
						"type": "object[]",
						"description": "Returns an array contains the customizing data. Each element in the array has properties: dateFormat, islamicMonthStart, gregDate. For details, please see {@link #setLegacyDateCalendarCustomizing}"
					},
					"description": "Returns the currently set customizing data for Islamic calendar support"
				},
				{
					"name": "getLegacyDateFormat",
					"visibility": "public",
					"description": "Returns the currently set legacy ABAP date format (its id) or undefined if none has been set."
				},
				{
					"name": "getLegacyNumberFormat",
					"visibility": "public",
					"description": "Returns the currently set legacy ABAP number format (its id) or undefined if none has been set."
				},
				{
					"name": "getLegacyTimeFormat",
					"visibility": "public",
					"description": "Returns the currently set legacy ABAP time format (its id) or undefined if none has been set."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Configuration.FormatSettings."
				},
				{
					"name": "getNumberSymbol",
					"visibility": "public",
					"description": "Returns the currently set number symbol of the given type or undefined if no symbol has been defined."
				},
				{
					"name": "getTimePattern",
					"visibility": "public",
					"description": "Returns the currently set time pattern or undefined if no pattern has been defined."
				},
				{
					"name": "setDatePattern",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration.FormatSettings",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sStyle",
							"type": "string",
							"optional": false,
							"description": "must be one of short, medium, long or full."
						},
						{
							"name": "sPattern",
							"type": "string",
							"optional": false,
							"description": "the format pattern to be used in LDML syntax."
						}
					],
					"description": "Defines the preferred format pattern for the given date format style.\n\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the date pattern, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions."
				},
				{
					"name": "setFirstDayOfWeek",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration.FormatSettings",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iValue",
							"type": "number",
							"optional": false,
							"description": "must be an integer value between 0 and 6"
						}
					],
					"description": "Defines the day used as the first day of the week.\n\nThe day is set as an integer value between 0 (Sunday) and 6 (Saturday).\nCalling this method with a null or undefined symbol removes a previously set value.\n\nIf a value is defined, it will be preferred over values derived from the current locale.\n\nUsually in the US the week starts on Sunday while in most European countries on Monday.\nThere are special cases where you want to have the first day of week set independent of the\nuser locale.\n\nAfter changing the first day of week, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions."
				},
				{
					"name": "setLegacyDateCalendarCustomizing",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration.FormatSettings",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "aMappings",
							"type": "object[]",
							"optional": false,
							"description": "contains the customizing data for the support of Islamic calendar."
						}
					],
					"description": "Allows to specify the customizing data for Islamic calendar support"
				},
				{
					"name": "setLegacyDateFormat",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration.FormatSettings",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFormatId",
							"type": "string",
							"optional": false,
							"description": "id of the ABAP data format (one of '1','2','3','4','5','6','7','8','9','A','B','C')"
						}
					],
					"description": "Allows to specify one of the legacy ABAP date formats.\n\nThis method modifies the date patterns for 'short' and 'medium' style with the corresponding ABAP\nformat. When called with a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy date format, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions.\n\nNote: Iranian date format 'C' is NOT yet supported by UI5. It's accepted by this method for convenience\n(user settings from ABAP system can be used without filtering), but it's ignored. Instead, the formats\nfrom the current format locale will be used and a warning will be logged."
				},
				{
					"name": "setLegacyNumberFormat",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration.FormatSettings",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFormatId",
							"type": "string",
							"optional": false,
							"description": "id of the ABAP number format set (one of ' ','X','Y')"
						}
					],
					"description": "Allows to specify one of the legacy ABAP number format.\n\nThis method will modify the 'group' and 'decimal' symbols. When called with a null\nor undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy number format, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions."
				},
				{
					"name": "setLegacyTimeFormat",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration.FormatSettings",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFormatId",
							"type": "string",
							"optional": false,
							"description": "id of the ABAP time format (one of '0','1','2','3','4')"
						}
					],
					"description": "Allows to specify one of the legacy ABAP time formats.\n\nThis method sets the time patterns for 'short' and 'medium' style to the corresponding ABAP\nformats and sets the day period texts to \"AM\"/\"PM\" or \"am\"/\"pm\" respectively. When called\nwith a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy time format, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions."
				},
				{
					"name": "setNumberSymbol",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration.FormatSettings",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sStyle",
							"type": "string",
							"optional": false,
							"description": "must be one of decimal, group, plusSign, minusSign."
						},
						{
							"name": "sSymbol",
							"type": "string",
							"optional": false,
							"description": "will be used to represent the given symbol type"
						}
					],
					"description": "Defines the string to be used for the given number symbol.\n\nCalling this method with a null or undefined symbol removes a previously set symbol string.\nNote that an empty string is explicitly allowed.\n\nIf a symbol is defined, it will be preferred over symbols derived from the current locale.\n\nSee class {@link sap.ui.core.format.NumberFormat} for details about the symbols.\n\nAfter changing the number symbol, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions."
				},
				{
					"name": "setTimePattern",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration.FormatSettings",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sStyle",
							"type": "string",
							"optional": false,
							"description": "must be one of short, medium, long or full."
						},
						{
							"name": "sPattern",
							"type": "string",
							"optional": false,
							"description": "the format pattern to be used in LDML syntax."
						}
					],
					"description": "Defines the preferred format pattern for the given time format style.\n\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the time pattern, the framework tries to update localization\nspecific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage}\nfor details and restrictions."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Control",
			"basename": "Control",
			"resource": "sap/ui/core/Control.js",
			"module": "sap/ui/core/Control",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Base Class for Controls.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "busy",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Whether the control is currently in busy state.",
						"methods": [
							"getBusy",
							"setBusy"
						]
					},
					{
						"name": "busyIndicatorDelay",
						"type": "int",
						"defaultValue": 1000,
						"group": "Misc",
						"visibility": "public",
						"description": "The delay in milliseconds, after which the busy indicator will show up for this control.",
						"methods": [
							"getBusyIndicatorDelay",
							"setBusyIndicatorDelay"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control",
						"methods": [
							"getVisible",
							"setVisible"
						]
					},
					{
						"name": "fieldGroupIds",
						"type": "string[]",
						"defaultValue": "[]",
						"group": "Misc",
						"visibility": "public",
						"since": "1.31",
						"description": "The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId</code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.",
						"methods": [
							"getFieldGroupIds",
							"setFieldGroupIds"
						]
					}
				],
				"events": [
					{
						"name": "validateFieldGroup",
						"visibility": "public",
						"description": "Event is fired if a logical field group defined by <code>fieldGroupIds</code> of a control was left or the user explicitly pressed a validation key combination.\nUse this event to validate data of the controls belonging to a field group.\nSee {@link sap.ui.core.Control#setFieldGroupIds}.",
						"parameters": {
							"fieldGroupIds": {
								"name": "fieldGroupIds",
								"type": "string[]",
								"description": "field group IDs of the logical field groups to validate"
							}
						},
						"methods": [
							"attachValidateFieldGroup",
							"detachValidateFieldGroup",
							"fireValidateFieldGroup"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Optional ID for the new control; generated automatically if no non-empty ID is given\n     Note: this can be omitted, no matter whether <code>mSettings</code> will be given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Object with initial settings for the new control"
					}
				],
				"description": "Creates and initializes a new control with the given <code>sId</code> and settings.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "validateFieldGroup",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"fieldGroupIds": {
											"name": "fieldGroupIds",
											"type": "string[]",
											"optional": false,
											"description": "field group IDs of the logical field groups to validate"
										}
									}
								}
							}
						}
					],
					"description": "Event is fired if a logical field group defined by <code>fieldGroupIds</code> of a control was left or the user explicitly pressed a validation key combination.\nUse this event to validate data of the controls belonging to a field group.\nSee {@link sap.ui.core.Control#setFieldGroupIds}."
				}
			],
			"methods": [
				{
					"name": "addStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the CSS class name to be added"
						}
					],
					"description": "The string given as \"sStyleClass\" will be added to the \"class\" attribute of this control's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which\nspecial styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\n   myButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n   .myRedTextButton {\n      color: red;\n   }\n</pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then\nmake the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed.\nQuotes are not allowed and this method will ignore any strings containing quotes.\nStrings containing spaces are interpreted as multiple custom style classes which are split by space and can be removed\nindividually later by calling removeStyleClass.\nMultiple calls with the same sStyleClass will have no different effect than calling once.\nIf sStyleClass is null, empty string or it contains quotes, the call is ignored."
				},
				{
					"name": "allowTextSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bAllow",
							"type": "boolean",
							"optional": false,
							"description": "whether to allow text selection or not"
						}
					],
					"description": "Defines whether the user can select text inside this control.\nDefaults to <code>true</code> as long as this method has not been called.\n\n<b>Note:</b>This only works in IE and Safari; for Firefox the element's style must\nbe set to:\n<pre>\n  -moz-user-select: none;\n</pre>\nin order to prevent text selection."
				},
				{
					"name": "attachBrowserEvent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEventType",
							"type": "string",
							"optional": true,
							"description": "A string containing one or more JavaScript event types, such as \"click\" or \"blur\"."
						},
						{
							"name": "fnHandler",
							"type": "function",
							"optional": true,
							"description": "A function to execute each time the event is triggered."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object, that wants to be notified, when the event occurs"
						}
					],
					"description": "Allows binding handlers for any native browser event to the root HTML element of this Control. This internally handles\nDOM element replacements caused by re-rendering.\n\n<b>IMPORTANT:</b></br>\nThis should be only used as FALLBACK when the Control events do not cover a specific use-case! Always try using\nSAPUI5 control events, as e.g. accessibility-related functionality is then provided automatically.\nE.g. when working with a <code>sap.ui.commons.Button</code>, always use the Button's \"press\" event, not the native \"click\" event, because\n\"press\" is also guaranteed to be fired when certain keyboard activity is supposed to trigger the Button.\n\nIn the event handler, <code>this</code> refers to the Control - not to the root DOM element like in jQuery. While the DOM element can\nbe used and modified, the general caveats for working with SAPUI5 control DOM elements apply. In particular the DOM element\nmay be destroyed and replaced by a new one at any time, so modifications that are required to have permanent effect may not\nbe done. E.g. use {@link sap.ui.core.Control.prototype.addStyleClass} instead if the modification is of visual nature.\n\nUse {@link #detachBrowserEvent} to remove the event handler(s) again."
				},
				{
					"name": "attachValidateFieldGroup",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.Control</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>validateFieldGroup</code> event of this <code>sap.ui.core.Control</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.Control</code> itself.\r\rEvent is fired if a logical field group defined by <code>fieldGroupIds</code> of a control was left or the user explicitly pressed a validation key combination.\nUse this event to validate data of the controls belonging to a field group.\nSee {@link sap.ui.core.Control#setFieldGroupIds}."
				},
				{
					"name": "checkFieldGroupIds",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if a field group ID matches"
					},
					"parameters": [
						{
							"name": "vFieldGroupIds",
							"type": "string|string[]",
							"optional": true,
							"description": "ID of the field group or an array of field group IDs to match"
						}
					],
					"description": "Returns whether the control has a given field group.\nIf <code>vFieldGroupIds</code> is not given it checks whether at least one field group ID is given for this control.\nIf <code>vFieldGroupIds</code> is an empty array or empty string, true is returned if there is no field group ID set for this control.\nIf <code>vFieldGroupIds</code> is a string array or a string all expected field group IDs are checked and true is returned if all are contained for given for this control.\nThe comma delimiter can be used to separate multiple field group IDs in one string."
				},
				{
					"name": "clone",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "reference to the newly created clone"
					},
					"parameters": [
						{
							"name": "sIdSuffix",
							"type": "string",
							"optional": true,
							"description": "a suffix to be appended to the cloned element id"
						},
						{
							"name": "aLocalIds",
							"type": "string[]",
							"optional": true,
							"description": "an array of local IDs within the cloned hierarchy (internally used)"
						}
					],
					"description": "Overrides {@link sap.ui.core.Element#clone Element.clone} to clone additional\ninternal state.\n\nThe additionally cloned information contains:\n<ul>\n<li>browser event handlers attached with {@link #attachBrowserEvent}\n<li>text selection behavior\n<li>style classes added with {@link #addStyleClass}\n</ul>"
				},
				{
					"name": "detachBrowserEvent",
					"visibility": "public",
					"parameters": [
						{
							"name": "sEventType",
							"type": "string",
							"optional": true,
							"description": "A string containing one or more JavaScript event types, such as \"click\" or \"blur\"."
						},
						{
							"name": "fnHandler",
							"type": "function",
							"optional": true,
							"description": "The function that is to be no longer executed."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The context object that was given in the call to <code>attachBrowserEvent</code>."
						}
					],
					"description": "Removes event handlers which have been previously attached using {@link #attachBrowserEvent}.\n\nNote: listeners are only removed, if the same combination of event type, callback function\nand context object is given as in the call to <code>attachBrowserEvent</code>."
				},
				{
					"name": "detachValidateFieldGroup",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>validateFieldGroup</code> event of this <code>sap.ui.core.Control</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Control with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "fireValidateFieldGroup",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"fieldGroupIds": {
									"name": "fieldGroupIds",
									"type": "string[]",
									"optional": true,
									"description": "field group IDs of the logical field groups to validate"
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>validateFieldGroup</code> to attached listeners."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "Current accessibility state of the control."
					},
					"since": "1.37.0",
					"description": "This function (if available on the concrete control) provides\nthe current accessibility state of the control.\n\nApplications must not call this hook method directly, it is called by the framework.\n\nSubclasses of Control should implement this hook to provide any necessary accessibility information:\n\n<pre>\nMyControl.prototype.getAccessibilityInfo = function() {\n   return {\n     role: \"textbox\",      // String which represents the WAI-ARIA role which is implemented by the control.\n     type: \"date input\",   // String which represents the control type (Must be a translated text). Might correlate with\n                           // the role.\n     description: \"value\", // String which describes the most relevant control state (e.g. the inputs value). Must be a\n                           // translated text.\n                           // Note: The type and the enabled/editable state must not be handled here.\n     focusable: true,      // Boolean which describes whether the control can get the focus.\n     enabled: true,        // Boolean which describes whether the control is enabled. If not relevant it must not be set or\n                           // <code>null</code> can be provided.\n     editable: true,       // Boolean which describes whether the control is editable. If not relevant it must not be set or\n                           // <code>null</code> can be provided.\n     children: []          // Aggregations of the given control (e.g. when the control is a layout). Primitive aggregations will be ignored.\n                           // Note: Children should only be provided when it is helpful to understand the accessibility context\n                           //       (e.g. a form control must not provide details of its internals (fields, labels, ...) but a\n                           //       layout should).\n   };\n};\n</pre>\n\nNote: The returned object provides the accessibility state of the control at the point in time when this function is called."
				},
				{
					"name": "getBusy",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>busy</code>"
					},
					"description": "Gets current value of property <code>busy</code>.\r\rWhether the control is currently in busy state.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getBusyIndicatorDelay",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>busyIndicatorDelay</code>"
					},
					"description": "Gets current value of property <code>busyIndicatorDelay</code>.\r\rThe delay in milliseconds, after which the busy indicator will show up for this control.\r\rDefault value is <code>1000</code>."
				},
				{
					"name": "getControlsByFieldGroupId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "The list of controls with a field group ID"
					},
					"parameters": [
						{
							"name": "vFieldGroupIds",
							"type": "string|string[]",
							"optional": true,
							"description": "ID of the field group or an array of field group IDs to match"
						}
					],
					"description": "Returns a list of all child controls with a field group ID.\nSee {@link #checkFieldGroupIds checkFieldGroupIds} for a description of the\n<code>vFieldGroupIds</code> parameter.\nAssociated controls are not taken into account."
				},
				{
					"name": "getFieldGroupIds",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "copy of the field group IDs"
					},
					"description": "Returns a copy of the field group IDs array. Modification of the field group IDs\nneed to call {@link #setFieldGroupIds setFieldGroupIds} to apply the changes."
				},
				{
					"name": "getIdForLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Id to be used for the <code>labelFor</code>"
					},
					"description": "Returns the DOMNode Id to be used for the \"labelFor\" attribute of the label.\n\nBy default, this is the Id of the control itself."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Control."
				},
				{
					"name": "getRenderer",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "a Renderer suitable for this Control instance."
					},
					"description": "Returns a renderer for this control instance.\n\nIt is retrieved using the RenderManager as done during rendering."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\r\rWhether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control\r\rDefault value is <code>true</code>."
				},
				{
					"name": "hasStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the style to check for"
						}
					],
					"description": "Returns true if the given style class or all multiple style classes which are generated by splitting the given string with space are already set on the control\nvia previous call(s) to addStyleClass()."
				},
				{
					"name": "invalidate",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oOrigin",
							"type": "sap.ui.base.ManagedObject",
							"optional": true,
							"description": "Child control for which the method was called"
						}
					],
					"description": "Triggers rerendering of this element and its children.\n\nAs <code>sap.ui.core.Element</code> \"bubbles up\" the invalidate, changes to children\npotentially result in rerendering of the whole sub tree.\n\nThe <code>oOrigin</code> parameter was introduced to allow parent controls to limit\ntheir rerendering to certain areas that have been invalidated by their children.\nAs there is no strong guideline for control developers to provide the parameter, it is\nnot a reliable source of information. It is therefore not recommended in general to use\nit, only in scenarios where a control and its descendants know each other very well\n(e.g. complex controls where parent and children have the same code owner)."
				},
				{
					"name": "isBusy",
					"visibility": "public",
					"returnValue": {
						"description": "boolean"
					},
					"description": "Check if the control is currently in busy state.",
					"deprecated": {
						"since": "1.15",
						"text": "use {@link #getBusy} instead"
					}
				},
				{
					"name": "onAfterRendering",
					"visibility": "protected",
					"description": "Function is called when the rendering of the control is completed.\n\nApplications must not call this hook method directly, it is called by the framework.\n\nSubclasses of Control should override this hook to implement any necessary actions after the rendering."
				},
				{
					"name": "onBeforeRendering",
					"visibility": "protected",
					"description": "Function is called before the rendering of the control is started.\n\nApplications must not call this hook method directly, it is called by the framework.\n\nSubclasses of Control should override this hook to implement any necessary actions before the rendering."
				},
				{
					"name": "placeAt",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRef",
							"type": "string|Element|sap.ui.core.Control",
							"optional": false,
							"description": "container into which the control should be put"
						},
						{
							"name": "oPosition",
							"type": "string|int",
							"optional": false,
							"description": "Describes the position where the control should be put into the container"
						}
					],
					"description": "Puts <code>this</code> control into the specified container (<code>oRef</code>) at the given\nposition (<code>oPosition</code>).\n\nFirst it is checked whether <code>oRef</code> is a container element / control (has a\nmultiple aggregation with type <code>sap.ui.core.Control</code> and name 'content') or is an Id String\nof such an container.\nIf this is not the case <code>oRef</code> can either be a Dom Reference or Id String of the UIArea\n(if it does not yet exist implicitly a new UIArea is created),\n\nThe <code>oPosition</code> can be one of the following:\n\n<ul>\n <li>\"first\": The control is added as the first element to the container.</li>\n <li>\"last\": The control is added as the last element to the container (default).</li>\n <li>\"only\": All existing children of the container are removed (not destroyed!) and the control is added as new child.</li>\n <li><i>index</i>: The control is added at the specified <i>index</i> to the container.</li>\n</ul>"
				},
				{
					"name": "removeStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the style to be removed"
						}
					],
					"description": "Removes the given string from the list of custom style classes that have been set previously.\nRegular style classes like \"sapUiBtn\" cannot be removed."
				},
				{
					"name": "rerender",
					"visibility": "protected",
					"description": "Tries to replace its DOM reference by re-rendering."
				},
				{
					"name": "setBusy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bBusy",
							"type": "boolean",
							"optional": false,
							"description": "The new busy state to be set"
						}
					],
					"description": "Set the controls busy state."
				},
				{
					"name": "setBusyIndicatorDelay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iDelay",
							"type": "int",
							"optional": false,
							"description": "The delay in ms"
						}
					],
					"description": "Define the delay, after which the busy indicator will show up."
				},
				{
					"name": "setFieldGroupIds",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.31",
					"parameters": [
						{
							"name": "sFieldGroupIds",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>fieldGroupIds</code>"
						}
					],
					"description": "Sets a new value for property <code>fieldGroupIds</code>.\r\rThe IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId</code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>[]</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Sets a new value for property <code>visible</code>.\r\rWhether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "toggleStyleClass",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sStyleClass",
							"type": "string",
							"optional": false,
							"description": "the CSS class name to be added or removed"
						},
						{
							"name": "bAdd",
							"type": "boolean",
							"optional": false,
							"description": "whether sStyleClass should be added (or removed); when this parameter is not given, sStyleClass will be toggled (removed, if present, and added if not present)"
						}
					],
					"description": "The string given as \"sStyleClass\" will be be either added to or removed from the \"class\" attribute of this control's root HTML element,\ndepending on the value of \"bAdd\": if bAdd is true, sStyleClass will be added.\nIf bAdd is not given, sStyleClass will be removed if it is currently present and will be added if not present.\nIf sStyleClass is null or empty string, the call is ignored.\n\nSee addStyleClass and removeStyleClass for further documentation."
				},
				{
					"name": "triggerValidateFieldGroup",
					"visibility": "public",
					"description": "Triggers the <code>validateFieldGroup</code> event for this control.\n\nCalled by <code>sap.ui.core.UIArea</code> if a field group should be validated after it lost\nthe focus or when the key combination was pressed that was configured to trigger validation\n(defined in the UI area member <code>UIArea._oFieldGroupValidationKey</code>).\n\nSee {@link #attachValidateFieldGroup}."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Core",
			"basename": "Core",
			"resource": "sap/ui/core/Core.js",
			"module": "sap/ui/core/Core",
			"export": "",
			"final": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Core Class of the SAP UI Library.\n\nThis class boots the Core framework and makes it available for the application\nvia method <code>sap.ui.getCore()</code>.\n\nExample:\n<pre>\n\n  var oCore = sap.ui.getCore();\n\n</pre>\n\nWith methods of the Core framework you can {@link #attachInit execute code} after the framework has been initialized.\nIt provides access to the {@link #getConfiguration configuration} and exposes events that\nan application or a control can register to (e.g. {@link #event:localizationChanged localizationChanged},\n{@link #event:parseError parseError}, {@link #event:validationError validationError},\n{@link #event:formatError formatError}, {@link #event:validationSuccess validationSuccess}).\n\nExample:\n<pre>\n\n  oCore.attachInit(function() {\n    if ( oCore.getConfiguration().getRTL() ) {\n      ...\n    }\n  });\n\n  oCore.attachLocalizationChanged(function(oEvent) {\n    ...\n  });\n\n</pre>",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public"
			},
			"events": [
				{
					"name": "formatError",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"element": {
											"name": "element",
											"type": "sap.ui.core.Element",
											"optional": false,
											"description": "The Element where the format error occurred"
										},
										"property": {
											"name": "property",
											"type": "string",
											"optional": false,
											"description": "The property name of the element where the format error occurred"
										},
										"type": {
											"name": "type",
											"type": "sap.ui.model.Type",
											"optional": false,
											"description": "The type of the property"
										},
										"newValue": {
											"name": "newValue",
											"type": "object",
											"optional": false,
											"description": "The value of the property which was entered when the format error occurred"
										},
										"oldValue": {
											"name": "oldValue",
											"type": "object",
											"optional": false,
											"description": "The value of the property which was present before a new value was entered (before the format error)"
										},
										"exception": {
											"name": "exception",
											"type": "object",
											"optional": false,
											"description": "The exception object which occurred and has more information about the format error"
										}
									}
								}
							}
						}
					],
					"description": "The 'formatError' event is fired when a value formatting fails. This can happen when a value stored in the model cannot be formatted to be displayed in an element property."
				},
				{
					"name": "localizationChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"changes": {
											"name": "changes",
											"type": "object",
											"optional": false,
											"description": "a map of the changed localization properties"
										}
									}
								}
							}
						}
					],
					"description": "Fired when any of the localization relevant configuration settings has changed\n(e.g. language, rtl, formatLocale, datePattern, timePattern, numberSymbol, legacy formats).\n\nThe parameter <code>changes</code> contains additional information about the change.\nIt is a plain object that can contain one or more of the following properties\n<ul>\n  <li>language - the language setting has changed</li>\n  <li>rtl - the character orientation mode (aka 'LTR/RTL mode') has changed</li>\n  <li>formatLocale - the format locale has changed</li>\n</ul>\n(there might be other, currently undocumented settings)\n\nThe value for each property will be the new corresponding setting."
				},
				{
					"name": "parseError",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"element": {
											"name": "element",
											"type": "sap.ui.core.Element",
											"optional": false,
											"description": "The Element where the parse error occurred"
										},
										"property": {
											"name": "property",
											"type": "string",
											"optional": false,
											"description": "The property name of the element where the parse error occurred"
										},
										"type": {
											"name": "type",
											"type": "sap.ui.model.Type",
											"optional": false,
											"description": "The type of the property"
										},
										"newValue": {
											"name": "newValue",
											"type": "object",
											"optional": false,
											"description": "The value of the property which was entered when the parse error occurred"
										},
										"oldValue": {
											"name": "oldValue",
											"type": "object",
											"optional": false,
											"description": "The value of the property which was present before a new value was entered (before the parse error)"
										},
										"exception": {
											"name": "exception",
											"type": "object",
											"optional": false,
											"description": "The exception object which occurred and has more information about the parse error"
										}
									}
								}
							}
						}
					],
					"description": "The 'parseError' event is fired when input parsing fails."
				},
				{
					"name": "ThemeChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"theme": {
											"name": "theme",
											"type": "string",
											"optional": false,
											"description": "Theme name"
										}
									}
								}
							}
						}
					],
					"description": "Fired after a theme has been applied.\n\nMore precisely, this event is fired when any of the following conditions is met:\n<ul>\n  <li>the initially configured theme has been applied after core init</li>\n  <li>the theme has been changed and is now applied (see {@link #applyTheme})</li>\n  <li>a library has been loaded dynamically after core init (e.g. with\n      <code>sap.ui.getCore().loadLibrary(...)</code> and the current theme\n      has been applied for it</li>\n</ul>"
				},
				{
					"name": "validationError",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"element": {
											"name": "element",
											"type": "sap.ui.core.Element",
											"optional": false,
											"description": "The Element where the validation error occurred"
										},
										"property": {
											"name": "property",
											"type": "string",
											"optional": false,
											"description": "The property name of the element where the validation error occurred"
										},
										"type": {
											"name": "type",
											"type": "sap.ui.model.Type",
											"optional": false,
											"description": "The type of the property"
										},
										"newValue": {
											"name": "newValue",
											"type": "object",
											"optional": false,
											"description": "The value of the property which was entered when the validation error occurred"
										},
										"oldValue": {
											"name": "oldValue",
											"type": "object",
											"optional": false,
											"description": "The value of the property which was present before a new value was entered (before the validation error)"
										},
										"exception": {
											"name": "exception",
											"type": "object",
											"optional": false,
											"description": "The exception object which occurred and has more information about the validation error"
										}
									}
								}
							}
						}
					],
					"description": "The 'validationError' event is fired when validation of the input fails."
				},
				{
					"name": "validationSuccess",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"element": {
											"name": "element",
											"type": "sap.ui.core.Element",
											"optional": false,
											"description": "The Element where the successful validation occurred"
										},
										"property": {
											"name": "property",
											"type": "string",
											"optional": false,
											"description": "The property name of the element where the successfull validation occurred"
										},
										"type": {
											"name": "type",
											"type": "sap.ui.model.Type",
											"optional": false,
											"description": "The type of the property"
										},
										"newValue": {
											"name": "newValue",
											"type": "object",
											"optional": false,
											"description": "The value of the property which was entered when the validation occurred"
										},
										"oldValue": {
											"name": "oldValue",
											"type": "object",
											"optional": false,
											"description": "The value of the property which was present before a new value was entered (before the validation)"
										}
									}
								}
							}
						}
					],
					"description": "The 'validationSuccess' event is fired when a value validation was successfully completed."
				}
			],
			"methods": [
				{
					"name": "applyChanges",
					"visibility": "public",
					"description": "Enforces an immediate update of the visible UI (aka \"rendering\").\n\nIn general, applications should avoid calling this method and\ninstead let the framework manage any necessary rendering."
				},
				{
					"name": "applyTheme",
					"visibility": "public",
					"parameters": [
						{
							"name": "sThemeName",
							"type": "string",
							"optional": false,
							"description": "the name of the theme to be loaded"
						},
						{
							"name": "sThemeBaseUrl",
							"type": "string",
							"optional": true,
							"description": "the (optional) base location of the theme"
						}
					],
					"description": "Applies the theme with the given name (by loading the respective style sheets, which does not disrupt the application).\n\nBy default, the theme files are expected to be located at path relative to the respective control library ([libraryLocation]/themes/[themeName]).\nDifferent locations can be configured by using the method setThemePath() or by using the second parameter \"sThemeBaseUrl\" of applyTheme().\nUsage of this second parameter is a shorthand for setThemePath and internally calls setThemePath, so the theme location is then known.\n\nsThemeBaseUrl is a single URL to specify the default location of all theme files. This URL is the base folder below which the control library folders\nare located. E.g. if the CSS files are not located relative to the root location of UI5, but instead they are at locations like\n   http://my.server/myapp/resources/sap/ui/core/themes/my_theme/library.css\nthen the URL that needs to be given is:\n   http://my.server/myapp/resources\nAll theme resources are then loaded from below this folder - except if for a certain library a different location has been registered.\n\nIf the theme resources are not all either below this base location or  with their respective libraries, then setThemePath must be\nused to configure individual locations."
				},
				{
					"name": "attachControlEvent",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "callback to be called for each control event"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "optional context object to call the callback on."
						}
					],
					"description": "Registers a listener for control events."
				},
				{
					"name": "attachFormatError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'formatError' event of <code>sap.ui.core.Core</code>.<br/>\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.<br/>"
				},
				{
					"name": "attachInit",
					"visibility": "public",
					"since": "1.13.2",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "Function to be after initialization of the framework"
						}
					],
					"description": "Registers a given function that is executed after the framework has been initialized.\n\nThe given function will either be called as soon as the framework has been initialized\nor, if it has been initialized already, it will be called immediately."
				},
				{
					"name": "attachInitEvent",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "Function that is called after initialization of the framework"
						}
					],
					"description": "Registers a given function that is executed after the framework has been initialized.\n\nThe method is executed only once and only if the framework has not been initialized already.\nThis could be checked by calling {@link #isInitialized}, but in most cases it is more convenient to\nuse {@link #attachInit} instead. This guarantees that the given function is executed exactly once,\nindependent of the state of the framework.",
					"deprecated": {
						"since": "1.13.2",
						"text": "Register with the more convenient {@link #attachInit} function instead"
					}
				},
				{
					"name": "attachIntervalTimer",
					"visibility": "public",
					"since": "1.16.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "callback to be called periodically"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "optional context object to call the callback on."
						}
					],
					"description": "Registers a listener to the central interval timer."
				},
				{
					"name": "attachLocalizationChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "callback to be called"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "context object to cal lthe function on."
						}
					],
					"description": "Register a listener for the <code>localizationChanged</code> event."
				},
				{
					"name": "attachParseError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'parseError' event of <code>sap.ui.core.Core</code>.<br/>\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.<br/>"
				},
				{
					"name": "attachThemeChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the <code>ThemeChanged</code> event of this <code>sap.ui.core.Core</code>."
				},
				{
					"name": "attachValidationError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'validationError' event of <code>sap.ui.core.Core</code>.<br/>\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.<br/>"
				},
				{
					"name": "attachValidationSuccess",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'validationSuccess' event of <code>sap.ui.core.Core</code>.<br/>\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.<br/>"
				},
				{
					"name": "byFieldGroupId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "The list of controls with matching field group IDs"
					},
					"parameters": [
						{
							"name": "vFieldGroupIds",
							"type": "string|string[]",
							"optional": true,
							"description": "ID of the field group or an array of field group IDs to match"
						}
					],
					"description": "Returns a list of all controls with a field group ID.\nSee {@link sap.ui.core.Control#checkFieldGroupIds Control.prototype.checkFieldGroupIds} for a description of the\n<code>vFieldGroupIds</code> parameter."
				},
				{
					"name": "byId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "the element for the given id"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false
						}
					],
					"description": "Returns the registered element for the given id, if any."
				},
				{
					"name": "createComponent",
					"visibility": "public",
					"parameters": [
						{
							"name": "vComponent",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"name": {
									"name": "name",
									"type": "string",
									"optional": true,
									"description": "name of the component to import"
								},
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "URL to load the component from"
								},
								"id": {
									"name": "id",
									"type": "string",
									"optional": true,
									"description": "ID for the component instance"
								},
								"settings": {
									"name": "settings",
									"type": "object",
									"optional": true,
									"description": "settings object for the component"
								},
								"componentData": {
									"name": "componentData",
									"type": "string",
									"optional": true,
									"description": "user specific data which is available during the whole lifecycle of the component"
								}
							},
							"description": "name of the component to import or object containing all needed parameters"
						},
						{
							"name": "sUrl",
							"type": "string",
							"optional": true,
							"description": "the URL to load the component from"
						},
						{
							"name": "sId",
							"type": "string",
							"optional": true,
							"description": "the ID for the component instance"
						},
						{
							"name": "mSettings",
							"type": "object",
							"optional": true,
							"description": "the settings object for the component"
						}
					],
					"description": "Creates a component with the provided id and settings.\n\nWhen the optional parameter <code>sUrl</code> is given, then all request for resources of the\nlibrary will be redirected to the given Url. This is convenience for a call to\n<pre>\n  jQuery.sap.registerModulePath(sName, sUrl);\n</pre>"
				},
				{
					"name": "createRenderManager",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "New instance of the RenderManager"
					},
					"description": "Returns a new instance of the RenderManager for exclusive use by the caller.\n\nThe caller must take care to destroy the render manager when it is no longer needed.\nCalling this method before the Core has been {@link #isInitialized initialized},\nis not recommended."
				},
				{
					"name": "createUIArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "a new UIArea"
					},
					"parameters": [
						{
							"name": "oDomRef",
							"type": "string|Element",
							"optional": false,
							"description": "a DOM Element or ID string of the UIArea"
						}
					],
					"description": "Creates a new sap.ui.core.UIArea.",
					"deprecated": {
						"text": "Use <code>setRoot()</code> instead!"
					}
				},
				{
					"name": "detachControlEvent",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "function to unregister"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "context object given during registration"
						}
					],
					"description": "Unregisters a listener for control events.\n\nA listener will only be unregistered if the same function/context combination\nis given as in the attachControlEvent call."
				},
				{
					"name": "detachFormatError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The callback function to unregister"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'formatError' event of <code>sap.ui.core.Core</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachIntervalTimer",
					"visibility": "public",
					"since": "1.16.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "function to unregister"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "context object given during registration"
						}
					],
					"description": "Unregisters a listener for the central interval timer.\n\nA listener will only be unregistered if the same function/context combination\nis given as in the attachIntervalTimer call."
				},
				{
					"name": "detachLocalizationChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "callback to be deregistered"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "context object given in a previous call to attachLocalizationChanged."
						}
					],
					"description": "Unregister a listener from the <code>localizationChanged</code> event.\n\nThe listener will only be unregistered if the same function/context combination\nis given as in the call to <code>attachLocalizationListener</code>."
				},
				{
					"name": "detachParseError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The callback function to unregister."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'parseError' event of <code>sap.ui.core.Core</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachThemeChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the <code>ThemeChanged</code> event of this <code>sap.ui.core.Core</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachValidationError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The callback function to unregister"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'validationError' event of <code>sap.ui.core.Core</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachValidationSuccess",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'validationSuccess' event of <code>sap.ui.core.Core</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Core with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "fireFormatError",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event formatError to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.core.Element</code> </li>\n<li>'property' of type <code>string</code> </li>\n<li>'type' of type <code>string</code> </li>\n<li>'newValue' of type <code>object</code> </li>\n<li>'oldValue' of type <code>object</code> </li>\n<li>'exception' of type <code>object</code> </li>\n</ul>"
				},
				{
					"name": "fireParseError",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event parseError to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.core.Element</code> </li>\n<li>'property' of type <code>string</code> </li>\n<li>'type' of type <code>string</code> </li>\n<li>'newValue' of type <code>object</code> </li>\n<li>'oldValue' of type <code>object</code> </li>\n<li>'exception' of type <code>object</code> </li>\n</ul>"
				},
				{
					"name": "fireThemeChanged",
					"visibility": "protected",
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"theme": {
									"name": "theme",
									"type": "object",
									"optional": true,
									"description": "Theme name"
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fire event <code>ThemeChanged</code> to attached listeners."
				},
				{
					"name": "fireValidationError",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event validationError to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.core.Element</code> </li>\n<li>'property' of type <code>string</code> </li>\n<li>'type' of type <code>string</code> </li>\n<li>'newValue' of type <code>object</code> </li>\n<li>'oldValue' of type <code>object</code> </li>\n<li>'exception' of type <code>object</code> </li>\n</ul>"
				},
				{
					"name": "fireValidationSuccess",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event validationSuccess to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'element' of type <code>sap.ui.core.Element</code> </li>\n<li>'property' of type <code>string</code> </li>\n<li>'type' of type <code>string</code> </li>\n<li>'newValue' of type <code>object</code> </li>\n<li>'oldValue' of type <code>object</code> </li>\n</ul>"
				},
				{
					"name": "getApplication",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.app.Application",
						"description": "instance of the current application"
					},
					"description": "Returns the instance of the application (if exists).",
					"deprecated": {
						"since": "1.15.1",
						"text": "The Component class is enhanced to take care about the Application code."
					}
				},
				{
					"name": "getComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Component",
						"description": "the component for the given id"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false
						}
					],
					"description": "Returns the registered component for the given id, if any."
				},
				{
					"name": "getConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration",
						"description": "the Configuration of the current Core."
					},
					"description": "Returns the Configuration of the Core."
				},
				{
					"name": "getControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "the element for the given id"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false
						}
					],
					"description": "Returns the registered element for the given ID, if any.",
					"deprecated": {
						"text": "use <code>sap.ui.core.Core.byId</code> instead!"
					}
				},
				{
					"name": "getCurrentFocusedControlId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the Id of the control/element currently in focus."
					},
					"description": "Returns the Id of the control/element currently in focus."
				},
				{
					"name": "getElementById",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "the element for the given id"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false
						}
					],
					"description": "Returns the registered element for the given ID, if any.",
					"deprecated": {
						"text": "use <code>sap.ui.core.Core.byId</code> instead!"
					}
				},
				{
					"name": "getEventBus",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.EventBus",
						"description": "the event bus"
					},
					"since": "1.8.0",
					"description": "Returns the event bus."
				},
				{
					"name": "getLibraryResourceBundle",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.util.ResourceBundle",
						"description": "the best matching resource bundle for the given parameters or undefined"
					},
					"parameters": [
						{
							"name": "sLibraryName",
							"type": "string",
							"optional": true,
							"defaultValue": "'sap.ui.core'",
							"description": "name of the library to retrieve the bundle for"
						},
						{
							"name": "sLocale",
							"type": "string",
							"optional": true,
							"description": "locale to retrieve the resource bundle for"
						}
					],
					"description": "Retrieves a resource bundle for the given library and locale.\n\nIf only one argument is given, it is assumed to be the libraryName. The locale\nthen falls back to the current {@link sap.ui.core.Configuration#getLanguage session locale}.\nIf no argument is given, the library also falls back to a default: \"sap.ui.core\"."
				},
				{
					"name": "getLoadedLibraries",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Map of library info objects keyed by the library names."
					},
					"description": "Returns a map of library info objects for all currently loaded libraries,\nkeyed by their names.\n\nThe structure of the library info objects matches the structure of the info object\nthat the {@link #initLibrary} method expects. Only property names documented with\n<code>initLibrary</code> should be accessed, any additional properties might change or\ndisappear in future. When a property does not exists, its default value (as documented\nwith <code>initLibrary</code>) should be assumed.\n\n<b>Note:</b> The returned info objects must not be modified. They might be a living\ncopy of the internal data (for efficiency reasons) and the framework is not prepared\nto handle modifications to these objects."
				},
				{
					"name": "getMessageManager",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.message.MessageManager"
					},
					"since": "1.33.0",
					"description": "Returns the active <code>MessageManager</code> instance."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Core."
				},
				{
					"name": "getModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "oModel"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string|undefined",
							"optional": true,
							"description": "name of the model to be retrieved"
						}
					],
					"description": "Get the model with the given model name.\n\nThe name can be omitted to reference the default model or it must be a non-empty string.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null</code>,\nthe empty string <code>\"\"</code> or the string literals <code>\"null\"</code> or <code>\"undefined\"</code> as model name."
				},
				{
					"name": "getRenderManager",
					"visibility": "public",
					"deprecated": {
						"since": "0.15.0",
						"text": "Replaced by <code>createRenderManager()</code>"
					}
				},
				{
					"name": "getRootComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Component",
						"description": "instance of the current root component"
					},
					"description": "Returns the instance of the root component (if exists)."
				},
				{
					"name": "getStaticAreaRef",
					"visibility": "public",
					"returnValue": {
						"type": "Element",
						"description": "the static, hidden area DOM element belonging to this core instance."
					},
					"description": "Returns the static, hidden area DOM element belonging to this core instance.\n\nIt can be used e.g. for hiding elements like Popups, Shadow, Blocklayer etc.\n\nIf it is not yet available, a DIV is created and appended to the body."
				},
				{
					"name": "getTemplate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Component",
						"description": "the template for the given id"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false
						}
					],
					"description": "Returns the registered template for the given id, if any.",
					"deprecated": {
						"since": "1.29.1",
						"text": "Require 'sap/ui/core/tmpl/Template' and use {@link sap.ui.core.tmpl.Template.byId Template.byId} instead."
					}
				},
				{
					"name": "getUIArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "a UIArea with a given id or dom ref."
					},
					"parameters": [
						{
							"name": "o",
							"type": "string|Element",
							"optional": false,
							"description": "a DOM Element or ID string of the UIArea"
						}
					],
					"description": "Returns a UIArea if the given ID/Element belongs to one."
				},
				{
					"name": "getUIDirty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if there are pending (or executing) rendering tasks."
					},
					"description": "Returns <code>true</code> if there are any pending rendering tasks or when\nsuch rendering tasks are currently being executed."
				},
				{
					"name": "hasModel",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true or false"
					},
					"description": "Check if a Model is set to the core"
				},
				{
					"name": "includeLibraryTheme",
					"visibility": "public",
					"parameters": [
						{
							"name": "sLibName",
							"type": "string",
							"optional": false,
							"description": "the name of the UI library"
						},
						{
							"name": "sVariant",
							"type": "string",
							"optional": true,
							"description": "the variant to include (optional)"
						},
						{
							"name": "sQuery",
							"type": "string",
							"optional": true,
							"description": "to be used only by the Core"
						}
					],
					"description": "Includes a library theme into the current page (if a variant is specified it\nwill include the variant library theme)"
				},
				{
					"name": "initLibrary",
					"visibility": "public",
					"parameters": [
						{
							"name": "oLibInfo",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"name": {
									"name": "name",
									"type": "string",
									"optional": true,
									"description": "Name of the library; when given it must match the name by which the library has been loaded"
								},
								"version": {
									"name": "version",
									"type": "string",
									"optional": false,
									"description": "Version of the library"
								},
								"dependencies": {
									"name": "dependencies",
									"type": "string[]",
									"optional": true,
									"defaultValue": "[]",
									"description": "List of libraries that this library depends on; names are in dot notation (e.g. \"sap.ui.core\")"
								},
								"types": {
									"name": "types",
									"type": "string[]",
									"optional": true,
									"defaultValue": "[]",
									"description": "List of names of types that this library provides; names are in dot notation (e.g. \"sap.ui.core.CSSSize\")"
								},
								"interfaces": {
									"name": "interfaces",
									"type": "string[]",
									"optional": true,
									"defaultValue": "[]",
									"description": "List of names of interface types that this library provides; names are in dot notation (e.g. \"sap.ui.core.PopupInterface\")"
								},
								"controls": {
									"name": "controls",
									"type": "string[]",
									"optional": true,
									"defaultValue": "[]",
									"description": "Names of control types that this library provides; names are in dot notation (e.g. \"sap.ui.core.ComponentContainer\")"
								},
								"elements": {
									"name": "elements",
									"type": "string[]",
									"optional": true,
									"defaultValue": "[]",
									"description": "Names of element types that this library provides (excluding controls); names are in dot notation (e.g. \"sap.ui.core.Item\")"
								},
								"noLibraryCSS": {
									"name": "noLibraryCSS",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "Indicates whether the library doesn't provide / use theming.\n                       When set to true, no library.css will be loaded for this library"
								},
								"extensions": {
									"name": "extensions",
									"type": "object",
									"optional": true,
									"description": "Potential extensions of the library metadata; structure not defined by the UI5 core framework."
								}
							},
							"description": "Info object for the library"
						}
					],
					"description": "Provides the framework with information about a library.\n\nThis method is intended to be called exactly once while the main module of a library\n(its <code>library.js</code> module) is executing, typically at its begin. The single\nparameter <code>oLibInfo</code> is an info object that describes the content of the library.\n\nWhen the <code>oLibInfo</code> has been processed, a normalized version of it will be kept\nand will be returned as library information in later calls to {@link #getLoadedLibraries}.\nFinally, <code>initLibrary</code> fires (the currently private) {@link #event:LibraryChanged}\nevent with operation 'add' for the newly loaded library.\n\n\n<h3>Side Effects</h3>\n\nWhile analyzing the <code>oLibInfo</code>, the framework takes some additional actions:\n\n<ul>\n<li>If the info object contains a list of <code>interfaces</code>, they will be registered\nwith the {@link sap.ui.base.DataType} class to make them available as aggregation types\nin managed objects.</li>\n\n<li>If the object contains a list of <code>controls</code> or <code>elements</code>,\n{@link sap.ui.lazyRequire lazy stubs} will be created for their constructor as well as for\ntheir static <code>extend</code> and <code>getMetadata</code> methods.<br>\n<b>Note:</b> Future versions might abandon the concept of lazy stubs as it requires synchronous\nXMLHttpRequests which have been deprecated (see {@link http://xhr.spec.whatwg.org}). To be on the\nsafe side, productive applications should always require any modules that they directly depend on.</li>\n\n<li>With the <code>noLibraryCSS</code> property, the library can be marked as 'theming-free'.\nOtherwise, the framework will add a &lt;link&gt; tag to the page's head, pointing to the library's\ntheme-specific stylesheet. The creation of such a &lt;link&gt; tag can be suppressed with the\n{@link sap.ui.core.Configuration global configuration option} <code>preloadLibCss</code>.\nIt can contain a list of library names for which no stylesheet should be included.\nThis is e.g. useful when an application merges the CSS for multiple libraries and already\nloaded the resulting stylesheet.</li>\n\n<li>If a list of library <code>dependencies</code> is specified in the info object, those\nlibraries will be loaded synchronously by <code>initLibrary</code>.<br>\n<b>Note:</b> Dependencies between libraries don't have to be modeled as AMD dependencies.\nOnly when enums or types from an additional library are used in the coding of the\n<code>library.js</code> module, the library should be additionally listed in the AMD dependencies.</li>\n</ul>\n\nLast but not least, higher layer frameworks might want to include their own metadata for libraries.\nThe property <code>extensions</code> might contain such additional metadata. Its structure is not defined\nby the framework, but it is strongly suggested that each extension only occupies a single property\nin the <code>extensions</code> object and that the name of that property contains some namespace\ninformation (e.g. library name that introduces the feature) to avoid conflicts with other extensions.\nThe framework won't touch the content of <code>extensions</code> but will make it available\nin the library info objects returned by {@link #getLoadedLibraries}.\n\n\n<h3>Relationship to Descriptor for Libraries (manifest.json)</h3>\n\nThe information contained in <code>oLibInfo</code> is partially redundant to the content of the descriptor\nfor the same library (its <code>manifest.json</code> file). Future versions of UI5 might ignore the information\nprovided in <code>oLibInfo</code> and might evaluate the descriptor file instead. Library developers therefore\nshould keep the information in both files in sync.\n\nWhen the <code>manifest.json</code> is generated from the <code>.library</code> file (which is the default\nfor UI5 libraries built with Maven), then the content of the <code>.library</code> and <code>library.js</code>\nfiles must be kept in sync."
				},
				{
					"name": "isInitialized",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the Core has already been initialized"
					},
					"description": "Returns true if the Core has already been initialized. This means that instances\nof RenderManager etc. do already exist and the init event has already been fired\n(and will not be fired again)."
				},
				{
					"name": "isLocked",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "locked state"
					},
					"description": "Returns the locked state of the <code>sap.ui.core.Core</code>"
				},
				{
					"name": "isMobile",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true or false"
					},
					"description": "Check if the script is running on mobile"
				},
				{
					"name": "isStaticAreaRef",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "whether the given DomRef is the StaticAreaRef"
					},
					"parameters": [
						{
							"name": "oDomRef",
							"type": "object",
							"optional": false
						}
					],
					"description": "Used to find out whether a certain DOM element is the static area"
				},
				{
					"name": "isThemeApplied",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the styles of the current theme are already applied"
					},
					"description": "Returns true, if the styles of the current theme are already applied, false otherwise.\n\nThis function must not be used before the init event of the Core.\nIf the styles are not yet applied an theme changed event will follow when the styles will be applied."
				},
				{
					"name": "loadLibraries",
					"visibility": "restricted",
					"returnValue": {
						"type": "Promise|undefined",
						"description": "returns a Promise in async mode, otherwise <code>undefined</code>"
					},
					"parameters": [
						{
							"name": "aLibraries",
							"type": "string[]",
							"optional": false,
							"description": "set of libraries that should be loaded"
						},
						{
							"name": "mOptions",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "whether to load the libraries async (default)"
								},
								"preloadOnly": {
									"name": "preloadOnly",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "whether to preload the libraries only (default is to require them as well)"
								}
							},
							"description": "configuration options"
						}
					],
					"description": "Loads a set of libraries, preferably asynchronously.\n\nThe module loading is still synchronous, so if a library loads additional modules besides\nits library.js file, those modules might be loaded synchronously by the library.js\nThe async loading is only supported by the means of the library-preload.js(on) files, so if a\nlibrary doesn't provide a preload or when the preload is deactivated (configuration, debug mode)\nthen this API falls back to synchronous loading. However, the contract (Promise) remains valid\nand a Promise will be returned if async is specified - even when the real loading\nis done synchronously.",
					"experimental": {
						"since": "1.27.0",
						"text": "This API is not mature yet and might be changed or removed completely.\nProductive code should not use it, except code that is delivered as part of UI5."
					}
				},
				{
					"name": "loadLibrary",
					"visibility": "public",
					"returnValue": {
						"type": "Object|Promise",
						"description": "An info object for the library (sync) or a Promise (async)"
					},
					"parameters": [
						{
							"name": "sLibrary",
							"type": "string",
							"optional": false,
							"description": "name of the library to load"
						},
						{
							"name": "vUrl",
							"type": "string|boolean|object",
							"optional": true,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "URL to load the library from"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"description": "Whether to load the library asynchronously"
								}
							},
							"description": "URL to load the library from or the async flag or a complex configuration object"
						}
					],
					"description": "Loads the given library and its dependencies and makes it available to the application.\n\nWhen library preloads are not suppressed for the given library, then a library-preload bundle\nwill be loaded for it. By default, the bundle will be loaded synchronously (for compatibility\nreasons). Only when the optional parameter <code>vUrl</code> is given as <code>true</code> or as\na configuration object with a property of <code>async:true</code>, then the bundle will be loaded\nasynchronously and a <code>Promise</code> will be returned (preferred usage).\n\nAfter preloading the bundle, dependency information from the bundle is evaluated and any\nmissing libraries are also preloaded.\n\nOnly then the library entry module (named <code><i>your/lib</i>/library.js</code>) will be required\nand executed. The module is supposed to call <code>sap.ui.getCore().initLibrary(...)</code>\nproviding the framework with additional metadata about the library, e.g. its version, the set of contained\nenums, types, interfaces, controls and elements and whether the library requires CSS. If the library\nrequires CSS, a &lt;link&gt; will be added to the page referring to the corresponding <code>library.css</code>\nstylesheet for the library and the current theme.\n\nWhen the optional parameter <code>vUrl</code> is given as a string or when a configuration object is given\nwith a non-empty, string-valued property <code>url</code>, then that URL will be registered for the\nnamespace of the library and all resources will be loaded from that location. This is convenience for\na call like\n<pre>\n  jQuery.sap.registerModulePath(sLibrary, vUrl); // or vUrl.url resp.\n</pre>\n\nWhen the given library has been loaded already, no further action will be taken, especially, a given\nURL will not be registered! In the case of asynchronous loading, a Promise will be returned, but will be\nresolved immediately."
				},
				{
					"name": "lock",
					"visibility": "public",
					"description": "Locks the Core. No browser events are dispatched to the controls.\n\nLock should be called before and after the dom is modified for rendering, roundtrips...\nExceptions might be the case for asynchronous UI behavior"
				},
				{
					"name": "registerPlugin",
					"visibility": "public",
					"parameters": [
						{
							"name": "oPlugin",
							"type": "object",
							"optional": false,
							"description": "reference to a Plugin object"
						}
					],
					"description": "Registers a Plugin to the <code>sap.ui.core.Core</code>, which lifecycle\nwill be managed (start and stop).\n<br/>\nPlugin object need to implement two methods:\n<ul>\n  <li><code>startPlugin(oCore)</code>: will be invoked, when the Plugin\n      should start (as parameter the reference to the Core will be provided</li>\n  <li><code>stopPlugin()</code>: will be invoked, when the Plugin should stop</li>\n</ul>"
				},
				{
					"name": "setModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oModel",
							"type": "sap.ui.model.Model",
							"optional": false,
							"description": "the model to be set or <code>null</code> or <code>undefined</code>"
						},
						{
							"name": "sName",
							"type": "string",
							"optional": true,
							"description": "the name of the model or <code>undefined</code>"
						}
					],
					"description": "Sets or unsets a model for the given model name.\n\nThe <code>sName</code> must either be <code>undefined</code> (or omitted) or a non-empty string.\nWhen the name is omitted, the default model is set/unset.\n\nWhen <code>oModel</code> is <code>null</code> or <code>undefined</code>, a previously set model\nwith that name is removed from the Core.\n\nAny change (new model, removed model) is propagated to all existing UIAreas and their descendants\nas long as a descendant doesn't have its own model set for the given name.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null</code>,\nthe empty string <code>\"\"</code> or the string literals <code>\"null\"</code> or <code>\"undefined\"</code> as model name."
				},
				{
					"name": "setRoot",
					"visibility": "public",
					"parameters": [
						{
							"name": "oDomRef",
							"type": "string|Element",
							"optional": false,
							"description": "a DOM Element or Id (string) of the UIArea"
						},
						{
							"name": "oControl",
							"type": "sap.ui.base.Interface|sap.ui.core.Control",
							"optional": false,
							"description": "the Control that should be the added to the <code>UIArea</code>."
						}
					],
					"description": "Implicitly creates a new <code>UIArea</code> (or reuses an exiting one) for the given DOM reference and\nadds the given control reference to the UIAreas content (existing content will be removed).",
					"deprecated": {
						"text": "Use function <code>oControl.placeAt(oDomRef, \"only\")</code> of <code>sap.ui.core.Control</code> instead."
					}
				},
				{
					"name": "setThemeRoot",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Core",
						"description": "the Core, to allow method chaining"
					},
					"since": "1.10",
					"parameters": [
						{
							"name": "sThemeName",
							"type": "string",
							"optional": false,
							"description": "Name of the theme for which to configure the location"
						},
						{
							"name": "aLibraryNames",
							"type": "string[]",
							"optional": true,
							"description": "Optional library names to which the configuration should be restricted"
						},
						{
							"name": "sThemeBaseUrl",
							"type": "string",
							"optional": false,
							"description": "Base URL below which the CSS file(s) will be loaded from"
						}
					],
					"description": "Defines the root directory from below which UI5 should load the theme with the given name.\nOptionally allows restricting the setting to parts of a theme covering specific control libraries.\n\nExample:\n<pre>\n  sap.ui.getCore().setThemeRoot(\"my_theme\", \"https://mythemeserver.com/allThemes\");\n  sap.ui.getCore().applyTheme(\"my_theme\");\n</pre>\n\nwill cause the following file to be loaded (assuming that the bootstrap is configured to load\n libraries <code>sap.m</code> and <code>sap.ui.layout</code>):\n<pre>\n  https://mythemeserver.com/allThemes/sap/ui/core/themes/my_theme/library.css\n  https://mythemeserver.com/allThemes/sap/ui/layout/themes/my_theme/library.css\n  https://mythemeserver.com/allThemes/sap/m/themes/my_theme/library.css\n</pre>\n\nIf parts of the theme are at different locations (e.g. because you provide a standard theme\nlike \"sap_belize\" for a custom control library and this self-made part of the standard theme is at a\ndifferent location than the UI5 resources), you can also specify for which control libraries the setting\nshould be used, by giving an array with the names of the respective control libraries as second parameter:\n<pre>\n  sap.ui.getCore().setThemeRoot(\"sap_belize\", [\"my.own.library\"], \"https://mythemeserver.com/allThemes\");\n</pre>\n\nThis will cause the Belize theme to be loaded from the UI5 location for all standard libs.\nResources for styling the <code>my.own.library</code> controls will be loaded from the configured\nlocation:\n<pre>\n  https://openui5.hana.ondemand.com/resources/sap/ui/core/themes/sap_belize/library.css\n  https://openui5.hana.ondemand.com/resources/sap/ui/layout/themes/sap_belize/library.css\n  https://openui5.hana.ondemand.com/resources/sap/m/themes/sap_belize/library.css\n  https://mythemeserver.com/allThemes/my/own/library/themes/sap_belize/library.css\n</pre>\n\nIf the custom theme should be loaded initially (via bootstrap attribute), the <code>themeRoots</code>\nproperty of the <code>window[\"sap-ui-config\"]</code> object must be used instead of calling\n<code>sap.ui.getCore().setThemeRoot(...)</code> in order to configure the theme location early enough."
				},
				{
					"name": "unlock",
					"visibility": "public",
					"description": "Unlocks the Core.\n\nBrowser events are dispatched to the controls again after this method is called."
				},
				{
					"name": "unregisterPlugin",
					"visibility": "public",
					"parameters": [
						{
							"name": "oPlugin",
							"type": "object",
							"optional": false,
							"description": "reference to a Plugin object"
						}
					],
					"description": "Unregisters a Plugin out of the <code>sap.ui.core.Core</code>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.CSSColor",
			"basename": "CSSColor",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "CSSColor",
			"final": true,
			"static": true,
			"visibility": "public",
			"description": "A string type that represents CSS color values.\n\nAllowed values are CSS hex colors like \"#666666\" or \"#fff\", RGB/HSL values like \"rgb(0,0,0)\"\nor \"hsla(50%,10%,30%,0.5)\" as well as CSS color names like \"green\" and \"darkblue\" and special\nvalues like \"inherit\" and \"transparent\".\n\nThe empty string is also allowed and has the same effect as setting no color."
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.CSSSize",
			"basename": "CSSSize",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "CSSSize",
			"final": true,
			"static": true,
			"visibility": "public",
			"description": "A string type that represents CSS size values.\n\nThe CSS specifications calls this the <code>'&lt;length&gt; type'</code>.\nAllowed values are CSS sizes like \"1px\" or \"2em\" or \"50%\". The special values <code>auto</code>\nand <code>inherit</code> are also accepted as well as mathematical expressions using the CSS3\n<code>calc(<i>expression</i>)</code> operator.\n\nNote that CSS does not allow all these values for every CSS property representing a size.\nE.g. <code>padding-left</code> doesn't allow the value <code>auto</code>. So even if a value is\naccepted by <code>sap.ui.core.CSSSize</code>, it still might have no effect in a specific context.\nIn other words: UI5 controls usually don't extend the range of allowed values in CSS.\n\n\n<b>Units</b>\n\nValid font-relative units are <code>em, ex</code> and <code>rem</code>. Supported absolute units\nare <code>cm, mm, in, pc, pt</code> and <code>px</code>. Other units are not supported yet.\n\n\n<b>Mathematical Expressions</b>\n\nExpressions inside the <code>calc()</code> operator are only roughly checked for validity.\nNot every value that this type accepts might be a valid expression in the sense of the CSS spec.\nBut vice versa, any expression that is valid according to the spec should be accepted by this type.\nThe current implementation is based on the\n{@link http://dev.w3.org/csswg/css-values-3/#calc-syntax CSS3 Draft specification from 22 April 2015}.\n\nNoteworthy details:\n<ul>\n<li>whitespace is mandatory around a '-' or '+' operator and optional otherwise</li>\n<li>parentheses are accepted but not checked for being balanced (a limitation of regexp based checks)</li>\n<li>semantic constraints like type restrictions are not checked</li>\n</ul>\n\nFuture versions of UI5 might check <code>calc()</code> expressions in more detail, so applications should\nnot assume that a value, that is invalid according to the CSS spec but currently accepted by this type\nstill will be accepted by future versions of this type."
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.CSSSizeShortHand",
			"basename": "CSSSizeShortHand",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "CSSSizeShortHand",
			"final": true,
			"static": true,
			"visibility": "public",
			"since": "1.11.0",
			"description": "This type checks the short hand form of a margin or padding definition.\n\nE.g. \"1px 1px\" or up to four CSSSize values are allowed or tHe special keyword <code>inherit</code>."
		},
		{
			"kind": "class",
			"name": "sap.ui.core.CustomData",
			"basename": "CustomData",
			"resource": "sap/ui/core/CustomData.js",
			"module": "sap/ui/core/CustomData",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Contains a single key/value pair of custom data attached to an Element. See method data().",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The key of the data in this CustomData object.\nWhen the data is just stored, it can be any string, but when it is to be written to HTML (writeToDom == true) then it must also be a valid HTML attribute name (it must conform to the sap.ui.core.ID type and may contain no colon) to avoid collisions, it also may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\".\nIf any restriction is violated, a warning will be logged and nothing will be written to the DOM.",
						"methods": [
							"getKey",
							"setKey"
						]
					},
					{
						"name": "value",
						"type": "any",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The data stored in this CustomData object.\nWhen the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string.\nIf this restriction is violated, a warning will be logged and nothing will be written to the DOM.",
						"methods": [
							"getValue",
							"setValue"
						]
					},
					{
						"name": "writeToDom",
						"type": "boolean",
						"defaultValue": false,
						"group": "Data",
						"visibility": "public",
						"since": "1.9.0",
						"description": "If set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute.\nIf the key is \"abc\" and the value is \"cde\", the HTML will look as follows:\n&lt;SomeTag ... data-abc=\"cde\" ... &gt;\nThus the application can provide stable attributes by data binding which can be used for styling or identification purposes.\nATTENTION: use carefully to not create huge attributes or a large number of them.",
						"methods": [
							"getWriteToDom",
							"setWriteToDom"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new CustomData.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.CustomData with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"description": "Gets current value of property <code>key</code>.\r\rThe key of the data in this CustomData object.\nWhen the data is just stored, it can be any string, but when it is to be written to HTML (writeToDom == true) then it must also be a valid HTML attribute name (it must conform to the sap.ui.core.ID type and may contain no colon) to avoid collisions, it also may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\".\nIf any restriction is violated, a warning will be logged and nothing will be written to the DOM."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.CustomData."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\r\rThe data stored in this CustomData object.\nWhen the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string.\nIf this restriction is violated, a warning will be logged and nothing will be written to the DOM."
				},
				{
					"name": "getWriteToDom",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>writeToDom</code>"
					},
					"since": "1.9.0",
					"description": "Gets current value of property <code>writeToDom</code>.\r\rIf set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute.\nIf the key is \"abc\" and the value is \"cde\", the HTML will look as follows:\n&lt;SomeTag ... data-abc=\"cde\" ... &gt;\nThus the application can provide stable attributes by data binding which can be used for styling or identification purposes.\nATTENTION: use carefully to not create huge attributes or a large number of them.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CustomData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\r\rThe key of the data in this CustomData object.\nWhen the data is just stored, it can be any string, but when it is to be written to HTML (writeToDom == true) then it must also be a valid HTML attribute name (it must conform to the sap.ui.core.ID type and may contain no colon) to avoid collisions, it also may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\".\nIf any restriction is violated, a warning will be logged and nothing will be written to the DOM.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CustomData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\r\rThe data stored in this CustomData object.\nWhen the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string.\nIf this restriction is violated, a warning will be logged and nothing will be written to the DOM.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWriteToDom",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CustomData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.9.0",
					"parameters": [
						{
							"name": "bWriteToDom",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>writeToDom</code>"
						}
					],
					"description": "Sets a new value for property <code>writeToDom</code>.\r\rIf set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute.\nIf the key is \"abc\" and the value is \"cde\", the HTML will look as follows:\n&lt;SomeTag ... data-abc=\"cde\" ... &gt;\nThus the application can provide stable attributes by data binding which can be used for styling or identification purposes.\nATTENTION: use carefully to not create huge attributes or a large number of them.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.DeclarativeSupport",
			"basename": "DeclarativeSupport",
			"resource": "sap/ui/core/DeclarativeSupport.js",
			"module": "sap/ui/core/DeclarativeSupport",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.7.0",
			"description": "Static class for enabling declarative UI support.",
			"constructor": {
				"visibility": "public"
			},
			"methods": [
				{
					"name": "compile",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "oElement",
							"type": "Element",
							"optional": false,
							"description": "the DOM element to compile"
						},
						{
							"name": "oView",
							"type": "sap.ui.core.mvc.HTMLView",
							"optional": true,
							"description": "The view instance to use"
						},
						{
							"name": "isRecursive",
							"type": "boolean",
							"optional": true,
							"description": "Whether the call of the function is recursive."
						}
					],
					"description": "Enhances the given DOM element by parsing the Control and Elements info and creating\nthe SAPUI5 controls for them."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.delegate",
			"basename": "delegate",
			"resource": "sap/ui/core/delegate/ScrollEnablement.js",
			"module": "sap/ui/core/delegate/ScrollEnablement",
			"static": true,
			"visibility": "public"
		},
		{
			"kind": "class",
			"name": "sap.ui.core.delegate.ItemNavigation",
			"basename": "ItemNavigation",
			"resource": "sap/ui/core/delegate/ItemNavigation.js",
			"module": "sap/ui/core/delegate/ItemNavigation",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"description": "Delegate for the navigation between DOM nodes with the keyboard.\n\nThe <code>ItemNavigation</code> provides keyboard and mouse navigation between DOM nodes representing items.\nThis means that controls rendering a list of items can attach this delegate to get a common keyboard and mouse support\nto navigate between these items.\nIt is possible to navigate between the items via the arrow keys.\nIf needed, paging using the Page Up and Page Down keys is possible. (To activate call <code>setPageSize</code> with a value &gt; 0.)\nHOME and END keys are also supported.\nFocusing an item via mouse also is also supported. For mouse navigation, the <code>mousedown</code> event is used.\n\nAs the <code>ItemNavigation</code> works with DOM nodes, the items and the control area must be provided as\nDOM references. There is one root DOM reference (set via <code>setRootDomRef</code>).\nAll item DOM references (set via <code>setItemDomRefs</code>) must be places somewhere inside of this root DOM reference.\nOnly focusable items are used for the navigation, meaning disabled items or separator items are just ignored by navigating\nthrough the items. In some cases however, it makes sense to put the non-focusable items in the array of the DOM references to\nkeep the indexes stable or like in the calling control.\n<b>Hint:</b> To make a DOM reference focusable a <code>tabindex</code> of -1 can be set.\n\n<b>Note</b> After re-rendering of the control or changing the DOM nodes of the control, the\nDOM references of the <code>ItemNavigation</code> must be updated. Then the same item\n(corresponding to the index) will get the focus.\n\nThe <code>ItemNavigation</code> adjusts the <code>tabindex</code> of all DOM references relating to the current\nfocused item. So if the control containing the items gets the focus (e.g. via tab navigation),\nit is always the focused items which will be focused.\n\n<b>Note:</b> If the <code>ItemNavigation</code> is nested in another <code>ItemNavigation</code>\n(e.g. <code>SegmentedButton</code> in <code>Toolbar</code>), the <code>RootDomRef</code> will always have <code>tabindex</code> -1.\n\nPer default the <code>ItemNavigation</code> cycles over the items.\nIt navigates again to the first item if the Arrow Down or Arrow Right key is pressed while\nthe last item has the focus. It navigates to the last item if arrow up or\narrow left is pressed while the first item has the focus.\nIf you want to stop the navigation at the first and last item,\ncall the <code>setCycling</code> method with a value of <code>false</code>.\n\nIt is possible to have multiple columns in the item navigation. If multiple columns\nare used, the keyboard navigation changes. The Arrow Right and Arrow Left keys will take the user to the next or previous\nitem, and the Arrow Up and Arrow Down keys will navigate the same way but in a vertical direction.\n\nThe <code>ItemNavigation</code> also allows setting a selected index that is used to identify\nthe selected item. Initially, if no other focus is set, the selected item will be the focused one.\nNote that navigating through the items will not change the selected item, only the focus.\n(For example a radio group has one selected item.)",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oDomRef",
						"type": "Element",
						"optional": false,
						"description": "The root DOM reference that includes all items"
					},
					{
						"name": "aItemDomRefs",
						"type": "Element[]",
						"optional": false,
						"description": "Array of DOM references representing the items for the navigation"
					},
					{
						"name": "bNotInTabChain",
						"type": "boolean",
						"optional": true,
						"defaultValue": false,
						"description": "Whether the selected element should be in the tab chain or not"
					}
				],
				"description": "Creates an <code>ItemNavigation</code> delegate that can be attached to controls requiring\ncapabilities for keyboard navigation between items."
			},
			"events": [
				{
					"name": "afterFocus",
					"visibility": "public",
					"parameters": [
						{
							"name": "index",
							"type": "int",
							"description": "Index of the item"
						},
						{
							"name": "event",
							"type": "jQuery.Event",
							"description": "Event that leads to the focus change"
						}
					],
					"description": "The 'afterFocus' event is fired after the actual item is focused.\nThe control can register to this event and react on the focus change."
				},
				{
					"name": "beforeFocus",
					"visibility": "public",
					"parameters": [
						{
							"name": "index",
							"type": "int",
							"description": "Index of the item"
						},
						{
							"name": "event",
							"type": "jQuery.Event",
							"description": "Event that leads to the focus change"
						}
					],
					"description": "The 'beforeFocus' event is fired before the actual item is focused."
				},
				{
					"name": "borderReached",
					"visibility": "public",
					"parameters": [
						{
							"name": "index",
							"type": "int",
							"description": "Index of the item"
						},
						{
							"name": "event",
							"type": "jQuery.Event",
							"description": "Event that leads to the focus change"
						}
					],
					"description": "The 'borderReached' event is fired if the border of the items is reached and\nno cycling is used, meaning an application can react on this.\n\nFor example if the first item is focused and the Arrow Left key is pressed."
				},
				{
					"name": "focusAgain",
					"visibility": "public",
					"parameters": [
						{
							"name": "index",
							"type": "int",
							"description": "Index of the item"
						},
						{
							"name": "event",
							"type": "jQuery.Event",
							"description": "Event that leads to the focus change"
						}
					],
					"description": "The 'focusAgain' event is fired if the current focused item is focused again\n(e.g. click again on focused item.)"
				},
				{
					"name": "focusLeave",
					"visibility": "public",
					"parameters": [
						{
							"name": "index",
							"type": "int",
							"description": "Index of the item"
						},
						{
							"name": "event",
							"type": "jQuery.Event",
							"description": "Event that leads to the focus change"
						}
					],
					"description": "The 'focusLeave' event fired if the focus is set outside the control handled by the <code>ItemNavigation</code>."
				}
			],
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.delegate.ItemNavigation with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "getDisabledModifiers",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Object that includes event type with disabled keys as an array"
					},
					"parameters": [
						{
							"name": "oDisabledModifiers",
							"type": "object",
							"optional": false,
							"description": "Object that includes event type with disabled keys as an array"
						}
					],
					"description": "Returns disabled modifiers\nThese modifiers will not be handled by the <code>ItemNavigation</code>"
				},
				{
					"name": "getItemDomRefs",
					"visibility": "public",
					"returnValue": {
						"type": "Element[]",
						"description": "Array of item DOM references"
					},
					"description": "Returns the array of item DOM references"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.delegate.ItemNavigation."
				},
				{
					"name": "getRootDomRef",
					"visibility": "public",
					"returnValue": {
						"type": "Element",
						"description": "Root DOM reference"
					},
					"description": "Returns the root DOM reference surrounding the items"
				},
				{
					"name": "hasDisabledModifier",
					"visibility": "public",
					"returnValue": {
						"type": "Boolean",
						"description": "Flag if disabled modifiers are set"
					},
					"parameters": [
						{
							"name": "oEvent",
							"type": "jQuery.Event",
							"optional": false,
							"description": "jQuery event"
						}
					],
					"description": "Check whether given event has disabled modifier or not"
				},
				{
					"name": "setColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.delegate.ItemNavigation",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iColumns",
							"type": "int",
							"optional": false,
							"description": "Count of columns for the table mode or cycling mode"
						},
						{
							"name": "bNoColumnChange",
							"type": "boolean",
							"optional": false,
							"description": "Forbids jumping to an other column with Arrow Up and Arrow Down keys"
						}
					],
					"description": "Sets whether the items are displayed in columns.\n\nIf columns are used, the Arrow Up and Arrow Down keys navigate to the next or previous\nitem of the column. If the first or last item of the column is reached, the next focused\nitem is then in the next or previous column."
				},
				{
					"name": "setCycling",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.delegate.ItemNavigation",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bCycling",
							"type": "boolean",
							"optional": false,
							"description": "Set to true if cycling should be done, else false"
						}
					],
					"description": "Sets whether the <code>ItemNavigation</code> should cycle through the items.\n\nIf cycling is disabled the navigation stops at the first and last item, if the corresponding arrow keys are used."
				},
				{
					"name": "setDisabledModifiers",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.delegate.ItemNavigation",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDisabledModifiers",
							"type": "Object",
							"optional": false,
							"description": "Object that includes event type with disabled keys as an array"
						}
					],
					"description": "Sets the disabled modifiers\nThese modifiers will not be handled by the <code>ItemNavigation</code>\n\n<pre>\nExample: Disable shift + up handling of the <code>ItemNavigation</code>\n\noItemNavigation.setDisabledModifiers({\n    sapnext : [\"shift\"]\n});\n\nPossible keys are : \"shift\", \"alt\", \"ctrl\", \"meta\"\nPossible events are : \"sapnext\", \"sapprevious\", \"saphome\", \"sapend\"\n</pre>"
				},
				{
					"name": "setHomeEndColumnMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.delegate.ItemNavigation",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bStayInRow",
							"type": "boolean",
							"optional": false,
							"description": "HOME -> go to first item in row; END -> go to last item in row"
						},
						{
							"name": "bCtrlEnabled",
							"type": "boolean",
							"optional": false,
							"description": "HOME/END with CTRL -> go to first/last item of all"
						}
					],
					"description": "Sets behavior of HOME and END keys if columns are used."
				},
				{
					"name": "setItemDomRefs",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.delegate.ItemNavigation",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "aItemDomRefs",
							"type": "Element[]",
							"optional": false,
							"description": "Array of DOM references or DOM node list object, representing the items"
						}
					],
					"description": "Sets the item DOM references as an array for the items"
				},
				{
					"name": "setPageSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.delegate.ItemNavigation",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iPageSize",
							"type": "int",
							"optional": false,
							"description": "The page size, needs to be at least 1"
						}
					],
					"description": "Sets the page size of the item navigation to allow Page Up and Page Down keys."
				},
				{
					"name": "setRootDomRef",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.delegate.ItemNavigation",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDomRef",
							"type": "object",
							"optional": false,
							"description": "Root DOM reference"
						}
					],
					"description": "Sets the root DOM reference surrounding the items"
				},
				{
					"name": "setSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.delegate.ItemNavigation",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "Index of the first selected item"
						}
					],
					"description": "Sets the selected index if the used control supports selection."
				},
				{
					"name": "setTableMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.delegate.ItemNavigation",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bTableMode",
							"type": "boolean",
							"optional": false,
							"description": "Set to true if table mode should be used, else false"
						},
						{
							"name": "bTableList",
							"type": "boolean",
							"optional": true,
							"description": "This sets a different behavior for table mode.\nIn this mode we keep using table navigation but there are some differences. e.g.\n<ul>\n\t<li>Page-up moves focus to the first row, not to the first cell like in table mode</li>\n\t<li>Page-down moves focus to the last row, not to the last cell like in table mode</li>\n</ul>"
						}
					],
					"description": "Sets whether the <code>ItemNavigation</code> should use the table mode to navigate through\nthe items (navigation in a grid)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.delegate.ScrollEnablement",
			"basename": "ScrollEnablement",
			"resource": "sap/ui/core/delegate/ScrollEnablement.js",
			"module": "sap/ui/core/delegate/ScrollEnablement",
			"export": "",
			"static": true,
			"visibility": "protected",
			"extends": "sap.ui.base.Object",
			"description": "Delegate for touch scrolling on mobile devices\n\nThis delegate uses native scrolling of mobile and desktop browsers. Third party scrolling libraries are not supported.\n\nControls that implement ScrollEnablement should additionally provide the getScrollDelegate method that returns\nthe current instance of this delegate object",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "protected",
				"parameters": [
					{
						"name": "oControl",
						"type": "sap.ui.core.Control",
						"optional": false,
						"description": "the Control of which this Scroller is the delegate"
					},
					{
						"name": "sScrollContentDom",
						"type": "string",
						"optional": false,
						"description": "the Id of the element within the DOM of the Control which should be scrollable"
					},
					{
						"name": "oConfig",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"horizontal": {
								"name": "horizontal",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "Whether the element should be scrollable horizontally"
							},
							"vertical": {
								"name": "vertical",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "Whether the element should be scrollable vertically"
							},
							"zynga": {
								"name": "zynga",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "@deprecated since 1.42, the parameter has no effect"
							},
							"iscroll": {
								"name": "iscroll",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "@deprecated since 1.42, the parameter has no effect"
							},
							"preventDefault": {
								"name": "preventDefault",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "@deprecated since 1.42, the parameter has no effect"
							},
							"nonTouchScrolling": {
								"name": "nonTouchScrolling",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "If true, the delegate will also be active to allow touch like scrolling with the mouse on non-touch platforms."
							},
							"scrollContainerId": {
								"name": "scrollContainerId",
								"type": "string",
								"optional": true,
								"defaultValue": "\"\"",
								"description": "Native scrolling does not need content wrapper. In this case, ID of the container element should be provided."
							}
						},
						"description": "the configuration of the scroll delegate"
					}
				],
				"description": "Creates a ScrollEnablement delegate that can be attached to Controls requiring\ncapabilities for scrolling of a certain part of their DOM."
			},
			"methods": [
				{
					"name": "destroy",
					"visibility": "protected",
					"description": "Destroys this Scrolling delegate.\n\nThis function must be called by the control which uses this delegate in the <code>exit</code> function."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.delegate.ScrollEnablement with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getChildPosition",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "Position object."
					},
					"parameters": [
						{
							"name": "vElement",
							"type": "HTMLElement|jQuery",
							"optional": false,
							"description": "An element(DOM or jQuery) for which the scroll position will be calculated."
						}
					],
					"description": "Calculates scroll position of a child of a container."
				},
				{
					"name": "getHorizontal",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "true if horizontal scrolling is enabled"
					},
					"since": "1.9.1",
					"description": "Get current setting for horizontal scrolling."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.delegate.ScrollEnablement."
				},
				{
					"name": "getVertical",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "true if vertical scrolling is enabled"
					},
					"since": "1.9.1",
					"description": "Get current setting for vertical scrolling."
				},
				{
					"name": "refresh",
					"visibility": "protected",
					"description": "Refreshes this Scrolling delegate."
				},
				{
					"name": "scrollToElement",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.delegate.ScrollEnablement"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "HTMLElement",
							"optional": false,
							"description": "A DOM element."
						},
						{
							"name": "iTime",
							"type": "int",
							"optional": true,
							"defaultValue": 0,
							"description": "The duration of animated scrolling in milliseconds. To scroll immediately without animation, give 0 as value."
						}
					],
					"description": "Scrolls to an element within a container."
				},
				{
					"name": "setBounce",
					"visibility": "protected",
					"since": "1.17",
					"parameters": [
						{
							"name": "bBounce",
							"type": "boolean",
							"optional": false,
							"description": "new value for property <code>bounce</code>."
						}
					],
					"description": "Setter for property <code>bounce</code>.",
					"deprecated": {
						"since": "1.42"
					}
				},
				{
					"name": "setGrowingList",
					"visibility": "protected",
					"since": "1.11.0",
					"parameters": [
						{
							"name": "fnScrollLoadCallback",
							"type": "function",
							"optional": false,
							"description": "Scrolling callback"
						},
						{
							"name": "sScrollLoadDirection",
							"type": "sap.m.ListGrowingDirection",
							"optional": false,
							"description": "Scrolling direction"
						}
					],
					"description": "Sets GrowingList control to scroll container"
				},
				{
					"name": "setHorizontal",
					"visibility": "protected",
					"parameters": [
						{
							"name": "bHorizontal",
							"type": "boolean",
							"optional": false,
							"description": "set true to enable horizontal scrolling, false - to disable"
						}
					],
					"description": "Enable or disable horizontal scrolling."
				},
				{
					"name": "setIconTabBar",
					"visibility": "protected",
					"since": "1.16.1",
					"parameters": [
						{
							"name": "oIconTabBar",
							"type": "sap.m.IconTabBar",
							"optional": false,
							"description": "instance"
						},
						{
							"name": "fnScrollEndCallback",
							"type": "function",
							"optional": false,
							"description": "callback function for the scroll end event"
						},
						{
							"name": "fnScrollStartCallback",
							"type": "function",
							"optional": false,
							"description": "callback function for the scroll start event"
						}
					],
					"description": "Sets IconTabBar control to scroll container"
				},
				{
					"name": "setPullDown",
					"visibility": "protected",
					"since": "1.9.2",
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Top control that should be normally hidden over\nthe top border of the scroll container (pull-down content)."
						}
					],
					"description": "Set overflow control on top of scroll container."
				},
				{
					"name": "setVertical",
					"visibility": "protected",
					"parameters": [
						{
							"name": "bVertical",
							"type": "boolean",
							"optional": false,
							"description": "set true to enable vertical scrolling, false - to disable"
						}
					],
					"description": "Enable or disable vertical scrolling."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.Design",
			"basename": "Design",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Design",
			"static": true,
			"visibility": "public",
			"description": "Font design for texts",
			"properties": [
				{
					"name": "Monospace",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Mono space font"
				},
				{
					"name": "Standard",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Standard font"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.Dock",
			"basename": "Dock",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Dock",
			"final": true,
			"static": true,
			"visibility": "public",
			"description": "Docking position: horizontal/vertical.\n\nDefines a position on the element which is used for aligned positioning of another element (e.g. the left top\ncorner of a popup is positioned at the left bottom corner of the input field). For the horizontal position possible values\nare \"begin\", \"left\", \"center\", \"right\" and \"end\", where left/right always are left and right, or begin/end which are\ndependent on the text direction. For the vertical position possible values are \"top\", \"center\" and \"bottom\".\nExamples: \"left top\", \"end bottom\", \"center center\"."
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Element",
			"basename": "Element",
			"resource": "sap/ui/core/Element.js",
			"module": "sap/ui/core/Element",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Base Class for Elements.",
			"ui5-metadata": {
				"stereotype": "element",
				"aggregations": [
					{
						"name": "tooltip",
						"singularName": "tooltip",
						"type": "sap.ui.core.TooltipBase",
						"altTypes": [
							"string"
						],
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The tooltip that should be shown for this Element.\n\nCan either be an instance of a TooltipBase subclass or a simple string.",
						"methods": [
							"getTooltip",
							"destroyTooltip",
							"setTooltip"
						]
					},
					{
						"name": "customData",
						"singularName": "customData",
						"type": "sap.ui.core.CustomData",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Custom Data, a data structure like a map containing arbitrary key value pairs.",
						"methods": [
							"getCustomData",
							"destroyCustomData",
							"insertCustomData",
							"addCustomData",
							"removeCustomData",
							"indexOfCustomData",
							"removeAllCustomData"
						]
					},
					{
						"name": "layoutData",
						"singularName": "layoutData",
						"type": "sap.ui.core.LayoutData",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Defines the layout constraints for this control when it is used inside a Layout.\nLayoutData classes are typed classes and must match the embedding Layout.\nSee VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.",
						"methods": [
							"getLayoutData",
							"destroyLayoutData",
							"setLayoutData"
						]
					},
					{
						"name": "dependents",
						"singularName": "dependent",
						"type": "sap.ui.core.Element",
						"cardinality": "0..n",
						"visibility": "public",
						"since": "1.19",
						"description": "Dependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.",
						"methods": [
							"getDependents",
							"destroyDependents",
							"insertDependent",
							"addDependent",
							"removeDependent",
							"indexOfDependent",
							"removeAllDependents"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control; generated automatically if no non-empty id is given\n     Note: this can be omitted, no matter whether <code>mSettings</code> will be given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial property values, aggregated objects etc. for the new element"
					}
				],
				"description": "Constructs and initializes an UI Element with the given <code>sId</code> and settings.\n\nIf the optional <code>mSettings</code> are given, they must be a JSON-like object (object literal)\nthat defines values for properties, aggregations, associations or events keyed by their name.\n\n<b>Valid Names:</b>\n\nThe property (key) names supported in the object literal are exactly the (case sensitive)\nnames documented in the JSDoc for the properties, aggregations, associations and events\nof the control and its base classes. Note that for  0..n aggregations and associations this\nusually is the plural name, whereas it is the singular name in case of 0..1 relations.\n\nIf a key name is ambiguous for a specific control class (e.g. a property has the same\nname as an event), then this method prefers property, aggregation, association and\nevent in that order. To resolve such ambiguities, the keys can be prefixed with\n<code>aggregation:</code>, <code>association:</code> or <code>event:</code>.\nIn that case the keys must be quoted due to the ':'.\n\nEach subclass should document the set of supported names in its constructor documentation.\n\n<b>Valid Values:</b>\n\n<ul>\n<li>for normal properties, the value has to be of the correct simple type (no type conversion occurs)\n<li>for 0..1 aggregations, the value has to be an instance of the aggregated control or element type\n<li>for 0..n aggregations, the value has to be an array of instances of the aggregated type\n<li>for 0..1 associations, an instance of the associated type or an id (string) is accepted\n<li>0..n associations are not supported yet\n<li>for events either a function (event handler) is accepted or an array of length 2\n    where the first element is a function and the 2nd element is an object to invoke the method on.\n</ul>\n\nSpecial aggregation <code>dependents</code> is connected to the lifecycle management and databinding,\nbut not rendered automatically and can be used for popups or other dependent controls or elements.\nThis allows the definition of popup controls in declarative views and enables propagation of model\nand context information to them.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "$",
					"visibility": "protected",
					"returnValue": {
						"type": "jQuery",
						"description": "The jQuery wrapped element's DOM reference"
					},
					"parameters": [
						{
							"name": "sSuffix",
							"type": "string",
							"optional": true,
							"description": "ID suffix to get a jQuery object for"
						}
					],
					"description": "Returns the best suitable DOM node that represents this Element wrapped as jQuery object.\nI.e. the element returned by {@link sap.ui.core.Element#getDomRef} is wrapped and returned.\n\nIf an ID suffix is given, the ID of this Element is concatenated with the suffix\n(separated by a single dash) and the DOM node with that compound ID will be wrapped by jQuery.\nThis matches the UI5 naming convention for named inner DOM nodes of a control."
				},
				{
					"name": "_attachMediaContainerWidthChange",
					"visibility": "restricted",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "undefined",
							"optional": false
						},
						{
							"name": "oListener",
							"type": "undefined",
							"optional": false
						},
						{
							"name": "sName",
							"type": "undefined",
							"optional": false
						}
					],
					"description": "Registers the given event handler to change events of the screen width/closest media container width, based on the range set with the specified name."
				},
				{
					"name": "_detachMediaContainerWidthChange",
					"visibility": "restricted",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "undefined",
							"optional": false
						},
						{
							"name": "oListener",
							"type": "undefined",
							"optional": false
						},
						{
							"name": "sName",
							"type": "undefined",
							"optional": false
						}
					],
					"description": "Removes a previously attached event handler from the change events of the screen width/closest media container width."
				},
				{
					"name": "_getCurrentMediaContainerRange",
					"visibility": "restricted",
					"returnValue": {
						"type": "map"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "undefined",
							"optional": false
						}
					],
					"description": "Returns the current media range of the Device or the closest media container"
				},
				{
					"name": "_getMediaContainerWidth",
					"visibility": "restricted",
					"returnValue": {
						"type": "*"
					},
					"description": "Returns the contextual width of an element, if set, or <code>undefined</code> otherwise"
				},
				{
					"name": "addCustomData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomData",
							"type": "sap.ui.core.CustomData",
							"optional": false,
							"description": "the customData to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some customData to the aggregation <code>customData</code>."
				},
				{
					"name": "addDependent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.19",
					"parameters": [
						{
							"name": "oDependent",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "the dependent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some dependent to the aggregation <code>dependents</code>."
				},
				{
					"name": "addEventDelegate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"since": "1.9.0",
					"parameters": [
						{
							"name": "oDelegate",
							"type": "object",
							"optional": false,
							"description": "the delegate object"
						},
						{
							"name": "oThis",
							"type": "object",
							"optional": true,
							"description": "if given, this object will be the \"this\" context in the listener methods; default is the delegate object itself"
						}
					],
					"description": "Adds a delegate that listens to the events that are fired on this element (as opposed to events which are fired BY this element).\n\nWhen this element is cloned, the same delegate will be added to all clones. This behavior is well-suited for applications which want to add delegates\nthat also work with templates in aggregation bindings.\nFor control development the internal \"addDelegate\" method which does not clone delegates by default may be more suitable, as typically each control instance takes care of its own delegates.\n\nTo avoid double registrations, all registrations of the given delegate are first\nremoved and then the delegate is added.\n\n<strong>Important:</strong> If event delegates were added the delegate will still be called even if\nthe event was processed and/or cancelled via <code>preventDefault</code> by the Element or another event delegate.\n<code>preventDefault</code> only prevents the event from bubbling.\nIt should be checked e.g. in the event delegate's listener whether an Element is still enabled via <code>getEnabled</code>.\nAdditionally there might be other things that delegates need to check depending on the event\n(e.g. not adding a key twice to an output string etc.)."
				},
				{
					"name": "applyFocusInfo",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oFocusInfo",
							"type": "object",
							"optional": false
						}
					],
					"description": "Applies the focus info.\n\nTo be overwritten by the specific control method."
				},
				{
					"name": "bindElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "vPath",
							"type": "string|object",
							"optional": false,
							"parameterProperties": {
								"path": {
									"name": "path",
									"type": "string",
									"optional": false,
									"description": "the binding path"
								},
								"parameters": {
									"name": "parameters",
									"type": "object",
									"optional": true,
									"description": "map of additional parameters for this binding"
								},
								"model": {
									"name": "model",
									"type": "string",
									"optional": true,
									"description": "name of the model"
								},
								"events": {
									"name": "events",
									"type": "object",
									"optional": true,
									"description": "map of event listeners for the binding events"
								}
							},
							"description": "the binding path or an object with more detailed binding options"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "map of additional parameters for this binding (only taken into account when vPath is a string in that case the properties described for vPath above are valid here).\nThe supported parameters are listed in the corresponding model-specific implementation of <code>sap.ui.model.ContextBinding</code>."
						}
					],
					"description": "Bind the object to the referenced entity in the model, which is used as the binding context\nto resolve bound properties or aggregations of the object itself and all of its children\nrelatively to the given path.\nIf a relative binding path is used, this will be applied whenever the parent context changes.\nThere is no difference between {@link sap.ui.core.Element#bindElement} and {@link sap.ui.base.ManagedObject#bindObject}."
				},
				{
					"name": "clone",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the newly created clone"
					},
					"parameters": [
						{
							"name": "sIdSuffix",
							"type": "string",
							"optional": true,
							"description": "Suffix to be appended to the cloned element ID"
						},
						{
							"name": "aLocalIds",
							"type": "string[]",
							"optional": true,
							"description": "Array of local IDs within the cloned hierarchy (internally used)"
						}
					],
					"description": "Create a clone of this Element.\n\nCalls <code>ManagedObject#clone</code> and additionally clones event delegates."
				},
				{
					"name": "create",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "vData",
							"type": "sap.ui.core.Element|object",
							"optional": false,
							"description": "Data to create the element from"
						},
						{
							"name": "oKeyInfo",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"type": {
									"name": "type",
									"type": "string",
									"optional": true,
									"description": "Type info for the entity"
								}
							},
							"description": "An entity information (e.g. aggregation info)"
						}
					],
					"description": "Creates a new Element from the given data.\n\nIf <code>vData</code> is an Element already, that element is returned.\nIf <code>vData</code> is an object (literal), then a new element is created with <code>vData</code> as settings.\nThe type of the element is either determined by a property named <code>Type</code> in the <code>vData</code> or\nby a type information in the <code>oKeyInfo</code> object",
					"deprecated": {
						"since": "1.44",
						"text": "use the more flexible {@link sap.ui.base.ManagedObject.create}."
					}
				},
				{
					"name": "data",
					"visibility": "public",
					"description": "Attaches custom data to an <code>Element</code> or retrieves attached data.\n\nUsage:\n<pre>\n   data(\"myKey\", myData)\n</pre>\nAttaches <code>myData</code> (which can be any JS data type, e.g. a number, a string, an object, or a function)\nto this element, under the given key \"myKey\". If the key already exists,the value will be updated.\n\n<pre>\n   data(\"myKey\", myData, writeToDom)\n</pre>\nAttaches <code>myData</code> to this element, under the given key \"myKey\" and (if <code>writeToDom</code>\nis true) writes key and value to the HTML. If the key already exists,the value will be updated.\nWhile <code>oValue</code> can be any JS data type to be attached, it must be a string to be also\nwritten to DOM. The key must also be a valid HTML attribute name (it must conform to <code>sap.ui.core.ID</code>\nand may contain no colon) and may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\".\n\n<pre>\n   data(\"myKey\")\n</pre>\nRetrieves whatever data has been attached to this element (using the key \"myKey\") before\n\n<pre>\n   data(\"myKey\", null)\n</pre>\nRemoves whatever data has been attached to this element (using the key \"myKey\") before\n\n<pre>\n   data(null)\n</pre>\nRemoves all data\n\n<pre>\n   data()\n</pre>\nReturns all data, as a map"
				},
				{
					"name": "defineClass",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "the created metadata"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "name of the class to build the metadata for"
						},
						{
							"name": "oStaticInfo",
							"type": "object",
							"optional": false,
							"description": "static information used to build the metadata"
						},
						{
							"name": "fnMetaImpl",
							"type": "function",
							"optional": true,
							"description": "constructor to be used for the metadata"
						}
					],
					"description": "Creates metadata for an UI Element by extending the Object Metadata.",
					"deprecated": {
						"since": "1.3.1",
						"text": "Use the static <code>extend</code> method of the desired base class (e.g. {@link sap.ui.core.Element.extend})"
					}
				},
				{
					"name": "destroy",
					"visibility": "public",
					"parameters": [
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, the UI element is not marked for redraw"
						}
					],
					"description": "Cleans up the resources associated with this element and all its children.\n\nAfter an element has been destroyed, it can no longer be used in the UI!\n\nApplications should call this method if they don't need the element any longer."
				},
				{
					"name": "destroyCustomData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the customData in the aggregation <code>customData</code>."
				},
				{
					"name": "destroyDependents",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.19",
					"description": "Destroys all the dependents in the aggregation <code>dependents</code>."
				},
				{
					"name": "destroyLayoutData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the layoutData in the aggregation <code>layoutData</code>."
				},
				{
					"name": "destroyTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Destroys the tooltip in the aggregation\nnamed <code>tooltip</code>."
				},
				{
					"name": "enhanceAccessibilityState",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "map of enhanced aria properties"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "the Control/Element for which aria properties are rendered"
						},
						{
							"name": "mAriaProps",
							"type": "object",
							"optional": false,
							"description": "map of aria properties keyed by there name (without prefix \"aria-\")"
						}
					],
					"description": "Allows the parent of a control to enhance the aria information during rendering.\n\nThis function is called by the RenderManager's writeAccessibilityState method\nfor the parent of the currently rendered control - if the parent implements it."
				},
				{
					"name": "exit",
					"visibility": "protected",
					"description": "Cleans up the element instance before destruction.\n\nApplications must not call this hook method directly, it is called by the framework\nwhen the element is {@link #destroy destroyed}.\n\nSubclasses of Element should override this hook to implement any necessary cleanup."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Element with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "findElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element[]",
						"description": "array of child elements and controls"
					},
					"parameters": [
						{
							"name": "bRecursive",
							"type": "boolean",
							"optional": false,
							"description": "true, if all nested children should be returned."
						}
					],
					"description": "Searches and returns an array of child elements and controls which are\nreferenced within an aggregation or aggregations of child elements/controls.\nThis can be either done recursive or not.\n\n<b>Take care: this operation might be expensive.</b>"
				},
				{
					"name": "fireEvent",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "the event id"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"description": "the parameter map"
						}
					],
					"description": "Fires the given event and notifies all listeners. Listeners must not change\nthe content of the event."
				},
				{
					"name": "focus",
					"visibility": "public",
					"description": "Sets the focus to the stored focus DOM reference"
				},
				{
					"name": "getCustomData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CustomData[]"
					},
					"description": "Gets content of aggregation <code>customData</code>.\r\rCustom Data, a data structure like a map containing arbitrary key value pairs."
				},
				{
					"name": "getDependents",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element[]"
					},
					"since": "1.19",
					"description": "Gets content of aggregation <code>dependents</code>.\r\rDependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element."
				},
				{
					"name": "getDomRef",
					"visibility": "protected",
					"returnValue": {
						"type": "Element",
						"description": "The Element's DOM Element sub DOM Element or null"
					},
					"parameters": [
						{
							"name": "sSuffix",
							"type": "string",
							"optional": true,
							"description": "ID suffix to get the DOMRef for"
						}
					],
					"description": "Returns the best suitable DOM Element that represents this UI5 Element.\nBy default the DOM Element with the same ID as this Element is returned.\nSubclasses should override this method if the lookup via id is not sufficient.\n\nNote that such a DOM Element does not necessarily exist in all cases.\nSome elements or controls might not have a DOM representation at all (e.g.\na naive FlowLayout) while others might not have one due to their current\nstate (e.g. an initial, not yet rendered control).\n\nIf an ID suffix is given, the ID of this Element is concatenated with the suffix\n(separated by a single dash) and the DOM node with that compound ID will be returned.\nThis matches the UI5 naming convention for named inner DOM nodes of a control."
				},
				{
					"name": "getElementBinding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Binding",
						"description": "the element binding for the given model name"
					},
					"parameters": [
						{
							"name": "sModelName",
							"type": "string",
							"optional": false,
							"description": "the name of the model"
						}
					],
					"description": "Get the element binding object for a specific model"
				},
				{
					"name": "getFocusDomRef",
					"visibility": "protected",
					"returnValue": {
						"type": "Element",
						"description": "Returns the DOM Element that should get the focus"
					},
					"description": "Returns the DOM Element that should get the focus.\n\nTo be overwritten by the specific control method."
				},
				{
					"name": "getFocusInfo",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "an object representing the serialized focus information"
					},
					"description": "Returns an object representing the serialized focus information\nTo be overwritten by the specific control method"
				},
				{
					"name": "getInterface",
					"visibility": "public"
				},
				{
					"name": "getLayoutData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.LayoutData"
					},
					"description": "Gets content of aggregation <code>layoutData</code>.\r\rDefines the layout constraints for this control when it is used inside a Layout.\nLayoutData classes are typed classes and must match the embedding Layout.\nSee VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "runtime metadata"
					},
					"description": "Returns the runtime metadata for this UI element.\n\nWhen using the defineClass method, this function is automatically created and returns\na runtime representation of the design time metadata."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Element."
				},
				{
					"name": "getTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "string|sap.ui.core.TooltipBase",
						"description": "The tooltip for this Element."
					},
					"description": "Returns the tooltip for this element if any or an undefined value.\nThe tooltip can either be a simple string or a subclass of\n{@link sap.ui.core.TooltipBase}.\n\nCallers that are only interested in tooltips of type string (e.g. to render\nthem as a <code>title</code> attribute), should call the convenience method\n{@link #getTooltip_AsString} instead. If they want to get a tooltip text no\nmatter where it comes from (be it a string tooltip or the text from a TooltipBase\ninstance) then they could call {@link #getTooltip_Text} instead."
				},
				{
					"name": "getTooltip_AsString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "string tooltip or undefined"
					},
					"description": "Returns the tooltip for this element but only if it is a simple string.\nOtherwise an undefined value is returned."
				},
				{
					"name": "getTooltip_Text",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "text of the current tooltip or undefined"
					},
					"description": "Returns the main text for the current tooltip or undefined if there is no such text.\nIf the tooltip is an object derived from sap.ui.core.Tooltip, then the text property\nof that object is returned. Otherwise the object itself is returned (either a string\nor undefined or null)."
				},
				{
					"name": "indexOfCustomData",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oCustomData",
							"type": "sap.ui.core.CustomData",
							"optional": false,
							"description": "The customData whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.CustomData</code> in the aggregation <code>customData</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfDependent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"since": "1.19",
					"parameters": [
						{
							"name": "oDependent",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "The dependent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Element</code> in the aggregation <code>dependents</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "init",
					"visibility": "protected",
					"description": "Initializes the element instance after creation.\n\nApplications must not call this hook method directly, it is called by the framework\nwhile the constructor of an element is executed.\n\nSubclasses of Element should override this hook to implement any necessary initialization."
				},
				{
					"name": "insertCustomData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCustomData",
							"type": "sap.ui.core.CustomData",
							"optional": false,
							"description": "the customData to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the customData should be inserted at; for\r             a negative value of <code>iIndex</code>, the customData is inserted at position 0; for a value\r             greater than the current size of the aggregation, the customData is inserted at\r             the last position"
						}
					],
					"description": "Inserts a customData into the aggregation <code>customData</code>."
				},
				{
					"name": "insertDependent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.19",
					"parameters": [
						{
							"name": "oDependent",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "the dependent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the dependent should be inserted at; for\r             a negative value of <code>iIndex</code>, the dependent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the dependent is inserted at\r             the last position"
						}
					],
					"description": "Inserts a dependent into the aggregation <code>dependents</code>."
				},
				{
					"name": "prop",
					"visibility": "public",
					"returnValue": {
						"type": "any|sap.ui.core.Element",
						"description": "Returns <code>this</code> to allow method chaining in case of setter and the property value in case of getter"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "name of the property to set"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": true,
							"description": "value to set the property to"
						}
					],
					"description": "This function either calls set[sPropertyName] or get[sPropertyName] with the specified property name\ndepending if an <code>oValue</code> is provided or not.",
					"deprecated": {
						"since": "1.28.0",
						"text": "The contract of this method is not fully defined and its write capabilities overlap with applySettings"
					}
				},
				{
					"name": "removeAllCustomData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CustomData[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>customData</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllDependents",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"since": "1.19",
					"description": "Removes all the controls from the aggregation <code>dependents</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeCustomData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CustomData",
						"description": "The removed customData or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vCustomData",
							"type": "int|string|sap.ui.core.CustomData",
							"optional": false,
							"description": "The customData to remove or its index or id"
						}
					],
					"description": "Removes a customData from the aggregation <code>customData</code>."
				},
				{
					"name": "removeDependent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "The removed dependent or <code>null</code>"
					},
					"since": "1.19",
					"parameters": [
						{
							"name": "vDependent",
							"type": "int|string|sap.ui.core.Element",
							"optional": false,
							"description": "The dependent to remove or its index or id"
						}
					],
					"description": "Removes a dependent from the aggregation <code>dependents</code>."
				},
				{
					"name": "removeEventDelegate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"since": "1.9.0",
					"parameters": [
						{
							"name": "oDelegate",
							"type": "object",
							"optional": false,
							"description": "the delegate object"
						}
					],
					"description": "Removes the given delegate from this element.\n\nThis method will remove all registrations of the given delegate, not only one."
				},
				{
					"name": "rerender",
					"visibility": "protected",
					"description": "This triggers immediate rerendering of its parent and thus of itself and its children.<br/> As <code>sap.ui.core.Element</code> \"bubbles up\" the\nrerender, changes to child-<code>Elements</code> will also result in immediate rerendering of the whole sub tree."
				},
				{
					"name": "setLayoutData",
					"visibility": "public",
					"parameters": [
						{
							"name": "oLayoutData",
							"type": "sap.ui.core.LayoutData",
							"optional": false
						}
					],
					"description": "Sets the {@link sap.ui.core.LayoutData} defining the layout constraints\nfor this control when it is used inside a layout."
				},
				{
					"name": "setTooltip",
					"visibility": "public",
					"parameters": [
						{
							"name": "vTooltip",
							"type": "string|sap.ui.core.TooltipBase",
							"optional": false
						}
					],
					"description": "Sets a new tooltip for this object. The tooltip can either be a simple string\n(which in most cases will be rendered as the <code>title</code> attribute of this\nElement) or an instance of {@link sap.ui.core.TooltipBase}.\n\nIf a new tooltip is set, any previously set tooltip is deactivated."
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "a string description of this element"
					},
					"description": "Returns a simple string representation of this element.\n\nMainly useful for tracing purposes."
				},
				{
					"name": "unbindElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.base.ManagedObject",
						"description": "reference to the instance itself"
					},
					"parameters": [
						{
							"name": "sModelName",
							"type": "string",
							"optional": false
						}
					],
					"description": "Removes the defined binding context of this object, all bindings will now resolve\nrelative to the parent context again."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.EnabledPropagator",
			"basename": "EnabledPropagator",
			"resource": "sap/ui/core/EnabledPropagator.js",
			"module": "sap/ui/core/EnabledPropagator",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Helper Class for enhancement of a Control with propagation of enabled property.\n\n<b>This constructor should be applied to the prototype of a control</b>\n\nExample:\n<code>\nsap.ui.core.EnabledPropagator.call(<i>Some-Control</i>.prototype, <i>Default-value, ...</i>);\n</code>\ne.g.\n<code>\nsap.ui.core.EnabledPropagator.call(sap.ui.commons.Button.prototype);\n</code>",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "bDefault",
						"type": "boolean",
						"optional": true,
						"defaultValue": true,
						"description": "the value that should be used as default value for the enhancement of the control."
					},
					{
						"name": "bLegacy",
						"type": "boolean",
						"optional": true,
						"defaultValue": false,
						"description": "whether the introduced property should use the old name 'Enabled'"
					}
				]
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.core.EventBus",
			"basename": "EventBus",
			"resource": "sap/ui/core/EventBus.js",
			"module": "sap/ui/core/EventBus",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.8.0",
			"extends": "sap.ui.base.Object",
			"description": "Provides eventing capabilities for applications like firing events and attaching or detaching event\n       handlers for events which are notified when events are fired.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Creates an instance of EventBus."
			},
			"methods": [
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Cleans up the internal structures and removes all event handlers.\n\nThe object must not be used anymore after destroy was called."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.EventBus with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.EventBus."
				},
				{
					"name": "publish",
					"visibility": "public",
					"parameters": [
						{
							"name": "sChannelId",
							"type": "string",
							"optional": true,
							"description": "The channel of the event to fire. If not given, the default channel is used. The channel <code>\"sap.ui\"</code> is\n                        reserved by the UI5 framework. An application might listen to events on this channel but is not allowed\n                        to publish its own events there."
						},
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "The identifier of the event to fire"
						},
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The parameters which should be carried by the event"
						}
					],
					"description": "Fires an event using the specified settings and notifies all attached event handlers."
				},
				{
					"name": "subscribe",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.EventBus",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sChannelId",
							"type": "string",
							"optional": true,
							"description": "The channel of the event to subscribe to. If not given, the default channel is used.\n                        The channel <code>\"sap.ui\"</code> is reserved by the UI5 framework. An application might listen to\n                        events on this channel but is not allowed to publish its own events there."
						},
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "The identifier of the event to listen for"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to call when the event occurs. This function will be called in the context of the\n                      <code>oListener</code> instance (if present) or on the event bus instance. The channel is provided as first argument of the handler, and\n                      the event identifier is provided as the second argument. The parameter map carried by the event is provided as the third argument (if present).\n                      Handlers must not change the content of this map."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wants to be notified when the event occurs (<code>this</code> context within the\n                       handler function). If it is not specified, the handler function is called in the context of the event bus."
						}
					],
					"description": "Attaches an event handler to the event with the given identifier on the given event channel."
				},
				{
					"name": "subscribeOnce",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.EventBus",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sChannelId",
							"type": "string",
							"optional": true,
							"description": "The channel of the event to subscribe to. If not given, the default channel is used.\n                        The channel <code>\"sap.ui\"</code> is reserved by the UI5 framework. An application might listen to\n                        events on this channel but is not allowed to publish its own events there."
						},
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "The identifier of the event to listen for"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to call when the event occurs. This function will be called in the context of the\n                      <code>oListener</code> instance (if present) or on the event bus instance. The channel is provided as first argument of the handler, and\n                      the event identifier is provided as the second argument. The parameter map carried by the event is provided as the third argument (if present).\n                      Handlers must not change the content of this map."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wants to be notified when the event occurs (<code>this</code> context within the\n                       handler function). If it is not specified, the handler function is called in the context of the event bus."
						}
					],
					"description": "Attaches an event handler, called one time only, to the event with the given identifier on the given event channel.\n\nWhen the event occurs, the handler function is called and the handler registration is automatically removed afterwards."
				},
				{
					"name": "unsubscribe",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.EventBus",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sChannelId",
							"type": "string",
							"optional": true,
							"description": "The channel of the event to unsubscribe from. If not given, the default channel is used."
						},
						{
							"name": "sEventId",
							"type": "string",
							"optional": false,
							"description": "The identifier of the event to unsubscribe from"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to unsubscribe from the event"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wanted to be notified when the event occurred"
						}
					],
					"description": "Removes a previously subscribed event handler from the event with the given identifier on the given event channel.\n\nThe passed parameters must match those used for registration with {@link #subscribe } beforehand!"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.format",
			"basename": "format",
			"resource": "sap/ui/core/format/NumberFormat.js",
			"module": "sap/ui/core/format/NumberFormat",
			"static": true,
			"visibility": "public",
			"description": "Format classes"
		},
		{
			"kind": "class",
			"name": "sap.ui.core.format.DateFormat",
			"basename": "DateFormat",
			"resource": "sap/ui/core/format/DateFormat.js",
			"module": "sap/ui/core/format/DateFormat",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "The DateFormat is a static class for formatting and parsing date and time values according\nto a set of format options.\n\nSupported format options are pattern based on Unicode LDML Date Format notation.\nIf no pattern is specified a default pattern according to the locale settings is used.",
			"constructor": {
				"visibility": "public",
				"description": "Constructor for DateFormat - must not be used: To get a DateFormat instance, please use getInstance, getDateTimeInstance or getTimeInstance."
			},
			"methods": [
				{
					"name": "format",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the formatted output value. If an invalid date is given, an empty string is returned."
					},
					"parameters": [
						{
							"name": "oDate",
							"type": "Date",
							"optional": false,
							"description": "the value to format"
						},
						{
							"name": "bUTC",
							"type": "boolean",
							"optional": false,
							"description": "whether to use UTC"
						}
					],
					"description": "Format a date according to the given format options."
				},
				{
					"name": "getDateInstance",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.format.DateFormat",
						"description": "date instance of the DateFormat"
					},
					"parameters": [
						{
							"name": "oFormatOptions",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"pattern": {
									"name": "pattern",
									"type": "string",
									"optional": true,
									"description": "a data pattern in LDML format. It is not verified whether the pattern represents only a date."
								},
								"style": {
									"name": "style",
									"type": "string",
									"optional": true,
									"description": "can be either 'short, 'medium', 'long' or 'full'. If no pattern is given, a locale dependent default date pattern of that style is used from the LocaleData class."
								},
								"strictParsing": {
									"name": "strictParsing",
									"type": "boolean",
									"optional": true,
									"description": "if true, by parsing it is checked if the value is a valid date"
								},
								"relative": {
									"name": "relative",
									"type": "boolean",
									"optional": true,
									"description": "if true, the date is formatted relatively to todays date if it is within the given day range, e.g. \"today\", \"yesterday\", \"in 5 days\""
								},
								"relativeRange": {
									"name": "relativeRange",
									"type": "int[]",
									"optional": true,
									"description": "the day range used for relative formatting. If oFormatOptions.relatvieScale is set to default value 'day', the relativeRange is by default [-6, 6], which means only the last 6 days, today and the next 6 days are formatted relatively. Otherwise when oFormatOptions.relativeScale is set to 'auto', all dates are formatted relatively."
								},
								"relativeScale": {
									"name": "relativeScale",
									"type": "string",
									"optional": true,
									"defaultValue": "\"day\"",
									"description": "if 'auto' is set, new relative time format is switched on for all Date/Time Instances. The relative scale is chosen depending on the difference between the given date and now."
								},
								"relativeStyle": {
									"name": "relativeStyle",
									"type": "string",
									"optional": true,
									"defaultValue": "\"wide\"",
									"description": "@since 1.32.10, 1.34.4 the style of the relative format. The valid values are \"wide\", \"short\", \"narrow\""
								},
								"UTC": {
									"name": "UTC",
									"type": "boolean",
									"optional": true,
									"description": "if true, the date is formatted and parsed as UTC instead of the local timezone"
								},
								"calendarType": {
									"name": "calendarType",
									"type": "sap.ui.core.CalendarType",
									"optional": true,
									"description": "The calender type which is used to format and parse the date. This value is by default either set in configuration or calculated based on current locale."
								}
							},
							"description": "Object which defines the format options"
						},
						{
							"name": "oLocale",
							"type": "sap.ui.core.Locale",
							"optional": true,
							"description": "Locale to ask for locale specific texts/settings"
						}
					],
					"description": "Get a date instance of the DateFormat, which can be used for formatting."
				},
				{
					"name": "getDateTimeInstance",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.format.DateFormat",
						"description": "datetime instance of the DateFormat"
					},
					"parameters": [
						{
							"name": "oFormatOptions",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"pattern": {
									"name": "pattern",
									"type": "string",
									"optional": true,
									"description": "a datetime pattern in LDML format. It is not verified whether the pattern represents a full datetime."
								},
								"style": {
									"name": "style",
									"type": "string",
									"optional": true,
									"description": "can be either 'short, 'medium', 'long' or 'full'. For datetime you can also define mixed styles, separated with a slash, where the first part is the date style and the second part is the time style (e.g. \"medium/short\"). If no pattern is given, a locale dependent default datetime pattern of that style is used from the LocaleData class."
								},
								"strictParsing": {
									"name": "strictParsing",
									"type": "boolean",
									"optional": true,
									"description": "if true, by parsing it is checked if the value is a valid datetime"
								},
								"relative": {
									"name": "relative",
									"type": "boolean",
									"optional": true,
									"description": "if true, the date is formatted relatively to todays date if it is within the given day range, e.g. \"today\", \"yesterday\", \"in 5 days\"@param {boolean} [oFormatOptions.UTC] if true, the date is formatted and parsed as UTC instead of the local timezone"
								},
								"relativeRange": {
									"name": "relativeRange",
									"type": "int[]",
									"optional": true,
									"description": "the day range used for relative formatting. If oFormatOptions.relatvieScale is set to default value 'day', the relativeRange is by default [-6, 6], which means only the last 6 days, today and the next 6 days are formatted relatively. Otherwise when oFormatOptions.relativeScale is set to 'auto', all dates are formatted relatively."
								},
								"relativeScale": {
									"name": "relativeScale",
									"type": "string",
									"optional": true,
									"defaultValue": "\"day\"",
									"description": "if 'auto' is set, new relative time format is switched on for all Date/Time Instances. The relative scale is chosen depending on the difference between the given date and now."
								},
								"relativeStyle": {
									"name": "relativeStyle",
									"type": "string",
									"optional": true,
									"defaultValue": "\"wide\"",
									"description": "@since 1.32.10, 1.34.4 the style of the relative format. The valid values are \"wide\", \"short\", \"narrow\""
								},
								"UTC": {
									"name": "UTC",
									"type": "boolean",
									"optional": true,
									"description": "if true, the date is formatted and parsed as UTC instead of the local timezone"
								},
								"calendarType": {
									"name": "calendarType",
									"type": "sap.ui.core.CalendarType",
									"optional": true,
									"description": "The calender type which is used to format and parse the date. This value is by default either set in configuration or calculated based on current locale."
								}
							},
							"description": "Object which defines the format options"
						},
						{
							"name": "oLocale",
							"type": "sap.ui.core.Locale",
							"optional": true,
							"description": "Locale to ask for locale specific texts/settings"
						}
					],
					"description": "Get a datetime instance of the DateFormat, which can be used for formatting."
				},
				{
					"name": "getTimeInstance",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.format.DateFormat",
						"description": "time instance of the DateFormat"
					},
					"parameters": [
						{
							"name": "oFormatOptions",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"pattern": {
									"name": "pattern",
									"type": "string",
									"optional": true,
									"description": "a time pattern in LDML format. It is not verified whether the pattern only represents a time."
								},
								"style": {
									"name": "style",
									"type": "string",
									"optional": true,
									"description": "can be either 'short, 'medium', 'long' or 'full'. If no pattern is given, a locale dependent default time pattern of that style is used from the LocaleData class."
								},
								"strictParsing": {
									"name": "strictParsing",
									"type": "boolean",
									"optional": true,
									"description": "if true, by parsing it is checked if the value is a valid time"
								},
								"relative": {
									"name": "relative",
									"type": "boolean",
									"optional": true,
									"description": "if true, the date is formatted relatively to todays date if it is within the given day range, e.g. \"today\", \"yesterday\", \"in 5 days\""
								},
								"relativeRange": {
									"name": "relativeRange",
									"type": "int[]",
									"optional": true,
									"description": "the day range used for relative formatting. If oFormatOptions.relatvieScale is set to default value 'day', the relativeRange is by default [-6, 6], which means only the last 6 days, today and the next 6 days are formatted relatively. Otherwise when oFormatOptions.relativeScale is set to 'auto', all dates are formatted relatively."
								},
								"relativeScale": {
									"name": "relativeScale",
									"type": "string",
									"optional": true,
									"defaultValue": "\"day\"",
									"description": "if 'auto' is set, new relative time format is switched on for all Date/Time Instances. The relative scale is chosen depending on the difference between the given date and now."
								},
								"relativeStyle": {
									"name": "relativeStyle",
									"type": "string",
									"optional": true,
									"defaultValue": "\"wide\"",
									"description": "@since 1.32.10, 1.34.4 the style of the relative format. The valid values are \"wide\", \"short\", \"narrow\""
								},
								"UTC": {
									"name": "UTC",
									"type": "boolean",
									"optional": true,
									"description": "if true, the time is formatted and parsed as UTC instead of the local timezone"
								},
								"calendarType": {
									"name": "calendarType",
									"type": "sap.ui.core.CalendarType",
									"optional": true,
									"description": "The calender type which is used to format and parse the date. This value is by default either set in configuration or calculated based on current locale."
								}
							},
							"description": "Object which defines the format options"
						},
						{
							"name": "oLocale",
							"type": "sap.ui.core.Locale",
							"optional": true,
							"description": "Locale to ask for locale specific texts/settings"
						}
					],
					"description": "Get a time instance of the DateFormat, which can be used for formatting."
				},
				{
					"name": "parse",
					"visibility": "public",
					"returnValue": {
						"type": "Date",
						"description": "the parsed value"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the string containing a formatted date/time value"
						},
						{
							"name": "bUTC",
							"type": "boolean",
							"optional": false,
							"description": "whether to use UTC, if no timezone is contained"
						},
						{
							"name": "bStrict",
							"type": "boolean",
							"optional": false,
							"description": "to use strict value check"
						}
					],
					"description": "Parse a string which is formatted according to the given format options."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.format.FileSizeFormat",
			"basename": "FileSizeFormat",
			"resource": "sap/ui/core/format/FileSizeFormat.js",
			"module": "sap/ui/core/format/FileSizeFormat",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "The FileSizeFormat is a static class for formatting and parsing numeric file size values according\nto a set of format options.\n\nSupports the same options as {@link sap.ui.core.format.NumberFormat.getFloatInstance NumberFormat.getFloatInstance}\nFor format options which are not specified default values according to the type and locale settings are used.\n\nSupported format options (additional to NumberFormat):\n<ul>\n<li>binaryFilesize: if true, base 2 is used: 1 Kibibyte = 1024 Byte, ... , otherwise base 10 is used: 1 Kilobyte = 1000 Byte (Default is false)</li>\n</ul>",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for FileSizeFormat - must not be used: To get a FileSizeFormat instance, please use getInstance."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.format.FileSizeFormat with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "format",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the formatted output value"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "number|string",
							"optional": false,
							"description": "the number (or hex string) to format"
						}
					],
					"description": "Format a filesize (in bytes) according to the given format options."
				},
				{
					"name": "getInstance",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.format.FileSizeFormat",
						"description": "instance of the FileSizeFormat"
					},
					"parameters": [
						{
							"name": "oFormatOptions",
							"type": "object",
							"optional": true,
							"description": "Object which defines the format options"
						},
						{
							"name": "oLocale",
							"type": "sap.ui.core.Locale",
							"optional": true,
							"description": "Locale to get the formatter for"
						}
					],
					"description": "Get an instance of the FileSizeFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured\n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.format.FileSizeFormat."
				},
				{
					"name": "parse",
					"visibility": "public",
					"returnValue": {
						"type": "number",
						"description": "the parsed value in bytes"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the string containing a formatted filesize value"
						}
					],
					"description": "Parse a string which is formatted according to the given format options."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.format.NumberFormat",
			"basename": "NumberFormat",
			"resource": "sap/ui/core/format/NumberFormat.js",
			"module": "sap/ui/core/format/NumberFormat",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "The NumberFormat is a static class for formatting and parsing numeric values according\nto a set of format options.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"minIntegerDigits": {
								"name": "minIntegerDigits",
								"type": "int",
								"optional": true,
								"description": "defines minimal number of non-decimal digits"
							},
							"maxIntegerDigits": {
								"name": "maxIntegerDigits",
								"type": "int",
								"optional": true,
								"description": "defines maximum number of non-decimal digits"
							},
							"minFractionDigits": {
								"name": "minFractionDigits",
								"type": "int",
								"optional": true,
								"description": "defines minimal number of decimal digits"
							},
							"maxFractionDigits": {
								"name": "maxFractionDigits",
								"type": "int",
								"optional": true,
								"description": "defines maximum number of decimal digits"
							},
							"decimals": {
								"name": "decimals",
								"type": "int",
								"optional": true,
								"description": "defines the number of decimal digits"
							},
							"shortDecimals": {
								"name": "shortDecimals",
								"type": "int",
								"optional": true,
								"description": "defines the number of decimal in the shortified format string. If this isn't specified, the 'decimals' options is used"
							},
							"shortLimit": {
								"name": "shortLimit",
								"type": "int",
								"optional": true,
								"description": "only use short number formatting for values above this limit"
							},
							"shortRefNumber": {
								"name": "shortRefNumber",
								"type": "int",
								"optional": true,
								"description": "@since 1.40 specifies a number from which the scale factor for 'short' or 'long' style format is generated. The generated scale factor is\n used for all numbers which are formatted with this format instance. This option has effect only when the option 'style' is set to 'short' or 'long'. This option is by default set\n with undefined which means the scale factor is selected automatically for each number being formatted."
							},
							"showScale": {
								"name": "showScale",
								"type": "boolean",
								"optional": true,
								"defaultValue": true,
								"description": "@since 1.40 specifies whether the scale factor is shown in the formatted number. This option takes effect only when the 'style' options is set to either 'short' or 'long'."
							},
							"precision": {
								"name": "precision",
								"type": "int",
								"optional": true,
								"description": "defines the number precision, number of decimals is calculated dependent on the integer digits"
							},
							"pattern": {
								"name": "pattern",
								"type": "string",
								"optional": true,
								"description": "CLDR number pattern which is used to format the number"
							},
							"groupingEnabled": {
								"name": "groupingEnabled",
								"type": "boolean",
								"optional": true,
								"description": "defines whether grouping is enabled (show the grouping separators)"
							},
							"groupingSeparator": {
								"name": "groupingSeparator",
								"type": "string",
								"optional": true,
								"description": "defines the used grouping separator"
							},
							"groupingSize": {
								"name": "groupingSize",
								"type": "int",
								"optional": true,
								"description": "defines the grouping size in digits, the default is three"
							},
							"groupingBaseSize": {
								"name": "groupingBaseSize",
								"type": "int",
								"optional": true,
								"description": "defines the grouping base size in digits, in case it is different from the grouping size (e.g. indian grouping)"
							},
							"decimalSeparator": {
								"name": "decimalSeparator",
								"type": "string",
								"optional": true,
								"description": "defines the used decimal separator"
							},
							"plusSign": {
								"name": "plusSign",
								"type": "string",
								"optional": true,
								"description": "defines the used plus symbol"
							},
							"minusSign": {
								"name": "minusSign",
								"type": "string",
								"optional": true,
								"description": "defines the used minus symbol"
							},
							"parseAsString": {
								"name": "parseAsString",
								"type": "boolean",
								"optional": true,
								"description": "@since 1.28.2 defines whether to output string from parse function in order to keep the precision for big numbers. Numbers in scientific notation are parsed\n back to the standard notation. For example \".5e-3\" is parsed to \"0.0005\"."
							},
							"style": {
								"name": "style",
								"type": "string",
								"optional": true,
								"description": "defines the style of format. Valid values are 'short, 'long' or 'standard' (based on CLDR decimalFormat). Numbers are formatted into compact forms when it's set to\n'short' or 'long'. When this option is set, the default value of option 'precision' is set to 2. This can be changed by setting either min/maxFractionDigits, decimals, shortDecimals or precision option."
							},
							"roundingMode": {
								"name": "roundingMode",
								"type": "sap.ui.core.format.NumberFormat.RoundingMode",
								"optional": true,
								"description": "specifies a rounding behavior for discarding the digits after the maximum fraction digits\n defined by maxFractionDigits. Rounding will only be applied, if the passed value if of type number. This can be assigned by value in {@link sap.ui.core.format.NumberFormat.RoundingMode RoundingMode}\n or a function which will be used for rounding the number. The function is called with two parameters: the number and how many decimal digits should be reserved."
							},
							"showMeasure": {
								"name": "showMeasure",
								"type": "boolean",
								"optional": true,
								"description": "defines whether the measure according to the format is shown in the formatted string"
							},
							"currencyCode": {
								"name": "currencyCode",
								"type": "boolean",
								"optional": true,
								"description": "defines whether the currency is shown as code in currency format. The currency symbol is displayed when this is set to false and there's symbol defined\n for the given currency code."
							},
							"currencyContext": {
								"name": "currencyContext",
								"type": "string",
								"optional": true,
								"description": "It can be set either with 'standard' (the default value) or with 'accounting' for an accounting specific currency display"
							},
							"emptyString": {
								"name": "emptyString",
								"type": "number",
								"optional": true,
								"defaultValue": null,
								"description": "@since 1.30.0 defines what empty string is parsed as and what is formatted as empty string. The allowed values are only NaN, null or 0.\n The 'format' and 'parse' are done in a symmetric way which means when this parameter is set to NaN, empty string is parsed as NaN and NaN is formatted as empty string."
							}
						},
						"description": "The option object which support the following parameters. If no options is given, default values according to the type and locale settings are used."
					}
				],
				"description": "Constructor for NumberFormat - must not be used: To get a NumberFormat instance, please use getInstance, getFloatInstance or getIntegerInstance."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.format.NumberFormat with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "format",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the formatted output value"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "number|array",
							"optional": false,
							"description": "the number to format or an array which contains the number to format and the sMeasure parameter"
						},
						{
							"name": "sMeasure",
							"type": "string",
							"optional": true,
							"description": "a measure which has an impact on the formatting"
						}
					],
					"description": "Format a number according to the given format options."
				},
				{
					"name": "getCurrencyInstance",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.format.NumberFormat",
						"description": "integer instance of the NumberFormat"
					},
					"parameters": [
						{
							"name": "oFormatOptions",
							"type": "object",
							"optional": true,
							"description": "Object which defines the format options"
						},
						{
							"name": "oLocale",
							"type": "sap.ui.core.Locale",
							"optional": true,
							"description": "Locale to get the formatter for"
						}
					],
					"description": "Get a currency instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured\n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p>\nThis instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\nPlease set the roundingMode property in oFormatOptions to change the\ndefault value.\n</p>"
				},
				{
					"name": "getFloatInstance",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.format.NumberFormat",
						"description": "float instance of the NumberFormat"
					},
					"parameters": [
						{
							"name": "oFormatOptions",
							"type": "object",
							"optional": true,
							"description": "Object which defines the format options"
						},
						{
							"name": "oLocale",
							"type": "sap.ui.core.Locale",
							"optional": true,
							"description": "Locale to get the formatter for"
						}
					],
					"description": "Get a float instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured\n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p>\nThis instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\nPlease set the roundingMode property in oFormatOptions to change the\ndefault value.\n</p>"
				},
				{
					"name": "getIntegerInstance",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.format.NumberFormat",
						"description": "integer instance of the NumberFormat"
					},
					"parameters": [
						{
							"name": "oFormatOptions",
							"type": "object",
							"optional": true,
							"description": "Object which defines the format options"
						},
						{
							"name": "oLocale",
							"type": "sap.ui.core.Locale",
							"optional": true,
							"description": "Locale to get the formatter for"
						}
					],
					"description": "Get an integer instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured\n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p>\nThis instance has TOWARDS_ZERO set as default rounding mode.\nPlease set the roundingMode property in oFormatOptions to change the\ndefault value.\n</p>"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.format.NumberFormat."
				},
				{
					"name": "getPercentInstance",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.format.NumberFormat",
						"description": "integer instance of the NumberFormat"
					},
					"parameters": [
						{
							"name": "oFormatOptions",
							"type": "object",
							"optional": true,
							"description": "Object which defines the format options"
						},
						{
							"name": "oLocale",
							"type": "sap.ui.core.Locale",
							"optional": true,
							"description": "Locale to get the formatter for"
						}
					],
					"description": "Get a percent instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured\n{@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p>\nThis instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\nPlease set the roundingMode property in oFormatOptions to change the\ndefault value.\n</p>"
				},
				{
					"name": "parse",
					"visibility": "public",
					"returnValue": {
						"type": "number|array",
						"description": "the parsed value or an array which contains the parsed value and the currency code (symbol) when the NumberFormat is a currency instance"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the string containing a formatted numeric value"
						}
					],
					"description": "Parse a string which is formatted according to the given format options."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.format.NumberFormat.RoundingMode",
			"basename": "RoundingMode",
			"resource": "sap/ui/core/format/NumberFormat.js",
			"module": "sap/ui/core/format/NumberFormat",
			"export": "RoundingMode",
			"static": true,
			"visibility": "public",
			"description": "Specifies a rounding behavior for numerical operations capable of discarding precision. Each rounding mode in this object indicates how the least\nsignificant returned digits of rounded result is to be calculated.",
			"properties": [
				{
					"name": "AWAY_FROM_ZERO",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Rounding mode to round away from zero"
				},
				{
					"name": "CEILING",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Rounding mode to round towards positive infinity"
				},
				{
					"name": "FLOOR",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Rounding mode to round towards negative infinity"
				},
				{
					"name": "HALF_AWAY_FROM_ZERO",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round away from zero."
				},
				{
					"name": "HALF_CEILING",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards positive infinity."
				},
				{
					"name": "HALF_FLOOR",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards negative infinity."
				},
				{
					"name": "HALF_TOWARDS_ZERO",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards zero."
				},
				{
					"name": "TOWARDS_ZERO",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Rounding mode to round towards zero"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Fragment",
			"basename": "Fragment",
			"resource": "sap/ui/core/Fragment.js",
			"module": "sap/ui/core/Fragment",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Fragments support the definition of light-weight stand-alone UI control trees.\nThis class acts as factory which returns the UI control tree defined inside the Fragments. When used within declarative Views,\nthe Fragment content is imported and seamlessly integrated into the View.\n\nFragments are used similar as sap.ui.core.mvc.Views, but Fragments do not have a Controller on their own (they may know one, though),\nthey are not a Control, they are not part of the UI tree and they have no representation in HTML.\nBy default, in contrast to declarative Views, they do not do anything to guarantee ID uniqueness.\n\nBut like Views they can be defined in several Formats (XML, declarative HTML, JavaScript; support for other types can be plugged in),\nthe declaration syntax is the same as in declarative Views and the name and location of the Fragment files is similar to Views.\nController methods can also be referenced in the declarations, but as Fragments do not have their own controllers,\nthis requires the Fragments to be used within a View which does have a controller.\nThat controller is used, then.\n\nDo not call the Fragment constructor directly!\n\n\nUse-cases for Fragments are e.g.:\n- Modularization of UIs without fragmenting the controller structure\n- Re-use of UI parts\n- 100%-declarative definition of Views",
			"ui5-metadata": {
				"stereotype": "object",
				"specialSettings": [
					{
						"name": "fragmentName",
						"type": "string",
						"visibility": "public"
					},
					{
						"name": "fragmentContent",
						"type": "any",
						"visibility": "public"
					},
					{
						"name": "containingView",
						"type": "sap.ui.core.mvc.View",
						"visibility": "hidden"
					},
					{
						"name": "oController",
						"type": "sap.ui.core.mvc.Controller",
						"visibility": "hidden"
					},
					{
						"name": "sId",
						"type": "sap.ui.core.ID",
						"visibility": "hidden"
					}
				],
				"properties": [
					{
						"name": "type",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"methods": [
							"getType",
							"setType"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"description": "Accepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "byId",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"description": "Element by its ID and Fragment ID"
					},
					"parameters": [
						{
							"name": "sFragmentId",
							"type": "string",
							"optional": false
						},
						{
							"name": "sId",
							"type": "string",
							"optional": false
						}
					],
					"description": "Returns an Element/Control by its ID in the context of the Fragment with the given ID"
				},
				{
					"name": "createId",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"description": "the prefixed ID"
					},
					"parameters": [
						{
							"name": "sFragmentId",
							"type": "string",
							"optional": false
						},
						{
							"name": "sId",
							"type": "string",
							"optional": false
						}
					],
					"description": "Returns the ID which a Control with the given ID in the context of the Fragment with the given ID would have"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Fragment with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Fragment."
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>type</code>"
					},
					"description": "Gets current value of property <code>type</code>."
				},
				{
					"name": "registerType",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "the Fragment type. Types \"XML\", \"HTML\" and JS\" are built-in and always available."
						},
						{
							"name": "oFragmentImpl",
							"type": "object",
							"optional": false,
							"description": "an object having a property \"init\" of type \"function\" which is called on Fragment instantiation with the settings map as argument"
						}
					],
					"description": "Registers a new Fragment type"
				},
				{
					"name": "setType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Fragment",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>type</code>"
						}
					],
					"description": "Sets a new value for property <code>type</code>.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.History",
			"basename": "History",
			"resource": "sap/ui/core/History.js",
			"module": "sap/ui/core/History",
			"export": "",
			"static": true,
			"visibility": "protected",
			"extends": "sap.ui.base.Object",
			"description": "History handles the history of certain controls (e.g. sap.ui.commons.SearchField).",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "protected",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": false,
						"description": "id for the history"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with additional settings"
					}
				],
				"description": "Creates an instance of the History.\n\nAttention: The Web Storage API which is used by this class stores the data on the client.\nTherefore do not use this API for confidential information."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.History with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.History."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.HorizontalAlign",
			"basename": "HorizontalAlign",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "HorizontalAlign",
			"static": true,
			"visibility": "public",
			"description": "Configuration options for horizontal alignments of controls",
			"properties": [
				{
					"name": "Begin",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Locale-specific positioning at the beginning of the line"
				},
				{
					"name": "Center",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Centered alignment of text"
				},
				{
					"name": "End",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Locale-specific positioning at the end of the line"
				},
				{
					"name": "Left",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Hard option for left alignment"
				},
				{
					"name": "Right",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Hard option for right alignment"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.HTML",
			"basename": "HTML",
			"resource": "sap/ui/core/HTML.js",
			"module": "sap/ui/core/HTML",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Embeds standard HTML in a SAPUI5 control tree.\n\nSecurity Hint: By default, the HTML content (property 'content') is not sanitized and therefore\nopen to XSS attacks. Applications that want to show user defined input in an HTML control, should\neither sanitize the content on their own or activate automatic sanitizing through the\n{@link #setSanitizeContent sanitizeContent} property.\n\nAlthough this control inherits the <code>tooltip</code> aggregation/property and the\n<code>hasStyleClass</code>, <code>addStyleClass</code>, <code>removeStyleClass</code> and\n<code>toggleStyleClass</code> methods from its base class, it doesn't support them.\nInstead, the defined HTML content can contain a tooltip (title attribute) or custom CSS classes.\n\nFor further hints about usage restrictions for this control, see also the documentation of the\n<code>content</code> property.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "content",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "HTML content to be displayed, defined as a string.\n\nThe content is converted to DOM nodes with a call to <code>new jQuery(content)</code>, so any\nrestrictions for the jQuery constructor apply to the content of the HTML control as well.\n\nSome of these restrictions (there might be others!) are:\n<ul>\n<li>the content must be enclosed in tags, pure text is not supported. </li>\n<li>if the content contains script tags, they will be executed but they will not appear in the\n    resulting DOM tree. When the contained code tries to find the corresponding script tag,\n    it will fail.</li>\n</ul>\n\nPlease consider to consult the jQuery documentation as well.\n\nThe HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content\n(e.g. <code>setContent(\"&lt;div/>&lt;div/>\")</code>), but this is not a guaranteed feature.\nThe accepted content might be restricted to single root nodes in future versions.\nTo notify applications about this fact, a warning is written in the log when multiple root nodes are used.\n\nWhen changing the content dynamically, ensure that the ID of the root node remains the same as the HTML\ncontrol's ID. Otherwise it cannot be guaranteed that certain lifecycle events take place.",
						"methods": [
							"getContent",
							"setContent"
						]
					},
					{
						"name": "preferDOM",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Whether existing DOM content is preferred over the given content string.\n\nThere are two scenarios where this flag is relevant (when set to true):\n<ul>\n<li>for the initial rendering: when an HTML control is added to an UIArea for the first time\n    and if the root node of that UIArea contained DOM content with the same id as the HTML\n    control, then that content will be used for rendering instead of any specified string\n    content</li>\n<li>any follow-up rendering: when an HTML control is rendered for the second or any later\n    time and the preferDOM flag is set, then the DOM from the first rendering is preserved\n    and not replaced by the string content</li>\n</ul>\n\nAs preserving the existing DOM is the most common use case of the HTML control, the default value is true.",
						"methods": [
							"getPreferDOM",
							"setPreferDOM"
						]
					},
					{
						"name": "sanitizeContent",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Whether to run the HTML sanitizer once the content (HTML markup) is applied or not.\n\nTo configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist.",
						"methods": [
							"getSanitizeContent",
							"setSanitizeContent"
						]
					},
					{
						"name": "visible",
						"type": "boolean",
						"defaultValue": true,
						"group": "Appearance",
						"visibility": "public",
						"description": "Specifies whether the control is visible. Invisible controls are not rendered.",
						"methods": [
							"getVisible",
							"setVisible"
						]
					}
				],
				"events": [
					{
						"name": "afterRendering",
						"visibility": "public",
						"description": "Fired after the HTML control has been rendered. Allows to manipulate the resulting DOM.\n\nWhen the control doesn't have string content and no preserved DOM existed for this control,\nthen this event will fire, but there won't be a DOM node for this control.",
						"parameters": {
							"isPreservedDOM": {
								"name": "isPreservedDOM",
								"type": "boolean",
								"description": "Whether the current DOM of the control has been preserved (true) or not (e.g.\nrendered from content property or it is an empty HTML control)."
							}
						},
						"methods": [
							"attachAfterRendering",
							"detachAfterRendering",
							"fireAfterRendering"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new HTML.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "afterRendering",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"isPreservedDOM": {
											"name": "isPreservedDOM",
											"type": "boolean",
											"optional": false,
											"description": "Whether the current DOM of the control has been preserved (true) or not (e.g.\nrendered from content property or it is an empty HTML control)."
										}
									}
								}
							}
						}
					],
					"description": "Fired after the HTML control has been rendered. Allows to manipulate the resulting DOM.\n\nWhen the control doesn't have string content and no preserved DOM existed for this control,\nthen this event will fire, but there won't be a DOM node for this control."
				}
			],
			"methods": [
				{
					"name": "attachAfterRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.HTML",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.HTML</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterRendering</code> event of this <code>sap.ui.core.HTML</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.HTML</code> itself.\r\rFired after the HTML control has been rendered. Allows to manipulate the resulting DOM.\n\nWhen the control doesn't have string content and no preserved DOM existed for this control,\nthen this event will fire, but there won't be a DOM node for this control."
				},
				{
					"name": "detachAfterRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.HTML",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterRendering</code> event of this <code>sap.ui.core.HTML</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.HTML with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireAfterRendering",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.HTML",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"isPreservedDOM": {
									"name": "isPreservedDOM",
									"type": "boolean",
									"optional": true,
									"description": "Whether the current DOM of the control has been preserved (true) or not (e.g.\nrendered from content property or it is an empty HTML control)."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>afterRendering</code> to attached listeners."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>content</code>"
					},
					"description": "Gets current value of property <code>content</code>.\r\rHTML content to be displayed, defined as a string.\n\nThe content is converted to DOM nodes with a call to <code>new jQuery(content)</code>, so any\nrestrictions for the jQuery constructor apply to the content of the HTML control as well.\n\nSome of these restrictions (there might be others!) are:\n<ul>\n<li>the content must be enclosed in tags, pure text is not supported. </li>\n<li>if the content contains script tags, they will be executed but they will not appear in the\n    resulting DOM tree. When the contained code tries to find the corresponding script tag,\n    it will fail.</li>\n</ul>\n\nPlease consider to consult the jQuery documentation as well.\n\nThe HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content\n(e.g. <code>setContent(\"&lt;div/>&lt;div/>\")</code>), but this is not a guaranteed feature.\nThe accepted content might be restricted to single root nodes in future versions.\nTo notify applications about this fact, a warning is written in the log when multiple root nodes are used.\n\nWhen changing the content dynamically, ensure that the ID of the root node remains the same as the HTML\ncontrol's ID. Otherwise it cannot be guaranteed that certain lifecycle events take place."
				},
				{
					"name": "getDomRef",
					"visibility": "public",
					"returnValue": {
						"type": "Element",
						"description": "The element's DOM reference or null"
					},
					"parameters": [
						{
							"name": "sSuffix",
							"type": "string",
							"optional": true,
							"defaultValue": "''",
							"description": "Suffix of the Element to be retrieved or empty"
						}
					]
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.HTML."
				},
				{
					"name": "getPreferDOM",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>preferDOM</code>"
					},
					"description": "Gets current value of property <code>preferDOM</code>.\r\rWhether existing DOM content is preferred over the given content string.\n\nThere are two scenarios where this flag is relevant (when set to true):\n<ul>\n<li>for the initial rendering: when an HTML control is added to an UIArea for the first time\n    and if the root node of that UIArea contained DOM content with the same id as the HTML\n    control, then that content will be used for rendering instead of any specified string\n    content</li>\n<li>any follow-up rendering: when an HTML control is rendered for the second or any later\n    time and the preferDOM flag is set, then the DOM from the first rendering is preserved\n    and not replaced by the string content</li>\n</ul>\n\nAs preserving the existing DOM is the most common use case of the HTML control, the default value is true.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getSanitizeContent",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>sanitizeContent</code>"
					},
					"description": "Gets current value of property <code>sanitizeContent</code>.\r\rWhether to run the HTML sanitizer once the content (HTML markup) is applied or not.\n\nTo configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getVisible",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>visible</code>"
					},
					"description": "Gets current value of property <code>visible</code>.\r\rSpecifies whether the control is visible. Invisible controls are not rendered.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.HTML",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sContent",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>content</code>"
						}
					],
					"description": "Sets a new value for property <code>content</code>.\r\rHTML content to be displayed, defined as a string.\n\nThe content is converted to DOM nodes with a call to <code>new jQuery(content)</code>, so any\nrestrictions for the jQuery constructor apply to the content of the HTML control as well.\n\nSome of these restrictions (there might be others!) are:\n<ul>\n<li>the content must be enclosed in tags, pure text is not supported. </li>\n<li>if the content contains script tags, they will be executed but they will not appear in the\n    resulting DOM tree. When the contained code tries to find the corresponding script tag,\n    it will fail.</li>\n</ul>\n\nPlease consider to consult the jQuery documentation as well.\n\nThe HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content\n(e.g. <code>setContent(\"&lt;div/>&lt;div/>\")</code>), but this is not a guaranteed feature.\nThe accepted content might be restricted to single root nodes in future versions.\nTo notify applications about this fact, a warning is written in the log when multiple root nodes are used.\n\nWhen changing the content dynamically, ensure that the ID of the root node remains the same as the HTML\ncontrol's ID. Otherwise it cannot be guaranteed that certain lifecycle events take place.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDOMContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.HTML",
						"description": "<code>this</code> to facilitate method chaining"
					},
					"parameters": [
						{
							"name": "oDom",
							"type": "Element",
							"optional": false,
							"description": "the new DOM content"
						}
					],
					"description": "Sets some new DOM content for this HTML control. The content will replace the existing content\nafter the next rendering. Properties are not modified, but preferDOM should be set to true."
				},
				{
					"name": "setPreferDOM",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.HTML",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bPreferDOM",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>preferDOM</code>"
						}
					],
					"description": "Sets a new value for property <code>preferDOM</code>.\r\rWhether existing DOM content is preferred over the given content string.\n\nThere are two scenarios where this flag is relevant (when set to true):\n<ul>\n<li>for the initial rendering: when an HTML control is added to an UIArea for the first time\n    and if the root node of that UIArea contained DOM content with the same id as the HTML\n    control, then that content will be used for rendering instead of any specified string\n    content</li>\n<li>any follow-up rendering: when an HTML control is rendered for the second or any later\n    time and the preferDOM flag is set, then the DOM from the first rendering is preserved\n    and not replaced by the string content</li>\n</ul>\n\nAs preserving the existing DOM is the most common use case of the HTML control, the default value is true.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setSanitizeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.HTML",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bSanitizeContent",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>sanitizeContent</code>"
						}
					],
					"description": "Sets a new value for property <code>sanitizeContent</code>.\r\rWhether to run the HTML sanitizer once the content (HTML markup) is applied or not.\n\nTo configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.HTML",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVisible",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>visible</code>"
						}
					],
					"description": "Sets a new value for property <code>visible</code>.\r\rSpecifies whether the control is visible. Invisible controls are not rendered.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Icon",
			"basename": "Icon",
			"resource": "sap/ui/core/Icon.js",
			"module": "sap/ui/core/Icon",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.11.1",
			"extends": "sap.ui.core.Control",
			"description": "Icon uses embedded font instead of pixel image. Comparing to image, Icon is easily scalable, color can be altered live and various effects can be added using css.\n\nA set of built in Icons is available and they can be fetched by calling sap.ui.core.IconPool.getIconURI and set this value to the src property on the Icon.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "src",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "This property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with a Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here.",
						"methods": [
							"getSrc",
							"setSrc"
						]
					},
					{
						"name": "size",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Since Icon uses font, this property will be applied to the css font-size property on the rendered DOM element.",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "color",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent.",
						"methods": [
							"getColor",
							"setColor"
						]
					},
					{
						"name": "hoverColor",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "This color is shown when icon is hovered. This property has no visual effect when run on mobile device.",
						"methods": [
							"getHoverColor",
							"setHoverColor"
						]
					},
					{
						"name": "activeColor",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "This color is shown when icon is pressed/activated by the user.",
						"methods": [
							"getActiveColor",
							"setActiveColor"
						]
					},
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "This is the width of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "This is the height of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "backgroundColor",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Background color of the Icon in normal state.",
						"methods": [
							"getBackgroundColor",
							"setBackgroundColor"
						]
					},
					{
						"name": "hoverBackgroundColor",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Background color for Icon in hover state. This property has no visual effect when run on mobile device.",
						"methods": [
							"getHoverBackgroundColor",
							"setHoverBackgroundColor"
						]
					},
					{
						"name": "activeBackgroundColor",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Background color for Icon in active state.",
						"methods": [
							"getActiveBackgroundColor",
							"setActiveBackgroundColor"
						]
					},
					{
						"name": "decorative",
						"type": "boolean",
						"defaultValue": true,
						"group": "Accessibility",
						"visibility": "public",
						"since": "1.16.4",
						"description": "A decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property.",
						"methods": [
							"getDecorative",
							"setDecorative"
						]
					},
					{
						"name": "useIconTooltip",
						"type": "boolean",
						"defaultValue": true,
						"group": "Accessibility",
						"visibility": "public",
						"since": "1.30.0",
						"description": "Decides whether a default Icon tooltip should be used if no tooltip is set.",
						"methods": [
							"getUseIconTooltip",
							"setUseIconTooltip"
						]
					},
					{
						"name": "alt",
						"type": "string",
						"defaultValue": null,
						"group": "Accessibility",
						"visibility": "public",
						"since": "1.30.0",
						"description": "This defines the alternative text which is used for outputting the aria-label attribute on the DOM.",
						"methods": [
							"getAlt",
							"setAlt"
						]
					},
					{
						"name": "noTabStop",
						"type": "boolean",
						"defaultValue": false,
						"group": "Accessibility",
						"visibility": "public",
						"since": "1.30.1",
						"description": "Defines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached.\nIf it's set to true, Icon control never has tab stop no matter whether press event handler exists or not.",
						"methods": [
							"getNoTabStop",
							"setNoTabStop"
						]
					}
				],
				"aggregations": [
					{
						"name": "_invisibleText",
						"singularName": "_invisibleText",
						"type": "sap.ui.core.InvisibleText",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Hidden aggregation for holding the InvisibleText instance which is used for outputing the text labeling the control",
						"methods": [
							"get_invisibleText",
							"destroy_invisibleText",
							"set_invisibleText"
						]
					}
				],
				"associations": [
					{
						"name": "ariaLabelledBy",
						"singularName": "ariaLabelledBy",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).",
						"methods": [
							"getAriaLabelledBy",
							"addAriaLabelledBy",
							"removeAriaLabelledBy",
							"removeAllAriaLabelledBy"
						]
					}
				],
				"events": [
					{
						"name": "press",
						"visibility": "public",
						"description": "This event is fired when icon is pressed/activated by the user. When a handler is attached to this event, the Icon gets tab stop. If you want to disable this behavior, set the noTabStop property to true.",
						"methods": [
							"attachPress",
							"detachPress",
							"firePress"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Icon.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "press",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when icon is pressed/activated by the user. When a handler is attached to this event, the Icon gets tab stop. If you want to disable this behavior, set the noTabStop property to true."
				}
			],
			"methods": [
				{
					"name": "addAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "sap.ui.core.ID|sap.ui.core.Control",
							"optional": false,
							"description": "the ariaLabelledBy to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some ariaLabelledBy into the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "attachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.Icon</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>press</code> event of this <code>sap.ui.core.Icon</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.Icon</code> itself.\r\rThis event is fired when icon is pressed/activated by the user. When a handler is attached to this event, the Icon gets tab stop. If you want to disable this behavior, set the noTabStop property to true."
				},
				{
					"name": "detachPress",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>press</code> event of this <code>sap.ui.core.Icon</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Icon with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "firePress",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>press</code> to attached listeners."
				},
				{
					"name": "getAccessibilityInfo",
					"visibility": "protected"
				},
				{
					"name": "getActiveBackgroundColor",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>activeBackgroundColor</code>"
					},
					"description": "Gets current value of property <code>activeBackgroundColor</code>.\r\rBackground color for Icon in active state."
				},
				{
					"name": "getActiveColor",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>activeColor</code>"
					},
					"description": "Gets current value of property <code>activeColor</code>.\r\rThis color is shown when icon is pressed/activated by the user."
				},
				{
					"name": "getAlt",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>alt</code>"
					},
					"since": "1.30.0",
					"description": "Gets current value of property <code>alt</code>.\r\rThis defines the alternative text which is used for outputting the aria-label attribute on the DOM."
				},
				{
					"name": "getAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ID[]"
					},
					"description": "Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy</code>."
				},
				{
					"name": "getBackgroundColor",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>backgroundColor</code>"
					},
					"description": "Gets current value of property <code>backgroundColor</code>.\r\rBackground color of the Icon in normal state."
				},
				{
					"name": "getColor",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>color</code>"
					},
					"description": "Gets current value of property <code>color</code>.\r\rThe color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent."
				},
				{
					"name": "getDecorative",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>decorative</code>"
					},
					"since": "1.16.4",
					"description": "Gets current value of property <code>decorative</code>.\r\rA decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\r\rThis is the height of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property."
				},
				{
					"name": "getHoverBackgroundColor",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>hoverBackgroundColor</code>"
					},
					"description": "Gets current value of property <code>hoverBackgroundColor</code>.\r\rBackground color for Icon in hover state. This property has no visual effect when run on mobile device."
				},
				{
					"name": "getHoverColor",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>hoverColor</code>"
					},
					"description": "Gets current value of property <code>hoverColor</code>.\r\rThis color is shown when icon is hovered. This property has no visual effect when run on mobile device."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Icon."
				},
				{
					"name": "getNoTabStop",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>noTabStop</code>"
					},
					"since": "1.30.1",
					"description": "Gets current value of property <code>noTabStop</code>.\r\rDefines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached.\nIf it's set to true, Icon control never has tab stop no matter whether press event handler exists or not.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>size</code>"
					},
					"description": "Gets current value of property <code>size</code>.\r\rSince Icon uses font, this property will be applied to the css font-size property on the rendered DOM element."
				},
				{
					"name": "getSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>src</code>"
					},
					"description": "Gets current value of property <code>src</code>.\r\rThis property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with a Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here."
				},
				{
					"name": "getUseIconTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>useIconTooltip</code>"
					},
					"since": "1.30.0",
					"description": "Gets current value of property <code>useIconTooltip</code>.\r\rDecides whether a default Icon tooltip should be used if no tooltip is set.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\r\rThis is the width of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property."
				},
				{
					"name": "removeAllAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ID[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls in the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "removeAriaLabelledBy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ID",
						"description": "The removed ariaLabelledBy or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAriaLabelledBy",
							"type": "int|sap.ui.core.ID|sap.ui.core.Control",
							"optional": false,
							"description": "The ariaLabelledBy to be removed or its index or ID"
						}
					],
					"description": "Removes an ariaLabelledBy from the association named <code>ariaLabelledBy</code>."
				},
				{
					"name": "setActiveBackgroundColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sActiveBackgroundColor",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>activeBackgroundColor</code>"
						}
					],
					"description": "Sets a new value for property <code>activeBackgroundColor</code>.\r\rBackground color for Icon in active state.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setActiveColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sActiveColor",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>activeColor</code>"
						}
					],
					"description": "Sets a new value for property <code>activeColor</code>.\r\rThis color is shown when icon is pressed/activated by the user.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setAlt",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "sAlt",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>alt</code>"
						}
					],
					"description": "Sets a new value for property <code>alt</code>.\r\rThis defines the alternative text which is used for outputting the aria-label attribute on the DOM.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setBackgroundColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sBackgroundColor",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>backgroundColor</code>"
						}
					],
					"description": "Sets a new value for property <code>backgroundColor</code>.\r\rBackground color of the Icon in normal state.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sColor",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>color</code>"
						}
					],
					"description": "Sets a new value for property <code>color</code>.\r\rThe color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setDecorative",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.16.4",
					"parameters": [
						{
							"name": "bDecorative",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>decorative</code>"
						}
					],
					"description": "Sets a new value for property <code>decorative</code>.\r\rA decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\r\rThis is the height of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setHoverBackgroundColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHoverBackgroundColor",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>hoverBackgroundColor</code>"
						}
					],
					"description": "Sets a new value for property <code>hoverBackgroundColor</code>.\r\rBackground color for Icon in hover state. This property has no visual effect when run on mobile device.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setHoverColor",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHoverColor",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>hoverColor</code>"
						}
					],
					"description": "Sets a new value for property <code>hoverColor</code>.\r\rThis color is shown when icon is hovered. This property has no visual effect when run on mobile device.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setNoTabStop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.1",
					"parameters": [
						{
							"name": "bNoTabStop",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>noTabStop</code>"
						}
					],
					"description": "Sets a new value for property <code>noTabStop</code>.\r\rDefines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached.\nIf it's set to true, Icon control never has tab stop no matter whether press event handler exists or not.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSize",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>size</code>"
						}
					],
					"description": "Sets a new value for property <code>size</code>.\r\rSince Icon uses font, this property will be applied to the css font-size property on the rendered DOM element.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSrc",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSrc",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>src</code>"
						}
					],
					"description": "Sets a new value for property <code>src</code>.\r\rThis property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with a Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setUseIconTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.30.0",
					"parameters": [
						{
							"name": "bUseIconTooltip",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>useIconTooltip</code>"
						}
					],
					"description": "Sets a new value for property <code>useIconTooltip</code>.\r\rDecides whether a default Icon tooltip should be used if no tooltip is set.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Icon",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\r\rThis is the width of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.IconColor",
			"basename": "IconColor",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "IconColor",
			"static": true,
			"visibility": "public",
			"description": "Semantic Colors of an icon.",
			"properties": [
				{
					"name": "Critical",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Critical color"
				},
				{
					"name": "Default",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Default color (brand color)"
				},
				{
					"name": "Negative",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Negative color"
				},
				{
					"name": "Neutral",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Neutral color."
				},
				{
					"name": "Positive",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Positive color"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.IconPool",
			"basename": "IconPool",
			"resource": "sap/ui/core/IconPool.js",
			"module": "sap/ui/core/IconPool",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "The IconPool is a static class for retrieving or registering icons.\nIt also provides helping methods for easier consumption of icons.\nThere are already icons registered in IconPool, please use the Demo App named\n\"Icon Explorer\" to find the name of the icon.\n\nIn order to use the icon inside an existing control, please call\n{@link sap.ui.core.IconPool.getIconURI} and assign the URI to the control's property\nwhich supports icons.\nIf you want to support both, icons and standard images in your own control, please use\nthe static method {@link sap.ui.core.IconPool.createControlByURI} to either create an Icon in\ncase the first argument is an icon-URL or another control which you define by\nproviding it as the second argument.",
			"methods": [
				{
					"name": "addIcon",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "the info object of the registered icon which has the name, collection, uri, fontFamily, content and suppressMirroring properties."
					},
					"parameters": [
						{
							"name": "iconName",
							"type": "string",
							"optional": false,
							"description": "the name of the icon."
						},
						{
							"name": "collectionName",
							"type": "string",
							"optional": false,
							"description": "the name of icon collection. The built in icons are with empty collectionName, so if additional icons need to be registered in IconPool, the collectionName can't be empty."
						},
						{
							"name": "iconInfo",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"fontFamily": {
									"name": "fontFamily",
									"type": "string",
									"optional": false,
									"description": "is the name of the font when importing the font using @font-face in CSS"
								},
								"content": {
									"name": "content",
									"type": "string|string[]",
									"optional": false,
									"description": "is the special hexadecimal code without the prefix, for example \"e000\" or several of them"
								},
								"overWrite": {
									"name": "overWrite",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "indicates if already registered icons should be overwritten when the same name and collection are given. The built in icons can never be overwritten."
								},
								"suppressMirroring": {
									"name": "suppressMirroring",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "indicates whether this icon should NOT be mirrored in RTL (right to left) mode."
								},
								"resourceBundle": {
									"name": "resourceBundle",
									"type": "jQuery.sap.util.ResourceBundle",
									"optional": true,
									"description": "ResourceBundle to be used for translation. Key format: \"Icon.<iconName>\"."
								}
							},
							"description": "the icon info which contains the following properties:"
						}
					],
					"description": "Register an additional icon to the sap.ui.core.IconPool."
				},
				{
					"name": "createControlByURI",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "either an instance of sap.ui.core.Icon or instance created by calling the given constructor"
					},
					"parameters": [
						{
							"name": "setting",
							"type": "string|object",
							"optional": false,
							"description": "contains the properties which will be used to instantiate the returned control. It should contain at least a property named src. If it's given with a string type, it will be taken as the value of src property."
						},
						{
							"name": "constructor",
							"type": "function",
							"optional": false,
							"description": "the constructor function which is called when the given URI isn't an icon URI"
						}
					],
					"description": "Creates an instance of {@link sap.ui.core.Icon} if the given URI is an icon URI, otherwise the given constructor is called.\nThe given URI is set to the src property of the control."
				},
				{
					"name": "getIconCollectionNames",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "array",
						"description": "An array contains all of the registered collections' names."
					},
					"description": "Returns all names of registered collections in IconPool"
				},
				{
					"name": "getIconForMimeType",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the icon url (e.g. \"sap-icon://attachment-zip-file\")"
					},
					"since": "1.25.0",
					"parameters": [
						{
							"name": "sMimeType",
							"type": "string",
							"optional": false,
							"description": "the mime type of a file (e.g. \"application/zip\")"
						}
					],
					"description": "Returns the icon url based on the given mime type"
				},
				{
					"name": "getIconInfo",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "Info object for the icon or <code>undefined</code> when the icon can't be found."
					},
					"parameters": [
						{
							"name": "iconName",
							"type": "string",
							"optional": false,
							"description": "Name of the icon, must not be empty"
						},
						{
							"name": "collectionName",
							"type": "string",
							"optional": true,
							"description": "Name of the icon collection; to access built-in icons, omit the collection name"
						}
					],
					"description": "Returns an info object for the icon with the given <code>iconName</code> and <code>collectionName</code>.\n\nInstead of giving name and collection, a complete icon-URI can be provided as <code>iconName</code>.\nThe method will determine name and collection from the URI, see {@link #.isIconURI IconPool.isIconURI}\nfor details.\n\nThe returned info object has the following properties:\n<ul>\n<li><code>string: name</code> Name of the icon</li>\n<li><code>string: collection</code> Name of the collection that contains the icon or <code>undefined</code> in case of the default collection</li>\n<li><code>string: uri</code> Icon URI that identifies the icon</li>\n<li><code>string: fontFamily</code> CSS font family to use for this icon</li>\n<li><code>string: content</code> Character sequence that represents the icon in the icon font</li>\n<li><code>string: text</code> Alternative text describing the icon (optional, might be empty)</li>\n<li><code>boolean: suppressMirroring</code> Whether the icon needs no mirroring in right-to-left mode</li>\n</ul>"
				},
				{
					"name": "getIconNames",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "array",
						"description": "An array contains all of the registered icon names under the given collection."
					},
					"parameters": [
						{
							"name": "collectionName",
							"type": "string",
							"optional": false,
							"description": "the name of collection where icon names are retrieved."
						}
					],
					"description": "Returns all name of icons that are registered under the given collection."
				},
				{
					"name": "getIconURI",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "URI of the icon or <code>undefined</code> if the icon can't be found in the IconPool"
					},
					"parameters": [
						{
							"name": "iconName",
							"type": "string",
							"optional": false,
							"description": "Name of the icon, must not be empty"
						},
						{
							"name": "collectionName",
							"type": "string",
							"optional": true,
							"description": "Name of the icon collection; to access built-in icons, omit the collection name"
						}
					],
					"description": "Returns the URI of the icon in the pool which has the given <code>iconName</code> and <code>collectionName</code>."
				},
				{
					"name": "isIconURI",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Whether the URI matches the icon URI format"
					},
					"parameters": [
						{
							"name": "uri",
							"type": "string",
							"optional": false,
							"description": "The URI to check"
						}
					],
					"description": "Returns whether the given <code>uri</code> is an icon URI.\n\nA string is an icon URI when it can be parsed as an URI and when it has one of the two forms\n<ul>\n<li>sap-icon://collectionName/iconName</li>\n<li>sap-icon://iconName</li>\n</ul>\nwhere collectionName and iconName must be non-empty."
				}
			]
		},
		{
			"kind": "interface",
			"name": "sap.ui.core.IContextMenu",
			"basename": "IContextMenu",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "IContextMenu",
			"static": true,
			"visibility": "public",
			"description": "Marker interface for controls that can serve as a context menu.\nImplementation of this interface should implement <li><code>openAsContextMenu</code></li> method."
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.ID",
			"basename": "ID",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "ID",
			"final": true,
			"static": true,
			"visibility": "public",
			"description": "A string type representing an Id or a name.\n\nAllowed is a sequence of characters (capital/lowercase), digits, underscores, dashes, points and/or colons.\nIt may start with a character, number or underscore only."
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.ImeMode",
			"basename": "ImeMode",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "ImeMode",
			"static": true,
			"visibility": "public",
			"description": "State of the Input Method Editor (IME) for the control.\n\nDepending on its value, it allows users to enter and edit for example Chinese characters.",
			"properties": [
				{
					"name": "Active",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "IME is used for entering characters."
				},
				{
					"name": "Auto",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The value is automatically computed by the user agent."
				},
				{
					"name": "Disabled",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "IME is disabled."
				},
				{
					"name": "Inactive",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "IME is not used for entering characters."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.IntervalTrigger",
			"basename": "IntervalTrigger",
			"resource": "sap/ui/core/IntervalTrigger.js",
			"module": "sap/ui/core/IntervalTrigger",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.11.0",
			"extends": "sap.ui.base.Object",
			"description": "Provides a trigger that triggers in a set interval and calls all\n       registered listeners. If the interval is <= 0 the trigger is\n       switched off and won't trigger at all.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "iInterval",
						"type": "int",
						"optional": false,
						"description": "is the interval the trigger should be used. If the\n           trigger is >0 triggering starts/runs and if the interval is\n           set to <=0 triggering stops."
					}
				],
				"description": "Creates an instance of EventBus."
			},
			"methods": [
				{
					"name": "addListener",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "is the called function that should be called when\n           the trigger want to trigger the listener."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "that should be triggered."
						}
					],
					"description": "Adds a listener to the list that should be triggered."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Destructor method for objects."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.IntervalTrigger with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getInterface",
					"visibility": "public"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.IntervalTrigger."
				},
				{
					"name": "removeListener",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "is the previously registered function"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "that should be removed"
						}
					],
					"description": "Removes corresponding listener from list."
				},
				{
					"name": "setInterval",
					"visibility": "public",
					"parameters": [
						{
							"name": "iInterval",
							"type": "int",
							"optional": false,
							"description": "sets the interval in milliseconds when a new\n           triggering should occur."
						}
					],
					"description": "Sets the trigger interval. If the value is >0 triggering will start if\nthere are any registered listeners. If the interval is set to <=0\ntriggering will stop."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.InvisibleText",
			"basename": "InvisibleText",
			"resource": "sap/ui/core/InvisibleText.js",
			"module": "sap/ui/core/InvisibleText",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.core.Control",
			"description": "An InvisibleText is used to bring hidden texts to the UI for screen reader support. The hidden text can e.g. be referenced\nin the ariaLabelledBy or ariaDescribedBy associations of other controls.\n\nThe inherited properties busy, busyIndicatorDelay and visible and the aggregation tooltip is not supported by this control.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The text of the InvisibleText.",
						"methods": [
							"getText",
							"setText"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new InvisibleText.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.InvisibleText with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.InvisibleText."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rThe text of the InvisibleText.\r\rDefault value is <code></code>."
				},
				{
					"name": "setBusy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.InvisibleText",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"deprecated": {
						"text": "Local BusyIndicator is not supported by control."
					}
				},
				{
					"name": "setBusyIndicatorDelay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.InvisibleText",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"deprecated": {
						"text": "Local BusyIndicator is not supported by control."
					}
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.InvisibleText",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rThe text of the InvisibleText.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code></code>."
				},
				{
					"name": "setTooltip",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.InvisibleText",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"deprecated": {
						"text": "Tooltip is not supported by control."
					}
				},
				{
					"name": "setVisible",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.InvisibleText",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"deprecated": {
						"text": "Property visible is not supported by control."
					}
				},
				{
					"name": "toStatic",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.InvisibleText",
						"description": "Returns <code>this</code> to allow method chaining"
					},
					"description": "Adds <code>this</code> control into the static, hidden area UI area container."
				}
			]
		},
		{
			"kind": "interface",
			"name": "sap.ui.core.IShrinkable",
			"basename": "IShrinkable",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "IShrinkable",
			"static": true,
			"visibility": "public",
			"since": "1.26",
			"description": "Interface for the controls which are suitable to shrink.\n\nThis means the control should still look fine when it gets smaller than its normal size,\ne.g. Text controls which can show ellipsis in case of shrink.\n\nNote: This marker interface can be implemented by controls to give a hint to the container.\nThe control itself does not need to implement anything. A parent control that respects this interface\nwill apply the \"flex-shrink\" as a CSS property which determines how much the item will shrink relative\nto the rest of the items in the container when negative free space is distributed."
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Item",
			"basename": "Item",
			"resource": "sap/ui/core/Item.js",
			"module": "sap/ui/core/Item",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "A control base type.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The text to be displayed for the item.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "enabled",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Enabled items can be selected.",
						"methods": [
							"getEnabled",
							"setEnabled"
						]
					},
					{
						"name": "textDirection",
						"type": "sap.ui.core.TextDirection",
						"defaultValue": "Inherit",
						"group": "Misc",
						"visibility": "public",
						"description": "Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.",
						"methods": [
							"getTextDirection",
							"setTextDirection"
						]
					},
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Can be used as input for subsequent actions.",
						"methods": [
							"getKey",
							"setKey"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Item.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Item with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enabled</code>"
					},
					"description": "Gets current value of property <code>enabled</code>.\r\rEnabled items can be selected.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"description": "Gets current value of property <code>key</code>.\r\rCan be used as input for subsequent actions."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Item."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rThe text to be displayed for the item.\r\rDefault value is <code></code>."
				},
				{
					"name": "getTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TextDirection",
						"description": "Value of property <code>textDirection</code>"
					},
					"description": "Gets current value of property <code>textDirection</code>.\r\rOptions are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.\r\rDefault value is <code>Inherit</code>."
				},
				{
					"name": "setEnabled",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnabled",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enabled</code>"
						}
					],
					"description": "Sets a new value for property <code>enabled</code>.\r\rEnabled items can be selected.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\r\rCan be used as input for subsequent actions.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rThe text to be displayed for the item.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code></code>."
				},
				{
					"name": "setTextDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Item",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextDirection",
							"type": "sap.ui.core.TextDirection",
							"optional": false,
							"description": "New value for property <code>textDirection</code>"
						}
					],
					"description": "Sets a new value for property <code>textDirection</code>.\r\rOptions are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>Inherit</code>."
				}
			]
		},
		{
			"kind": "interface",
			"name": "sap.ui.core.Label",
			"basename": "Label",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Label",
			"static": true,
			"visibility": "public",
			"description": "Marker interface for controls which are suitable for use as label."
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.LabelEnablement",
			"basename": "LabelEnablement",
			"resource": "sap/ui/core/LabelEnablement.js",
			"module": "sap/ui/core/LabelEnablement",
			"export": "",
			"static": true,
			"visibility": "protected",
			"since": "1.28.0",
			"description": "Helper functionality for enhancement of a Label with common label functionality.",
			"methods": [
				{
					"name": "enrich",
					"visibility": "protected",
					"static": true,
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the label control which should be enriched with further label functionality."
						}
					],
					"description": "This function should be called on a label control to enrich it's functionality.\n\n<b>Usage:</b>\nThe function can be called with a control prototype:\n<code>\nsap.ui.core.LabelEnablement.enrich(my.Label.prototype);\n</code>\nOr the function can be called on instance level in the init function of a label control:\n<code>\nmy.Label.prototype.init: function(){\n   sap.ui.core.LabelEnablement.enrich(this);\n}\n</code>\n\n<b>Preconditions:</b>\nThe given control must implement the interface sap.ui.core.Label and have an association 'labelFor' with cardinality 0..1.\nThis function extends existing API functions. Ensure not to override this extensions AFTER calling this function.\n\n<b>What does this function do?</b>\n\nA mechanismn is added that ensures that a bidirectional reference between the label and it's labeled control is established:\nThe label references the labeled control via the html 'for' attribute (@see sap.ui.core.LabelEnablement#writeLabelForAttribute).\nIf the labeled control supports the aria-labelledby attribute. A reference to the label is added automatically.\n\nIn addition an alternative to apply a for reference without influencing the labelFor association of the API is applied (e.g. used by Form).\nFor this purpose the functions setAlternativeLabelFor and getLabelForRendering are added."
				},
				{
					"name": "getReferencingLabels",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string[]",
						"description": "an array of ids of the labels referencing the given element"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "The element whose referencing labels should be returned"
						}
					],
					"description": "Returns an array of ids of the labels referencing the given element"
				},
				{
					"name": "isRequired",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> when the given control is required (property 'required') or one of its referencing labels, <code>false</code> otherwise"
					},
					"since": "1.29.0",
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "The element which should be checked for its required state"
						}
					],
					"description": "Returns <code>true</code> when the given control is required (property 'required') or one of its referencing labels, <code>false</code> otherwise."
				},
				{
					"name": "writeLabelForAttribute",
					"visibility": "protected",
					"static": true,
					"parameters": [
						{
							"name": "oRenderManager",
							"type": "sap.ui.core.RenderManager",
							"optional": false,
							"description": "The RenderManager that can be used for writing to the render-output-buffer."
						},
						{
							"name": "oLabel",
							"type": "sap.ui.core.Label",
							"optional": false,
							"description": "The label for which the 'for' html attribute should be written to the render-output-buffer."
						}
					],
					"description": "Helper function for the label control to render the html 'for' attribute. This function should be called\nat the desired location in the renderer code of the label control."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.LayoutData",
			"basename": "LayoutData",
			"resource": "sap/ui/core/LayoutData.js",
			"module": "sap/ui/core/LayoutData",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "A layout data base type.",
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new LayoutData."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.LayoutData with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.LayoutData."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.ListItem",
			"basename": "ListItem",
			"resource": "sap/ui/core/ListItem.js",
			"module": "sap/ui/core/ListItem",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Item",
			"description": "An item that is used in lists or list-similar controls such as DropdownBox, for example.\nThe element foresees the usage of additional texts displayed in a second column.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "icon",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The icon belonging to this list item instance.\nThis can be an URI to an image or an icon font URI.",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "additionalText",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Some additional text of type string, optionally to be displayed along with this item.",
						"methods": [
							"getAdditionalText",
							"setAdditionalText"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ListItem.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.ListItem with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}."
				},
				{
					"name": "getAdditionalText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>additionalText</code>"
					},
					"description": "Gets current value of property <code>additionalText</code>.\r\rSome additional text of type string, optionally to be displayed along with this item."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\r\rThe icon belonging to this list item instance.\nThis can be an URI to an image or an icon font URI."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.ListItem."
				},
				{
					"name": "setAdditionalText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ListItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAdditionalText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>additionalText</code>"
						}
					],
					"description": "Sets a new value for property <code>additionalText</code>.\r\rSome additional text of type string, optionally to be displayed along with this item.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ListItem",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\r\rThe icon belonging to this list item instance.\nThis can be an URI to an image or an icon font URI.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.LocalBusyIndicator",
			"basename": "LocalBusyIndicator",
			"resource": "sap/ui/core/LocalBusyIndicator.js",
			"module": "sap/ui/core/LocalBusyIndicator",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.11.0",
			"extends": "sap.ui.core.Control",
			"description": "The LocalBusyIndicator is a special version of the\nBusyIndicator. This one doesn't block the whole screen - it just\nblocks the corresponding control and puts a local animation over the\ncontrol. To use the functionality of this control the corresponding\ncontrol needs to be enabled via the 'LocalBusyIndicatorSupport'\naccordingly to the ListBox control (see the init-function of the\nListBox).",
			"deprecated": {
				"since": "1.14.2",
				"text": "The LocalBusyIndicator Control is not needed anymore by the new implementation of the LBI. Hence, it is not used anymore."
			},
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100px",
						"group": "Misc",
						"visibility": "public",
						"description": "This property is the width of the control that has to\nbe covered. With this width the position of the animation can be\nproperly set.",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100px",
						"group": "Misc",
						"visibility": "public",
						"description": "This property is the height of the control that has to\nbe covered. With this height the position of the animation can be\nproperly set.",
						"methods": [
							"getHeight",
							"setHeight"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new LocalBusyIndicator.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.LocalBusyIndicator with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\r\rThis property is the height of the control that has to\nbe covered. With this height the position of the animation can be\nproperly set.\r\rDefault value is <code>100px</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.LocalBusyIndicator."
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\r\rThis property is the width of the control that has to\nbe covered. With this width the position of the animation can be\nproperly set.\r\rDefault value is <code>100px</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.LocalBusyIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\r\rThis property is the height of the control that has to\nbe covered. With this height the position of the animation can be\nproperly set.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>100px</code>."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.LocalBusyIndicator",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\r\rThis property is the width of the control that has to\nbe covered. With this width the position of the animation can be\nproperly set.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>100px</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Locale",
			"basename": "Locale",
			"resource": "sap/ui/core/Locale.js",
			"module": "sap/ui/core/Locale",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Locale represents a locale setting, consisting of a language, script, region, variants, extensions and private use section.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sLocaleId",
						"type": "string",
						"optional": false,
						"description": "the locale identifier, in format en-US or en_US."
					}
				],
				"description": "Creates an instance of the Locale."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Locale with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getExtension",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the extension"
					},
					"description": "Get the locale extension as a single string or <code>null</code>.\n\nThe extension always consists of a singleton character (not 'x'),\na dash '-' and one or more extension token, each separated\nagain with a dash.\n\nUse {@link #getExtensions} to get the individual extension tokens as an array."
				},
				{
					"name": "getExtensionSubtags",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "the individual extension sections"
					},
					"description": "Get the locale extensions as an array of tokens.\n\nThe leading singleton and the separating dashes are not part of the result.\nIf there is no extensions section in the locale tag, an empty array is returned."
				},
				{
					"name": "getLanguage",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the language code"
					},
					"description": "Get the locale language.\n\nNote that the case might differ from the original script tag\n(Lower case is enforced as recommended by BCP47/ISO639)."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Locale."
				},
				{
					"name": "getPrivateUse",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the private use section"
					},
					"description": "Get the locale private use section or <code>null</code>."
				},
				{
					"name": "getPrivateUseSubtags",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "the tokens of the private use section"
					},
					"description": "Get the locale private use section as an array of tokens.\n\nThe leading singleton and the separating dashes are not part of the result.\nIf there is no private use section in the locale tag, an empty array is returned."
				},
				{
					"name": "getRegion",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the ISO3166-1 region code (2-letter or 3-digits)"
					},
					"description": "Get the locale region or <code>null</code> if none was specified.\n\nNote that the case might differ from the original script tag\n(Upper case is enforced as recommended by BCP47/ISO3166-1)."
				},
				{
					"name": "getSAPLogonLanguage",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "a language code that should"
					},
					"since": "1.17.0",
					"description": "Best guess to get a proper SAP Logon Language for this locale.\n\nConversions taken into account:\n<ul>\n<li>use the language part only</li>\n<li>convert old ISO639 codes to newer ones (e.g. 'iw' to 'he')</li>\n<li>for Chinese, map 'Traditional Chinese' to SAP proprietary code 'zf'</li>\n<li>map private extensions x-sap1q and x-sap2q to SAP pseudo languages '1Q' and '2Q'</li>\n<li>remove ext. language sub tags</li>\n<li>convert to uppercase</li>\n</ul>\n\nNote that the conversion also returns a result for languages that are not\nsupported by the default set of SAP languages. This method has no knowledge\nabout the concrete languages of any given backend system.",
					"deprecated": {
						"since": "1.44",
						"text": "use {@link sap.ui.core.Configuration#getSAPLogonLanguage} instead\n  as that class allows to configure a SAP Logon language."
					}
				},
				{
					"name": "getScript",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the script code or null"
					},
					"description": "Get the locale script or <code>null</code> if none was specified.\n\nNote that the case might differ from the original language tag\n(Upper case first letter and lower case reminder enforced as\nrecommended by BCP47/ISO15924)"
				},
				{
					"name": "getVariant",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the variant or null"
					},
					"description": "Get the locale variants as a single string or <code>null</code>.\n\nMultiple variants are separated by a dash '-'."
				},
				{
					"name": "getVariantSubtags",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "the individual variant sections"
					},
					"description": "Get the locale variants as an array of individual variants.\n\nThe separating dashes are not part of the result.\nIf there is no variant section in the locale tag, an empty array is returned."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.LocaleData",
			"basename": "LocaleData",
			"resource": "sap/ui/core/LocaleData.js",
			"module": "sap/ui/core/LocaleData",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Provides access to locale-specific data, like date formats, number formats, currencies, etc.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oLocale",
						"type": "sap.ui.core.Locale",
						"optional": false,
						"description": "the locale"
					}
				],
				"description": "Creates an instance of LocaleData for the given locale."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.LocaleData with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getCalendarWeek",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the week number string"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sStyle",
							"type": "string",
							"optional": false,
							"description": "the style of the pattern. It can only be either \"wide\" or \"narrow\"."
						},
						{
							"name": "iWeekNumber",
							"type": "number",
							"optional": false,
							"description": "the week number"
						}
					],
					"description": "Returns the defined pattern for representing the calendar week number."
				},
				{
					"name": "getCombinedDateTimePattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the combined datetime pattern"
					},
					"parameters": [
						{
							"name": "sDateStyle",
							"type": "string",
							"optional": false,
							"description": "the required style for the date part"
						},
						{
							"name": "sTimeStyle",
							"type": "string",
							"optional": false,
							"description": "the required style for the time part"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get combined datetime pattern with given date and and time style."
				},
				{
					"name": "getCombinedIntervalPattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the calculated interval pattern"
					},
					"since": "1.46",
					"parameters": [
						{
							"name": "sPattern",
							"type": "string",
							"optional": false,
							"description": "the single date pattern to use within the interval pattern"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get combined interval pattern using a given pattern and the fallback interval pattern.\n\nIf a skeleton based pattern is not available or not wanted, this method can be used to create an interval\npattern based on a given pattern, using the fallback interval pattern."
				},
				{
					"name": "getCurrencyCodeBySymbol",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The corresponded currency code defined for the given currency symbol. The given currency symbol is returned if no currency code can be found by using the given currency symbol."
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "sCurrencySymbol",
							"type": "string",
							"optional": false,
							"description": "The currency symbol which needs to be converted to currency code"
						}
					],
					"description": "Returns the currency code which is corresponded with the given currency symbol."
				},
				{
					"name": "getCurrencyDigits",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "digits of the currency"
					},
					"since": "1.21.1",
					"parameters": [
						{
							"name": "sCurrency",
							"type": "string",
							"optional": false,
							"description": "ISO 4217 currency code"
						}
					],
					"description": "Returns the number of digits of the specified currency."
				},
				{
					"name": "getCurrencyPattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The pattern"
					},
					"parameters": [
						{
							"name": "sContext",
							"type": "string",
							"optional": false,
							"description": "the context of the currency pattern (standard or accounting)"
						}
					],
					"description": "Get currency format pattern."
				},
				{
					"name": "getCurrencySymbol",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the currency symbol"
					},
					"since": "1.21.1",
					"parameters": [
						{
							"name": "sCurrency",
							"type": "string",
							"optional": false,
							"description": "ISO 4217 currency code"
						}
					],
					"description": "Returns the currency symbol for the specified currency, if no symbol is found the ISO 4217 currency code is returned."
				},
				{
					"name": "getCustomDateTimePattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the best matching datetime pattern"
					},
					"since": "1.34",
					"parameters": [
						{
							"name": "sSkeleton",
							"type": "string",
							"optional": false,
							"description": "the wanted skeleton format for the datetime pattern"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get custom datetime pattern for a given skeleton format.\n\nThe format string does contain pattern symbols (e.g. \"yMMMd\" or \"Hms\") and will be converted into the pattern in the used\nlocale, which matches the wanted symbols best. The symbols must be in canonical order, that is:\nEra (G), Year (y/Y), Quarter (q/Q), Month (M/L), Week (w/W), Day-Of-Week (E/e/c), Day (d/D),\nHour (h/H/k/K/), Minute (m), Second (s), Timezone (z/Z/v/V/O/X/x)\n\nSee http://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems"
				},
				{
					"name": "getCustomIntervalPattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the best matching interval pattern"
					},
					"since": "1.46",
					"parameters": [
						{
							"name": "sSkeleton",
							"type": "string",
							"optional": false,
							"description": "the wanted skeleton format for the datetime pattern"
						},
						{
							"name": "sGreatestDiff",
							"type": "string",
							"optional": false,
							"description": "the symbol matching the greatest difference in the two dates to format"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get interval pattern for a given skeleton format.\n\nThe format string does contain pattern symbols (e.g. \"yMMMd\" or \"Hms\") and will be converted into the pattern in the used\nlocale, which matches the wanted symbols best. The symbols must be in canonical order, that is:\nEra (G), Year (y/Y), Quarter (q/Q), Month (M/L), Week (w/W), Day-Of-Week (E/e/c), Day (d/D),\nHour (h/H/k/K/), Minute (m), Second (s), Timezone (z/Z/v/V/O/X/x)\n\nSee http://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems"
				},
				{
					"name": "getDatePattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the selected date pattern"
					},
					"parameters": [
						{
							"name": "sStyle",
							"type": "string",
							"optional": false,
							"description": "the required style for the date pattern"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get date pattern in format \"short\", \"medium\", \"long\" or \"full\"."
				},
				{
					"name": "getDateTimePattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the selected datetime pattern"
					},
					"parameters": [
						{
							"name": "sStyle",
							"type": "string",
							"optional": false,
							"description": "the required style for the datetime pattern"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get datetime pattern in style \"short\", \"medium\", \"long\" or \"full\"."
				},
				{
					"name": "getDayPeriods",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "array of day periods (AM, PM)"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "the required width for the day period names"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get day periods in width \"narrow\", \"abbreviated\" or \"wide\"."
				},
				{
					"name": "getDayPeriodsStandAlone",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "array of day periods (AM, PM)"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "the required width for the day period names"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get standalone day periods in width \"narrow\", \"abbreviated\" or \"wide\"."
				},
				{
					"name": "getDays",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "array of day names (starting with Sunday)"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "the required width for the day names"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get day names in width \"narrow\", \"abbreviated\" or \"wide\"."
				},
				{
					"name": "getDaysStandAlone",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "array of day names (starting with Sunday)"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "the required width for the day names"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get stand alone day names in width \"narrow\", \"abbreviated\" or \"wide\"."
				},
				{
					"name": "getDecimalFormat",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "decimal format"
					},
					"since": "1.25.0",
					"parameters": [
						{
							"name": "sStyle",
							"type": "string",
							"optional": false,
							"description": "short or long"
						},
						{
							"name": "sNumber",
							"type": "string",
							"optional": false,
							"description": "1000, 10000 ..."
						},
						{
							"name": "sPlural",
							"type": "string",
							"optional": false,
							"description": "one or other (if not exists other is used)"
						}
					],
					"description": "Returns the short decimal formats (like 1K, 1M....)."
				},
				{
					"name": "getDecimalPattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The pattern"
					},
					"description": "Get decimal format pattern."
				},
				{
					"name": "getDisplayName",
					"visibility": "public",
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "Type (second, minute, hour, day, week, month, year)"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\"\nreturns {string} display name"
						}
					],
					"description": "Returns the display name for a time unit (second, minute, hour, day, week, month, year)."
				},
				{
					"name": "getEraDates",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "the array of eras containing objects with either an _end or _start property with a date"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar"
						}
					],
					"description": "Returns the map of era IDs to era dates."
				},
				{
					"name": "getEras",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "the array of eras"
					},
					"since": "1.32.0",
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "the style of the era name. It can be 'wide', 'abbreviated' or 'narrow'"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar"
						}
					],
					"description": "Returns array of eras."
				},
				{
					"name": "getFirstDayOfWeek",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "first day of week"
					},
					"description": "Returns the day that usually is regarded as the first day\nof a week in the current locale.\n\nDays are encoded as integer where Sunday=0, Monday=1 etc.\n\nAll week data information in the CLDR is provided for territories (countries).\nIf the locale of this LocaleData doesn't contain country information (e.g. if it\ncontains only a language), then the \"likelySubtag\" information of the CLDR\nis taken into account to guess the \"most likely\" territory for the locale."
				},
				{
					"name": "getIntervalPattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "interval format string with placeholders {0} and {1}"
					},
					"since": "1.17.0",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Id of the interval format, e.g. \"d-d\""
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Returns the interval format with the given Id (see CLDR documentation for valid Ids)\nor the fallback format if no interval format with that Id is known.\n\nThe empty Id (\"\") might be used to retrieve the interval format fallback."
				},
				{
					"name": "getLanguages",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "map of locale specific language names"
					},
					"description": "Get locale specific language names."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.LocaleData."
				},
				{
					"name": "getMinimalDaysInFirstWeek",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "minimal number of days"
					},
					"description": "Returns the required minimal number of days for the first week of a year.\n\nThis is the minimal number of days of the week which must be contained in the new year\nfor the week to become the first week of the year. Depending on the country, this\nis just a single day (in the US) or at least 4 days (in most of Europe).\n\nAll week data information in the CLDR is provided for territories (countries).\nIf the locale of this LocaleData doesn't contain country information (e.g. if it\ncontains only a language), then the \"likelySubtag\" information of the CLDR\nis taken into account to guess the \"most likely\" territory for the locale."
				},
				{
					"name": "getMonths",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "array of month names (starting with January)"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "the required width for the month names"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get month names in width \"narrow\", \"abbreviated\" or \"wide\"."
				},
				{
					"name": "getMonthsStandAlone",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "array of month names (starting with January)"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "the required width for the month names"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get stand alone month names in width \"narrow\", \"abbreviated\" or \"wide\"."
				},
				{
					"name": "getNumberSymbol",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the selected number symbol"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "the required type of symbol"
						}
					],
					"description": "Get number symbol \"decimal\", \"group\", \"plusSign\", \"minusSign\", \"percentSign\"."
				},
				{
					"name": "getOrientation",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "character orientation for this locale"
					},
					"description": "Get orientation (left-to-right or right-to-left)."
				},
				{
					"name": "getPercentPattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The pattern"
					},
					"description": "Get percent format pattern."
				},
				{
					"name": "getPreferredCalendarType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CalendarType",
						"description": "the preferred calendar type"
					},
					"since": "1.28.6",
					"description": "Returns the preferred calendar type for the current locale which exists in {@link sap.ui.core.CalendarType}"
				},
				{
					"name": "getPreferredHourSymbol",
					"visibility": "public",
					"since": "1.34",
					"description": "Returns the preferred hour pattern symbol (h for 12, H for 24 hours) for the current locale.\n\nreturns {string} the preferred hour symbol"
				},
				{
					"name": "getQuarters",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "array of quarters"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "the required width for the quarter names"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get quarter names in width \"narrow\", \"abbreviated\" or \"wide\"."
				},
				{
					"name": "getQuartersStandAlone",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "array of quarters"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "string",
							"optional": false,
							"description": "the required width for the quarter names"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get stand alone quarter names in width \"narrow\", \"abbreviated\" or \"wide\"."
				},
				{
					"name": "getRelativeDay",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the relative day resource pattern"
					},
					"since": "1.25.0",
					"parameters": [
						{
							"name": "iDiff",
							"type": "int",
							"optional": false,
							"description": "the difference in days"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\""
						}
					],
					"description": "Returns the relative day resource pattern (like \"Today\", \"Yesterday\", \"{0} days ago\") based on the given\ndifference of days (0 means today, 1 means tommorrow, -1 means yesterday, ...)."
				},
				{
					"name": "getRelativeHour",
					"visibility": "public",
					"returnValue": {
						"type": "string|null",
						"description": "the relative resource pattern in unit 'hour'. The method returns null if 0 is given as parameter."
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "iDiff",
							"type": "int",
							"optional": false,
							"description": "the difference in hours"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\""
						}
					],
					"description": "Returns the relative resource pattern with unit 'hour' (like \"in {0} hour(s)\", \"{0} hour(s) ago\" under locale 'en') based on the given\ndifference value (positive value means in the future and negative value means in the past).\n\nThere's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeMinute or getRelativeSecond\nfunction to format the difference using unit 'minute' or 'second'."
				},
				{
					"name": "getRelativeMinute",
					"visibility": "public",
					"returnValue": {
						"type": "string|null",
						"description": "the relative resource pattern in unit 'minute'. The method returns null if 0 is given as parameter."
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "iDiff",
							"type": "int",
							"optional": false,
							"description": "the difference in minutes"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\""
						}
					],
					"description": "Returns the relative resource pattern with unit 'minute' (like \"in {0} minute(s)\", \"{0} minute(s) ago\" under locale 'en') based on the given\ndifference value (positive value means in the future and negative value means in the past).\n\nThere's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeSecond\nfunction to format the difference using unit 'second'."
				},
				{
					"name": "getRelativeMonth",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the relative month resource pattern"
					},
					"since": "1.25.0",
					"parameters": [
						{
							"name": "iDiff",
							"type": "int",
							"optional": false,
							"description": "the difference in months"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\""
						}
					],
					"description": "Returns the relative month resource pattern (like \"This month\", \"Last month\", \"{0} months ago\") based on the given\ndifference of months (0 means this month, 1 means next month, -1 means last month, ...)."
				},
				{
					"name": "getRelativePattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the relative format pattern"
					},
					"since": "1.34",
					"parameters": [
						{
							"name": "sScale",
							"type": "string",
							"optional": false,
							"description": "the scale the relative pattern is needed for"
						},
						{
							"name": "iDiff",
							"type": "int",
							"optional": false,
							"description": "the difference in the given scale unit"
						},
						{
							"name": "bFuture",
							"type": "boolean",
							"optional": true,
							"description": "whether a future or past pattern should be used"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\""
						}
					],
					"description": "Returns the relative format pattern with given scale (year, month, week, ...) and difference value."
				},
				{
					"name": "getRelativePatterns",
					"visibility": "public",
					"returnValue": {
						"type": "object[]",
						"description": "An array of all relative time patterns"
					},
					"since": "1.34",
					"parameters": [
						{
							"name": "aScales",
							"type": "string[]",
							"optional": false,
							"description": "The scales for which the available patterns should be returned"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 The style of the scale patterns. The valid values are \"wide\", \"short\" and \"narrow\"."
						}
					],
					"description": "Returns relative time patterns for the given scales as an array of objects containing scale, value and pattern.\n\nThe array may contain the following values: \"year\", \"month\", \"week\", \"day\", \"hour\", \"minute\" and \"second\". If\nno scales are given, patterns for all available scales will be returned.\n\nThe return array will contain objects looking like:\n<pre>\n{\n    scale: \"minute\",\n    sign: 1,\n    pattern: \"in {0} minutes\"\n}\n</pre>"
				},
				{
					"name": "getRelativeSecond",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the relative resource pattern in unit 'second'"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "iDiff",
							"type": "int",
							"optional": false,
							"description": "the difference in seconds"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\""
						}
					],
					"description": "Returns the relative resource pattern with unit 'second' (like now, \"in {0} seconds\", \"{0} seconds ago\" under locale 'en') based on the given\ndifference value (0 means now, positive value means in the future and negative value means in the past)."
				},
				{
					"name": "getRelativeWeek",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the relative week resource pattern"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "iDiff",
							"type": "int",
							"optional": false,
							"description": "the difference in weeks"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\""
						}
					],
					"description": "Returns the relative week resource pattern (like \"This week\", \"Last week\", \"{0} weeks ago\") based on the given\ndifference of weeks (0 means this week, 1 means next week, -1 means last week, ...)."
				},
				{
					"name": "getRelativeYear",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the relative year resource pattern"
					},
					"since": "1.25.0",
					"parameters": [
						{
							"name": "iDiff",
							"type": "int",
							"optional": false,
							"description": "the difference in years"
						},
						{
							"name": "sStyle",
							"type": "string",
							"optional": true,
							"defaultValue": "\"wide\"",
							"description": "@since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\""
						}
					],
					"description": "Returns the relative year resource pattern (like \"This year\", \"Last year\", \"{0} year ago\") based on the given\ndifference of years (0 means this year, 1 means next year, -1 means last year, ...)."
				},
				{
					"name": "getScripts",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "map of locale specific script names"
					},
					"description": "Get locale specific script names."
				},
				{
					"name": "getTerritories",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "map of locale specific territory names"
					},
					"description": "Get locale specific territory names."
				},
				{
					"name": "getTimePattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the selected time pattern"
					},
					"parameters": [
						{
							"name": "sStyle",
							"type": "string",
							"optional": false,
							"description": "the required style for the date pattern"
						},
						{
							"name": "sCalendarType",
							"type": "sap.ui.core.CalendarType",
							"optional": true,
							"description": "the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."
						}
					],
					"description": "Get time pattern in style \"short\", \"medium\", \"long\" or \"full\"."
				},
				{
					"name": "getWeekendEnd",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "last day of weekend"
					},
					"description": "Returns the last day of a weekend for the given locale.\n\nDays are encoded in the same way as for {@link #getFirstDayOfWeek}.\n\nAll week data information in the CLDR is provided for territories (countries).\nIf the locale of this LocaleData doesn't contain country information (e.g. if it\ncontains only a language), then the \"likelySubtag\" information of the CLDR\nis taken into account to guess the \"most likely\" territory for the locale."
				},
				{
					"name": "getWeekendStart",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "first day of weekend"
					},
					"description": "Returns the first day of a weekend for the given locale.\n\nDays are encoded in the same way as for {@link #getFirstDayOfWeek}.\n\nAll week data information in the CLDR is provided for territories (countries).\nIf the locale of this LocaleData doesn't contain country information (e.g. if it\ncontains only a language), then the \"likelySubtag\" information of the CLDR\nis taken into account to guess the \"most likely\" territory for the locale."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Manifest",
			"basename": "Manifest",
			"resource": "sap/ui/core/Manifest.js",
			"module": "sap/ui/core/Manifest",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.33.0",
			"extends": "sap.ui.base.Object",
			"description": "The Manifest class.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oManifest",
						"type": "object",
						"optional": false,
						"description": "the manifest object"
					},
					{
						"name": "mOptions",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"componentName": {
								"name": "componentName",
								"type": "string",
								"optional": true,
								"description": "(optional) the name of the component"
							},
							"baseUrl": {
								"name": "baseUrl",
								"type": "string",
								"optional": true,
								"description": "(optional) the base URL which is used to resolve relative URLs against"
							},
							"process": {
								"name": "process",
								"type": "boolean",
								"optional": true,
								"defaultValue": true,
								"description": "(optional) Flag whether the manifest object should be processed or not\n           which means that the placeholders will be replaced with resource bundle values"
							}
						},
						"description": "(optional) the configuration options"
					}
				],
				"description": "Creates and initializes a manifest wrapper which provides API access to\nthe content of the manifest."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Manifest with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getComponentName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the component name"
					},
					"description": "Returns the Component name which is defined in the manifest as\n<code>sap.ui5/componentName</code> or <code>sap.app/id</code>"
				},
				{
					"name": "getEntry",
					"visibility": "public",
					"returnValue": {
						"type": "any|null",
						"description": "Value of the key (could be any kind of value)"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "Either the manifest section name (namespace) or a concrete path"
						}
					],
					"description": "Returns the configuration of a manifest section or the value for a\nspecific path. If no key is specified, the return value is null.\n\nExample:\n<code>\n  {\n    \"sap.ui5\": {\n      \"dependencies\": {\n        \"libs\": {\n          \"sap.m\": {}\n        },\n        \"components\": {\n          \"my.component.a\": {}\n        }\n      }\n  });\n</code>\n\nThe configuration above can be accessed in the following ways:\n<ul>\n<li><b>By section/namespace</b>: <code>oManifest.getEntry(\"sap.ui5\")</code></li>\n<li><b>By path</b>: <code>oManifest.getEntry(\"/sap.ui5/dependencies/libs\")</code></li>\n</ul>\n\nBy section/namespace returns the configuration for the specified manifest\nsection and by path allows to specify a concrete path to a dedicated entry\ninside the manifest. The path syntax always starts with a slash (/)."
				},
				{
					"name": "getJson",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "manifest."
					},
					"description": "Returns the manifest defined in the metadata of the component.\nIf not specified, the return value is null."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Manifest."
				},
				{
					"name": "getRawJson",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "manifest"
					},
					"description": "Returns the raw manifest defined in the metadata of the component.\nIf not specified, the return value is null."
				},
				{
					"name": "load",
					"visibility": "protected",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.Manifest|Promise",
						"description": "Manifest object or for asynchronous calls an ECMA Script 6 Promise object will be returned."
					},
					"parameters": [
						{
							"name": "mOptions",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"manifestUrl": {
									"name": "manifestUrl",
									"type": "string",
									"optional": false,
									"description": "URL of the manifest"
								},
								"componentName": {
									"name": "componentName",
									"type": "string",
									"optional": true,
									"description": "name of the component"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"description": "Flag whether to load the manifest async or not (defaults to false)"
								},
								"failOnError": {
									"name": "failOnError",
									"type": "boolean",
									"optional": true,
									"description": "Flag whether to fail if an error occurs or not (defaults to true)"
								}
							},
							"description": "the configuration options"
						}
					],
					"description": "Function to load the manifest by URL"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Message",
			"basename": "Message",
			"resource": "sap/ui/core/Message.js",
			"module": "sap/ui/core/Message",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "This element used to provide messages. Rendering must be done within the control that uses this kind of element.\n\nIts default level is none.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Message text",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "timestamp",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Message's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs.",
						"methods": [
							"getTimestamp",
							"setTimestamp"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A possible icon URI of the message",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "level",
						"type": "sap.ui.core.MessageType",
						"defaultValue": "None",
						"group": "Misc",
						"visibility": "public",
						"description": "Setting the message's level.",
						"methods": [
							"getLevel",
							"setLevel"
						]
					},
					{
						"name": "readOnly",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"since": "1.19.0",
						"description": "Determines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages.",
						"methods": [
							"getReadOnly",
							"setReadOnly"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Message.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "compareByType",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "returns <code>0</code> if both messages are at\n        the same level. <code>-1</code> if <code>this</code>\n        message has a lower level. <code>1</code> if <code>this</code>\n        message has a higher level."
					},
					"parameters": [
						{
							"name": "oOther",
							"type": "sap.ui.core.Message",
							"optional": false,
							"description": "message to compare with this one"
						}
					],
					"description": "Compares the given message with <code>this</code> message. The types of\n{@link sap.ui.core.MessageType} are ordered from \"Error\" > \"Warning\" > \"Success\" >\n\"Information\" > \"None\".\n\nSee  {@link sap.ui.core.Message.compareByType}"
				},
				{
					"name": "compareByType",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "int",
						"description": "returns <code>0</code> if both messages are at\n        the same level. <code>-1</code> if <code>this</code>\n        message has a lower level. <code>1</code> if <code>this</code>\n        message has a higher level."
					},
					"parameters": [
						{
							"name": "oMessage1",
							"type": "sap.ui.core.Message",
							"optional": false,
							"description": "first message to compare"
						},
						{
							"name": "oMessage2",
							"type": "sap.ui.core.Message",
							"optional": false,
							"description": "second message to compare"
						}
					],
					"description": "Compares two given messages with each other.\n\nThe types of {@link sap.ui.core.MessageType} are ordered from \"Error\" > \"Warning\" > \"Success\" >\n\"Information\" > \"None\"."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Message with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getDefaultIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "URI of the default icon."
					},
					"parameters": [
						{
							"name": "sSize",
							"type": "string",
							"optional": false,
							"description": "If parameter is not set the default icon's size will be 16x16. If parameter\n        is set to \"32x32\" the icon size will be 32x32."
						}
					],
					"description": "Returns the icon's default URI depending on given size.\n\nThere are default icons for messages available that can be used this way. If no\nparameter is given, the size will be 16x16 per default. If larger icons are needed,\nthe parameter \"32x32\" might be given."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\r\rA possible icon URI of the message"
				},
				{
					"name": "getLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.MessageType",
						"description": "Value of property <code>level</code>"
					},
					"description": "Gets current value of property <code>level</code>.\r\rSetting the message's level.\r\rDefault value is <code>None</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Message."
				},
				{
					"name": "getReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>readOnly</code>"
					},
					"since": "1.19.0",
					"description": "Gets current value of property <code>readOnly</code>.\r\rDetermines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rMessage text"
				},
				{
					"name": "getTimestamp",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>timestamp</code>"
					},
					"description": "Gets current value of property <code>timestamp</code>.\r\rMessage's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\r\rA possible icon URI of the message\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLevel",
							"type": "sap.ui.core.MessageType",
							"optional": false,
							"description": "New value for property <code>level</code>"
						}
					],
					"description": "Sets a new value for property <code>level</code>.\r\rSetting the message's level.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>None</code>."
				},
				{
					"name": "setReadOnly",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.19.0",
					"parameters": [
						{
							"name": "bReadOnly",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>readOnly</code>"
						}
					],
					"description": "Sets a new value for property <code>readOnly</code>.\r\rDetermines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rMessage text\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTimestamp",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTimestamp",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>timestamp</code>"
						}
					],
					"description": "Sets a new value for property <code>timestamp</code>.\r\rMessage's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.message",
			"basename": "message",
			"resource": "sap/ui/core/message/MessageProcessor.js",
			"module": "sap/ui/core/message/MessageProcessor",
			"static": true,
			"visibility": "public"
		},
		{
			"kind": "class",
			"name": "sap.ui.core.message.ControlMessageProcessor",
			"basename": "ControlMessageProcessor",
			"resource": "sap/ui/core/message/ControlMessageProcessor.js",
			"module": "sap/ui/core/message/ControlMessageProcessor",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.message.MessageProcessor",
			"description": "The ControlMessageProcessor implementation.\nThis MessageProcessor is able to handle Messages with the following target syntax:\n\t\t'ControlID/PropertyName'\nCreating an instance of this class using the \"new\" keyword always results in the same instance (Singleton).",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a new ControlMessageProcessor"
			},
			"methods": [
				{
					"name": "checkMessages",
					"visibility": "protected",
					"description": "Check Messages and update controls with messages"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.message.ControlMessageProcessor with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageProcessor.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.message.ControlMessageProcessor."
				},
				{
					"name": "setMessages",
					"visibility": "protected",
					"parameters": [
						{
							"name": "vMessages",
							"type": "map",
							"optional": false,
							"description": "map of messages: {'target': [array of messages],...}"
						}
					],
					"description": "Set Messages to check"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.message.Message",
			"basename": "Message",
			"resource": "sap/ui/core/message/Message.js",
			"module": "sap/ui/core/message/Message",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"id": {
								"name": "id",
								"type": "string",
								"optional": true,
								"description": "The message id: will be defaulted if no id is set"
							},
							"message": {
								"name": "message",
								"type": "string",
								"optional": true,
								"description": "The message text"
							},
							"description": {
								"name": "description",
								"type": "string",
								"optional": true,
								"description": "The message description"
							},
							"additionalText": {
								"name": "additionalText",
								"type": "string",
								"optional": true,
								"description": "The message additionalText"
							},
							"type": {
								"name": "type",
								"type": "sap.ui.core.MessageType",
								"optional": true,
								"description": "The message type"
							},
							"code": {
								"name": "code",
								"type": "string",
								"optional": true,
								"description": "The message code"
							},
							"processor": {
								"name": "processor",
								"type": "sap.ui.core.message.MessageProcessor",
								"optional": true
							},
							"target": {
								"name": "target",
								"type": "string",
								"optional": true,
								"description": "The message target: The syntax MessageProcessor dependent. Read the documentation of the respective MessageProcessor."
							},
							"persistent": {
								"name": "persistent",
								"type": "boolean",
								"optional": true,
								"description": "Sets message persistent: If persistent is set <code>true</code> the message lifecycle controlled by the application"
							},
							"date": {
								"name": "date",
								"type": "int",
								"optional": true,
								"defaultValue": "Date.now()",
								"description": "Sets message date which can be used to remove old messages. Number of milliseconds elapsed since 1 January 1970 00:00:00 UTC"
							}
						},
						"description": "(optional) a map which contains the following parameter properties:"
					}
				],
				"description": "Constructor for a new Message."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.message.Message with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.message.Message."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.message.MessageManager",
			"basename": "MessageManager",
			"resource": "sap/ui/core/message/MessageManager.js",
			"module": "sap/ui/core/message/MessageManager",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a new MessageManager."
			},
			"methods": [
				{
					"name": "addMessages",
					"visibility": "public",
					"parameters": [
						{
							"name": "vMessages",
							"type": "sap.ui.core.message.Message|sap.ui.core.message.Message[]",
							"optional": false,
							"description": "Array of sap.ui.core.message.Message or single sap.ui.core.message.Message"
						}
					],
					"description": "Add messages to MessageManager"
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "destroy MessageManager",
					"deprecated": {}
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.message.MessageManager with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "getMessageModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.message.MessageModel",
						"description": "oMessageModel The Message Model"
					},
					"description": "Get the MessageModel"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.message.MessageManager."
				},
				{
					"name": "registerMessageProcessor",
					"visibility": "public",
					"parameters": [
						{
							"name": "oProcessor",
							"type": "sap.ui.core.message.MessageProcessor",
							"optional": false,
							"description": "The MessageProcessor"
						}
					],
					"description": "Register MessageProcessor"
				},
				{
					"name": "registerObject",
					"visibility": "public",
					"parameters": [
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject",
							"optional": false,
							"description": "The sap.ui.base.ManagedObject"
						},
						{
							"name": "bHandleValidation",
							"type": "boolean",
							"optional": false,
							"description": "Handle validation for this object. If set to true validation/parse events creates Messages and cancel event.\n\t\t\t\t\tIf set to false only the event will be canceled, but no messages will be created"
						}
					],
					"description": "Register ManagedObject: Validation and Parse errors are handled by the MessageManager for this object"
				},
				{
					"name": "removeAllMessages",
					"visibility": "public",
					"description": "Remove all messages"
				},
				{
					"name": "removeMessages",
					"visibility": "public",
					"parameters": [
						{
							"name": "vMessages",
							"type": "sap.ui.core.message.Message|sap.ui.core.message.Message[]",
							"optional": false,
							"description": "The message(s) to be removed."
						}
					],
					"description": "Remove given Messages"
				},
				{
					"name": "unregisterMessageProcessor",
					"visibility": "public",
					"parameters": [
						{
							"name": "oProcessor",
							"type": "sap.ui.core.message.MessageProcessor",
							"optional": false,
							"description": "The MessageProcessor"
						}
					],
					"description": "Deregister MessageProcessor"
				},
				{
					"name": "unregisterObject",
					"visibility": "public",
					"parameters": [
						{
							"name": "oObject",
							"type": "sap.ui.base.ManagedObject",
							"optional": false,
							"description": "The sap.ui.base.ManagedObject"
						}
					],
					"description": "Unregister ManagedObject"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.message.MessageParser",
			"basename": "MessageParser",
			"resource": "sap/ui/core/message/MessageParser.js",
			"module": "sap/ui/core/message/MessageParser",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "This is an abstract base class for MessageParser objects.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Abstract MessageParser class to be inherited in back-end specific implementations."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.message.MessageParser with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.message.MessageParser."
				},
				{
					"name": "getProcessor",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.message.MessageProcessor",
						"description": "The currently set MessageProcessor or null if none is set"
					},
					"description": "Returns the registered processor on which the events for message handling can be fired"
				},
				{
					"name": "parse",
					"visibility": "public",
					"description": "Abstract parse method must be implemented in the inheriting class."
				},
				{
					"name": "setProcessor",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.message.MessageParser",
						"description": "Instance reference for method chaining"
					},
					"parameters": [
						{
							"name": "oProcessor",
							"type": "sap.ui.core.message.MessageProcessor",
							"optional": false,
							"description": "The MessageProcessor that can be used to fire events"
						}
					],
					"description": "This method is used by the model to register itself as MessageProcessor for this parser"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.message.MessageProcessor",
			"basename": "MessageProcessor",
			"resource": "sap/ui/core/message/MessageProcessor.js",
			"module": "sap/ui/core/message/MessageProcessor",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"description": "This is an abstract base class for MessageProcessor objects.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a new MessageProcessor"
			},
			"methods": [
				{
					"name": "attachMessageChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.message.MessageProcessor",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this MessageProcessor is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'messageChange' event of this <code>sap.ui.core.message.MessageProcessor</code>.<br/>"
				},
				{
					"name": "checkMessage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding"
					},
					"description": "Implement in inheriting classes"
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Destroys the MessageProcessor Instance"
				},
				{
					"name": "detachMessageChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.message.MessageProcessor",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'sap.ui.core.message.MessageProcessor' event of this <code>sap.ui.core.message.MessageProcessor</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.message.MessageProcessor with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireMessageChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.message.MessageProcessor",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event messageChange to attached listeners."
				},
				{
					"name": "getId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "sId The MessageProcessor ID"
					},
					"description": "Returns the ID of the MessageProcessor instance"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.message.MessageProcessor."
				},
				{
					"name": "setMessages",
					"visibility": "public",
					"parameters": [
						{
							"name": "vMessages",
							"type": "map",
							"optional": false,
							"description": "map of messages: {'target': [array of messages],...}"
						}
					],
					"description": "Implement in inheriting classes"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.MessageType",
			"basename": "MessageType",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "MessageType",
			"static": true,
			"visibility": "public",
			"description": "Defines the different message types of a message",
			"properties": [
				{
					"name": "Error",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Message is an error"
				},
				{
					"name": "Information",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Message should be just an information"
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Message has no specific level"
				},
				{
					"name": "Success",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Message is an success message"
				},
				{
					"name": "Warning",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Message is a warning"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.mvc",
			"basename": "mvc",
			"resource": "sap/ui/core/mvc/View.js",
			"module": "sap/ui/core/mvc/View",
			"static": true,
			"visibility": "public"
		},
		{
			"kind": "class",
			"name": "sap.ui.core.mvc.Controller",
			"basename": "Controller",
			"resource": "sap/ui/core/mvc/Controller.js",
			"module": "sap/ui/core/mvc/Controller",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"description": "A generic controller implementation for the UI5 Model-View-Controller concept.\n\nCan either be used as a generic controller which is enriched on the fly with methods\nand properties (see {@link sap.ui.controller}) or  as a base class for typed controllers.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sName",
						"type": "string|object[]",
						"optional": false,
						"description": "The name of the controller to instantiate. If a controller is defined as real sub-class,\n                                  the \"arguments\" of the sub-class constructor should be given instead."
					}
				],
				"description": "Instantiates a (MVC-style) controller. Consumers should call the constructor only in the\ntyped controller scenario. In the generic controller use case, they should use\n{@link sap.ui.controller} instead."
			},
			"methods": [
				{
					"name": "byId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "Element by its (view local) ID"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "View-local ID"
						}
					],
					"description": "Returns an Element of the connected view with the given local ID.\n\nViews automatically prepend their own ID as a prefix to created Elements\nto make the IDs unique even in the case of multiple view instances.\nThis method helps to find an element by its local ID only.\n\nIf no view is connected or if the view doesn't contain an element with\nthe given local ID, undefined is returned."
				},
				{
					"name": "createId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Prefixed ID"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "View-local ID"
						}
					],
					"description": "Converts a view local ID to a globally unique one by prepending\nthe view ID.\n\nIf no view is connected, undefined is returned."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.mvc.Controller with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.mvc.Controller."
				},
				{
					"name": "getOwnerComponent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Component",
						"description": "Component instance"
					},
					"since": "1.23.0",
					"description": "Gets the component of the controller's view\n\nIf there is no Component connected to the view or the view is not connected to the controller,\nundefined is returned."
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "View connected to this controller."
					},
					"description": "Returns the view associated with this controller or undefined."
				},
				{
					"name": "onAfterRendering",
					"visibility": "protected",
					"description": "This method is called every time the View is rendered, after the HTML is placed in the DOM-Tree. It can be\nused to apply additional changes to the DOM after the Renderer has finished.\n(Even though this method is declared as \"abstract\", it does not need to be defined in controllers, if the\nmethod does not exist, it will simply not be called.)"
				},
				{
					"name": "onBeforeRendering",
					"visibility": "protected",
					"description": "This method is called every time the View is rendered, before the Renderer is called and the HTML is placed in\nthe DOM-Tree. It can be used to perform clean-up-tasks before re-rendering.\n(Even though this method is declared as \"abstract\", it does not need to be defined in controllers, if the\nmethod does not exist, it will simply not be called.)"
				},
				{
					"name": "onExit",
					"visibility": "protected",
					"description": "This method is called upon desctuction of the View. The controller should perform its internal destruction in\nthis hook. It is only called once per View instance, unlike the onBeforeRendering and onAfterRendering\nhooks.\n(Even though this method is declared as \"abstract\", it does not need to be defined in controllers, if the\nmethod does not exist, it will simply not be called.)"
				},
				{
					"name": "onInit",
					"visibility": "protected",
					"description": "This method is called upon initialization of the View. The controller can perform its internal setup in\nthis hook. It is only called once per View instance, unlike the onBeforeRendering and onAfterRendering\nhooks.\n(Even though this method is declared as \"abstract\", it does not need to be defined in controllers, if the\nmethod does not exist, it will simply not be called.)"
				},
				{
					"name": "registerExtensionProvider",
					"visibility": "public",
					"static": true,
					"since": "1.34.0",
					"parameters": [
						{
							"name": "sExtensionProvider",
							"type": "string",
							"optional": false,
							"description": "the module name of the extension provider\n\nSee {@link sap.ui.controller} for an overview of the available functions for controllers."
						}
					],
					"description": "Registers a callback module, which provides code enhancements for the\nlifecycle and event handler functions of a specific controller. The code\nenhancements are returned either in sync or async mode.\n\nThe extension provider module provides the <code>getControllerExtensions</code> function\nwhich returns either directly an array of objects or a Promise that returns an array\nof objects when it resolves. These objects are object literals defining the\nmethods and properties of the controller in a similar way as {@link sap.ui.controller}.\n\n\n<b>Example for a callback module definition (sync):</b>\n<pre>\nsap.ui.define(\"my/custom/sync/ExtensionProvider\", ['jquery.sap.global'], function(jQuery) {\n  var ExtensionProvider = function() {};\n  ExtensionProvider.prototype.getControllerExtensions = function(sControllerName, sComponentId, bAsync) {\n    if (!bAsync && sControllerName == \"my.own.Controller\") {\n      // IMPORTANT: only return extensions for a specific controller\n      return [{\n        onInit: function() {\n          // Do something here...\n        },\n        onAfterRendering: function() {\n          // Do something here...\n        },\n        onButtonClick: function(oEvent) {\n          // Handle the button click event\n        }\n      }\n    }];\n  };\n  return ExtensionProvider;\n}, true);\n</pre>\n\n\n<b>Example for a callback module definition (async):</b>\n<pre>\nsap.ui.define(\"my/custom/async/ExtensionProvider\", ['jquery.sap.global'], function(jQuery) {\n  var ExtensionProvider = function() {};\n  ExtensionProvider.prototype.getControllerExtensions = function(sControllerName, sComponentId, bAsync) {\n    if (bAsync && sControllerName == \"my.own.Controller\") {\n      // IMPORTANT:\n      // only return a Promise for a specific controller since it\n      // requires the View/Controller and its parents to run in async\n      // mode!\n      return new Promise(function(fnResolve, fnReject) {\n        fnResolve([{\n          onInit: function() {\n            // Do something here...\n          },\n          onAfterRendering: function() {\n            // Do something here...\n          },\n          onButtonClick: function(oEvent) {\n            // Handle the button click event\n          }\n        }]);\n      }\n    };\n  };\n  return ExtensionProvider;\n}, true);\n</pre>\n\n\nThe lifecycle functions <code>onInit</code>, <code>onExit</code>,\n<code>onBeforeRendering</code> and <code>onAfterRendering</code>\nare added before or after the lifecycle functions of the original\ncontroller. The event handler functions, such as <code>onButtonClick</code>,\nare replacing the original controller's function.\n\nWhen using an async extension provider you need to ensure that the\nview is loaded in async mode.\n\nIn both cases, return <code>undefined</code> if no controller extension shall be applied."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.mvc.HTMLView",
			"basename": "HTMLView",
			"resource": "sap/ui/core/mvc/HTMLView.js",
			"module": "sap/ui/core/mvc/HTMLView",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.9.2",
			"extends": "sap.ui.core.mvc.View",
			"description": "A view defined/constructed by declarative HTML.",
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new mvc/HTMLView."
			},
			"properties": [
				{
					"name": "asyncSupport",
					"visibility": "public",
					"static": true,
					"since": "1.30",
					"type": "undefined",
					"description": "Flag for feature detection of asynchronous loading/rendering"
				}
			],
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.mvc.HTMLView with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.mvc.HTMLView."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.mvc.JSONView",
			"basename": "JSONView",
			"resource": "sap/ui/core/mvc/JSONView.js",
			"module": "sap/ui/core/mvc/JSONView",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.mvc.View",
			"description": "A View defined using JSON.",
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new mvc/JSONView."
			},
			"properties": [
				{
					"name": "asyncSupport",
					"visibility": "public",
					"static": true,
					"since": "1.30",
					"type": "undefined",
					"description": "Flag for feature detection of asynchronous loading/rendering"
				}
			],
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.mvc.JSONView with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.mvc.JSONView."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.mvc.JSView",
			"basename": "JSView",
			"resource": "sap/ui/core/mvc/JSView.js",
			"module": "sap/ui/core/mvc/JSView",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.mvc.View",
			"description": "A View defined/constructed by JavaScript code.",
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new mvc/JSView."
			},
			"properties": [
				{
					"name": "asyncSupport",
					"visibility": "public",
					"static": true,
					"since": "1.30",
					"type": "undefined",
					"description": "Flag for feature detection of asynchronous loading/rendering"
				}
			],
			"methods": [
				{
					"name": "createContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "a control or (typically) tree of controls representing the View user interface"
					},
					"description": "A method to be implemented by JSViews, returning the View UI.\nWhile for declarative View types like XMLView or JSONView the user interface definition is declared in a separate file,\nJSViews programmatically construct the UI. This happens in the createContent method which every JSView needs to implement.\nThe View implementation can construct the complete UI in this method - or only return the root control and create the rest of the UI lazily later on."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.mvc.JSView with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}."
				},
				{
					"name": "getAutoPrefixId",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "true, if the controls IDs should be prefixed automatically"
					},
					"since": "1.15.1",
					"description": "A method to be implemented by JSViews, returning the flag whether to prefix\nthe IDs of controls automatically or not if the controls are created inside\nthe {@link sap.ui.core.mvc.JSView#createContent} function. By default this\nfeature is not activated.\n\nYou can overwrite this function and return true to activate the automatic\nprefixing."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.mvc.JSView."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.mvc.TemplateView",
			"basename": "TemplateView",
			"resource": "sap/ui/core/mvc/TemplateView.js",
			"module": "sap/ui/core/mvc/TemplateView",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.16.0",
			"extends": "sap.ui.core.mvc.View",
			"description": "A view defined in a template.",
			"ui5-metadata": {
				"stereotype": "control"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new mvc/TemplateView."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.mvc.TemplateView with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.mvc.TemplateView."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.mvc.View",
			"basename": "View",
			"resource": "sap/ui/core/mvc/View.js",
			"module": "sap/ui/core/mvc/View",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "A base class for Views.\n\nIntroduces the relationship to a Controller, some basic visual appearance settings like width and height\nand provides lifecycle events.",
			"ui5-metadata": {
				"stereotype": "control",
				"specialSettings": [
					{
						"name": "controller",
						"type": "sap.ui.core.mvc.Controller",
						"visibility": "public",
						"description": "Controller instance to use for this view."
					},
					{
						"name": "controllerName",
						"type": "string",
						"visibility": "public",
						"description": "Name of the controller class to use for this view.\nIf given, it overrides the same information in the view definition (XML, HTML)."
					},
					{
						"name": "preprocessors",
						"type": "Object",
						"visibility": "public",
						"description": "Preprocessors that the view can use before constructing the view."
					},
					{
						"name": "resourceBundleName",
						"type": "string",
						"visibility": "public",
						"description": "(module) Name of a resource bundle that should be loaded for this view"
					},
					{
						"name": "resourceBundleUrl",
						"type": "sap.ui.core.URI",
						"visibility": "public",
						"description": "URL of a resource bundle that should be loaded for this view"
					},
					{
						"name": "resourceBundleLocale",
						"type": "string",
						"visibility": "public",
						"description": "Locale that should be used to load a resource bundle for this view"
					},
					{
						"name": "resourceBundleAlias",
						"type": "string",
						"visibility": "public",
						"description": "Model name under which the resource bundle should be stored."
					},
					{
						"name": "type",
						"type": "string",
						"visibility": "public",
						"description": "Type of the view"
					},
					{
						"name": "viewContent",
						"type": "any",
						"visibility": "public",
						"description": "A view definition"
					},
					{
						"name": "viewData",
						"type": "any",
						"visibility": "public",
						"description": "Additional configuration data that should be given to the view at construction time\nand which will be available early, even before model data or other constructor settings are applied."
					},
					{
						"name": "async",
						"type": "boolean",
						"visibility": "public",
						"since": "1.30",
						"description": "Determines initialization mode of the view"
					}
				],
				"properties": [
					{
						"name": "width",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": "100%",
						"group": "Dimension",
						"visibility": "public",
						"description": "The width",
						"methods": [
							"getWidth",
							"setWidth"
						]
					},
					{
						"name": "height",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "The height",
						"methods": [
							"getHeight",
							"setHeight"
						]
					},
					{
						"name": "viewName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Name of the View",
						"methods": [
							"getViewName",
							"setViewName"
						]
					},
					{
						"name": "displayBlock",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "Whether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line).",
						"methods": [
							"getDisplayBlock",
							"setDisplayBlock"
						]
					}
				],
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Child Controls of the view",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					}
				],
				"events": [
					{
						"name": "afterInit",
						"visibility": "public",
						"description": "Fired when the View has parsed the UI description and instantiated the contained controls (/control tree).",
						"methods": [
							"attachAfterInit",
							"detachAfterInit",
							"fireAfterInit"
						]
					},
					{
						"name": "beforeExit",
						"visibility": "public",
						"description": "Fired when the view has received the request to destroy itself, but before it has destroyed anything.",
						"methods": [
							"attachBeforeExit",
							"detachBeforeExit",
							"fireBeforeExit"
						]
					},
					{
						"name": "afterRendering",
						"visibility": "public",
						"description": "Fired when the View has been (re-)rendered and its HTML is present in the DOM.",
						"methods": [
							"attachAfterRendering",
							"detachAfterRendering",
							"fireAfterRendering"
						]
					},
					{
						"name": "beforeRendering",
						"visibility": "public",
						"description": "Fired before this View is re-rendered. Use to unbind event handlers from HTML elements etc.",
						"methods": [
							"attachBeforeRendering",
							"detachBeforeRendering",
							"fireBeforeRendering"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new View.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "afterInit",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the View has parsed the UI description and instantiated the contained controls (/control tree)."
				},
				{
					"name": "afterRendering",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the View has been (re-)rendered and its HTML is present in the DOM."
				},
				{
					"name": "beforeExit",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the view has received the request to destroy itself, but before it has destroyed anything."
				},
				{
					"name": "beforeRendering",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired before this View is re-rendered. Use to unbind event handlers from HTML elements etc."
				}
			],
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "attachAfterInit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.mvc.View</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterInit</code> event of this <code>sap.ui.core.mvc.View</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.mvc.View</code> itself.\r\rFired when the View has parsed the UI description and instantiated the contained controls (/control tree)."
				},
				{
					"name": "attachAfterRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.mvc.View</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterRendering</code> event of this <code>sap.ui.core.mvc.View</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.mvc.View</code> itself.\r\rFired when the View has been (re-)rendered and its HTML is present in the DOM."
				},
				{
					"name": "attachBeforeExit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.mvc.View</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforeExit</code> event of this <code>sap.ui.core.mvc.View</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.mvc.View</code> itself.\r\rFired when the view has received the request to destroy itself, but before it has destroyed anything."
				},
				{
					"name": "attachBeforeRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.mvc.View</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforeRendering</code> event of this <code>sap.ui.core.mvc.View</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.mvc.View</code> itself.\r\rFired before this View is re-rendered. Use to unbind event handlers from HTML elements etc."
				},
				{
					"name": "byId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "element by its ID or <code>undefined</code>"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "View local ID of the element"
						}
					],
					"description": "Returns an element by its ID in the context of the view."
				},
				{
					"name": "clone",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "reference to the newly created clone"
					},
					"parameters": [
						{
							"name": "sIdSuffix",
							"type": "string",
							"optional": true,
							"description": "a suffix to be appended to the cloned element id"
						},
						{
							"name": "aLocalIds",
							"type": "string[]",
							"optional": true,
							"description": "an array of local IDs within the cloned hierarchy (internally used)"
						}
					],
					"description": "Override clone method to avoid conflict between generic cloning of content\nand content creation as defined by the UI5 Model View Controller lifecycle.\n\nFor more details see the development guide section about Model View Controller in UI5."
				},
				{
					"name": "createId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "prefixed id"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "View local ID of the element"
						}
					],
					"description": "Convert the given view local element ID to a globally unique ID\nby prefixing it with the view ID."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "detachAfterInit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterInit</code> event of this <code>sap.ui.core.mvc.View</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachAfterRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterRendering</code> event of this <code>sap.ui.core.mvc.View</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachBeforeExit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforeExit</code> event of this <code>sap.ui.core.mvc.View</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachBeforeRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforeRendering</code> event of this <code>sap.ui.core.mvc.View</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.mvc.View with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireAfterInit",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>afterInit</code> to attached listeners."
				},
				{
					"name": "fireAfterRendering",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>afterRendering</code> to attached listeners."
				},
				{
					"name": "fireBeforeExit",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>beforeExit</code> to attached listeners."
				},
				{
					"name": "fireBeforeRendering",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>beforeRendering</code> to attached listeners."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\r\rChild Controls of the view"
				},
				{
					"name": "getController",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Controller of this view."
					},
					"description": "Returns the view's Controller instance or null for a controller-less View."
				},
				{
					"name": "getControllerName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the name of the controller"
					},
					"description": "An (optional) method to be implemented by Views. When no controller instance is given at View instantiation time\nAND this method exists and returns the (package and class) name of a controller, the View tries to load and\ninstantiate the controller and to connect it to itself."
				},
				{
					"name": "getDisplayBlock",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>displayBlock</code>"
					},
					"description": "Gets current value of property <code>displayBlock</code>.\r\rWhether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line).\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>height</code>"
					},
					"description": "Gets current value of property <code>height</code>.\r\rThe height"
				},
				{
					"name": "getLocalId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "ID without prefix or <code>null</code>"
					},
					"since": "1.39.0",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Prefixed ID"
						}
					],
					"description": "Returns the local ID of an element by removing the view ID prefix or\n<code>null</code> if the ID does not contain a prefix."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.mvc.View."
				},
				{
					"name": "getPreprocessorInfo",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "Info object for the view"
					},
					"parameters": [
						{
							"name": "bSync",
							"type": "boolean",
							"optional": false,
							"description": "Describes the view execution, true if sync"
						}
					],
					"description": "Returns the info object which is also passed to the preprocessors"
				},
				{
					"name": "getViewData",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "viewData"
					},
					"description": "Returns user specific data object"
				},
				{
					"name": "getViewName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>viewName</code>"
					},
					"description": "Gets current value of property <code>viewName</code>.\r\rName of the View"
				},
				{
					"name": "getWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>width</code>"
					},
					"description": "Gets current value of property <code>width</code>.\r\rThe width\r\rDefault value is <code>100%</code>."
				},
				{
					"name": "hasPreprocessor",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if a preprocessor is active"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "Type of the preprocessor, e.g. \"raw\", \"xml\" or \"controls\""
						}
					],
					"description": "Checks if any preprocessors are active for the specified type"
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\r             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\r             greater than the current size of the aggregation, the content is inserted at\r             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "loaded",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "resolves with the complete view instance, reject with any thrown error"
					},
					"since": "1.30",
					"description": "Creates a Promise representing the state of the view initialization.\n\nFor views that are loading asynchronously (by setting async=true) this Promise is created by view\ninitialization. Synchronously loading views get wrapped in an immediately resolving Promise."
				},
				{
					"name": "registerPreprocessor",
					"visibility": "protected",
					"static": true,
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "the type of content to be processed"
						},
						{
							"name": "vPreprocessor",
							"type": "string|function",
							"optional": false,
							"description": "module path of the preprocessor implementation or a preprocessor function"
						},
						{
							"name": "sViewType",
							"type": "string",
							"optional": false,
							"description": "type of the calling view, e.g. <code>XML</code>"
						},
						{
							"name": "bSyncSupport",
							"type": "boolean",
							"optional": false,
							"description": "declares if the vPreprocessor ensures safe sync processing. This means the preprocessor will be executed\n\t\talso for sync views. Please be aware that any kind of async processing (like Promises, XHR, etc) may\n\t\tbreak the view initialization and lead to unexpected results."
						},
						{
							"name": "bOnDemand",
							"type": "boolean",
							"optional": true,
							"description": "on-demand preprocessor which enables developers to quickly activate the preprocessor for a view,\n\t\tby setting <code>preprocessors : { xml }</code>, for example. This should be false except for very special\n\t\tcases. There can only be one on-demand preprocessor per content type."
						},
						{
							"name": "mSettings",
							"type": "object",
							"optional": true,
							"description": "optional configuration for preprocessor"
						}
					],
					"description": "Register a preprocessor for all views of a specific type.\n\nThe preprocessor can be registered for several stages of view initialization, which are\ndependent on the view type, e.g. \"raw\", \"xml\" or already initialized \"controls\". If there is a preprocessor\npassed to or activated at the view instance already, that one is used. When several preprocessors are registered\nfor one hook, it has to be made sure that they do not conflict when being processed serially.\n\nIt can be either a module name as string of an implementation of {@link sap.ui.core.mvc.View.Preprocessor} or a\nfunction with a signature according to {@link sap.ui.core.mvc.View.Preprocessor.process}.\n\n<strong>Note</strong>: Preprocessors only work in async views and will be ignored when the view is instantiated\nin sync mode by default, as this could have unexpected side effects. You may override this behaviour by setting the\n<code>bSyncSupport</code> flag to <code>true</code>."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The content to remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "runPreprocessor",
					"visibility": "protected",
					"returnValue": {
						"type": "Promise|object|string|Element",
						"description": "a promise resolving with the processed source or an error | the source when bSync=true"
					},
					"parameters": [
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "the type of preprocessor, e.g. \"raw\", \"xml\" or \"controls\""
						},
						{
							"name": "vSource",
							"type": "object|string|Element",
							"optional": false,
							"description": "the view source as a JSON object, a raw text, an XML document element or a Promise resolving with those"
						},
						{
							"name": "bSync",
							"type": "boolean",
							"optional": true,
							"description": "describes the view execution, true if sync"
						}
					],
					"description": "Executes preprocessors for a type of source"
				},
				{
					"name": "setDisplayBlock",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisplayBlock",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>displayBlock</code>"
						}
					],
					"description": "Sets a new value for property <code>displayBlock</code>.\r\rWhether the CSS display should be set to \"block\".\nSet this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height.\nDo not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line).\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setHeight",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sHeight",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>height</code>"
						}
					],
					"description": "Sets a new value for property <code>height</code>.\r\rThe height\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setViewName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sViewName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>viewName</code>"
						}
					],
					"description": "Sets a new value for property <code>viewName</code>.\r\rName of the View\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setWidth",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sWidth",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>width</code>"
						}
					],
					"description": "Sets a new value for property <code>width</code>.\r\rThe width\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>100%</code>."
				}
			]
		},
		{
			"kind": "interface",
			"name": "sap.ui.core.mvc.View.Preprocessor",
			"basename": "Preprocessor",
			"resource": "sap/ui/core/mvc/View.js",
			"module": "sap/ui/core/mvc/View",
			"export": "Preprocessor",
			"static": true,
			"visibility": "public",
			"since": "1.30",
			"description": "Interface for Preprocessor implementations that can be hooked in the view life cycle.\n\nThere are two possibilities to use the preprocessor. It can be either passed to the view via the mSettings.preprocessors object\nwhere it is the executed only for this instance, or by the registerPreprocessor method of the view type. Currently this is\navailable only for XMLViews (as of version 1.30).",
			"methods": [
				{
					"name": "process",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object|Promise",
						"description": "the processed resource or a promise which resolves with the processed resource or an error according to the\n\t\tdeclared preprocessor sync capability"
					},
					"parameters": [
						{
							"name": "vSource",
							"type": "object",
							"optional": false,
							"description": "the source to be processed"
						},
						{
							"name": "oViewInfo",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"id": {
									"name": "id",
									"type": "string",
									"optional": false,
									"description": "the id"
								},
								"name": {
									"name": "name",
									"type": "string",
									"optional": false,
									"description": "the name"
								},
								"componentId": {
									"name": "componentId",
									"type": "string",
									"optional": false,
									"description": "the id of the owning Component"
								},
								"caller": {
									"name": "caller",
									"type": "string",
									"optional": false,
									"description": "identifies the caller of this preprocessor; basis for log or exception messages"
								}
							},
							"description": "identification information about the calling instance"
						},
						{
							"name": "mSettings",
							"type": "object",
							"optional": true,
							"description": "settings object containing the settings provided with the preprocessor"
						}
					],
					"description": "Processing method that must be implemented by a Preprocessor."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.mvc.ViewType",
			"basename": "mvc.ViewType",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "mvc.ViewType",
			"static": true,
			"visibility": "public",
			"description": "Specifies possible view types",
			"properties": [
				{
					"name": "HTML",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "HTML view"
				},
				{
					"name": "JS",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "JS View"
				},
				{
					"name": "JSON",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "JSON View"
				},
				{
					"name": "Template",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Template View"
				},
				{
					"name": "XML",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "XML view"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.mvc.XMLView",
			"basename": "XMLView",
			"resource": "sap/ui/core/mvc/XMLView.js",
			"module": "sap/ui/core/mvc/XMLView",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.mvc.View",
			"description": "A View defined using (P)XML and HTML markup.\n\n<strong>Note:</strong><br>\nBe aware that modifications of the content aggregation of this control are not supported due to technical reasons.\nThis includes calls to all content modifying methods like <code>addContent></code> etc., but also the implicit\nremoval of controls contained by the content aggregation. For example the destruction of a Control via the <code>\ndestroy</code> method. All functions can be called but may not work properly or lead to unexpected side effects.",
			"ui5-metadata": {
				"stereotype": "control",
				"specialSettings": [
					{
						"name": "containingView",
						"type": "sap.ui.core.mvc.XMLView",
						"visibility": "hidden",
						"description": "If an XMLView instance is used to represent a HTML subtree of another XMLView,\nthen that other XMLView is provided with this setting to be able to delegate\nView functionality (createId, getController) to that 'real' view."
					},
					{
						"name": "xmlNode",
						"type": "Element",
						"visibility": "hidden",
						"description": "If an XMLView instance is used to represent a HTML subtree of another XMLView,\nthat subtree is provided with this setting."
					},
					{
						"name": "cache",
						"type": "Object",
						"visibility": "public",
						"description": "Configuration for the XMLView caching."
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new mvc/XMLView.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.mvc.View#constructor sap.ui.core.mvc.View} can be used."
			},
			"properties": [
				{
					"name": "asyncSupport",
					"visibility": "public",
					"static": true,
					"since": "1.30",
					"type": "undefined",
					"description": "Flag for feature detection of asynchronous loading/rendering"
				}
			],
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.mvc.XMLView with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.mvc.XMLView."
				},
				{
					"name": "registerPreprocessor",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sType",
							"type": "string|sap.ui.core.mvc.XMLView.PreprocessorType",
							"optional": false,
							"description": "the type of content to be processed"
						},
						{
							"name": "vPreprocessor",
							"type": "string|function",
							"optional": false,
							"description": "module path of the preprocessor implementation or a preprocessor function"
						},
						{
							"name": "bSyncSupport",
							"type": "boolean",
							"optional": false,
							"description": "declares if the vPreprocessor ensures safe sync processing. This means the preprocessor will be executed\n\t\talso for sync views. Please be aware that any kind of async processing (like Promises, XHR, etc) may\n\t\tbreak the view initialization and lead to unexpected results."
						},
						{
							"name": "bOnDemand",
							"type": "boolean",
							"optional": true,
							"description": "ondemand preprocessor which enables developers to quickly activate the preprocessor for a view,\n\t\tby setting <code>preprocessors : { xml }</code>, for example."
						},
						{
							"name": "mSettings",
							"type": "object",
							"optional": true,
							"description": "optional configuration for preprocessor"
						}
					],
					"description": "Register a preprocessor for all views of a specific type.\n\nThe preprocessor can be registered for several stages of view initialization, for xml views these are\neither the plain \"xml\" or the already initialized \"controls\" , see {@link sap.ui.core.mvc.XMLView.PreprocessorType}.\nFor each type one preprocessor is executed. If there is a preprocessor passed to or activated at the\nview instance already, that one is used. When several preprocessors are registered for one hook, it has to be made\nsure, that they do not conflict when beeing processed serially.\n\nIt can be either a module name as string of an implementation of {@link sap.ui.core.mvc.View.Preprocessor} or a\nfunction with a signature according to {@link sap.ui.core.mvc.View.Preprocessor.process}.\n\n<strong>Note</strong>: Preprocessors work only in async views and will be ignored when the view is instantiated\nin sync mode by default, as this could have unexpected side effects. You may override this behaviour by setting the\nbSyncSupport flag to true."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.mvc.XMLView.PreprocessorType",
			"basename": "PreprocessorType",
			"resource": "sap/ui/core/mvc/XMLView.js",
			"module": "sap/ui/core/mvc/XMLView",
			"export": "PreprocessorType",
			"static": true,
			"visibility": "public",
			"description": "Specifies the available preprocessor types for XMLViews",
			"properties": [
				{
					"name": "CONTROLS",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "This preprocessor receives the control tree produced through the view source"
				},
				{
					"name": "VIEWXML",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "This preprocessor receives a valid xml source for View creation without any template tags but with control\ndeclarations. These include their full IDs by which they can also be queried during runtime."
				},
				{
					"name": "XML",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "This preprocessor receives the plain xml source of the view and should also return a valid\nxml ready for view creation"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.OpenState",
			"basename": "OpenState",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "OpenState",
			"static": true,
			"visibility": "public",
			"description": "Defines the different possible states of an element that can be open or closed and does not only\ntoggle between these states, but also spends some time in between (e.g. because of an animation).",
			"properties": [
				{
					"name": "CLOSED",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Closed and currently not changing states."
				},
				{
					"name": "CLOSING",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Still open, but in the process of going to the CLOSED state."
				},
				{
					"name": "OPEN",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Open and currently not changing states."
				},
				{
					"name": "OPENING",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Already left the CLOSED state, is not OPEN yet, but in the process of getting OPEN."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.Orientation",
			"basename": "Orientation",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Orientation",
			"static": true,
			"visibility": "public",
			"since": "1.22",
			"description": "Orientation of an UI element",
			"properties": [
				{
					"name": "Horizontal",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Arrange Horizontally"
				},
				{
					"name": "Vertical",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Arrange Vertically"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.Percentage",
			"basename": "Percentage",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Percentage",
			"final": true,
			"static": true,
			"visibility": "public",
			"description": "A string type that represents a percentage value."
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Popup",
			"basename": "Popup",
			"resource": "sap/ui/core/Popup.js",
			"module": "sap/ui/core/Popup",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Popup Class is a helper class for controls that want themselves or\nparts of themselves or even other aggregated or composed controls\nor plain HTML content to popup on the screen like menues, dialogs, drop down boxes.\n\nIt allows the controls to be aligned to other dom elements\nusing the {@link sap.ui.core.Popup.Dock} method. With it you can define where\nthe popup should be docked. One can dock the popup to the top bottom left or right side\nof a dom ref.\n\nIn the case that the popup has no space to show itself in the view port\nof the current window it tries to open itself to\nthe inverted direction.\n\n<strong>Since 1.12.3</strong> it is possible to add further DOM-element-ids that can get the focus\nwhen 'autoclose' is enabled. E.g. the RichTextEditor with running TinyMCE uses this method to\nbe able to focus the Popups of the TinyMCE if the RichTextEditor runs within a Popup/Dialog etc.\n\n To provide an additional DOM-element that can get the focus the following should be done:\n\t// create an object with the corresponding DOM-id\n\tvar oObject = {\n\t\tid : \"this_is_the_most_valuable_id_of_the_DOM_element\"\n\t};\n\n\t// add the event prefix for adding an element to the ID of the corresponding Popup\n\tvar sEventId = \"sap.ui.core.Popup.addFocusableContent-\" + oPopup.getId();\n\n\t// fire the event with the created event-id and the object with the DOM-id\n\tsap.ui.getCore().getEventBus().publish(\"sap.ui\", sEventId, oObject);",
			"ui5-metadata": {
				"stereotype": "object",
				"associations": [
					{
						"name": "childPopups",
						"singularName": "childPopup",
						"type": "sap.ui.core.Popup",
						"cardinality": "0..n",
						"visibility": "hidden",
						"methods": [
							"getChildPopups",
							"addChildPopup",
							"removeChildPopup",
							"removeAllChildPopups"
						]
					}
				],
				"events": [
					{
						"name": "opened",
						"visibility": "public",
						"methods": [
							"attachOpened",
							"detachOpened",
							"fireOpened"
						]
					},
					{
						"name": "closed",
						"visibility": "public",
						"methods": [
							"attachClosed",
							"detachClosed",
							"fireClosed"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oContent",
						"type": "sap.ui.core.Control|sap.ui.core.Element|DOMNode",
						"optional": false,
						"description": "the content to render in the popup. In case of sap.ui.core.Element or DOMNode, the content must be present in the page (i.e. rendered). In case of sap.ui.core.Control, the Popup ensures rendering before opening."
					},
					{
						"name": "bModal",
						"type": "boolean",
						"optional": true,
						"defaultValue": false,
						"description": "whether the popup should be opened in a modal way (i.e. with blocking background). Setting this to \"true\" effectively blocks all attempts to focus content outside the modal popup. A modal popup also automatically sets the focus back to whatever was focused when the popup opened."
					},
					{
						"name": "bShadow",
						"type": "boolean",
						"optional": true,
						"defaultValue": true,
						"description": "whether the popup should be have a visual shadow underneath (shadow appearance depends on active theme and browser support)"
					},
					{
						"name": "bAutoClose",
						"type": "boolean",
						"optional": true,
						"defaultValue": false,
						"description": "whether the popup should automatically close when the focus moves out of the popup"
					}
				],
				"description": "Creates an instance of <code>sap.ui.core.Popup</code> that can be used to open controls as a Popup,\nvisually appearing in front of other controls.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "closed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					]
				},
				{
					"name": "opened",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					]
				}
			],
			"methods": [
				{
					"name": "attachClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.Popup</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>closed</code> event of this <code>sap.ui.core.Popup</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.Popup</code> itself."
				},
				{
					"name": "attachOpened",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.Popup</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>opened</code> event of this <code>sap.ui.core.Popup</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.Popup</code> itself."
				},
				{
					"name": "close",
					"visibility": "public",
					"parameters": [
						{
							"name": "iDuration",
							"type": "int",
							"optional": true,
							"description": "animation duration in milliseconds; default is the jQuery preset \"fast\".  For iDuration == 0 the closing happens synchronously without animation."
						}
					],
					"description": "Closes the popup.\n\nIf the Popup is already closed or in the process of closing, calling this method does nothing.\nIf the Popup is in the process of being opened and closed with a duration of 0, calling this method does nothing.\nIf the Popup is in the process of being opened and closed with an animation duration, the animation will be chained, but this functionality is dangerous,\nmay lead to inconsistent behavior and is thus not recommended and may even be removed."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Closes and destroys this instance of Popup.\nDoes not destroy the hosted content."
				},
				{
					"name": "detachClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>closed</code> event of this <code>sap.ui.core.Popup</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachOpened",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>opened</code> event of this <code>sap.ui.core.Popup</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "exit",
					"visibility": "public",
					"description": "When the Popup is being destroyed all corresponding references should be\ndeleted as well to prevent any memory leaks."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Popup with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "fireClosed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>closed</code> to attached listeners."
				},
				{
					"name": "fireOpened",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>opened</code> to attached listeners."
				},
				{
					"name": "getAutoClose",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"since": "1.16",
					"description": "Determines whether the pop-up should auto closes or not."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control|DOMRef",
						"description": "the content that has been set previously (if any)"
					},
					"description": "Returns this Popup's content."
				},
				{
					"name": "getFollowOf",
					"visibility": "public",
					"returnValue": {
						"type": "boolean|function",
						"description": "if a function was set it is returned otherwise a boolean value whether the follow of is activated"
					},
					"since": "1.13.0",
					"description": "This returns true/false if the default followOf method should be used. If a separate followOf-handler was previously added\nthe correspodning function is returned."
				},
				{
					"name": "getLastZIndex",
					"visibility": "public",
					"returnValue": {
						"type": "Number"
					},
					"description": "Returns the last z-index that has been handed out. does not increase the internal z-index counter."
				},
				{
					"name": "getLastZIndex",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Number"
					},
					"description": "Returns the last z-index that has been handed out. does not increase the internal z-index counter."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Popup."
				},
				{
					"name": "getModal",
					"visibility": "public",
					"returnValue": {
						"description": "{boolean] bModal whether the Popup is of modal type"
					},
					"description": "Returns the value if a Popup is of modal type"
				},
				{
					"name": "getNextZIndex",
					"visibility": "public",
					"returnValue": {
						"type": "Number",
						"description": "the next z-index on top of the Popup stack"
					},
					"description": "Returns the next available z-index on top of the existing/previous popups. Each call increases the internal z-index counter and the returned z-index."
				},
				{
					"name": "getNextZIndex",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Number",
						"description": "the next z-index on top of the Popup stack"
					},
					"description": "Returns the next available z-index on top of the existing/previous popups. Each call increases the internal z-index counter and the returned z-index."
				},
				{
					"name": "getOpenState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.OpenState",
						"description": "whether the Popup is opened"
					},
					"description": "Returns whether the Popup is currently open, closed, or transitioning between these states."
				},
				{
					"name": "isOpen",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the Popup is opened (or currently being\n                           opened or closed)"
					},
					"description": "Returns whether the Popup is currently open (this includes opening and\nclosing animations)."
				},
				{
					"name": "open",
					"visibility": "public",
					"parameters": [
						{
							"name": "iDuration",
							"type": "int",
							"optional": true,
							"description": "animation duration in milliseconds; default is the jQuery preset \"fast\". For iDuration == 0 the opening happens synchronously without animation."
						},
						{
							"name": "my",
							"type": "sap.ui.core.Popup.Dock",
							"optional": true,
							"defaultValue": "sap.ui.core.Popup.Dock.CenterCenter",
							"description": "the popup content's reference position for docking"
						},
						{
							"name": "at",
							"type": "sap.ui.core.Popup.Dock",
							"optional": true,
							"defaultValue": "sap.ui.core.Popup.Dock.CenterCenter",
							"description": "the \"of\" element's reference point for docking to"
						},
						{
							"name": "of",
							"type": "string|sap.ui.core.Element|DOMRef|jQuery|jQuery.Event",
							"optional": true,
							"defaultValue": "document",
							"description": "specifies the reference element to which the given content should dock to"
						},
						{
							"name": "offset",
							"type": "string",
							"optional": true,
							"defaultValue": "'0 0'",
							"description": "the offset relative to the docking point, specified as a string with space-separated pixel values (e.g. \"0 10\" to move the popup 10 pixels to the right). If the docking of both \"my\" and \"at\" are both RTL-sensitive (\"begin\" or \"end\"), this offset is automatically mirrored in the RTL case as well."
						},
						{
							"name": "collision",
							"type": "string",
							"optional": true,
							"defaultValue": "'flip'",
							"description": "defines how the position of an element should be adjusted in case it overflows the window in some direction."
						},
						{
							"name": "followOf",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "defines whether the popup should follow the dock reference when the reference changes its position."
						}
					],
					"description": "Opens the popup's content at the position either specified here or beforehand via {@link #setPosition}.\nContent must be capable of being positioned via \"position:absolute;\"\nAll parameters are optional (open() may be called without any parameters). iDuration may just be omitted, but if any of \"at\", \"of\", \"offset\", \"collision\" is given, also the preceding positioning parameters (\"my\", at\",...) must be given.\n\nIf the Popup's OpenState is different from \"CLOSED\" (i.e. if the Popup is already open, opening or closing), the call is ignored."
				},
				{
					"name": "setAnimations",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnOpen",
							"type": "function",
							"optional": false
						},
						{
							"name": "fnClose",
							"type": "function",
							"optional": false
						}
					],
					"description": "Sets the animation functions to use for opening and closing the Popup. Any null value will be ignored and not change the respective animation function.\nWhen called, the animation functions receive three parameters:\n- the jQuery object wrapping the DomRef of the popup\n- the requested animation duration\n- a function that MUST be called once the animation has completed"
				},
				{
					"name": "setAutoClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bAutoClose",
							"type": "boolean",
							"optional": false,
							"description": "whether the Popup should close as soon as the focus leaves"
						}
					],
					"description": "Used to specify whether the Popup should close as soon as\n- for non-touch environment: the focus leaves\n- for touch environment: user clicks the area which is outside the popup itself, the dom elemnt which popup aligns to (except document),\n and one of the autoCloseAreas set by calling setAutoCloseAreas."
				},
				{
					"name": "setAutoCloseAreas",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "aAutoCloseAreas",
							"type": "DomRef[]|sap.ui.core.Element[]|string[]",
							"optional": false,
							"description": "an array containing DOM elements, sap.ui.core.Element\n or an ID which are considered part of the Popup; a value of null removes all previous areas"
						}
					],
					"description": "Sets the additional areas in the page that are considered part of the Popup when autoclose is enabled.\n- non-touch environment: if the focus leaves the Popup but immediately enters one of these areas, the Popup does NOT close.\n- touch environment: if user clicks one of these areas, the Popup does NOT close."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control|DOMRef",
							"optional": false
						}
					],
					"description": "Sets the content this instance of the Popup should render.\nContent must be capable of being positioned via position:absolute;"
				},
				{
					"name": "setDurations",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iOpenDuration",
							"type": "int",
							"optional": false,
							"description": "in milliseconds"
						},
						{
							"name": "iCloseDuration",
							"type": "int",
							"optional": false,
							"description": "in milliseconds"
						}
					],
					"description": "Sets the durations for opening and closing animations.\nNull values and values < 0 are ignored.\nA duration of 0 means no animation.\nDefault value is \"fast\" which is the jQuery constant for \"200 ms\"."
				},
				{
					"name": "setFollowOf",
					"visibility": "public",
					"since": "1.13.0",
					"parameters": [
						{
							"name": "followOf",
							"type": "boolean|function|null",
							"optional": false,
							"description": "a boolean value enabled/disables the default followOf-Handler. Or an individual handler can be given.\nnull deletes all followOf settings."
						}
					],
					"description": "This enabled/disables the Popup to follow its opening reference. If the Popup is open and a followOf should\nbe set the corresponding listener will be attached."
				},
				{
					"name": "setInitialFocusId",
					"visibility": "public",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "the ID of the DOM element to focus"
						}
					],
					"description": "Sets the ID of the element that should be focused once the popup opens.\nIf the given ID is the ID of an existing Control, this Control's focusDomRef will be focused instead, which may be an HTML element with a different ID (usually a sub-element inside the Control).\nIf no existing element ID is supplied and the Popup is modal or auto-close, the Popup will instead focus the first focusable element."
				},
				{
					"name": "setInitialZIndex",
					"visibility": "public",
					"static": true,
					"since": "1.30.0",
					"parameters": [
						{
							"name": "iInitialZIndex",
							"type": "Number",
							"optional": false,
							"description": "is the initial z-index"
						}
					],
					"description": "Set an initial z-index that should be used by all Popup so all Popups start at least\nwith the set z-index.\nIf the given z-index is lower than any current available z-index the highest z-index will be used."
				},
				{
					"name": "setModal",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bModal",
							"type": "boolean",
							"optional": false,
							"description": "whether the Popup is of modal type"
						},
						{
							"name": "sModalCSSClass",
							"type": "string",
							"optional": true,
							"description": "a CSS class (or space-separated list of classes) that should be added to the block layer"
						}
					],
					"description": "Used to specify whether the Popup should be modal. A modal popup will put some fading \"block layer\" over the background and\nprevent attempts to put the focus outside/below the popup.\nSetting this while the popup is open will change \"block layer\" immediately."
				},
				{
					"name": "setPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "my",
							"type": "sap.ui.core.Popup.Dock",
							"optional": false,
							"description": "specifies which point of the given Content should be aligned"
						},
						{
							"name": "at",
							"type": "sap.ui.core.Popup.Dock|Object",
							"optional": false,
							"description": "specifies the point of the reference element to which the given Content should be aligned"
						},
						{
							"name": "of",
							"type": "string|sap.ui.core.Element|DOMRef|jQuery|jQuery.Event",
							"optional": true,
							"defaultValue": "document",
							"description": "specifies the reference element to which the given content should be aligned as specified in the other parameters"
						},
						{
							"name": "offset",
							"type": "string",
							"optional": true,
							"defaultValue": "'0 0'",
							"description": "the offset relative to the docking point, specified as a string with space-separated pixel values (e.g. \"0 10\" to move the popup 10 pixels to the right). If the docking of both \"my\" and \"at\" are both RTL-sensitive (\"begin\" or \"end\"), this offset is automatically mirrored in the RTL case as well."
						},
						{
							"name": "collision",
							"type": "string",
							"optional": true,
							"description": "defines how the position of an element should be adjusted in case it overflows the window in some direction. The valid values that refer to jQuery-UI's position parameters are \"flip\", \"fit\" and \"none\"."
						}
					],
					"description": "Sets the position of the Popup (if you refer to a Control as anchor then do not\nuse the DOMRef of the control which might change after re-renderings).\nOptional parameters can only be omitted when all subsequent parameters are omitted as well."
				},
				{
					"name": "setShadow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Popup",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bShowShadow",
							"type": "boolean",
							"optional": false,
							"description": "whether to show a shadow"
						}
					],
					"description": "Determines whether the Popup should have a shadow (in supporting browsers).\nThis also affects a currently open popup."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.Popup.Dock",
			"basename": "Dock",
			"resource": "sap/ui/core/Popup.js",
			"module": "sap/ui/core/Popup",
			"export": "Dock",
			"static": true,
			"visibility": "public",
			"description": "Enumeration providing options for docking of some element to another.\n\"Right\" and \"Left\" will stay the same in RTL mode, but \"Begin\" and \"End\" will flip to the other side (\"Begin\" is \"Right\" in RTL).",
			"properties": [
				{
					"name": "BeginBottom",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "BeginCenter",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "BeginTop",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "CenterBottom",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "CenterCenter",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "CenterTop",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "EndBottom",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "EndCenter",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "EndTop",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "LeftBottom",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "LeftCenter",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "LeftTop",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "RightBottom",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "RightCenter",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				},
				{
					"name": "RightTop",
					"visibility": "public",
					"static": true,
					"type": "undefined"
				}
			]
		},
		{
			"kind": "interface",
			"name": "sap.ui.core.PopupInterface",
			"basename": "PopupInterface",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "PopupInterface",
			"static": true,
			"visibility": "public",
			"since": "1.19.0",
			"description": "Marker interface for controls that are not rendered \"embedded\" into other controls but need to be opened/closed.\n\nSuch controls are handled differently during rendering."
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.Priority",
			"basename": "Priority",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Priority",
			"static": true,
			"visibility": "public",
			"description": "Priorities for general use.",
			"properties": [
				{
					"name": "High",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "High priority"
				},
				{
					"name": "Low",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Low priority"
				},
				{
					"name": "Medium",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Medium priority"
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Default, none priority"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.Renderer",
			"basename": "Renderer",
			"resource": "sap/ui/core/Renderer.js",
			"module": "sap/ui/core/Renderer",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Base Class for a Renderer.",
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "a new static renderer class that can be enriched further"
					},
					"parameters": [
						{
							"name": "vName",
							"type": "string|object",
							"optional": false,
							"description": "either the name of the new renderer class (new signature) or the base\n                             renderer to extend (deprecated signature)"
						},
						{
							"name": "oRendererInfo",
							"type": "object",
							"optional": true,
							"description": "methods and/or properties that should be added to the new renderer class"
						}
					],
					"description": "Creates a new static renderer class that extends a given renderer.\n\nThis method can be used with two signatures that are explained below.\nIn both variants, the returned renderer class inherits all properties (methods, fields)\nfrom the given parent renderer class. Both variants also add an 'extend' method to the\ncreated renderer class that behaves like the new signature of this <code>Renderer.extend</code>\nmethod, but creates subclasses of the new class, not of <code>sap.ui.core.Renderer</code>.\n\n<b>New Signature</b><br>\nIn the new signature variant, two parameters must be given: a qualified name\nfor the new renderer (its class name), and an optional object literal that contains\nmethods or fields to be added to the new renderer class.\n\nThis signature has been designed to resemble the class extension mechanism as\nprovided by {@link sap.ui.base.Object.extend Object.extend}.\n\n<pre>\nsap.ui.define(['sap/ui/core/Renderer'],\n    function(Renderer) {\n    \"use strict\";\n\n    var LabelRenderer = Renderer.extend('sap.m.LabelRenderer', {\n        render: function(oRM, oControl) {\n\n            renderPreamble(oRM, oControl);\n\n            // implementation core renderer logic here\n\n            renderPostamble(oRM, oControl);\n\n        },\n\n        renderPreamble : function(oRM, oControl) {\n        ...\n        },\n\n        renderPostamble : function(oRM, oControl) {\n        ...\n        }\n\n    });\n\n    return LabelRenderer;\n});\n</pre>\n\nThe extension of Renderers works across multiple levels. A FancyLabelRenderer can\nextend the above LabelRenderer:\n\n<pre>\nsap.ui.define(['sap/m/LabelRenderer'],\n    function(LabelRenderer) {\n    \"use strict\";\n\n    var FancyLabelRenderer = LabelRenderer.extend('sap.mylib.FancyLabelRenderer', {\n        render: function(oRM, oControl) {\n\n            // call base renderer\n            LabelRenderer.renderPreamble(oRM, oControl);\n\n            // ... do your own fancy rendering here\n\n            // call base renderer again\n            LabelRenderer.renderPostamble(oRM, oControl);\n        }\n    });\n\n    return FancyLabelRenderer;\n});\n</pre>\n\n<b>Note:</b> the new signature no longer requires the <code>bExport</code> flag to be set for\nthe enclosing {@link sap.ui.define} call. The Renderer base class takes care of the necessary\nglobal export of the renderer. This allows Non-SAP developers to write a renderer that complies with\nthe documented restriction for <code>sap.ui.define</code> (no use of bExport = true outside\nsap.ui.core projects).\n\n<b>Deprecated Signature</b><br>\nThe deprecated old signature expects just one parameter: a renderer that should be extended.\nWith that signature the renderer can't be exported globally as the name of the renderer class\nis not known.\n\nFor compatibility reasons, the class created by the deprecated signature contains a property\n<code>_super</code> that references the parent class. It shouldn't be used by applications / control\ndevelopers as it doesn't work reliably for deeper inheritance chains: if the old variant of\n<code>Renderer.extend</code> is used on two or more levels of the inheritance hierarchy, the\n<code>_super</code> property of the resulting renderer class will always point to the implementation\nof the base renderer of the last call to extend. Instead of using <code>this._super</code>, renderer\nimplementations should use the new signature variant and access the base implementation of a method\nvia the AMD reference to the base renderer (as shown in the FancyLabelRenderer example above)."
				},
				{
					"name": "getTextAlign",
					"visibility": "protected",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the actual text alignment that must be set for this environment"
					},
					"parameters": [
						{
							"name": "oTextAlign",
							"type": "sap.ui.core.TextAlign",
							"optional": false,
							"description": "the text alignment of the Control"
						},
						{
							"name": "oTextDirection",
							"type": "sap.ui.core.TextDirection",
							"optional": false,
							"description": "the text direction of the Control"
						}
					],
					"description": "Returns the TextAlignment for the provided configuration."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.RenderManager",
			"basename": "RenderManager",
			"resource": "sap/ui/core/RenderManager.js",
			"module": "sap/ui/core/RenderManager",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "Object",
			"description": "RenderManager that will take care for rendering Controls.\n\nFor the default rendering task of UI5, a shared RenderManager is created and owned by <code>sap.ui.core.Core</code>.\nControls or other code that want to render controls outside the default rendering task\ncan create a private instance of RenderManager by calling the\n{@link sap.ui.core.Core#createRenderManager sap.ui.getCore().createRenderManager()} method.\nWhen such a private instance is no longer needed, it should be {@link #destroy destroyed}.\n\nControl renderers only have access to a subset of the public and protected instance methods of\nthis class. The instance methods {@link #flush}, {@link #render} and {@link #destroy} are not part\nof that subset and are reserved to the owner of the corresponding RenderManager instance.\nRenderers will use the provided methods to create their HTML output. The RenderManager will\ncollect the HTML output and inject the final HTML DOM at the desired location.\n\n\n<h3>Renderers</h3>\nWhen the {@link #renderControl} method of the RenderManager is invoked, it will retrieve\nthe default renderer for that control. By convention, the default renderer is implemented in its\nown namespace (static class) which matches the name of the control's class with the additional\nsuffix 'Renderer'. So for a control <code>sap.m.Input</code> the default renderer will be searched\nfor under the global name <code>sap.m.Input<i>Renderer</i></code>.",
			"constructor": {
				"visibility": "public",
				"description": "Creates an instance of the RenderManager.\n\nApplications or controls must not call the <code>RenderManager</code> constructor on their own\nbut should use the {@link sap.ui.core.Core#createRenderManager sap.ui.getCore().createRenderManager()}\nmethod to create an instance for their exclusive use."
			},
			"methods": [
				{
					"name": "addClass",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the class to be added; null values are ignored"
						}
					],
					"description": "Adds a class to the class collection if the name is not empty or null.\nThe class collection is flushed if it is written to the buffer using {@link #writeClasses}"
				},
				{
					"name": "addStyle",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "This render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the CSS property to write"
						},
						{
							"name": "value",
							"type": "string|float|int",
							"optional": false,
							"description": "Value to write"
						}
					],
					"description": "Adds a style property to the style collection if the value is not empty or null\nThe style collection is flushed if it is written to the buffer using {@link #writeStyle}"
				},
				{
					"name": "cleanupControlWithoutRendering",
					"visibility": "public",
					"since": "1.22.9",
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "Control that should be cleaned up"
						}
					],
					"description": "Cleans up the rendering state of the given control without rendering it.\n\nA control is responsible for the rendering of all its child controls.\nBut in some cases it makes sense that a control only renders a subset of its children\nbased on some criterion. For example, a typical carousel control might, for performance\nreasons, only render the currently visible children (and maybe some child before and\nafter the visible area to facilitate slide-in / slide-out animations), but not all children.\nThis leads to situations where a child had been rendered before, but shouldn't be rendered\nanymore after an update of the carousel's position. The DOM related state of that child then\nmust be cleaned up correctly, e.g. by de-registering resize handlers or native event handlers.\n<code>cleanupControlWithoutRendering</code> helps with that task by triggering the same\nactivities that the normal rendering triggers before the rendering of a control\n(e.g. it fire the <code>BeforeRendering</code> event). It just doesn't call the renderer\nand the control will not receive an <code>AfterRendering</code> event.\n\nThe following example shows how <code>renderControl</code> and <code>cleanupControlWithoutRendering</code>\nshould be used:\n\n<pre>\n  CarouselRenderer.render = function(rm, oCarousel){\n\n    ...\n\n    oCarousel.getPages().forEach( oPage ) {\n       if ( oCarousel.isPageToBeRendered( oPage ) ) {\n          rm.renderControl( oPage ); // onBeforeRendering, render, later onAfterRendering\n       } else {\n          rm.cleanupControlWithoutRendering( oPage ); // onBeforeRendering\n       }\n    }\n\n    ...\n\n  };\n</pre>\n\n<h3>DOM Removal</h3>\nThe method does not remove the DOM of the given control. The caller of this method has\nto take care to remove it at some later point in time. It should indeed be <i>later</i>,\nnot <i>before</i> as the <code>onBeforeRendering</code> hook of the control might need\naccess to the old DOM for a proper cleanup.\n\nFor parents which are rendered with the normal mechanism as shown in the example above,\nthe removal of the old child DOM is guaranteed. The whole DOM of the parent control\n(including the DOM of the no longer rendered child) will be replaced with new DOM (no\nlonger containing the child) when the rendering cycle finishes.\n\n<b>Note:</b>: the functionality of this method is different from the default handling for\ninvisible controls (controls with <code>visible == false</code>). The standard rendering\nfor invisible controls still renders a placeholder DOM. This allows re-rendering of the\ninvisible control once it becomes visible again without a need to render its parent, too.\nChildren that are cleaned up with this method here, are supposed to have no more DOM at all.\nRendering them later on therefore requires an involvement (typically: a rendering) of\ntheir parent."
				},
				{
					"name": "createInvisiblePlaceholderId",
					"visibility": "protected",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The ID used for the invisible Placeholder of this element"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "The Element instance for which to create the placeholder ID"
						}
					],
					"description": "Creates the ID to be used for the invisible Placeholder DOM element.\nThis method can be used to get direct access to the placeholder DOM element.\nAlso statically available as RenderManager.createInvisiblePlaceholderId()"
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Cleans up the resources associated with this instance.\n\nAfter the instance has been destroyed, it must not be used anymore.\nApplications should call this function if they don't need the instance any longer."
				},
				{
					"name": "findPreservedContent",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery",
						"description": "a jQuery collection representing the found content"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "control id to search content for."
						}
					],
					"description": "Searches \"to-be-preserved\" nodes for the given control id."
				},
				{
					"name": "flush",
					"visibility": "public",
					"parameters": [
						{
							"name": "oTargetDomNode",
							"type": "Element",
							"optional": false,
							"description": "Node in the DOM where the buffer should be flushed into"
						},
						{
							"name": "bDoNotPreserve",
							"type": "boolean",
							"optional": false,
							"description": "Determines whether the content is preserved (<code>false</code>) or not (<code>true</code>)"
						},
						{
							"name": "vInsert",
							"type": "boolean|int",
							"optional": false,
							"description": "Determines whether the buffer of the target DOM node is expanded (<code>true</code>) or\n                 replaced (<code>false</code>), or the new entry is inserted at a specific position\n                 (value of type <code>int</code>)"
						}
					],
					"description": "Renders the content of the rendering buffer into the provided DOM node.\n\nThis function must not be called within control renderers.\n\nUsage:\n<pre>\n\n  // Create a new instance of the RenderManager\n  var rm = sap.ui.getCore().createRenderManager();\n\n  // Use the writer API to fill the buffers\n  rm.write(...);\n  rm.renderControl(oControl);\n  rm.write(...);\n  ...\n\n  // Finally flush the buffer into the provided DOM node (The current content is removed)\n  rm.flush(oDomNode);\n\n  // If the instance is not needed anymore, destroy it\n  rm.destroy();\n\n</pre>"
				},
				{
					"name": "getConfiguration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Configuration",
						"description": "the configuration object"
					},
					"description": "Returns the configuration object\nShortcut for <code>sap.ui.getCore().getConfiguration()</code>"
				},
				{
					"name": "getHTML",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the resulting HTML of the provided control"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the Control whose HTML should be returned."
						}
					],
					"description": "Renders the given {@link sap.ui.core.Control} and finally returns\nthe content of the rendering buffer.\nEnsures the buffer is restored to the state before calling this method.",
					"deprecated": {
						"since": "0.15.0",
						"text": "Use <code>flush()</code> instead render content outside the rendering phase."
					}
				},
				{
					"name": "getPreserveAreaRef",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Element",
						"description": "the hidden area reference belonging to this core instance."
					},
					"description": "Returns the hidden area reference belonging to this window instance."
				},
				{
					"name": "getRenderer",
					"visibility": "public",
					"returnValue": {
						"description": "the renderer class for a given control instance"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that should be rendered"
						}
					],
					"description": "Returns the renderer class for a given control instance"
				},
				{
					"name": "getRenderer",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the renderer class for a given control instance"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that should be rendered"
						}
					],
					"description": "Returns the renderer class for a given control instance"
				},
				{
					"name": "preserveContent",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "oRootNode",
							"type": "Element",
							"optional": false,
							"description": "to search for \"to-be-preserved\" nodes"
						},
						{
							"name": "bPreserveRoot",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether to preserve the root itself"
						},
						{
							"name": "bPreserveNodesWithId",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether to preserve nodes with an id as well"
						}
					],
					"description": "Collects descendants of the given root node that need to be preserved before the root node\nis wiped out. The \"to-be-preserved\" nodes are moved to a special, hidden 'preserve' area.\n\nA node is declared \"to-be-preserved\" when it has the <code>data-sap-ui-preserve</code>\nattribute set. When the optional parameter <code>bPreserveNodesWithId</code> is set to true,\nthen nodes with an id are preserved as well and their <code>data-sap-ui-preserve</code> attribute\nis set automatically. This option is used by UIAreas when they render for the first time and\nsimplifies the handling of predefined HTML content in a web page.\n\nThe \"to-be-preserved\" nodes are searched with a depth first search and moved to the 'preserve'\narea in the order that they are found. So for direct siblings the order should be stable."
				},
				{
					"name": "render",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the Control that should be rendered."
						},
						{
							"name": "oTargetDomNode",
							"type": "Element",
							"optional": false,
							"description": "The node in the DOM where the result of the rendering should be inserted."
						}
					],
					"description": "Renders the given control to the provided DOMNode.\n\nIf the control is already rendered in the provided DOMNode the DOM of the control is replaced. If the control\nis already rendered somewhere else the current DOM of the control is removed and the new DOM is appended\nto the provided DOMNode.\n\nThis function must not be called within control renderers."
				},
				{
					"name": "renderControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that should be rendered"
						}
					],
					"description": "Turns the given control into its HTML representation and appends it to the\nrendering buffer.\n\nIf the given control is undefined or null, then nothing is rendered."
				},
				{
					"name": "translate",
					"visibility": "public",
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false
						}
					],
					"deprecated": {
						"text": "Not implemented - DO NOT USE"
					}
				},
				{
					"name": "write",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string|number",
							"optional": false,
							"description": "(can be a number too)"
						}
					],
					"description": "Write the given texts to the buffer"
				},
				{
					"name": "writeAcceleratorKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"deprecated": {
						"text": "Not implemented - DO NOT USE"
					}
				},
				{
					"name": "writeAccessibilityState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Element",
							"optional": true,
							"description": "the element whose accessibility state should be rendered"
						},
						{
							"name": "mProps",
							"type": "Object",
							"optional": true,
							"description": "a map of properties that should be added additionally or changed."
						}
					],
					"description": "Writes the accessibility state (see WAI-ARIA specification) of the provided element into the HTML\nbased on the element's properties and associations.\n\nThe ARIA properties are only written when the accessibility feature is activated in the UI5 configuration.\n\nThe following properties/values to ARIA attribute mappings are done (if the element does have such properties):\n<ul>\n<li><code>editable===false</code> => <code>aria-readonly=\"true\"</code></li>\n<li><code>enabled===false</code> => <code>aria-disabled=\"true\"</code></li>\n<li><code>visible===false</code> => <code>aria-hidden=\"true\"</code></li>\n<li><code>required===true</code> => <code>aria-required=\"true\"</code></li>\n<li><code>selected===true</code> => <code>aria-selected=\"true\"</code></li>\n<li><code>checked===true</code> => <code>aria-checked=\"true\"</code></li>\n</ul>\n\nIn case of the required attribute also the Label controls which referencing the given element in their 'for' relation\nare taken into account to compute the <code>aria-required</code> attribute.\n\nAdditionally, the association <code>ariaDescribedBy</code> and <code>ariaLabelledBy</code> are used to write\nthe ID lists of the ARIA attributes <code>aria-describedby</code> and <code>aria-labelledby</code>.\n\nLabel controls that reference the given element in their 'for' relation are automatically added to the\n<code>aria-labelledby</code> attributes.\n\nNote: This function is only a heuristic of a control property to ARIA attribute mapping. Control developers\nhave to check whether it fulfills their requirements. In case of problems (for example the RadioButton has a\n<code>selected</code> property but must provide an <code>aria-checked</code> attribute) the auto-generated\nresult of this function can be influenced via the parameter <code>mProps</code> as described below.\n\nThe parameter <code>mProps</code> can be used to either provide additional attributes which should be added and/or\nto avoid the automatic generation of single ARIA attributes. The 'aria-' prefix will be prepended automatically to the keys\n(Exception: Attribute 'role' does not get the prefix 'aria-').\n\nExamples:\n<code>{hidden : true}</code> results in <code>aria-hidden=\"true\"</code> independent of the presence or absence of\nthe visibility property.\n<code>{hidden : null}</code> ensures that no <code>aria-hidden</code> attribute is written independent of the presence\nor absence of the visibility property.\nThe function behaves in the same way for the associations <code>ariaDescribedBy</code> and <code>ariaLabelledBy</code>.\nTo append additional values to the auto-generated <code>aria-describedby</code> and <code>aria-labelledby</code> attributes\nthe following format can be used:\n<code>{describedby : {value: \"id1 id2\", append: true}}</code> => <code>aria-describedby=\"ida idb id1 id2\"</code> (assuming that \"ida idb\"\nis the auto-generated part based on the association <code>ariaDescribedBy</code>)."
				},
				{
					"name": "writeAttribute",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "This render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the attribute"
						},
						{
							"name": "vValue",
							"type": "string|number|boolean",
							"optional": false,
							"description": "Value of the attribute"
						}
					],
					"description": "Writes the attribute and its value into the HTML.\n\nFor details about the escaping refer to {@link jQuery.sap.encodeHTML}"
				},
				{
					"name": "writeAttributeEscaped",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "This render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the attribute"
						},
						{
							"name": "vValue",
							"type": "any",
							"optional": false,
							"description": "Value of the attribute"
						}
					],
					"description": "Writes the attribute and a value into the HTML, the value will be encoded.\n\nThe value is properly encoded to avoid XSS attacks."
				},
				{
					"name": "writeClasses",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Element|boolean",
							"optional": true,
							"description": "an Element from which to add custom style classes (instead of adding from the control itself)"
						}
					],
					"description": "Writes and flushes the class collection (all CSS classes added by \"addClass()\" since the last flush).\nAlso writes the custom style classes added by the application with \"addStyleClass(...)\". Custom classes are\nadded by default from the currently rendered control. If an oElement is given, this Element's custom style\nclasses are added instead. If oElement === false, no custom style classes are added."
				},
				{
					"name": "writeControlData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control whose identifying information should be written to the buffer"
						}
					],
					"description": "Writes the controls data into the HTML.\nControl Data consists at least of the id of a control"
				},
				{
					"name": "writeElementData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "the element whose identifying information should be written to the buffer"
						}
					],
					"description": "Writes the elements data into the HTML.\nElement Data consists at least of the id of a element"
				},
				{
					"name": "writeEscaped",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "any",
							"optional": false
						},
						{
							"name": "bLineBreaks",
							"type": "boolean",
							"optional": false,
							"description": "Whether to convert line breaks into <br> tags"
						}
					],
					"description": "Escape text for HTML and write it to the buffer.\n\nFor details about the escaping refer to {@link jQuery.sap.encodeHTML}"
				},
				{
					"name": "writeIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "sURI",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "URI of an image or of an icon registered in {@link sap.ui.core.IconPool}"
						},
						{
							"name": "aClasses",
							"type": "array|string",
							"optional": true,
							"description": "Additional classes that are added to the rendered tag"
						},
						{
							"name": "mAttributes",
							"type": "object",
							"optional": true,
							"description": "Additional attributes that will be added to the rendered tag"
						}
					],
					"description": "Writes either an &lt;img&gt; tag for normal URI or a &lt;span&gt; tag with needed properties for an icon URI.\n\nAdditional classes and attributes can be added to the tag with the second and third parameter.\nAll of the given attributes are escaped for security consideration.\n\nWhen an &lt;img&gt; tag is rendered, the following two attributes are added by default\nand can be overwritten with corresponding values in the <code>mAttributes</code> parameter:\n<ul>\n<li><code>role: \"presentation\"</code></Li>\n<li><code>alt: \"\"</code></li>\n</ul>"
				},
				{
					"name": "writeInvisiblePlaceholderData",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "This render manager instance to allow chaining"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "An instance of sap.ui.core.Element"
						}
					],
					"description": "Writes necessary invisible control/element placeholder data into the HTML.\n\nControls should use this method only if the standard implementation of the RenderManager doesn't fit their needs.\nThat standard implementation renders an invisible &lt;span&gt; element for controls with <code>visible:false</code> to improve\nre-rendering performance. Due to the fault tolerance of the HTML5 standard, such &lt;span&gt; elements are accepted in many\nscenarios and won't appear in the render tree of the browser, However, in some cases, controls may need to write a different\nelement when the &lt;span&gt; is not an allowed element (e.g. within the &lt;tr&gt; or &lt;li&gt; group).\n\nThe caller needs to start an opening HTML tag, then call this method, then complete the opening and closing tag.\n\n<pre>\n\n  oRenderManager.write(\"&lt;tr\");\n  oRenderManager.writeInvisiblePlaceholderData(oControl);\n  oRenderManager.write(\"&gt;&lt;/tr\");\n\n</pre>"
				},
				{
					"name": "writeStyles",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.RenderManager",
						"description": "this render manager instance to allow chaining"
					},
					"description": "Writes and flushes the style collection"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.ResizeHandler",
			"basename": "ResizeHandler",
			"resource": "sap/ui/core/ResizeHandler.js",
			"module": "sap/ui/core/ResizeHandler",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "The resize handling API provides firing of resize events on all browsers by regularly\nchecking the width and height of registered DOM elements or controls and firing events accordingly.",
			"methods": [
				{
					"name": "deregister",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "The registration ID of the handler to deregister. The ID was provided by function {@link sap.ui.core.ResizeHandler.register}\n           when the handler was registered."
						}
					],
					"description": "Deregisters a previously registered handler for resize events with the given registration ID."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.ResizeHandler with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.ResizeHandler."
				},
				{
					"name": "register",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "A registration ID which can be used for deregistering the event handler, see {@link sap.ui.core.ResizeHandler.deregister}.\n            If the UI5 framework is not yet initialized <code>null</code> is returned."
					},
					"parameters": [
						{
							"name": "oRef",
							"type": "DOMRef|sap.ui.core.Control",
							"optional": false,
							"description": "The control or the DOM reference for which the given event handler should be registered (beside the window)"
						},
						{
							"name": "fHandler",
							"type": "function",
							"optional": false,
							"description": "The event handler which should be called whenever the size of the given reference is changed.\n            The event object is passed as first argument to the event handler. See the description of this function for more details about the available parameters of this event."
						}
					],
					"description": "Registers the given event handler for resize events on the given DOM element or control.\n\n<b>Note:</b> This function must not be used before the UI5 framework is initialized.\nPlease use the {@link sap.ui.core.Core#attachInit init event} of UI5 if you are not sure whether this is the case.\n\nThe resize handler periodically checks the dimensions of the registered reference. Whenever it detects changes, an event is fired.\nBe careful when changing dimensions within the event handler which might cause another resize event and so on.\n\nThe available parameters of the resize event are:\n<ul>\n<li><code>oEvent.target</code>: The DOM element of which the dimensions were checked</li>\n<li><code>oEvent.size.width</code>: The current width of the DOM element in pixels</li>\n<li><code>oEvent.size.height</code>: The current height of the DOM element in pixels</li>\n<li><code>oEvent.oldSize.width</code>: The previous width of the DOM element in pixels</li>\n<li><code>oEvent.oldSize.height</code>: The previous height of the DOM element in pixels</li>\n<li><code>oEvent.control</code>: The control which was given during registration of the event handler (if present)</li>\n</ul>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.routing.HashChanger",
			"basename": "HashChanger",
			"resource": "sap/ui/core/routing/HashChanger.js",
			"module": "sap/ui/core/routing/HashChanger",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"description": "Class for manipulating and receiving changes of the browserhash with the hasher framework.\nFires a \"hashChanged\" event if the browser hash changes.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public"
			},
			"events": [
				{
					"name": "hashChanged",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"oldHash": {
											"name": "oldHash",
											"type": "string",
											"optional": false,
											"description": "The URL hash before it's changed"
										},
										"newHash": {
											"name": "newHash",
											"type": "object",
											"optional": false,
											"description": "The new URL hash"
										}
									}
								}
							}
						}
					],
					"description": "The 'hashChanged' event is fired when the URL hash is changed"
				},
				{
					"name": "hashReplaced",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"sHash": {
											"name": "sHash",
											"type": "string",
											"optional": false,
											"description": "The URL hash"
										}
									}
								}
							}
						}
					],
					"description": "The 'hashReplaced' event is fired when {@link sap.ui.core.routing.HashChanger#replaceHash} is called"
				},
				{
					"name": "hashSet",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"sHash": {
											"name": "sHash",
											"type": "string",
											"optional": false,
											"description": "The URL hash"
										}
									}
								}
							}
						}
					],
					"description": "The 'hashSet' event is fired when {@link sap.ui.core.routing.HashChanger#setHash} is called"
				}
			],
			"methods": [
				{
					"name": "destroy",
					"visibility": "protected",
					"description": "Cleans the event registration"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.routing.HashChanger with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireHashChanged",
					"visibility": "protected",
					"parameters": [
						{
							"name": "newHash",
							"type": "string",
							"optional": false,
							"description": "the new hash of the browser"
						},
						{
							"name": "oldHash",
							"type": "string",
							"optional": false,
							"description": "the previous hash"
						}
					],
					"description": "Fires the hashchanged event, may be extended to modify the hash before fireing the event"
				},
				{
					"name": "getHash",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the current hash"
					},
					"description": "Gets the current hash"
				},
				{
					"name": "getInstance",
					"visibility": "public",
					"static": true,
					"description": "Gets a global singleton of the HashChanger. The singleton will get created when this function is invoked for the first time."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.routing.HashChanger."
				},
				{
					"name": "init",
					"visibility": "public",
					"returnValue": {
						"description": "false if it was initialized before, true if it was initialized the first time"
					},
					"description": "Will start listening to hashChanges with the parseHash function.\nThis will also fire a hashchanged event with the initial hash."
				},
				{
					"name": "replaceHash",
					"visibility": "public",
					"parameters": [
						{
							"name": "sHash",
							"type": "string",
							"optional": false,
							"description": "the hash"
						}
					],
					"description": "Replaces the hash to a certain value. When using the replace function no browser history is written.\nIf you want to have an entry in the browser history, please use set setHash function."
				},
				{
					"name": "replaceHashChanger",
					"visibility": "protected",
					"static": true,
					"parameters": [
						{
							"name": "oHashChanger",
							"type": "sap.ui.core.routing.HashChanger",
							"optional": false,
							"description": "the new instance for the global singleton"
						}
					],
					"description": "Sets the hashChanger to a new instance, destroys the old one and copies all its event listeners to the new one"
				},
				{
					"name": "setHash",
					"visibility": "public",
					"parameters": [
						{
							"name": "sHash",
							"type": "string",
							"optional": false,
							"description": "the hash"
						}
					],
					"description": "Sets the hash to a certain value. When using the set function a browser history  entry is written.\nIf you do not want to have an entry in the browser history, please use set replaceHash function."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.routing.History",
			"basename": "History",
			"resource": "sap/ui/core/routing/History.js",
			"module": "sap/ui/core/routing/History",
			"export": "",
			"static": true,
			"visibility": "public",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oHashChanger",
						"type": "sap.ui.core.routing.HashChanger",
						"optional": false,
						"description": "required, without a HashChanger this class cannot work. The class needs to be aware of the hash-changes."
					}
				],
				"description": "Used to determine the {@link sap.ui.core.routing.HistoryDirection} of the current or a future navigation,\ndone with a {@link sap.ui.core.routing.Router} or {@link sap.ui.core.routing.HashChanger}.\n\n<strong>ATTENTION:</strong> this class will not be accurate if someone does hash-replacement without the named classes above\nIf you are manipulating the hash directly this class is not supported anymore."
			},
			"methods": [
				{
					"name": "getDirection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.HistoryDirection",
						"description": "or undefined, if no navigation has taken place yet."
					},
					"parameters": [
						{
							"name": "sNewHash",
							"type": "string",
							"optional": true,
							"description": "optional, if this parameter is not passed the last hashChange is taken."
						}
					],
					"description": "Determines what the navigation direction for a newly given hash would be\nIt will say Unknown if there is a history foo - bar (current history) - foo\nIf you now ask for the direction of the hash \"foo\" you get Unknown because it might be backwards or forwards.\nFor hash replacements, the history stack will be replaced at this position for the history."
				},
				{
					"name": "getInstance",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.routing.History",
						"description": "a global singleton that gets created as soon as the sap.ui.core.routing.History is required"
					}
				},
				{
					"name": "getPreviousHash",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "or undefined"
					},
					"description": "gets the previous hash in the history - if the last direction was Unknown or there was no navigation yet, undefined will be returned"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.routing.HistoryDirection",
			"basename": "routing.HistoryDirection",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "routing.HistoryDirection",
			"static": true,
			"visibility": "public",
			"description": "Enumaration for different HistoryDirections",
			"properties": [
				{
					"name": "Backwards",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The page has already been navigated to and it was the precessor of the previous page"
				},
				{
					"name": "Forwards",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The page has already been navigated to and it was the successor of the previous page"
				},
				{
					"name": "NewEntry",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A new Entry is added to the history"
				},
				{
					"name": "Unknown",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A Navigation took place, but it could be any of the other three states"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.routing.Route",
			"basename": "Route",
			"resource": "sap/ui/core/routing/Route.js",
			"module": "sap/ui/core/routing/Route",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "The",
						"type": "sap.ui.core.routing.Router",
						"optional": false,
						"description": "router instance, the route will be added to."
					},
					{
						"name": "oConfig",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"name": {
								"name": "name",
								"type": "string",
								"optional": false,
								"description": "the name of the route - it will be used to retrieve the route from the router, it needs to be unique per router instance.</li>"
							},
							"pattern": {
								"name": "pattern",
								"type": "string",
								"optional": true,
								"description": "the url pattern where it needs to match again. A pattern may consist of the following:\n<ul>\n<li>\nhardcoded parts: \"pattern\" : \"product/settings\" - this pattern will only match if the hash of the browser is product/settings and no arguments will be passed to the events of the route.</br>\n</li>\n<li>\nmandatory parameters: \"pattern\" : \"product/{id}\" - {id} is a mandatory parameter, e. g. the following hashes would match: product/5, product/3. The pattenMatched event will get 5 or 3 passed as id in its arguments.The hash product/ will not match.</br>\n</li>\n<li>\noptional parameters: \"pattern\" : \"product/{id}/detail/:detailId:\" - :detailId: is an optional parameter, e. g. the following hashes would match: product/5/detail, product/3/detail/2</br>\n</li>\n<li>\nquery parameters: \"pattern\" : \"product{?query}\" // {?query} allows you to pass queries with any parameters, e. g. the following hashes would match: product?first=firstValue, product?first=firstValue&second=secondValue</br>\n</li>\n<li>\nrest as string parameters: \"pattern\" : \":all*:\" - this pattern will define an optional variable that will pass the whole hash as string to the routing events. It may be used to define a catchall route, e. g. the following hashes would match: foo, product/5/3, product/5/detail/3/foo. You can also combine it with the other variables but make sure a variable with a * is the last one.</br>\n</ul>"
							},
							"greedy": {
								"name": "greedy",
								"type": "boolean",
								"optional": true,
								"description": "@since 1.27: default: false - By default only the first route matching the hash, will fire events. If greedy is turned on for a route its events will be fired even if another route has already matched."
							},
							"parent": {
								"name": "parent",
								"type": "String",
								"optional": true,
								"description": "@since 1.32 This property contains the information about the route which nests this route in the form: \"[componentName:]routeName\". The nesting routes pattern will be prefixed to this routes pattern and hence the nesting route also matches if this one matches."
							},
							"target": {
								"name": "target",
								"type": "string|string[]",
								"optional": true,
								"description": "one or multiple name of targets {@link sap.ui.core.routing.Targets}. As soon as the route matches, the target will be displayed. All the deprecated parameters are ignored, if a target is used."
							},
							"view": {
								"name": "view",
								"type": "string",
								"optional": true,
								"description": "@deprecated since 1.28 - use target.viewName. The name of a view that will be created, the first time this route will be matched. To place the view into a Control use the targetAggregation and targetControl. Views will only be created once per Router.</li>"
							},
							"viewType": {
								"name": "viewType",
								"type": "string",
								"optional": true,
								"description": "@deprecated since 1.28 - use target.viewType. The type of the view that is going to be created. eg: \"XML\", \"JS\"</li>"
							},
							"viewPath": {
								"name": "viewPath",
								"type": "string",
								"optional": true,
								"description": "@deprecated since 1.28 - use target.viewPath. A prefix that will be prepended in front of the view eg: view is set to \"myView\" and viewPath is set to \"myApp\" - the created view will be \"myApp.myView\".</li>"
							},
							"targetParent": {
								"name": "targetParent",
								"type": "string",
								"optional": true,
								"description": "@deprecated since 1.28 - use config.rootView (only available in the config). the id of the parent of the targetControl - This should be the id view your targetControl is located in. By default, this will be the view created by a component, or if the Route is a subroute the view of the parent route is taken. You only need to specify this, if you are not using a router created by a component on your top level routes.</li>"
							},
							"targetControl": {
								"name": "targetControl",
								"type": "string",
								"optional": true,
								"description": "@deprecated since 1.28 - use target.controlId. Views will be put into a container Control, this might be a {@link sap.ui.ux3.Shell} control or a {@link sap.m.NavContainer} if working with mobile, or any other container. The id of this control has to be put in here.</li>"
							},
							"targetAggregation": {
								"name": "targetAggregation",
								"type": "string",
								"optional": true,
								"description": "@deprecated since 1.28 - use target.controlAggregation. The name of an aggregation of the targetControl, that contains views. Eg: a {@link sap.m.NavContainer} has an aggregation \"pages\", another Example is the {@link sap.ui.ux3.Shell} it has \"content\".</li>"
							},
							"clearTarget": {
								"name": "clearTarget",
								"type": "boolean",
								"optional": true,
								"description": "@deprecated since 1.28 - use target.clearControlAggregation. Default is false. Defines a boolean that can be passed to specify if the aggregation should be cleared before adding the View to it. When using a {@link sap.ui.ux3.Shell} this should be true. For a {@link sap.m.NavContainer} it should be false.</li>"
							},
							"subroutes": {
								"name": "subroutes",
								"type": "object",
								"optional": true,
								"description": "@deprecated since 1.28 - use targets.parent. one or multiple routeconfigs taking all of these parameters again. If a subroute is hit, it will fire tge routeMatched event for all its parents. The routePatternMatched event will only be fired for the subroute not the parents. The routing will also display all the targets of the subroutes and its parents."
							}
						},
						"description": "configuration object for the route"
					},
					{
						"name": "oParent",
						"type": "sap.ui.core.routing.Route",
						"optional": true,
						"description": "The parent route - if a parent route is given, the routeMatched event of this route will also trigger the route matched of the parent and it will also create the view of the parent(if provided)."
					}
				],
				"description": "Instantiates a SAPUI5 Route"
			},
			"events": [
				{
					"name": "beforeMatched",
					"visibility": "public",
					"since": "1.46.1",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"name": {
											"name": "name",
											"type": "string",
											"optional": false,
											"description": "The name of the route"
										},
										"arguments": {
											"name": "arguments",
											"type": "object",
											"optional": false,
											"description": "An key-value pair object which contains the arguments defined in the route\n resolved with the corresponding information from the current URL hash"
										},
										"config": {
											"name": "config",
											"type": "object",
											"optional": false,
											"description": "The configuration object of the route"
										},
										"nestedRoute": {
											"name": "nestedRoute",
											"type": "sap.ui.core.routing.Route",
											"optional": true,
											"description": "The nested route instance of this route. The event\n is fired on this route because the pattern in the nested route is matched with the current URL hash. This parameter can be\n used to decide whether the current route is matched because of its nested child route. For more information about nested\n child route please refer to the documentation of oConfig.parent in {@link sap.ui.core.routing.Route#constructor}"
										}
									}
								}
							}
						}
					],
					"description": "The 'beforeMatched' event is fired before the corresponding target is loaded and placed, when the current URL hash matches:\n<pre>\n a. the pattern of the route.\n b. the pattern of its sub-route.\n c. the pattern of its nested route. When this occurs, the 'nestedRoute' parameter is set with the instance of nested route.\n</pre>"
				},
				{
					"name": "matched",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"name": {
											"name": "name",
											"type": "string",
											"optional": false,
											"description": "The name of the route"
										},
										"arguments": {
											"name": "arguments",
											"type": "object",
											"optional": false,
											"description": "An key-value pair object which contains the arguments defined in the route\n resolved with the corresponding information from the current URL hash"
										},
										"config": {
											"name": "config",
											"type": "object",
											"optional": false,
											"description": "The configuration object of the route"
										},
										"nestedRoute": {
											"name": "nestedRoute",
											"type": "sap.ui.core.routing.Route",
											"optional": true,
											"description": "The nested route instance of this route. The event\n is fired on this route because the pattern in the nested route is matched with the current URL hash. This parameter can be\n used to decide whether the current route is matched because of its nested child route. For more information about nested\n child route please refer to the documentation of oConfig.parent in {@link sap.ui.core.routing.Route#constructor}"
										}
									}
								}
							}
						}
					],
					"description": "The 'matched' event is fired, when the current URL hash matches:\n<pre>\n a. the pattern of the route.\n b. the pattern of its sub-route.\n c. the pattern of its nested route. When this occurs, the 'nestedRoute' parameter is set with the instance of nested route.\n</pre>\n\nPlease refer to event {@link sap.ui.core.routing.Route#event:patternMatched|patternMatched} for getting notified only when its own pattern is matched with the URL hash not its sub-routes or nested route."
				},
				{
					"name": "patternMatched",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"name": {
											"name": "name",
											"type": "string",
											"optional": false,
											"description": "The name of the route"
										},
										"arguments": {
											"name": "arguments",
											"type": "object",
											"optional": false,
											"description": "An key-value pair object which contains the arguments defined in the route\n resolved with the corresponding information from the current URL hash"
										},
										"config": {
											"name": "config",
											"type": "object",
											"optional": false,
											"description": "The configuration object of the route"
										}
									}
								}
							}
						}
					],
					"description": "The 'patternMatched' event is fired, only when the current URL hash matches the pattern of the route."
				}
			],
			"methods": [
				{
					"name": "attachBeforeMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Route",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.46.1",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'beforeMatched' event of this <code>sap.ui.core.routing.Route</code>.<br/>"
				},
				{
					"name": "attachMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Route",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25.1",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'matched' event of this <code>sap.ui.core.routing.Route</code>.<br/>"
				},
				{
					"name": "attachPatternMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Route",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25.1",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'patternMatched' event of this <code>sap.ui.core.routing.Route</code>.<br/>"
				},
				{
					"name": "destroy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Route",
						"description": "this for chaining."
					},
					"description": "Destroys a route"
				},
				{
					"name": "detachBeforeMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Route",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.46.1",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'beforeMatched' event of this <code>sap.ui.core.routing.Route</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Route",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25.1",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'matched' event of this <code>sap.ui.core.routing.Route</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachPatternMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Route",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.25.1",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'patternMatched' event of this <code>sap.ui.core.routing.Route</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.routing.Route with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireBeforeMatched",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"since": "1.46.1",
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event beforeMatched to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.routing.Route."
				},
				{
					"name": "getPattern",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the routes pattern"
					},
					"description": "Return the pattern of the route. If there are multiple patterns, the first pattern is returned"
				},
				{
					"name": "getURL",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the unencoded pattern with interpolated arguments"
					},
					"parameters": [
						{
							"name": "oParameters",
							"type": "object",
							"optional": false,
							"description": "Parameters for the route"
						}
					],
					"description": "Returns the URL for the route and replaces the placeholders with the values in oParameters"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.routing.Router",
			"basename": "Router",
			"resource": "sap/ui/core/routing/Router.js",
			"module": "sap/ui/core/routing/Router",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oRoutes",
						"type": "object|object[]",
						"optional": true,
						"description": "may contain many Route configurations as {@link sap.ui.core.routing.Route#constructor}.<br/>\nEach of the routes contained in the array/object will be added to the router.<br/>\n\nOne way of defining routes is an array:\n<pre>\n[\n    //Will create a route called 'firstRouter' you can later use this name in navTo to navigate to this route\n    {\n        name: \"firstRoute\"\n        pattern : \"usefulPattern\"\n    },\n    //Will create a route called 'anotherRoute'\n    {\n        name: \"anotherRoute\"\n        pattern : \"anotherPattern\"\n    }\n]\n</pre>\n\nThe alternative way of defining routes is an Object.\nIf you choose this way, the name attribute is the name of the property.\n<pre>\n{\n    //Will create a route called 'firstRouter' you can later use this name in navTo to navigate to this route\n    firstRoute : {\n        pattern : \"usefulPattern\"\n    },\n    //Will create a route called 'anotherRoute'\n    anotherRoute : {\n        pattern : \"anotherPattern\"\n    }\n}\n</pre>\nThe values that may be provided are the same as in {@link sap.ui.core.routing.Route#constructor}"
					},
					{
						"name": "oConfig",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"async": {
								"name": "async",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "@since 1.34. Whether the views which are loaded within this router instance asyncly. The default value is set to false."
							}
						},
						"description": "Default values for route configuration - also takes the same parameters as {@link sap.ui.core.routing.Target#constructor}.<br/>\nThis config will be used for routes and for targets, used in the router<br/>\nEg: if the config object specifies :\n<pre>\n<code>\n{\n    viewType : \"XML\"\n}\n</code>\n</pre>\nThe targets look like this:\n<pre>\n{\n    xmlTarget : {\n        ...\n    },\n    jsTarget : {\n        viewType : \"JS\"\n        ...\n    }\n}\n</pre>\nThen the effective config will look like this:\n<pre>\n{\n    xmlTarget : {\n        viewType : \"XML\"\n        ...\n    },\n    jsTarget : {\n        viewType : \"JS\"\n        ...\n    }\n}\n</pre>\n\nSince the xmlTarget does not specify its viewType, XML is taken from the config object. The jsTarget is specifying it, so the viewType will be JS."
					},
					{
						"name": "oOwner",
						"type": "sap.ui.core.UIComponent",
						"optional": true,
						"description": "the Component of all the views that will be created by this Router,<br/>\nwill get forwarded to the {@link sap.ui.core.routing.Views#constructor}.<br/>\nIf you are using the componentMetadata to define your routes you should skip this parameter."
					},
					{
						"name": "oTargetsConfig",
						"type": "object",
						"optional": true,
						"description": "available @since 1.28 the target configuration, see {@link sap.ui.core.routing.Targets#constructor} documentation (the options object).<br/>\nYou should use Targets to create and display views. Since 1.28 the route should only contain routing relevant properties.<br/>\n<b>Example:</b>\n<pre>\n<code>\n    new Router(\n    // Routes\n    [\n        {\n            // no view creation related properties are in the route\n            name: \"startRoute\",\n            //no hash\n            pattern: \"\",\n            // you can find this target in the targetConfig\n            target: \"welcome\"\n        }\n    ],\n    // Default values shared by routes and Targets\n    {\n        viewNamespace: \"my.application.namespace\",\n        viewType: \"XML\"\n    },\n    // You should only use this constructor when you are not using a router with a component.\n    // Please use the metadata of a component to define your routes and targets.\n    // The documentation can be found here: {@link sap.ui.core.UIComponent.extend}.\n    null,\n    // Target config\n    {\n         //same name as in the route called 'startRoute'\n         welcome: {\n             // All properties for creating and placing a view go here or in the config\n             viewName: \"Welcome\",\n             controlId: \"app\",\n             controlAggregation: \"pages\"\n         }\n    })\n</code>\n</pre>"
					}
				],
				"description": "Instantiates a SAPUI5 Router"
			},
			"events": [
				{
					"name": "beforeRouteMatched",
					"visibility": "public",
					"since": "1.46.1",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"name": {
											"name": "name",
											"type": "string",
											"optional": false,
											"description": "The name of the route"
										},
										"arguments": {
											"name": "arguments",
											"type": "object",
											"optional": false,
											"description": "A key-value pair object which contains the arguments defined in the route\n resolved with the corresponding information from the current URL hash"
										},
										"config": {
											"name": "config",
											"type": "object",
											"optional": false,
											"description": "The configuration object of the route"
										},
										"nestedRoute": {
											"name": "nestedRoute",
											"type": "sap.ui.core.routing.Route",
											"optional": true,
											"description": "The nested route instance of this route. The event\n is fired on this route because the pattern in the nested route is matched with the current URL hash. This parameter can be\n used to decide whether the current route is matched because of its nested child route. For more information about nested\n child route please refer to the documentation of oConfig.parent in {@link sap.ui.core.routing.Route#constructor}"
										}
									}
								}
							}
						}
					],
					"description": "The 'beforeRouteMatched' event is fired before the corresponding target is loaded and placed, when the current URL hash matches:\n<pre>\n a. the pattern of a route in this router.\n b. the pattern of its sub-route.\n c. the pattern of its nested route. When this occurs, the 'nestedRoute' parameter is set with the instance of nested route.\n</pre>"
				},
				{
					"name": "bypassed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"hash": {
											"name": "hash",
											"type": "string",
											"optional": false,
											"description": "the current URL hash which did not match any route"
										}
									}
								}
							}
						}
					],
					"description": "The 'bypassed' event is fired, when no route of the router matches the changed URL hash"
				},
				{
					"name": "routeMatched",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"name": {
											"name": "name",
											"type": "string",
											"optional": false,
											"description": "The name of the route"
										},
										"arguments": {
											"name": "arguments",
											"type": "object",
											"optional": false,
											"description": "A key-value pair object which contains the arguments defined in the route\n resolved with the corresponding information from the current URL hash"
										},
										"config": {
											"name": "config",
											"type": "object",
											"optional": false,
											"description": "The configuration object of the route"
										},
										"nestedRoute": {
											"name": "nestedRoute",
											"type": "sap.ui.core.routing.Route",
											"optional": true,
											"description": "The nested route instance of this route. The event\n is fired on this route because the pattern in the nested route is matched with the current URL hash. This parameter can be\n used to decide whether the current route is matched because of its nested child route. For more information about nested\n child route please refer to the documentation of oConfig.parent in {@link sap.ui.core.routing.Route#constructor}"
										}
									}
								}
							}
						}
					],
					"description": "The 'routeMatched' event is fired, when the current URL hash matches:\n<pre>\n a. the pattern of a route in this router.\n b. the pattern of its sub-route.\n c. the pattern of its nested route. When this occurs, the 'nestedRoute' parameter is set with the instance of nested route.\n</pre>\n\nPlease refer to event {@link sap.ui.core.routing.Router#event:routePatternMatched|routePatternMatched} for getting notified only when a route's own pattern is matched with the URL hash not its sub-routes."
				},
				{
					"name": "routePatternMatched",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"name": {
											"name": "name",
											"type": "string",
											"optional": false,
											"description": "The name of the route"
										},
										"arguments": {
											"name": "arguments",
											"type": "object",
											"optional": false,
											"description": "A key-value pair object which contains the arguments defined in the route\n resolved with the corresponding information from the current URL hash"
										},
										"config": {
											"name": "config",
											"type": "object",
											"optional": false,
											"description": "The configuration object of the route"
										}
									}
								}
							}
						}
					],
					"description": "The 'routePatternMatched' event is fired, only when the current URL hash matches the pattern of a route in this router."
				},
				{
					"name": "titleChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "object",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"title": {
											"name": "title",
											"type": "string",
											"optional": false,
											"description": "The current displayed title"
										},
										"history": {
											"name": "history",
											"type": "array",
											"optional": false,
											"description": "An array which contains the history of previous titles"
										}
									}
								}
							}
						}
					],
					"description": "Will be fired when the title of the \"TitleTarget\" in the currently matching Route has been changed.\n\n<pre>\nA \"TitleTarget\" is resolved as the following:\n 1. When the Route only has one target configured, the \"TitleTarget\" is resolved with this target when its {@link sap.ui.core.routing.Targets#constructor|title} options is set.\n 2. When the Route has more than one target configured, the \"TitleTarget\" is resolved by default with the first target which has a {@link sap.ui.core.routing.Targets#constructor|title} option.\n 3. When the {@link sap.ui.core.routing.Route#constructor|titleTarget} option on the Route is configured, this specific target is then used as the \"TitleTarget\".\n</pre>"
				}
			],
			"methods": [
				{
					"name": "addRoute",
					"visibility": "public",
					"parameters": [
						{
							"name": "oConfig",
							"type": "object",
							"optional": false,
							"description": "configuration object for the route @see sap.ui.core.routing.Route#constructor"
						},
						{
							"name": "oParent",
							"type": "sap.ui.core.routing.Route",
							"optional": false,
							"description": "The parent route - if a parent route is given, the routeMatched event of this route will also trigger the route matched of the parent and it will also create the view of the parent (if provided)."
						}
					],
					"description": "Adds a route to the router"
				},
				{
					"name": "attachBeforeRouteMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'beforeRouteMatched' event of this <code>sap.ui.core.routing.Router</code>.<br/>"
				},
				{
					"name": "attachBypassed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'bypassed' event of this <code>sap.ui.core.routing.Router</code>.<br/>\nThe event will get fired, if none of the routes of the routes is matching. <br/>"
				},
				{
					"name": "attachRouteMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'routeMatched' event of this <code>sap.ui.core.routing.Router</code>.<br/>"
				},
				{
					"name": "attachRoutePatternMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'routePatternMatched' event of this <code>sap.ui.core.routing.Router</code>.<br/>\nThis event is similar to route matched. But it will only fire for the route that has a matching pattern, not for its parent Routes <br/>"
				},
				{
					"name": "attachTitleChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\noListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'titleChanged' event of this <code>sap.ui.core.routing.Router</code>.<br/>"
				},
				{
					"name": "attachViewCreated",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\noListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'viewCreated' event of this <code>sap.ui.core.routing.Router</code>.<br/>",
					"deprecated": {
						"since": "1.28",
						"text": "use {@link #getViews} instead."
					}
				},
				{
					"name": "destroy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "this for chaining."
					},
					"description": "Removes the router from the hash changer @see sap.ui.core.routing.HashChanger"
				},
				{
					"name": "detachBeforeRouteMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'beforeRouteMatched' event of this <code>sap.ui.core.routing.Router</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachBypassed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'bypassed' event of this <code>sap.ui.core.routing.Router</code>.<br/>\nThe event will get fired, if none of the routes of the routes is matching. <br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachRouteMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'routeMatched' event of this <code>sap.ui.core.routing.Router</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachRoutePatternMatched",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'routePatternMatched' event of this <code>sap.ui.core.routing.Router</code>.<br/>\nThis event is similar to route matched. But it will only fire for the route that has a matching pattern, not for its parent Routes <br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachTitleChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'titleChanged' event of this <code>sap.ui.core.routing.Router</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachViewCreated",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'viewCreated' event of this <code>sap.ui.core.routing.Router</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.",
					"deprecated": {
						"since": "1.28",
						"text": "use {@link #getViews} instead."
					}
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.routing.Router with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireBeforeRouteMatched",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event beforeRouteMatched to attached listeners."
				},
				{
					"name": "fireBypassed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event bypassed to attached listeners.\nThe event will get fired, if none of the routes of the routes is matching. <br/>"
				},
				{
					"name": "fireRouteMatched",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event routeMatched to attached listeners."
				},
				{
					"name": "fireRoutePatternMatched",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event routePatternMatched to attached listeners.\nThis event is similar to route matched. But it will only fire for the route that has a matching pattern, not for its parent Routes <br/>"
				},
				{
					"name": "fireViewCreated",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event viewCreated to attached listeners.",
					"deprecated": {
						"since": "1.28",
						"text": "use {@link #getViews} instead."
					}
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.routing.Router."
				},
				{
					"name": "getRoute",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Route",
						"description": "the route with the provided name or undefined."
					},
					"since": "1.25.1",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the route"
						}
					],
					"description": "Returns the Route with a name, if no route is found undefined is returned"
				},
				{
					"name": "getRouter",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "The router with the specified name, else undefined"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the router"
						}
					],
					"description": "Get a registered router"
				},
				{
					"name": "getTargets",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets|undefined",
						"description": "The instance of targets, the router uses to place views or undefined if you did not specify the targets parameter in the router's constructor."
					},
					"description": "Returns the instance of Targets, if you pass a targets config to the router"
				},
				{
					"name": "getTitleHistory",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "An array which contains the history entries."
					},
					"description": "Returns the title history.\n\nHistory entry example:\n<code>\n\t{\n\t\ttitle: \"TITLE\", // The displayed title\n\t\thash: \"HASH\" // The url hash\n\t\tisHome: \"true/false\" // The app home indicator\n\t}\n</code>"
				},
				{
					"name": "getURL",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the unencoded pattern with interpolated arguments"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the route"
						},
						{
							"name": "oParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters for the route"
						}
					],
					"description": "Returns the URL for the route and replaces the placeholders with the values in oParameters"
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "the view instance"
					},
					"parameters": [
						{
							"name": "sViewName",
							"type": "string",
							"optional": false,
							"description": "Name of the view"
						},
						{
							"name": "sViewType",
							"type": "string",
							"optional": false,
							"description": "Type of the view"
						},
						{
							"name": "sViewId",
							"type": "string",
							"optional": false,
							"description": "Optional view id"
						}
					],
					"description": "Returns a cached view for a given name or creates it if it does not yet exists",
					"deprecated": {
						"since": "1.28.1",
						"text": "use {@link #getViews} instead."
					}
				},
				{
					"name": "getViews",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Views",
						"description": "the Views instance"
					},
					"since": "1.28",
					"description": "Returns the views instance created by the router"
				},
				{
					"name": "initialize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "this for chaining."
					},
					"description": "Attaches the router to the hash changer @see sap.ui.core.routing.HashChanger"
				},
				{
					"name": "navTo",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "this for chaining."
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the route"
						},
						{
							"name": "oParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters for the route"
						},
						{
							"name": "bReplace",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "If set to <code>true</code>, the hash is replaced, and there will be no entry in the browser history, if set to <code>false</code>, the hash is set and the entry is stored in the browser history."
						}
					],
					"description": "Navigates to a specific route defining a set of parameters. The Parameters will be URI encoded - the characters ; , / ? : @ & = + $ are reserved and will not be encoded.\nIf you want to use special characters in your oParameters, you have to encode them (encodeURIComponent).\n\nIF the given route name can't be found, an error message is logged to the console and the hash will be changed to empty string."
				},
				{
					"name": "parse",
					"visibility": "protected",
					"parameters": [
						{
							"name": "sNewHash",
							"type": "string",
							"optional": false,
							"description": "a new hash"
						}
					],
					"description": "Will trigger routing events + place targets for routes matching the string"
				},
				{
					"name": "register",
					"visibility": "public",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Name of the router"
						}
					],
					"description": "Registers the router to access it from another context. Use sap.ui.routing.Router.getRouter() to receive the instance"
				},
				{
					"name": "setView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "@since 1.28 the this pointer for chaining"
					},
					"since": "1.22",
					"parameters": [
						{
							"name": "sViewName",
							"type": "string",
							"optional": false,
							"description": "Name of the view"
						},
						{
							"name": "oView",
							"type": "sap.ui.core.mvc.View",
							"optional": false,
							"description": "the view instance"
						}
					],
					"description": "Adds or overwrites a view in the viewcache of the router, the viewname serves as a key",
					"deprecated": {
						"since": "1.28",
						"text": "use {@link #getViews} instead."
					}
				},
				{
					"name": "stop",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "this for chaining."
					},
					"description": "Stops to listen to the hashChange of the browser.</br>\nIf you want the router to start again, call initialize again."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.routing.Target",
			"basename": "Target",
			"resource": "sap/ui/core/routing/Target.js",
			"module": "sap/ui/core/routing/Target",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.28.1",
			"extends": "sap.ui.base.EventProvider",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oOptions",
						"type": "object",
						"optional": false,
						"description": "all of the parameters defined in {@link sap.m.routing.Targets#constructor} are accepted here, except for children you need to specify the parent."
					},
					{
						"name": "oViews",
						"type": "sap.ui.core.routing.Views",
						"optional": false,
						"description": "All views required by this target will get created by the views instance using {@link sap.ui.core.routing.Views#getView}"
					},
					{
						"name": "oParent",
						"type": "sap.ui.core.routing.Target",
						"optional": true,
						"description": "the parent of this target. Will also get displayed, if you display this target. In the config you have the fill the children property {@link sap.m.routing.Targets#constructor}"
					}
				],
				"description": "Provides a convenient way for placing views into the correct containers of your application.<br/>\nThe main benefit of Targets is lazy loading: you do not have to create the views until you really need them.<br/>\n<b>Don't call this constructor directly</b>, use {@link sap.ui.core.routing.Targets} instead, it will create instances of a Target.<br/>\nIf you are using the mobile library, please use the {@link sap.m.routing.Targets} constructor, please read the documentation there.<br/>"
			},
			"events": [
				{
					"name": "display",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "object",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"view": {
											"name": "view",
											"type": "object",
											"optional": false,
											"description": "The view that got displayed."
										},
										"control": {
											"name": "control",
											"type": "object",
											"optional": false,
											"description": "The control that now contains the view in the controlAggregation"
										},
										"config": {
											"name": "config",
											"type": "object",
											"optional": false,
											"description": "The options object passed to the constructor {@link sap.ui.core.routing.Target#constructor}"
										},
										"data": {
											"name": "data",
											"type": "object",
											"optional": false,
											"description": "The data passed into the {@link sap.ui.core.routing.Target#display} function"
										}
									}
								}
							}
						}
					],
					"description": "Will be fired when a target is displayed\n\nCould be triggered by calling the display function or by the @link sap.ui.core.routing.Router when a target is referenced in a matching route."
				}
			],
			"methods": [
				{
					"name": "_beforePlacingViewIntoContainer",
					"visibility": "protected",
					"since": "1.46.1",
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"container": {
									"name": "container",
									"type": "sap.ui.core.Control",
									"optional": false,
									"description": "the container where the view will be added"
								},
								"view": {
									"name": "view",
									"type": "sap.ui.core.Control",
									"optional": false,
									"description": "the view which will be added to the container"
								},
								"data": {
									"name": "data",
									"type": "object",
									"optional": true,
									"description": "the data passed from {@link sap.ui.core.routing.Target#display} method"
								}
							}
						}
					],
					"description": "This function is called between the target view is loaded and the view is added to the container.\n\nThis function can be used for applying modification on the view or the container to make the rerendering occur\ntogether with the later aggregation change."
				},
				{
					"name": "attachDisplay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Target",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\noListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'display' event of this <code>sap.ui.core.routing.Target</code>.<br/>"
				},
				{
					"name": "destroy",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.routing.Target",
						"description": "this for chaining."
					},
					"description": "Destroys the target, will be called by {@link sap.m.routing.Targets} don't call this directly."
				},
				{
					"name": "detachDisplay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Target",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'display' event of this <code>sap.ui.core.routing.Target</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "display",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "resolves with {name: *, view: *, control: *} if the target can be successfully displayed otherwise it resolves with {name: *, error: *}"
					},
					"parameters": [
						{
							"name": "vData",
							"type": "*",
							"optional": true,
							"description": "an object that will be passed to the display event in the data property. If the target has parents, the data will also be passed to them."
						}
					],
					"description": "Creates a view and puts it in an aggregation of a control that has been defined in the {@link sap.ui.core.routing.Target#constructor}."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.routing.Target with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireDisplay",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.routing.Target",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event created to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.routing.Target."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.routing.Targets",
			"basename": "Targets",
			"resource": "sap/ui/core/routing/Targets.js",
			"module": "sap/ui/core/routing/Targets",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.28.1",
			"extends": "sap.ui.base.EventProvider",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oOptions",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"views": {
								"name": "views",
								"type": "sap.ui.core.routing.Views",
								"optional": false,
								"description": "the views instance will create the views of all the targets defined, so if 2 targets have the same viewName, the same instance of the view will be displayed."
							},
							"config": {
								"name": "config",
								"type": "object",
								"optional": true,
								"parameterProperties": {
									"rootView": {
										"name": "rootView",
										"type": "string",
										"optional": true,
										"description": "The id of the rootView - This should be the id of the view that contains the control with the controlId\nsince the control will be retrieved by calling the {@link sap.ui.core.mvc.View#byId} function of the rootView.\nIf you are using a component and add the routing.targets <b>do not set this parameter</b>,\nsince the component will set the rootView to the view created by the {@link sap.ui.core.UIComponent#createContent} function.\nIf you specify the \"parent\" property of a target, the control will not be searched in the root view but in the view Created by the parent (see parent documentation)."
									},
									"async": {
										"name": "async",
										"type": "boolean",
										"optional": true,
										"defaultValue": false,
										"description": "@since 1.34 Whether the views which are created through this Targets are loaded asyncly. This option can be set only when the Targets\nis used standalone without the involvement of a Router. Otherwise the async option is inherited from the Router."
									}
								},
								"description": "this config allows all the values oOptions.targets.anyName allows, these will be the default values for properties used in the target.<br/>\nFor example if you are only using xmlViews in your app you can specify viewType=\"XML\" so you don't have to repeat this in every target.<br/>\nIf a target specifies viewType=\"JS\", the JS will be stronger than the XML here is an example.\n\n<pre>\n<code>\n{\n    config: {\n        viewType : \"XML\"\n    }\n    targets : {\n        xmlTarget : {\n            ...\n        },\n        jsTarget : {\n            viewType : \"JS\"\n            ...\n        }\n    }\n}\n</code>\n</pre>\nThen the effective config that will be used looks like this:\n<pre>\n<code>\n{\n    xmlTarget : {\n        // coming from the defaults\n        viewType : \"XML\"\n        ...\n    },\n    jsTarget : {\n       // XML is overwritten by the \"JS\" of the targets property\n       viewType : \"JS\"\n      ...\n    }\n}\n</code>\n</pre>"
							},
							"targets": {
								"name": "targets",
								"type": "object",
								"optional": false,
								"parameterProperties": {
									"anyName": {
										"name": "anyName",
										"type": "object",
										"optional": false,
										"parameterProperties": {
											"viewName": {
												"name": "viewName",
												"type": "string",
												"optional": false,
												"description": "The name of a view that will be created.\nTo place the view into a Control use the controlAggregation and controlId. Views will only be created once per viewName.\n<pre>\n<code>\n{\n    targets: {\n        // If display(\"masterWelcome\") is called, the master view will be placed in the 'MasterPages' of a control with the id splitContainter\n        masterWelcome: {\n            viewName: \"Welcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"masterPages\"\n        },\n        // If display(\"detailWelcome\") is called after the masterWelcome, the view will be removed from the master pages and added to the detail pages, since the same instance is used. Also the controls inside of the view will have the same state.\n        detailWelcome: {\n            // same view here, that's why the same instance is used\n            viewName: \"Welcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"detailPages\"\n        }\n    }\n}\n</code>\n</pre>\n\nIf you want to have a second instance of the welcome view you can use the following:\n\n\n\n<pre>\n<code>\n// Some code you execute before you display the taget named 'detailWelcome':\nvar oView = sap.ui.view(({ viewName : \"Welcome\", type : sap.ui.core.mvc.ViewType.XML});\noTargets.getViews().setView(\"WelcomeWithAlias\", oView)\n\n{\n    targets: {\n        // If display(\"masterWelcome\") is called, the master viewName will be placed in the 'MasterPages' of a control with the id splitContainter\n        masterWelcome: {\n            viewName: \"Welcome\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"masterPages\"\n        },\n        // If display(\"detailWelcome\") is called after the masterWelcome, a second instance with an own controller instance will be added in the detail pages.\n        detailWelcome: {\n            // same viewName here, that's why the same instance is used\n            viewName: \"WelcomeWithAlias\",\n            controlId: \"splitContainer\",\n            controlAggregation: \"detailPages\"\n        }\n    }\n}\n</code>\n</pre>"
											},
											"viewType": {
												"name": "viewType",
												"type": "string",
												"optional": true,
												"description": "The type of the view that is going to be created. These are the supported types: {@link sap.ui.core.mvc.ViewType}.\nYou always have to provide a viewType except if you are using {@link sap.ui.core.routing.Views#setView}."
											},
											"viewPath": {
												"name": "viewPath",
												"type": "string",
												"optional": true,
												"description": "A prefix that will be prepended in front of the viewName.<br/>\n<b>Example:</b> viewName is set to \"myView\" and viewPath is set to \"myApp\" - the created viewName will be \"myApp.myView\"."
											},
											"viewId": {
												"name": "viewId",
												"type": "string",
												"optional": true,
												"description": "The id of the created view.\nThis is will be prefixed with the id of the component set to the views instance provided in oOptions.views. For details see {@link sap.ui.core.routing.Views#getView}."
											},
											"targetParent": {
												"name": "targetParent",
												"type": "string",
												"optional": true,
												"description": "The id of the parent of the controlId - This should be the id of the view that contains your controlId,\nsince the target control will be retrieved by calling the {@link sap.ui.core.mvc.View#byId} function of the targetParent. By default,\nthis will be the view created by a component, so you do not have to provide this parameter.\nIf you are using children, the view created by the parent of the child is taken.\nYou only need to specify this, if you are not using a Targets instance created by a component\nand you should give the id of root view of your application to this property."
											},
											"controlId": {
												"name": "controlId",
												"type": "string",
												"optional": true,
												"description": "The id of the control where you want to place the view created by this target.\nThe view of the target will be put into this container Control, using the controlAggregation property. You have to specify both properties or the target will not be able to place itself.\nAn example for containers are {@link sap.ui.ux3.Shell} with the aggregation 'content' or a {@link sap.m.NavContainer} with the aggregation 'pages'."
											},
											"controlAggregation": {
												"name": "controlAggregation",
												"type": "string",
												"optional": true,
												"description": "The name of an aggregation of the controlId, that contains views.\nEg: a {@link sap.m.NavContainer} has an aggregation 'pages', another Example is the {@link sap.ui.ux3.Shell} it has 'content'."
											},
											"clearControlAggregation": {
												"name": "clearControlAggregation",
												"type": "boolean",
												"optional": true,
												"description": "Defines a boolean that can be passed to specify if the aggregation should be cleared\n- all items will be removed - before adding the View to it.\nWhen using a {@link sap.ui.ux3.Shell} this should be true. For a {@link sap.m.NavContainer} it should be false. When you use the {@link sap.m.routing.Router} the default will be false."
											},
											"parent": {
												"name": "parent",
												"type": "string",
												"optional": true,
												"description": "A reference to another target, using the name of the target.\nIf you display a target that has a parent, the parent will also be displayed.\nAlso the control you specify with the controlId parameter, will be searched inside of the view of the parent not in the rootView, provided in the config.\nThe control will be searched using the byId function of a view. When it is not found, the global id is checked.\n<br/>\nThe main usecase for the parent property is placing a view inside a smaller container of a view, which is also created by targets.\nThis is useful for lazy loading views, only if the user really navigates to this part of your application.\n<br/>\n<b>Example:</b>\nOur aim is to lazy load a tab of an IconTabBar (a control that displays a view initially and when a user clicks on it the view changes).\nIt's a perfect candidate to lazy load something inside of it.\n<br/>\n<b>Example app structure:</b><br/>\nWe have a rootView that is returned by the createContent function of our UIComponent. This view contains a sap.m.App control with the id 'myApp'\n<pre>\n<code>\n&lt;View xmlns=\"sap.m\"&gt;\n    &lt;App id=\"myApp\"/&gt;\n&lt;/View&gt;\n</code>\n</pre>\nan xml view called 'Detail'\n<pre>\n<code>\n&lt;View xmlns=\"sap.m\"&gt;\n    &lt;IconTabBar&gt;\n        &lt;items&gt;\n            &lt;IconTabFilter&gt;\n                &lt;!-- content of our first tab --&gt;\n            &lt;IconTabFilter&gt;\n            &lt;IconTabFilter id=\"mySecondTab\"&gt;\n                &lt;!-- nothing here, since we will lazy load this one with a target --&gt;\n            &lt;IconTabFilter&gt;\n        &lt;/items&gt;\n    &lt;/IconTabBar&gt;\n&lt;/View&gt;\n</code>\n</pre>\nand a view called 'SecondTabContent', this one contains our content we want to have lazy loaded.\nNow we need to create our Targets instance with a config matching our app:\n<pre>\n<code>\n    new Targets({\n        //Creates our views except for root, we created this one before - when using a component you\n        views: new Views(),\n        config: {\n            // all of our views have that type\n            viewType: 'XML',\n            // a reference to the app control in the rootView created by our UIComponent\n            controlId: 'myApp',\n            // An app has a pages aggregation where the views need to be put into\n            controlAggregation: 'pages'\n        },\n        targets: {\n            detail: {\n                viewName: 'Detail'\n            },\n            secondTabContent: {\n                // A reference to the detail target defined above\n                parent: 'detail',\n                // A reference to the second Tab container in the Detail view. Here the target does not look in the rootView, it looks in the Parent view (Detail).\n                controlId: 'mySecondTab',\n                // An IconTabFilter has an aggregation called content so we need to overwrite the pages set in the config as default.\n                controlAggregation: 'content',\n                // A view containing the content\n                viewName: 'SecondTabContent'\n            }\n        }\n    });\n</code>\n</pre>\n\nNow if we call <code> oTargets.display(\"secondTabContent\") </code>, 2 views will be created: Detail and SecondTabContent.\nThe 'Detail' view will be put into the pages aggregation of the App. And afterwards the 'SecondTabContent' view will be put into the content Aggregation of the second IconTabFilter.\nSo a parent will always be created before the target referencing it."
											}
										},
										"description": "a new target, the key severs as a name. An example:\n<pre>\n<code>\n{\n    targets: {\n        welcome: {\n            viewName: \"Welcome\",\n            viewType: \"XML\",\n            ....\n            // Other target parameters\n        },\n        goodbye: {\n            viewName: \"Bye\",\n            viewType: \"JS\",\n            ....\n            // Other target parameters\n        }\n    }\n}\n</code>\n</pre>\n\nThis will create two targets named 'welcome' and 'goodbye' you can display both of them or one of them using the {@link #display} function."
									}
								},
								"description": "One or multiple targets in a map."
							}
						}
					}
				],
				"description": "Provides a convenient way for placing views into the correct containers of your application.\nThe main benefit of Targets is lazy loading: you do not have to create the views until you really need them.\nIf you are using the mobile library, please use {@link sap.m.routing.Targets} instead of this class."
			},
			"events": [
				{
					"name": "display",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "object",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"view": {
											"name": "view",
											"type": "object",
											"optional": false,
											"description": "The view that got displayed."
										},
										"control": {
											"name": "control",
											"type": "object",
											"optional": false,
											"description": "The control that now contains the view in the controlAggregation"
										},
										"config": {
											"name": "config",
											"type": "object",
											"optional": false,
											"description": "The options object passed to the constructor {@link sap.ui.core.routing.Targets#constructor}"
										},
										"name": {
											"name": "name",
											"type": "object",
											"optional": false,
											"description": "The name of the target firing the event"
										},
										"data": {
											"name": "data",
											"type": "object",
											"optional": false,
											"description": "The data passed into the {@link sap.ui.core.routing.Targets#display} function"
										}
									}
								}
							}
						}
					],
					"description": "Will be fired when a target is displayed\n\nCould be triggered by calling the display function or by the {@link sap.ui.core.routing.Router} when a target is referenced in a matching route."
				},
				{
					"name": "titleChanged",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "object",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"title": {
											"name": "title",
											"type": "string",
											"optional": false,
											"description": "The current displayed title"
										},
										"name": {
											"name": "name",
											"type": "string",
											"optional": false,
											"description": "The name of the displayed target"
										}
									}
								}
							}
						}
					],
					"description": "Will be fired when the title of the \"TitleTarget\" has been changed.\n\n<pre>\nA \"TitleTarget\" is resolved as the following:\n 1. When the {@link sap.ui.core.routing.Targets#display|display} is called with only one target, the \"TitleTarget\" is resolved with this target when its {@link sap.ui.core.routing.Targets#constructor|title} options is set.\n 2. When the {@link sap.ui.core.routing.Targets#display|display} is called with more than one target, the \"TitleTarget\" is resolved by default with the first target which has a {@link sap.ui.core.routing.Targets#constructor|title} option.\n 3. When the 'sTitleTarget' parameter of {@link sap.ui.core.routing.Targets#display|display} is given, this specific target is then used as the \"TitleTarget\".\n</pre>"
				}
			],
			"methods": [
				{
					"name": "addTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets",
						"description": "Targets itself for method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of a target"
						},
						{
							"name": "oTarget",
							"type": "object",
							"optional": false,
							"description": "the options of a target. The option names are the same as the ones in \"oOptions.targets.anyName\" of {@link #constructor}."
						}
					],
					"description": "Creates a target by using the given name and options. If there's already a target with the same name exists, the existing target is kept from being overwritten and an error log will be written to the development console."
				},
				{
					"name": "attachDisplay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\noListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'display' event of this <code>sap.ui.core.routing.Targets</code>.<br/>"
				},
				{
					"name": "attachTitleChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\noListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'titleChanged' event of this <code>sap.ui.core.routing.Targets</code>.<br/>"
				},
				{
					"name": "destroy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets",
						"description": "this for chaining."
					},
					"description": "Destroys the targets instance and all created targets. Does not destroy the views instance passed to the constructor. It has to be destroyed separately."
				},
				{
					"name": "detachDisplay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'display' event of this <code>sap.ui.core.routing.Targets</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachTitleChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'titleChanged' event of this <code>sap.ui.core.routing.Targets</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "display",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets|Promise",
						"description": "this pointer for chaining or a Promise"
					},
					"parameters": [
						{
							"name": "vTargets",
							"type": "string|string[]",
							"optional": false,
							"description": "the key of the target as specified in the {@link #constructor}. To display multiple targets you may also pass an array of keys."
						},
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "an object that will be passed to the display event in the data property. If the target has parents, the data will also be passed to them."
						},
						{
							"name": "sTitleTarget",
							"type": "string",
							"optional": true,
							"description": "the name of the target from which the title option is taken for firing the {@link sap.ui.core.routing.Targets#event:titleChanged|titleChanged} event"
						}
					],
					"description": "Creates a view and puts it in an aggregation of the specified control."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.routing.Targets with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireDisplay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event created to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.routing.Targets."
				},
				{
					"name": "getTarget",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Target|undefined|sap.ui.core.routing.Target[]",
						"description": "The target with the coresponding name or undefined. If an array way passed as name this will return an array with all found targets. Non existing targets will not be returned but will log an error."
					},
					"parameters": [
						{
							"name": "vName",
							"type": "string|string[]",
							"optional": false,
							"description": "the name of a single target or the name of multiple targets"
						}
					],
					"description": "Returns a target by its name (if you pass myTarget: { view: \"myView\" }) in the config myTarget is the name."
				},
				{
					"name": "getViews",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Views",
						"description": "the views instance"
					},
					"description": "Returns the views instance passed to the constructor"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.routing.Views",
			"basename": "Views",
			"resource": "sap/ui/core/routing/Views.js",
			"module": "sap/ui/core/routing/Views",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.28.1",
			"extends": "sap.ui.base.EventProvider",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oOptions",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"component": {
								"name": "component",
								"type": "sap.ui.core.UIComponent",
								"optional": true,
								"description": "the owner of all the views that will be created by this Instance."
							},
							"async": {
								"name": "async",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "@since 1.34 Whether the views which are created through this Views are loaded asyncly. This option can be set only when the Views\nis used standalone without the involvement of a Router. Otherwise the async option is inherited from the Router."
							}
						}
					}
				],
				"description": "Instantiates a view repository that creates and caches views. If it is destroyed, all the Views it created are destroyed.\nUsually you do not have to create instances of this class, it is used by the {@link sap.ui.core.routing.Router}.\nIf you are using {@link sap.ui.core.routing.Targets} without using a {@link sap.ui.core.UIComponent} you have to create an instance of this class.\nThey will create an instance on their own, or if they are used with a {@link sap.ui.core.UIComponent} they will share the same instance of Views."
			},
			"events": [
				{
					"name": "created",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"view": {
											"name": "view",
											"type": "sap.ui.core.mvc.View",
											"optional": false,
											"description": "the instance of the created view."
										},
										"viewOptions": {
											"name": "viewOptions",
											"type": "object",
											"optional": false,
											"description": "The view options passed to {@link sap.ui.view}"
										}
									}
								}
							},
							"description": "refer to {@link sap.ui.base.EventProvider} for details about getSource and getParameters"
						}
					],
					"description": "If a view is created the event will be fired.\nIt will not be fired, if a view was read from the cache of the Views object."
				}
			],
			"methods": [
				{
					"name": "attachCreated",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Views",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\noListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'created' event of this <code>sap.ui.core.routing.Views</code>.<br/>"
				},
				{
					"name": "detachCreated",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Views",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'created' event of this <code>sap.ui.core.routing.Views</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.routing.Views with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireCreated",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.routing.Views",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event created to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.routing.Views."
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise that is resolved when the view is loaded {@link sap.ui.core.mvc.View#loaded}. The view instance will be passed to the promise."
					},
					"parameters": [
						{
							"name": "oOptions",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"viewName": {
									"name": "viewName",
									"type": "string",
									"optional": false,
									"description": "If you do not use setView please see {@link sap.ui.view} for the documentation. This is used as a key in the cache of the Views instance. If you want to retrieve a view that has been given an alternative name in {@link #setView} you need to provide the same name here and you can skip all the other viewOptions."
								}
							},
							"description": "see {@link sap.ui.view} for the documentation.\nThe viewId you pass into the options will be prefixed with the id of the component you pass into the constructor.\nSo you can retrieve the view later by calling the {@link sap.ui.core.UIComponent#byId} function of the UIComponent."
						}
					],
					"description": "Returns a cached view, for a given name. If it does not exist yet, it will create the view with the provided options.\nIf you provide a viewId, it will be prefixed with the viewId of the component."
				},
				{
					"name": "setView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Views",
						"description": "this for chaining."
					},
					"parameters": [
						{
							"name": "sViewName",
							"type": "string",
							"optional": false,
							"description": "Name of the view, may differ from the actual viewName of the oView parameter provided, since you can retrieve this view per {@link #.getView}."
						},
						{
							"name": "oView",
							"type": "sap.ui.core.mvc.View|null|undefined",
							"optional": false,
							"description": "the view instance"
						}
					],
					"description": "Adds or overwrites a view in the cache of the Views instance. The viewName serves as a key for caching.\n\nIf the second parameter is set to null or undefined, the previous cache view under the same name isn't managed by the Views instance.\nThe lifecycle (for example the destroy of the view) of the view instance should be maintained by additional code."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.ScrollBar",
			"basename": "ScrollBar",
			"resource": "sap/ui/core/ScrollBar.js",
			"module": "sap/ui/core/ScrollBar",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "The ScrollBar control can be used for virtual scrolling of a certain area.\nThis means: to simulate a very large scrollable area when technically the area is small and the control takes care of displaying the respective part only. E.g. a Table control can take care of only rendering the currently visible rows and use this ScrollBar control to make the user think he actually scrolls through a long list.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "vertical",
						"type": "boolean",
						"defaultValue": true,
						"group": "Behavior",
						"visibility": "public",
						"description": "Orientation. Defines if the Scrollbar is vertical or horizontal.",
						"methods": [
							"getVertical",
							"setVertical"
						]
					},
					{
						"name": "scrollPosition",
						"type": "int",
						"defaultValue": null,
						"group": "Behavior",
						"visibility": "public",
						"description": "Scroll position in steps or pixels.",
						"methods": [
							"getScrollPosition",
							"setScrollPosition"
						]
					},
					{
						"name": "size",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Size of the Scrollbar (in pixels).",
						"methods": [
							"getSize",
							"setSize"
						]
					},
					{
						"name": "contentSize",
						"type": "sap.ui.core.CSSSize",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Size of the scrollable content (in pixels).",
						"methods": [
							"getContentSize",
							"setContentSize"
						]
					},
					{
						"name": "steps",
						"type": "int",
						"defaultValue": null,
						"group": "Dimension",
						"visibility": "public",
						"description": "Number of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically.",
						"methods": [
							"getSteps",
							"setSteps"
						]
					}
				],
				"events": [
					{
						"name": "scroll",
						"visibility": "public",
						"description": "Scroll event.",
						"parameters": {
							"action": {
								"name": "action",
								"type": "sap.ui.core.ScrollBarAction",
								"description": "Actions are: Click on track, button, drag of thumb, or mouse wheel click."
							},
							"forward": {
								"name": "forward",
								"type": "boolean",
								"description": "Direction of scrolling: back (up) or forward (down)."
							},
							"newScrollPos": {
								"name": "newScrollPos",
								"type": "int",
								"description": "Current Scroll position either in pixels or in steps."
							},
							"oldScrollPos": {
								"name": "oldScrollPos",
								"type": "int",
								"description": "Old Scroll position - can be in pixels or in steps."
							}
						},
						"methods": [
							"attachScroll",
							"detachScroll",
							"fireScroll"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ScrollBar.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "scroll",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"action": {
											"name": "action",
											"type": "sap.ui.core.ScrollBarAction",
											"optional": false,
											"description": "Actions are: Click on track, button, drag of thumb, or mouse wheel click."
										},
										"forward": {
											"name": "forward",
											"type": "boolean",
											"optional": false,
											"description": "Direction of scrolling: back (up) or forward (down)."
										},
										"newScrollPos": {
											"name": "newScrollPos",
											"type": "int",
											"optional": false,
											"description": "Current Scroll position either in pixels or in steps."
										},
										"oldScrollPos": {
											"name": "oldScrollPos",
											"type": "int",
											"optional": false,
											"description": "Old Scroll position - can be in pixels or in steps."
										}
									}
								}
							}
						}
					],
					"description": "Scroll event."
				}
			],
			"methods": [
				{
					"name": "attachScroll",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ScrollBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.ScrollBar</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>scroll</code> event of this <code>sap.ui.core.ScrollBar</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.ScrollBar</code> itself.\r\rScroll event."
				},
				{
					"name": "bind",
					"visibility": "public",
					"parameters": [
						{
							"name": "oOwnerDomRef",
							"type": "string",
							"optional": false,
							"description": "Dom ref of the control that uses the scrollbar"
						}
					],
					"description": "Binds the mouse wheel scroll event of the control that has the scrollbar to the scrollbar itself."
				},
				{
					"name": "detachScroll",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ScrollBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>scroll</code> event of this <code>sap.ui.core.ScrollBar</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.ScrollBar with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireScroll",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.ScrollBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"action": {
									"name": "action",
									"type": "sap.ui.core.ScrollBarAction",
									"optional": true,
									"description": "Actions are: Click on track, button, drag of thumb, or mouse wheel click."
								},
								"forward": {
									"name": "forward",
									"type": "boolean",
									"optional": true,
									"description": "Direction of scrolling: back (up) or forward (down)."
								},
								"newScrollPos": {
									"name": "newScrollPos",
									"type": "int",
									"optional": true,
									"description": "Current Scroll position either in pixels or in steps."
								},
								"oldScrollPos": {
									"name": "oldScrollPos",
									"type": "int",
									"optional": true,
									"description": "Old Scroll position - can be in pixels or in steps."
								}
							},
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>scroll</code> to attached listeners."
				},
				{
					"name": "getContentSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>contentSize</code>"
					},
					"description": "Gets current value of property <code>contentSize</code>.\r\rSize of the scrollable content (in pixels)."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.ScrollBar."
				},
				{
					"name": "getScrollPosition",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>scrollPosition</code>"
					},
					"description": "Gets current value of property <code>scrollPosition</code>.\r\rScroll position in steps or pixels."
				},
				{
					"name": "getSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.CSSSize",
						"description": "Value of property <code>size</code>"
					},
					"description": "Gets current value of property <code>size</code>.\r\rSize of the Scrollbar (in pixels)."
				},
				{
					"name": "getSteps",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>steps</code>"
					},
					"description": "Gets current value of property <code>steps</code>.\r\rNumber of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically."
				},
				{
					"name": "getVertical",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>vertical</code>"
					},
					"description": "Gets current value of property <code>vertical</code>.\r\rOrientation. Defines if the Scrollbar is vertical or horizontal.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "pageDown",
					"visibility": "public",
					"description": "Page Down is used to scroll one page forward."
				},
				{
					"name": "pageUp",
					"visibility": "public",
					"description": "Page Up is used to scroll one page back."
				},
				{
					"name": "setContentSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ScrollBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sContentSize",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>contentSize</code>"
						}
					],
					"description": "Sets a new value for property <code>contentSize</code>.\r\rSize of the scrollable content (in pixels).\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setScrollPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ScrollBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iScrollPosition",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>scrollPosition</code>"
						}
					],
					"description": "Sets a new value for property <code>scrollPosition</code>.\r\rScroll position in steps or pixels.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ScrollBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSize",
							"type": "sap.ui.core.CSSSize",
							"optional": false,
							"description": "New value for property <code>size</code>"
						}
					],
					"description": "Sets a new value for property <code>size</code>.\r\rSize of the Scrollbar (in pixels).\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSteps",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ScrollBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iSteps",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>steps</code>"
						}
					],
					"description": "Sets a new value for property <code>steps</code>.\r\rNumber of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setVertical",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ScrollBar",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bVertical",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>vertical</code>"
						}
					],
					"description": "Sets a new value for property <code>vertical</code>.\r\rOrientation. Defines if the Scrollbar is vertical or horizontal.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "unbind",
					"visibility": "public",
					"parameters": [
						{
							"name": "oOwnerDomRef",
							"type": "string",
							"optional": false,
							"description": "Dom ref of the Control that uses the scrollbar"
						}
					],
					"description": "Unbinds the mouse wheel scroll event of the control that has the scrollbar"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.ScrollBarAction",
			"basename": "ScrollBarAction",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "ScrollBarAction",
			"static": true,
			"visibility": "public",
			"description": "Actions are: Click on track, button, drag of thumb, or mouse wheel click",
			"properties": [
				{
					"name": "Drag",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Scrolling done by dragging the scroll bar's paint thumb"
				},
				{
					"name": "MouseWheel",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Scrolling done by mouse wheel"
				},
				{
					"name": "Page",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Range scrolling caused by clicking track area or using page up or page down key."
				},
				{
					"name": "Step",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Single step scrolling caused by clicking an arrow button or arrow key."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.Scrolling",
			"basename": "Scrolling",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Scrolling",
			"static": true,
			"visibility": "public",
			"description": "Defines the possible values for horizontal and vertical scrolling behavior.",
			"properties": [
				{
					"name": "Auto",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A scroll bar is shown if the content requires more space than the given space (rectangle) provides."
				},
				{
					"name": "Hidden",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "No scroll bar is shown, and the content stays in the given rectangle."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "No scroll bar provided even if the content is larger than the available space."
				},
				{
					"name": "Scroll",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "A scroll bar is always shown even if the space is large enough for the current content."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.search.OpenSearchProvider",
			"basename": "OpenSearchProvider",
			"resource": "sap/ui/core/search/OpenSearchProvider.js",
			"module": "sap/ui/core/search/OpenSearchProvider",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.search.SearchProvider",
			"description": "A SearchProvider which uses the OpenSearch protocol (either JSON or XML).",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "suggestUrl",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms}' must be used. For cross domain requests maybe a proxy must be used.",
						"methods": [
							"getSuggestUrl",
							"setSuggestUrl"
						]
					},
					{
						"name": "suggestType",
						"type": "string",
						"defaultValue": "json",
						"group": "Misc",
						"visibility": "public",
						"description": "The type of data which is provided by the given suggestUrl: either 'json' or 'xml'.",
						"methods": [
							"getSuggestType",
							"setSuggestType"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new search/OpenSearchProvider.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.search.OpenSearchProvider with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.search.SearchProvider.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.search.OpenSearchProvider."
				},
				{
					"name": "getSuggestType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>suggestType</code>"
					},
					"description": "Gets current value of property <code>suggestType</code>.\r\rThe type of data which is provided by the given suggestUrl: either 'json' or 'xml'.\r\rDefault value is <code>json</code>."
				},
				{
					"name": "getSuggestUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>suggestUrl</code>"
					},
					"description": "Gets current value of property <code>suggestUrl</code>.\r\rThe URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms}' must be used. For cross domain requests maybe a proxy must be used."
				},
				{
					"name": "setSuggestType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.search.OpenSearchProvider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSuggestType",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>suggestType</code>"
						}
					],
					"description": "Sets a new value for property <code>suggestType</code>.\r\rThe type of data which is provided by the given suggestUrl: either 'json' or 'xml'.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>json</code>."
				},
				{
					"name": "setSuggestUrl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.search.OpenSearchProvider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSuggestUrl",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>suggestUrl</code>"
						}
					],
					"description": "Sets a new value for property <code>suggestUrl</code>.\r\rThe URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms}' must be used. For cross domain requests maybe a proxy must be used.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "suggest",
					"visibility": "public",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The value for which suggestions are requested."
						},
						{
							"name": "fCallback",
							"type": "function",
							"optional": false,
							"description": "The callback function which is called when the suggestions are available."
						}
					],
					"description": "Call this function to get suggest values from the search provider.\nThe given callback function is called with the suggest value (type 'string', 1st parameter)\nand an array of the suggestions (type '[string]', 2nd parameter)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.search.SearchProvider",
			"basename": "SearchProvider",
			"resource": "sap/ui/core/search/SearchProvider.js",
			"module": "sap/ui/core/search/SearchProvider",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Element",
			"description": "Abstract base class for all SearchProviders which can be e.g. attached to a SearchField. Do not create instances of this class, but use a concrete sub class instead.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "icon",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Icon of the Search Provider",
						"methods": [
							"getIcon",
							"setIcon"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new search/SearchProvider.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.search.SearchProvider with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\r\rIcon of the Search Provider"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.search.SearchProvider."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.search.SearchProvider",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\r\rIcon of the Search Provider\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "suggest",
					"visibility": "public",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The value for which suggestions are requested."
						},
						{
							"name": "fnCallback",
							"type": "function",
							"optional": false,
							"description": "The callback function which is called when the suggestions are available."
						}
					],
					"description": "Call this function to get suggest values from the search provider.\nThe given callback function is called with the suggest value (type 'string', 1st parameter)\nand an array of the suggestions (type '[string]', 2nd parameter)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.SeparatorItem",
			"basename": "SeparatorItem",
			"resource": "sap/ui/core/SeparatorItem.js",
			"module": "sap/ui/core/SeparatorItem",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Item",
			"description": "An item that provides a visual separation. It borrows all its methods from the classes sap.ui.core.Item, sap.ui.core.Element,\nsap.ui.base.EventProvider, and sap.ui.base.Object.",
			"ui5-metadata": {
				"stereotype": "element"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new SeparatorItem."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.SeparatorItem with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.SeparatorItem."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.service.Service",
			"basename": "Service",
			"resource": "sap/ui/core/service/Service.js",
			"module": "sap/ui/core/service/Service",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "restricted",
			"since": "1.37.0",
			"extends": "sap.ui.base.Object",
			"description": "A service provides a specific functionality. A service instance can be obtained\nby a {@link sap.ui.core.service.ServiceFactory ServiceFactory} or at a Component\nvia {@link sap.ui.core.Component#getService getService} function.\n\nThis class is the abstract base class for services and needs to be extended:\n<pre>\nsap.ui.define(\"my/Service\", [\n  \"sap/ui/core/service/Service\"\n], function(Service) {\n\n  return Service.extend(\"my.Service\", {\n\n    init: function() {\n      // handle init lifecycle\n    },\n\n    exit: function() {\n      // handle exit lifecycle\n    },\n\n    doSomething: function() {\n      // some functionality\n    }\n\n });\n\n});\n</pre>\n\nA service instance will have a service context:\n<pre>\n{\n  \"scopeObject\": oComponent, // the Component instance\n  \"scopeType\": \"component\"   // the stereotype of the scopeObject\n}\n</pre>\n\nThe service context can be retrieved with the function <code>getContext</code>.\nThis function is private to the service instance and will not be exposed via\nthe service interface.\n\nFor consumers of the service it is recommended to provide the service instance\nonly - as e.g. the {@link sap.ui.core.Component#getService getService} function\nof the Component does. The service interface can be accessed via the\n<code>getInterface</code> function.\n\nOther private functions of the service instance are the lifecycle functions.\nCurrently there are two lifecycle functions: <code>init</code> and <code>exit</code>.\nIn addition the <code>destroy</code> function will also by hidden to avoid\nthe control of the service lifecycle for service interface consumers.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "oServiceContext",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"scopeObject": {
								"name": "scopeObject",
								"type": "object",
								"optional": false,
								"description": "Object that is in scope (e.g. component instance)"
							},
							"scopeType": {
								"name": "scopeType",
								"type": "string",
								"optional": false,
								"description": "Type of object that is in scope (e.g. component, ...)"
							}
						},
						"description": "Context for which the service is created"
					}
				],
				"description": "Creates a service for the given context."
			},
			"methods": [
				{
					"name": "destroy",
					"visibility": "protected",
					"description": "Lifecycle method to destroy the service instance.\n\nThis function is not available on the service interface."
				},
				{
					"name": "exit",
					"visibility": "protected",
					"description": "Cleans up the service instance before destruction.\n\nApplications must not call this hook method directly, it is called by the\nframework when the service is {@link #destroy destroyed}.\n\nSubclasses of service should override this hook to implement any necessary\nclean-up."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.service.Service with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getContext",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "the context of the service"
					},
					"description": "Returns the context of the service:\n<pre>\n{\n  \"scopeObject\": oComponent, // the Component instance\n  \"scopeType\": \"component\",   // the stereotype of the scopeObject\n  \"settings\": {} // the provided service settings\n}\n</pre>\n\nThis function is not available on the service interface."
				},
				{
					"name": "getInterface",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "the public interface of the service"
					},
					"description": "Returns the public interface of the service. By default, this filters the\ninternal functions like <code>getInterface</code>, <code>getContext</code>\nand all other functions starting with \"_\". Additionally the lifecycle\nfunctions <code>init</code>, <code>exit</code> and <code>destroy</code>\nwill be filtered for the service interface. This function can be\noverridden in order to self-create a service interface.\n\nThis function is not available on the service interface."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.service.Service."
				},
				{
					"name": "init",
					"visibility": "protected",
					"description": "Initializes the service instance after creation.\n\nApplications must not call this hook method directly, it is called by the\nframework while the constructor of a service is executed.\n\nSubclasses of service should override this hook to implement any necessary\ninitialization."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.service.ServiceFactory",
			"basename": "ServiceFactory",
			"resource": "sap/ui/core/service/ServiceFactory.js",
			"module": "sap/ui/core/service/ServiceFactory",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"since": "1.37.0",
			"extends": "sap.ui.base.Object",
			"description": "A service factory is used to create service instances for a specific context.\nThe service factory needs to be registered in a central\n{@link sap.ui.core.service.ServiceFactoryRegistry service factory registry}.\nConsumers of services require the service factory to create service instances.\n\nThe service factory base class can be used in a generic way to act as a\nfactory for any service:\n<pre>\nsap.ui.require([\n  \"sap/ui/core/service/ServiceFactoryRegistry\",\n  \"sap/ui/core/service/ServiceFactory\",\n  \"my/Service\"\n], function(ServiceFactoryRegistry, ServiceFactory, MyService) {\n\n  ServiceFactoryRegistry.register(new ServiceFactory(MService));\n\n});\n</pre>\n\nAdditionally a concrete service factory can be implemented by extending the\nservice factory base class if additional functionality is needed when\ncreating new instances for a specific context:\n<pre>\nsap.ui.define(\"my/ServiceFactory\", [\n  \"sap/ui/core/service/ServiceFactoryRegistry\",\n  \"sap/ui/core/service/ServiceFactory\",\n  \"my/Service\"\n], function(ServiceFactoryRegistry, ServiceFactory, MyService) {\n\n  return ServiceFactory.extend(\"my.ServiceFactory\", {\n    createInstance: function(oServiceContext) {\n      return Promise.resolve(new MyService(oServiceContext));\n    }\n  });\n\n});\n</pre>\n\nAnother option for the usage of the service factory is to provide a\nstructured object with information about the service which will\ncreate an anonymous service internally:\n<pre>\nsap.ui.define(\"my/ServiceFactory\", [\n  \"sap/ui/core/service/ServiceFactoryRegistry\",\n  \"sap/ui/core/service/ServiceFactory\",\n  \"my/Service\"\n], function(ServiceFactoryRegistry, ServiceFactory, MyService) {\n\n  return new ServiceFactory({\n\n    init: function() { ... },\n    exit: function() { ... },\n\n    doSomething: function() { ... }\n\n  });\n\n});\n</pre>\n\nAs <code>createInstance</code> returns a <code>Promise</code> e.g. the\nservice module can also be loaded asynchronously and resolve once the\nmodule has been loaded and instantiated.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "vService",
						"type": "function|object",
						"optional": true,
						"description": "A constructor function of a service or\n         a structured object with information about the service which\n         creates an anonymous service."
					}
				],
				"description": "Creates a service factory."
			},
			"methods": [
				{
					"name": "createInstance",
					"visibility": "protected",
					"returnValue": {
						"type": "Promise",
						"description": "Promise which resolves with the new Service instance."
					},
					"parameters": [
						{
							"name": "oServiceContext",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"scopeObject": {
									"name": "scopeObject",
									"type": "object",
									"optional": false,
									"description": "Object that is in scope (e.g. component instance)"
								},
								"scopeType": {
									"name": "scopeType",
									"type": "string",
									"optional": false,
									"description": "Type of object that is in scope (e.g. component, ...)"
								},
								"settings": {
									"name": "settings",
									"type": "string",
									"optional": false,
									"description": "The service settings"
								}
							},
							"description": "Context for which the service is created"
						}
					],
					"description": "Creates a new instance of a service. When used as a generic service factory\nby providing a service constructor function it will create a new service\ninstance otherwise the function will fail. For custom service factories\nthis function has to be overridden and should return a <code>Promise</code>."
				},
				{
					"name": "destroy",
					"visibility": "protected",
					"description": "Lifecycle method to destroy the service factory instance."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.service.ServiceFactory with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.service.ServiceFactory."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.support.Plugin",
			"basename": "Plugin",
			"resource": "sap/ui/core/support/Plugin.js",
			"module": "sap/ui/core/support/Plugin",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "restricted",
			"extends": "sap.ui.base.Object",
			"description": "This class represents a plugin for the support tool functionality of UI5. This class is internal and all its functions must not be used by an application.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"description": "Creates an instance of sap.ui.core.support.Plugin."
			},
			"methods": [
				{
					"name": "$",
					"visibility": "restricted",
					"returnValue": {
						"type": "jQuery",
						"description": "The jQuery wrapped plugin's DOM reference"
					},
					"parameters": [
						{
							"name": "sSuffix",
							"type": "string",
							"optional": true,
							"description": "ID suffix to get a jQuery object for"
						}
					],
					"description": "Returns the DOM node that represents this plugin wrapped as jQuery object.\n\nIf an ID suffix is given, the ID of this Element is concatenated with the suffix\n(separated by a single dash) and the DOM node with that compound ID will be wrapped by jQuery.\nThis matches the naming convention for named inner DOM nodes of a plugin.\n\nIf no suffix is given and if no DOM exists, a DIV with the ID of this plugin will be created\nand appended to the support popup content section (identified by class .sapUiSupportCntnt)."
				},
				{
					"name": "addStylesheet",
					"visibility": "restricted",
					"parameters": [
						{
							"name": "sCssResourcePath",
							"type": "string",
							"optional": false,
							"description": "Resource name of a CSS file, but without the '.css' extension"
						}
					],
					"description": "Adds the given stylesheet to the Support Tool's HTML page.\n\nA &lt;link&gt; tag will be added to the head of the HTML page, referring to the given\nCSS resource. The URL of the resource is determined from the given resource name\nby calling {@link jQuery.sap.getResourcePath}.\n\nA plugin should call this method only when it is {@link #runsAsToolPlugin running inside the tool window}."
				},
				{
					"name": "exit",
					"visibility": "restricted",
					"parameters": [
						{
							"name": "oSupportStub",
							"type": "sap.ui.core.support.Support",
							"optional": false,
							"description": "the support stub"
						}
					],
					"description": "Finalization function called each time the support mode is ended\n(support popup is closed)."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.support.Plugin with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getId",
					"visibility": "restricted",
					"returnValue": {
						"type": "string",
						"description": "the id"
					},
					"description": "Returns the id of this plugin instance."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.support.Plugin."
				},
				{
					"name": "getTitle",
					"visibility": "restricted",
					"returnValue": {
						"type": "string",
						"description": "the title"
					},
					"description": "Returns the title of this plugin instance."
				},
				{
					"name": "init",
					"visibility": "restricted",
					"parameters": [
						{
							"name": "oSupportStub",
							"type": "sap.ui.core.support.Support",
							"optional": false,
							"description": "the support stub"
						}
					],
					"description": "Initialization function called each time the support mode is started\n(diagnostics popup is opened).\nFor Plugins that are for diagnostics tool window and application window,\nthe init method is called twice, with the <code>oSupportStub</code>"
				},
				{
					"name": "isActive",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "whether the plugin is currently active or not"
					},
					"description": "Returns whether the plugin is currently active or not."
				},
				{
					"name": "isAppPlugin",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "whether this plugin instance can run in the application window"
					},
					"description": "Returns whether this plugin instance can run in the application window, default is <code>true</code>.\nPlugins that are <b>only</b> available on the diagnostics tool window should return <code>false</code> and overwrite\nthe method for this matter.\n\nThe method is also used in a static manner (called on the prototype) and therefore must not rely on\nany instance specific members."
				},
				{
					"name": "isToolPlugin",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "whether this plugin instance can run in the tool window"
					},
					"description": "Returns whether a plugin instance can run in the diagnostics tool window, default is <code>true</code>.\nPlugins that are <b>only</b> available on the application window should return <code>false</code> and overwrite\nthe method for this matter.\n\nThe method is also used in a static manner (called on the prototype) and therefore must not rely on\nany instance specific members."
				},
				{
					"name": "runsAsToolPlugin",
					"visibility": "restricted",
					"returnValue": {
						"type": "boolean",
						"description": "true if the plugin instance runs in the tool window, otherwise false"
					},
					"description": "Returns true if the plugin instance currently runs in tool window, otherwise false"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.TextAlign",
			"basename": "TextAlign",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "TextAlign",
			"static": true,
			"visibility": "public",
			"description": "Configuration options for text alignments.",
			"properties": [
				{
					"name": "Begin",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Locale-specific positioning at the beginning of the line."
				},
				{
					"name": "Center",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Centered text alignment."
				},
				{
					"name": "End",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Locale-specific positioning at the end of the line."
				},
				{
					"name": "Initial",
					"visibility": "public",
					"static": true,
					"since": "1.26.0",
					"type": "string",
					"description": "Sets no text align, so the browser default is used."
				},
				{
					"name": "Left",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Hard option for left alignment."
				},
				{
					"name": "Right",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Hard option for right alignment."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.TextDirection",
			"basename": "TextDirection",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "TextDirection",
			"static": true,
			"visibility": "public",
			"description": "Configuration options for the direction of texts.",
			"properties": [
				{
					"name": "Inherit",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Inherits the direction from its parent control/container."
				},
				{
					"name": "LTR",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Specifies left-to-right text direction."
				},
				{
					"name": "RTL",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Specifies right-to-left text direction."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.theming",
			"basename": "theming",
			"resource": "sap/ui/core/theming/Parameters.js",
			"module": "sap/ui/core/theming/Parameters",
			"static": true,
			"visibility": "public"
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.theming.Parameters",
			"basename": "Parameters",
			"resource": "sap/ui/core/theming/Parameters.js",
			"module": "sap/ui/core/theming/Parameters",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "A helper used for (read-only) access to CSS parameters at runtime",
			"methods": [
				{
					"name": "_getScopes",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "array",
						"description": "Scope names"
					},
					"parameters": [
						{
							"name": "bAvoidLoading",
							"type": "boolean",
							"optional": true,
							"description": "Whether loading of parameters should be avoided"
						}
					],
					"description": "Returns the scopes from current theming parameters."
				},
				{
					"name": "get",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string|object|undefined",
						"description": "the CSS parameter value(s)"
					},
					"parameters": [
						{
							"name": "vName",
							"type": "string|string[]",
							"optional": false,
							"description": "the (array with) CSS parameter name(s)"
						},
						{
							"name": "oElement",
							"type": "sap.ui.core.Element",
							"optional": true,
							"description": "Element / control instance to take into account when looking for a parameter value.\n                          This can make a difference when a parameter value is overridden in a theme scope set via a CSS class."
						}
					],
					"description": "Returns the current value for one or more theming parameters, depending on the given arguments.\n<ul>\n<li>If no parameter is given a key-value map containing all parameters is returned</li>\n<li>If a <code>string</code> is given as first parameter the value is returned as a <code>string</code></li>\n<li>If an <code>array</code> is given as first parameter a key-value map containing all parameters from the <code>array</code> is returned</li>\n</ul>\n<p>The returned key-value maps are a copy so changing values in the map does not have any effect</p>"
				},
				{
					"name": "getActiveScopesFor",
					"visibility": "restricted",
					"static": true,
					"returnValue": {
						"type": "array.<array.<string>>",
						"description": "Two dimensional array with scopes in bottom up order"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "object",
							"optional": false,
							"description": "element/control instance"
						}
					],
					"description": "Returns the active scope(s) for a given control by looking up the hierarchy.\n\nThe lookup navigates the DOM hierarchy if it's available. Otherwise if controls aren't rendered yet,\nit navigates the control hierarchy. By navigating the control hierarchy, inner-html elements\nwith the respective scope classes can't get recognized as the Custom Style Class API does only for\nroot elements."
				},
				{
					"name": "reset",
					"visibility": "public",
					"static": true,
					"description": "Resets the CSS parameters which finally will reload the parameters\nthe next time they are queried via the method <code>get</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.Title",
			"basename": "Title",
			"resource": "sap/ui/core/Title.js",
			"module": "sap/ui/core/Title",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.16.0",
			"extends": "sap.ui.core.Element",
			"description": "Represents a title element that can be used for aggregation with other controls",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the title text",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "icon",
						"type": "sap.ui.core.URI",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the URL for icon display",
						"methods": [
							"getIcon",
							"setIcon"
						]
					},
					{
						"name": "level",
						"type": "sap.ui.core.TitleLevel",
						"defaultValue": "Auto",
						"group": "Appearance",
						"visibility": "public",
						"description": "Defines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.",
						"methods": [
							"getLevel",
							"setLevel"
						]
					},
					{
						"name": "emphasized",
						"type": "boolean",
						"defaultValue": false,
						"group": "Appearance",
						"visibility": "public",
						"description": "If set the title is displayed emphasized.\nThis feature is nor supported by all controls using the Title.control.",
						"methods": [
							"getEmphasized",
							"setEmphasized"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Title.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.Title with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getEmphasized",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>emphasized</code>"
					},
					"description": "Gets current value of property <code>emphasized</code>.\r\rIf set the title is displayed emphasized.\nThis feature is nor supported by all controls using the Title.control.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "getIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.URI",
						"description": "Value of property <code>icon</code>"
					},
					"description": "Gets current value of property <code>icon</code>.\r\rDefines the URL for icon display"
				},
				{
					"name": "getLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TitleLevel",
						"description": "Value of property <code>level</code>"
					},
					"description": "Gets current value of property <code>level</code>.\r\rDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\r\rDefault value is <code>Auto</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.Title."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rDefines the title text"
				},
				{
					"name": "setEmphasized",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Title",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEmphasized",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>emphasized</code>"
						}
					],
					"description": "Sets a new value for property <code>emphasized</code>.\r\rIf set the title is displayed emphasized.\nThis feature is nor supported by all controls using the Title.control.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>false</code>."
				},
				{
					"name": "setIcon",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Title",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sIcon",
							"type": "sap.ui.core.URI",
							"optional": false,
							"description": "New value for property <code>icon</code>"
						}
					],
					"description": "Sets a new value for property <code>icon</code>.\r\rDefines the URL for icon display\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setLevel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Title",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLevel",
							"type": "sap.ui.core.TitleLevel",
							"optional": false,
							"description": "New value for property <code>level</code>"
						}
					],
					"description": "Sets a new value for property <code>level</code>.\r\rDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>Auto</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Title",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rDefines the title text\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.TitleLevel",
			"basename": "TitleLevel",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "TitleLevel",
			"static": true,
			"visibility": "public",
			"since": "1.9.1",
			"description": "Level of a title.",
			"properties": [
				{
					"name": "Auto",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The level of the title is choosen by the control rendering the title."
				},
				{
					"name": "H1",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Title is of level 1."
				},
				{
					"name": "H2",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Title is of level 2"
				},
				{
					"name": "H3",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Title is of level 3"
				},
				{
					"name": "H4",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Title is of level 4"
				},
				{
					"name": "H5",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Title is of level 5"
				},
				{
					"name": "H6",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The Title is of level 6"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.tmpl.DOMAttribute",
			"basename": "DOMAttribute",
			"resource": "sap/ui/core/tmpl/DOMAttribute.js",
			"module": "sap/ui/core/tmpl/DOMAttribute",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.15",
			"extends": "sap.ui.core.Element",
			"description": "Represents a DOM attribute of a DOM element.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Name of the DOM attribute",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "value",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "Value of the DOM attribute",
						"methods": [
							"getValue",
							"setValue"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new tmpl/DOMAttribute.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.tmpl.DOMAttribute with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.tmpl.DOMAttribute."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\r\rName of the DOM attribute"
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\r\rValue of the DOM attribute"
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMAttribute",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\r\rName of the DOM attribute\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMAttribute",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\r\rValue of the DOM attribute\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.tmpl.DOMElement",
			"basename": "DOMElement",
			"resource": "sap/ui/core/tmpl/DOMElement.js",
			"module": "sap/ui/core/tmpl/DOMElement",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.15",
			"extends": "sap.ui.core.Control",
			"description": "Represents a DOM element. It allows to use databinding for the properties and nested DOM attributes.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Appearance",
						"visibility": "public",
						"description": "The text content of the DOM element",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "tag",
						"type": "string",
						"defaultValue": "span",
						"group": "Behavior",
						"visibility": "public",
						"description": "The HTML-tag of the DOM element which contains the text",
						"methods": [
							"getTag",
							"setTag"
						]
					}
				],
				"aggregations": [
					{
						"name": "attributes",
						"singularName": "attribute",
						"type": "sap.ui.core.tmpl.DOMAttribute",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "DOM attributes which are rendered as part of the DOM element and bindable",
						"methods": [
							"getAttributes",
							"destroyAttributes",
							"insertAttribute",
							"addAttribute",
							"removeAttribute",
							"indexOfAttribute",
							"removeAllAttributes"
						]
					},
					{
						"name": "elements",
						"singularName": "element",
						"type": "sap.ui.core.tmpl.DOMElement",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Nested DOM elements to support nested bindable structures",
						"methods": [
							"getElements",
							"destroyElements",
							"insertElement",
							"addElement",
							"removeElement",
							"indexOfElement",
							"removeAllElements"
						]
					}
				],
				"defaultAggregation": "attributes"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new tmpl/DOMElement.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addAttribute",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAttribute",
							"type": "sap.ui.core.tmpl.DOMAttribute",
							"optional": false,
							"description": "the attribute to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some attribute to the aggregation <code>attributes</code>."
				},
				{
					"name": "addElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.tmpl.DOMElement",
							"optional": false,
							"description": "the element to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some element to the aggregation <code>elements</code>."
				},
				{
					"name": "attr",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "value of attribute or <code>this</code> when called as a setter"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The name of the DOM attribute."
						},
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The value of the DOM attribute. If the value is undefined the DOM attribute will be removed."
						}
					],
					"description": "Returns the value of a DOM attribute if available or undefined if the DOM attribute is not available when using this method with the parameter name only.\nWhen using the method with the parameter name and value the method acts as a setter and sets the value of a DOM attribute.\nIn this case the return value is the reference to this DOM element to support method chaining. If you pass null as value of the attribute the attribute will be removed."
				},
				{
					"name": "destroyAttributes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the attributes in the aggregation <code>attributes</code>."
				},
				{
					"name": "destroyElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the elements in the aggregation <code>elements</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.tmpl.DOMElement with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "getAttributes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMAttribute[]"
					},
					"description": "Gets content of aggregation <code>attributes</code>.\r\rDOM attributes which are rendered as part of the DOM element and bindable"
				},
				{
					"name": "getElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement[]"
					},
					"description": "Gets content of aggregation <code>elements</code>.\r\rNested DOM elements to support nested bindable structures"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.tmpl.DOMElement."
				},
				{
					"name": "getTag",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>tag</code>"
					},
					"description": "Gets current value of property <code>tag</code>.\r\rThe HTML-tag of the DOM element which contains the text\r\rDefault value is <code>span</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rThe text content of the DOM element"
				},
				{
					"name": "indexOfAttribute",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oAttribute",
							"type": "sap.ui.core.tmpl.DOMAttribute",
							"optional": false,
							"description": "The attribute whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.tmpl.DOMAttribute</code> in the aggregation <code>attributes</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfElement",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.tmpl.DOMElement",
							"optional": false,
							"description": "The element whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.tmpl.DOMElement</code> in the aggregation <code>elements</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertAttribute",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oAttribute",
							"type": "sap.ui.core.tmpl.DOMAttribute",
							"optional": false,
							"description": "the attribute to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the attribute should be inserted at; for\r             a negative value of <code>iIndex</code>, the attribute is inserted at position 0; for a value\r             greater than the current size of the aggregation, the attribute is inserted at\r             the last position"
						}
					],
					"description": "Inserts a attribute into the aggregation <code>attributes</code>."
				},
				{
					"name": "insertElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.tmpl.DOMElement",
							"optional": false,
							"description": "the element to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the element should be inserted at; for\r             a negative value of <code>iIndex</code>, the element is inserted at position 0; for a value\r             greater than the current size of the aggregation, the element is inserted at\r             the last position"
						}
					],
					"description": "Inserts a element into the aggregation <code>elements</code>."
				},
				{
					"name": "removeAllAttributes",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMAttribute[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>attributes</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllElements",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>elements</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAttr",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The name of the DOM attribute."
						}
					],
					"description": "Removes the DOM attribute for the given name and returns the reference to this DOM element to support method chaining."
				},
				{
					"name": "removeAttribute",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMAttribute",
						"description": "The removed attribute or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vAttribute",
							"type": "int|string|sap.ui.core.tmpl.DOMAttribute",
							"optional": false,
							"description": "The attribute to remove or its index or id"
						}
					],
					"description": "Removes a attribute from the aggregation <code>attributes</code>."
				},
				{
					"name": "removeElement",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement",
						"description": "The removed element or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vElement",
							"type": "int|string|sap.ui.core.tmpl.DOMElement",
							"optional": false,
							"description": "The element to remove or its index or id"
						}
					],
					"description": "Removes a element from the aggregation <code>elements</code>."
				},
				{
					"name": "setTag",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTag",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>tag</code>"
						}
					],
					"description": "Sets a new value for property <code>tag</code>.\r\rThe HTML-tag of the DOM element which contains the text\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>span</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.DOMElement",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rThe text content of the DOM element\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.tmpl.HandlebarsTemplate",
			"basename": "HandlebarsTemplate",
			"resource": "sap/ui/core/tmpl/HandlebarsTemplate.js",
			"module": "sap/ui/core/tmpl/HandlebarsTemplate",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.15",
			"extends": "sap.ui.core.tmpl.Template",
			"description": "The class for Handlebars Templates.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "optional id for the new template; generated automatically if\n           no non-empty id is given Note: this can be omitted, no matter\n           whether <code>mSettings</code> will be given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the\n           new component instance"
					}
				],
				"description": "Creates and initializes a new handlebars template with the given <code>sId</code>\nand settings.\n\nThe set of allowed entries in the <code>mSettings</code> object depends on\nthe concrete subclass and is described there."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.tmpl.HandlebarsTemplate with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.tmpl.Template.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.tmpl.HandlebarsTemplate."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.tmpl.Template",
			"basename": "Template",
			"resource": "sap/ui/core/tmpl/Template.js",
			"module": "sap/ui/core/tmpl/Template",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.15",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Base Class for Template.",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "content",
						"type": "string",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The Template definition as a String.",
						"methods": [
							"getContent",
							"setContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "optional id for the new template; generated automatically if\n           no non-empty id is given Note: this can be omitted, no matter\n           whether <code>mSettings</code> will be given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the\n           new component instance"
					}
				],
				"description": "Creates and initializes a new template with the given <code>sId</code> and\nsettings.\n\nThe set of allowed entries in the <code>mSettings</code> object depends on\nthe concrete subclass and is described there.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "byId",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.tmpl.Template",
						"description": "the template for the given ID"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false
						}
					],
					"description": "Returns the registered template for the given ID, if any."
				},
				{
					"name": "createControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "the created control instance"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "the control ID"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "the context for the renderer/templating"
						},
						{
							"name": "oView",
							"type": "sap.ui.core.mvc.View",
							"optional": false
						}
					],
					"description": "Creates an anonymous TemplateControl for the Template."
				},
				{
					"name": "declareControl",
					"visibility": "public",
					"returnValue": {
						"type": "function",
						"description": "the created class / constructor function"
					},
					"parameters": [
						{
							"name": "sControl",
							"type": "string",
							"optional": false,
							"description": "the fully qualified name of the control"
						}
					],
					"description": "Declares a new control based on this template and returns the created\nclass / constructor function. The class is based on the information coming\nfrom the abstract functions <code>createMetadata</code> and\n<code>createRenderer</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.tmpl.Template with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>content</code>"
					},
					"description": "Gets current value of property <code>content</code>.\r\rThe Template definition as a String."
				},
				{
					"name": "getInterface",
					"visibility": "public"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.tmpl.Template."
				},
				{
					"name": "parsePath",
					"visibility": "protected",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "the model and the path"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path"
						}
					],
					"description": "parses the given path and extracts the model and path"
				},
				{
					"name": "placeAt",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "the created control instance"
					},
					"parameters": [
						{
							"name": "oRef",
							"type": "string|DomRef",
							"optional": false,
							"description": "the id or the DOM reference where to render the template"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "The context to use to evaluate the Template. It will be applied as value for the context property of the created control."
						},
						{
							"name": "vPosition",
							"type": "string|int",
							"optional": true,
							"description": "Describes the position where the control should be put into the container"
						},
						{
							"name": "bInline",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Creates an anonymous TemplateControl for the Template and places the control\ninto the specified DOM element."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.Template",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sContent",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>content</code>"
						}
					],
					"description": "Sets a new value for property <code>content</code>.\r\rThe Template definition as a String.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.tmpl.TemplateControl",
			"basename": "TemplateControl",
			"resource": "sap/ui/core/tmpl/TemplateControl.js",
			"module": "sap/ui/core/tmpl/TemplateControl",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.15",
			"extends": "sap.ui.core.Control",
			"description": "This is the base class for all template controls. Template controls are declared based on templates.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "context",
						"type": "object",
						"defaultValue": null,
						"group": "Data",
						"visibility": "public",
						"description": "The context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object.",
						"methods": [
							"getContext",
							"setContext"
						]
					}
				],
				"aggregations": [
					{
						"name": "controls",
						"singularName": "control",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "hidden",
						"description": "The nested controls of the template control",
						"methods": [
							"getControls",
							"destroyControls",
							"insertControl",
							"addControl",
							"removeControl",
							"indexOfControl",
							"removeAllControls"
						]
					}
				],
				"associations": [
					{
						"name": "template",
						"singularName": "template",
						"type": "sap.ui.core.tmpl.Template",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "The template on which the template control is based on.",
						"methods": [
							"getTemplate",
							"setTemplate"
						]
					}
				],
				"events": [
					{
						"name": "afterRendering",
						"visibility": "public",
						"description": "Fired when the Template Control has been (re-)rendered and its HTML is present in the DOM.",
						"methods": [
							"attachAfterRendering",
							"detachAfterRendering",
							"fireAfterRendering"
						]
					},
					{
						"name": "beforeRendering",
						"visibility": "public",
						"description": "Fired before this Template Control is re-rendered. Use to unbind event handlers from HTML elements etc.",
						"methods": [
							"attachBeforeRendering",
							"detachBeforeRendering",
							"fireBeforeRendering"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new tmpl/TemplateControl.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "afterRendering",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired when the Template Control has been (re-)rendered and its HTML is present in the DOM."
				},
				{
					"name": "beforeRendering",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Fired before this Template Control is re-rendered. Use to unbind event handlers from HTML elements etc."
				}
			],
			"methods": [
				{
					"name": "attachAfterRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.tmpl.TemplateControl</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>afterRendering</code> event of this <code>sap.ui.core.tmpl.TemplateControl</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.tmpl.TemplateControl</code> itself.\r\rFired when the Template Control has been (re-)rendered and its HTML is present in the DOM."
				},
				{
					"name": "attachBeforeRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.tmpl.TemplateControl</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>beforeRendering</code> event of this <code>sap.ui.core.tmpl.TemplateControl</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.tmpl.TemplateControl</code> itself.\r\rFired before this Template Control is re-rendered. Use to unbind event handlers from HTML elements etc."
				},
				{
					"name": "bindList",
					"visibility": "protected",
					"returnValue": {
						"type": "any",
						"description": "the value of the path"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the binding path"
						}
					],
					"description": "Creates a pseudo binding for a aggregation to get notified once the property\nchanges to invalidate the control and trigger a re-rendering."
				},
				{
					"name": "bindProp",
					"visibility": "protected",
					"returnValue": {
						"type": "any",
						"description": "the value of the path"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the binding path"
						}
					],
					"description": "Creates a pseudo binding for a property to get notified once the property\nchanges to invalidate the control and trigger a re-rendering."
				},
				{
					"name": "createControl",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "new control instance"
					},
					"parameters": [
						{
							"name": "mSettings",
							"type": "object",
							"optional": false,
							"description": "the settings for the new control"
						},
						{
							"name": "sParentPath",
							"type": "string",
							"optional": true,
							"description": "the parent path for the control"
						},
						{
							"name": "bDoNotAdd",
							"type": "boolean",
							"optional": true,
							"description": "if true, then the control will not be\n         added to the _controls aggregation"
						},
						{
							"name": "oView",
							"type": "sap.ui.core.mvc.View",
							"optional": false
						}
					],
					"description": "compiles (creates and registers) a new control"
				},
				{
					"name": "createDOMElement",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "new DOM element instance"
					},
					"parameters": [
						{
							"name": "mSettings",
							"type": "object",
							"optional": false,
							"description": "the settings for the new DOM element"
						},
						{
							"name": "sParentPath",
							"type": "string",
							"optional": true,
							"description": "the parent path for the DOM element"
						},
						{
							"name": "bDoNotAdd",
							"type": "boolean",
							"optional": true,
							"description": "if true, then the control will not be\n         added to the _controls aggregation"
						}
					],
					"description": "compiles (creates and registers) a new DOM element"
				},
				{
					"name": "detachAfterRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>afterRendering</code> event of this <code>sap.ui.core.tmpl.TemplateControl</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachBeforeRendering",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>beforeRendering</code> event of this <code>sap.ui.core.tmpl.TemplateControl</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.tmpl.TemplateControl with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireAfterRendering",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>afterRendering</code> to attached listeners."
				},
				{
					"name": "fireBeforeRendering",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>beforeRendering</code> to attached listeners."
				},
				{
					"name": "getContext",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>context</code>"
					},
					"description": "Gets current value of property <code>context</code>.\r\rThe context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.tmpl.TemplateControl."
				},
				{
					"name": "getTemplate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ID"
					},
					"description": "ID of the element which is the current target of the association <code>template</code>, or <code>null</code>."
				},
				{
					"name": "getTemplateRenderer",
					"visibility": "protected",
					"returnValue": {
						"type": "function",
						"description": "the instance specific renderer function"
					},
					"description": "Returns the instance specific renderer for an anonymous template control."
				},
				{
					"name": "isInline",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "flag, whether to control is inline or not"
					},
					"description": "checks whether the control is inline or not"
				},
				{
					"name": "setContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "object",
							"optional": false,
							"description": "New value for property <code>context</code>"
						}
					],
					"description": "Sets a new value for property <code>context</code>.\r\rThe context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTemplate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.tmpl.TemplateControl",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTemplate",
							"type": "sap.ui.core.ID|sap.ui.core.tmpl.Template",
							"optional": false,
							"description": "ID of an element which becomes the new target of this template association; alternatively, an element instance may be given"
						}
					],
					"description": "Sets the associated <code>template</code>."
				},
				{
					"name": "setTemplateRenderer",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.tmpl.Template",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnRenderer",
							"type": "function",
							"optional": false,
							"description": "the instance specific renderer function"
						}
					],
					"description": "Sets the instance specific renderer for an anonymous template control."
				}
			]
		},
		{
			"kind": "interface",
			"name": "sap.ui.core.Toolbar",
			"basename": "Toolbar",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Toolbar",
			"static": true,
			"visibility": "public",
			"since": "1.21.0",
			"description": "Marker interface for toolbar controls."
		},
		{
			"kind": "class",
			"name": "sap.ui.core.TooltipBase",
			"basename": "TooltipBase",
			"resource": "sap/ui/core/TooltipBase.js",
			"module": "sap/ui/core/TooltipBase",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.Control",
			"description": "Abstract class that can be extended in order to implement any extended tooltip. For example, RichTooltip Control is based on it. It provides the opening/closing behavior and the main \"text\" property.",
			"ui5-metadata": {
				"stereotype": "control",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": "",
						"group": "Misc",
						"visibility": "public",
						"description": "The text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "openDuration",
						"type": "int",
						"defaultValue": 200,
						"group": "Behavior",
						"visibility": "public",
						"description": "Optional. Open Duration in milliseconds.",
						"methods": [
							"getOpenDuration",
							"setOpenDuration"
						]
					},
					{
						"name": "closeDuration",
						"type": "int",
						"defaultValue": 200,
						"group": "Behavior",
						"visibility": "public",
						"description": "Optional. Close Duration in milliseconds.",
						"methods": [
							"getCloseDuration",
							"setCloseDuration"
						]
					},
					{
						"name": "myPosition",
						"type": "sap.ui.core.Dock",
						"defaultValue": "begin top",
						"group": "Behavior",
						"visibility": "public",
						"description": "Optional. My position defines which position on the extended tooltip being positioned to align with the target control.",
						"methods": [
							"getMyPosition",
							"setMyPosition"
						]
					},
					{
						"name": "atPosition",
						"type": "sap.ui.core.Dock",
						"defaultValue": "begin bottom",
						"group": "Behavior",
						"visibility": "public",
						"description": "Optional. At position defines which position on the target control to align the positioned tooltip.",
						"methods": [
							"getAtPosition",
							"setAtPosition"
						]
					},
					{
						"name": "offset",
						"type": "string",
						"defaultValue": "10 3",
						"group": "Behavior",
						"visibility": "public",
						"description": "Optional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\".",
						"methods": [
							"getOffset",
							"setOffset"
						]
					},
					{
						"name": "collision",
						"type": "sap.ui.core.Collision",
						"defaultValue": "flip",
						"group": "Behavior",
						"visibility": "public",
						"description": "Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.",
						"methods": [
							"getCollision",
							"setCollision"
						]
					},
					{
						"name": "openDelay",
						"type": "int",
						"defaultValue": 500,
						"group": "Misc",
						"visibility": "public",
						"description": "Opening delay of the tooltip in milliseconds",
						"methods": [
							"getOpenDelay",
							"setOpenDelay"
						]
					},
					{
						"name": "closeDelay",
						"type": "int",
						"defaultValue": 100,
						"group": "Misc",
						"visibility": "public",
						"description": "Closing delay of the tooltip in milliseconds",
						"methods": [
							"getCloseDelay",
							"setCloseDelay"
						]
					}
				],
				"events": [
					{
						"name": "closed",
						"visibility": "public",
						"since": "1.11.0",
						"description": "This event is fired when the Tooltip has been closed",
						"methods": [
							"attachClosed",
							"detachClosed",
							"fireClosed"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new TooltipBase.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "closed",
					"visibility": "public",
					"since": "1.11.0",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "This event is fired when the Tooltip has been closed"
				}
			],
			"methods": [
				{
					"name": "attachClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.11.0",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.ui.core.TooltipBase</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>closed</code> event of this <code>sap.ui.core.TooltipBase</code>.\r\rWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \rotherwise it will be bound to this <code>sap.ui.core.TooltipBase</code> itself.\r\rThis event is fired when the Tooltip has been closed"
				},
				{
					"name": "detachClosed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.11.0",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>closed</code> event of this <code>sap.ui.core.TooltipBase</code>.\r\rThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.TooltipBase with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "fireClosed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.11.0",
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "Parameters to pass along with the event"
						}
					],
					"description": "Fires event <code>closed</code> to attached listeners."
				},
				{
					"name": "getAtPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Dock",
						"description": "Value of property <code>atPosition</code>"
					},
					"description": "Gets current value of property <code>atPosition</code>.\r\rOptional. At position defines which position on the target control to align the positioned tooltip.\r\rDefault value is <code>begin bottom</code>."
				},
				{
					"name": "getCloseDelay",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>closeDelay</code>"
					},
					"description": "Gets current value of property <code>closeDelay</code>.\r\rClosing delay of the tooltip in milliseconds\r\rDefault value is <code>100</code>."
				},
				{
					"name": "getCloseDuration",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>closeDuration</code>"
					},
					"description": "Gets current value of property <code>closeDuration</code>.\r\rOptional. Close Duration in milliseconds.\r\rDefault value is <code>200</code>."
				},
				{
					"name": "getCollision",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Collision",
						"description": "Value of property <code>collision</code>"
					},
					"description": "Gets current value of property <code>collision</code>.\r\rOptional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.\r\rDefault value is <code>flip</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.TooltipBase."
				},
				{
					"name": "getMyPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Dock",
						"description": "Value of property <code>myPosition</code>"
					},
					"description": "Gets current value of property <code>myPosition</code>.\r\rOptional. My position defines which position on the extended tooltip being positioned to align with the target control.\r\rDefault value is <code>begin top</code>."
				},
				{
					"name": "getOffset",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>offset</code>"
					},
					"description": "Gets current value of property <code>offset</code>.\r\rOptional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\".\r\rDefault value is <code>10 3</code>."
				},
				{
					"name": "getOpenDelay",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>openDelay</code>"
					},
					"description": "Gets current value of property <code>openDelay</code>.\r\rOpening delay of the tooltip in milliseconds\r\rDefault value is <code>500</code>."
				},
				{
					"name": "getOpenDuration",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>openDuration</code>"
					},
					"description": "Gets current value of property <code>openDuration</code>.\r\rOptional. Open Duration in milliseconds.\r\rDefault value is <code>200</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rThe text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip.\r\rDefault value is <code></code>."
				},
				{
					"name": "setAtPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAtPosition",
							"type": "sap.ui.core.Dock",
							"optional": false,
							"description": "New value for property <code>atPosition</code>"
						}
					],
					"description": "Sets a new value for property <code>atPosition</code>.\r\rOptional. At position defines which position on the target control to align the positioned tooltip.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>begin bottom</code>."
				},
				{
					"name": "setCloseDelay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iCloseDelay",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>closeDelay</code>"
						}
					],
					"description": "Sets a new value for property <code>closeDelay</code>.\r\rClosing delay of the tooltip in milliseconds\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>100</code>."
				},
				{
					"name": "setCloseDuration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iCloseDuration",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>closeDuration</code>"
						}
					],
					"description": "Sets a new value for property <code>closeDuration</code>.\r\rOptional. Close Duration in milliseconds.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>200</code>."
				},
				{
					"name": "setCollision",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sCollision",
							"type": "sap.ui.core.Collision",
							"optional": false,
							"description": "New value for property <code>collision</code>"
						}
					],
					"description": "Sets a new value for property <code>collision</code>.\r\rOptional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>flip</code>."
				},
				{
					"name": "setMyPosition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMyPosition",
							"type": "sap.ui.core.Dock",
							"optional": false,
							"description": "New value for property <code>myPosition</code>"
						}
					],
					"description": "Sets a new value for property <code>myPosition</code>.\r\rOptional. My position defines which position on the extended tooltip being positioned to align with the target control.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>begin top</code>."
				},
				{
					"name": "setOffset",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sOffset",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>offset</code>"
						}
					],
					"description": "Sets a new value for property <code>offset</code>.\r\rOptional. Offset adds these left-top values to the calculated position.\nExample: \"10 3\".\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>10 3</code>."
				},
				{
					"name": "setOpenDelay",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iOpenDelay",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>openDelay</code>"
						}
					],
					"description": "Sets a new value for property <code>openDelay</code>.\r\rOpening delay of the tooltip in milliseconds\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>500</code>."
				},
				{
					"name": "setOpenDuration",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iOpenDuration",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>openDuration</code>"
						}
					],
					"description": "Sets a new value for property <code>openDuration</code>.\r\rOptional. Open Duration in milliseconds.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>200</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.TooltipBase",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rThe text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code></code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.UIArea",
			"basename": "UIArea",
			"resource": "sap/ui/core/UIArea.js",
			"module": "sap/ui/core/UIArea",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.ManagedObject",
			"description": "An area in a page that hosts a tree of UI elements.\n\nProvides means for event-handling, rerendering, etc.\n\nSpecial aggregation \"dependents\" is connected to the lifecycle management and databinding,\nbut not rendered automatically and can be used for popups or other dependent controls. This allows\ndefinition of popup controls in declarative views and enables propagation of model and context\ninformation to them.",
			"ui5-metadata": {
				"stereotype": "object",
				"aggregations": [
					{
						"name": "content",
						"singularName": "content",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Content that is displayed in the UIArea.",
						"methods": [
							"getContent",
							"destroyContent",
							"insertContent",
							"addContent",
							"removeContent",
							"indexOfContent",
							"removeAllContent"
						]
					},
					{
						"name": "dependents",
						"singularName": "dependent",
						"type": "sap.ui.core.Control",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Dependent objects whose lifecycle is bound to the UIarea but which are not automatically rendered by the UIArea.",
						"methods": [
							"getDependents",
							"destroyDependents",
							"insertDependent",
							"addDependent",
							"removeDependent",
							"indexOfDependent",
							"removeAllDependents"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oCore",
						"type": "sap.ui.core.Core",
						"optional": false,
						"description": "internal API of the <core>Core</code> that manages this UIArea"
					},
					{
						"name": "oRootNode",
						"type": "object",
						"optional": true,
						"description": "reference to the Dom Node that should be 'hosting' the UI Area."
					}
				],
				"description": "Accepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some content to the aggregation <code>content</code>."
				},
				{
					"name": "addDependent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDependent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the dependent to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some dependent to the aggregation <code>dependents</code>."
				},
				{
					"name": "destroyContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the content in the aggregation <code>content</code>."
				},
				{
					"name": "destroyDependents",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the dependents in the aggregation <code>dependents</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.UIArea with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "getBindingContext",
					"visibility": "protected",
					"returnValue": {
						"type": "null",
						"description": "Always returns null."
					},
					"description": "Provide getBindingContext, as UIArea can be parent of an element."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>content</code>.\r\rContent that is displayed in the UIArea."
				},
				{
					"name": "getDependents",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]"
					},
					"description": "Gets content of aggregation <code>dependents</code>.\r\rDependent objects whose lifecycle is bound to the UIarea but which are not automatically rendered by the UIArea."
				},
				{
					"name": "getEventingParent",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.base.EventProvider",
						"description": "the parent event provider"
					},
					"description": "Returns the Core's event provider as new eventing parent to enable control event bubbling to the core to ensure compatibility with the core validation events."
				},
				{
					"name": "getId",
					"visibility": "public",
					"returnValue": {
						"type": "string|null",
						"description": "id of this UIArea"
					},
					"description": "Returns this <code>UIArea</code>'s id (as determined from provided RootNode)."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.UIArea."
				},
				{
					"name": "getRootControl",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the content control of this <code>UIArea</code> at the specified index."
					},
					"parameters": [
						{
							"name": "idx",
							"type": "int",
							"optional": false,
							"description": "index of the control in the content of this <code>UIArea</code>"
						}
					],
					"description": "Returns the content control of this <code>UIArea</code> at the specified index.\nIf no index is given the first content control is returned.",
					"deprecated": {
						"text": "use function <code>getContent</code> instead"
					}
				},
				{
					"name": "getRootNode",
					"visibility": "public",
					"returnValue": {
						"type": "Element",
						"description": "the Root Node hosting this instance of <code>UIArea</code>."
					},
					"description": "Returns the Root Node hosting this instance of <code>UIArea</code>."
				},
				{
					"name": "getUIArea",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "this"
					},
					"description": "Returns this UI area. Needed to stop recursive calls from an element to its parent."
				},
				{
					"name": "indexOfContent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The content whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>content</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfDependent",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oDependent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "The dependent whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.Control</code> in the aggregation <code>dependents</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the content to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the content should be inserted at; for\r             a negative value of <code>iIndex</code>, the content is inserted at position 0; for a value\r             greater than the current size of the aggregation, the content is inserted at\r             the last position"
						}
					],
					"description": "Inserts a content into the aggregation <code>content</code>."
				},
				{
					"name": "insertDependent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDependent",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the dependent to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the dependent should be inserted at; for\r             a negative value of <code>iIndex</code>, the dependent is inserted at position 0; for a value\r             greater than the current size of the aggregation, the dependent is inserted at\r             the last position"
						}
					],
					"description": "Inserts a dependent into the aggregation <code>dependents</code>."
				},
				{
					"name": "invalidate",
					"visibility": "protected",
					"description": "Will be used as end-point for invalidate-bubbling from controls up their hierarchy.<br/> Triggers re-rendering of\nthe UIAreas content."
				},
				{
					"name": "isActive",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "True if the control is still in the active DOM"
					},
					"description": "Checks whether the control is still valid (is in the DOM)"
				},
				{
					"name": "isInvalidateSuppressed",
					"visibility": "protected",
					"returnValue": {
						"description": "boolean"
					},
					"description": "Returns whether rerendering is currently suppressed on this UIArea"
				},
				{
					"name": "isLocked",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "locked state"
					},
					"description": "Returns the locked state of the <code>sap.ui.core.UIArea</code>"
				},
				{
					"name": "lock",
					"visibility": "public",
					"description": "Locks this instance of UIArea.\n\nRerendering and eventing will not be active as long as no\n{@link #unlock} is called."
				},
				{
					"name": "removeAllContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>content</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllDependents",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>dependents</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed content or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vContent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The content to remove or its index or id"
						}
					],
					"description": "Removes a content from the aggregation <code>content</code>."
				},
				{
					"name": "removeDependent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "The removed dependent or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vDependent",
							"type": "int|string|sap.ui.core.Control",
							"optional": false,
							"description": "The dependent to remove or its index or id"
						}
					],
					"description": "Removes a dependent from the aggregation <code>dependents</code>."
				},
				{
					"name": "setRootControl",
					"visibility": "public",
					"parameters": [
						{
							"name": "oRootControl",
							"type": "sap.ui.base.Interface|sap.ui.core.Control",
							"optional": false,
							"description": "the Control that should be the Root for this <code>UIArea</code>."
						}
					],
					"description": "Sets the root control to be displayed in this UIArea.\n\nFirst, all old content controls (if any) will be detached from this UIArea (e.g. their parent\nrelationship to this UIArea will be cut off). Then the parent relationship for the new\ncontent control (if not empty) will be set to this UIArea and finally, the UIArea will\nbe marked for re-rendering.\n\nThe real re-rendering happens whenever the re-rendering is called. Either implicitly\nat the end of any control event or by calling sap.ui.getCore().applyChanges().",
					"deprecated": {
						"text": "use functions <code>removeAllContent</code> and <code>addContent</code> instead"
					}
				},
				{
					"name": "setRootNode",
					"visibility": "public",
					"parameters": [
						{
							"name": "oRootNode",
							"type": "object",
							"optional": false,
							"description": "the hosting Dom Ref for this instance of <code>UIArea</code>."
						}
					],
					"description": "Allows setting the Root Node hosting this instance of <code>UIArea</code>.<br/> The Dom Ref must have an Id that\nwill be used as Id for this instance of <code>UIArea</code>."
				},
				{
					"name": "unlock",
					"visibility": "public",
					"description": "Un-Locks this instance of UIArea.\n\nRerendering and eventing will now be enabled again."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.UIComponent",
			"basename": "UIComponent",
			"resource": "sap/ui/core/UIComponent.js",
			"module": "sap/ui/core/UIComponent",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.9.2",
			"extends": "sap.ui.core.Component",
			"description": "Creates and initializes a new UIComponent with the given <code>sId</code> and\nsettings.\n\nThe set of allowed entries in the <code>mSettings</code> object depends on\nthe concrete subclass and is described there. See {@link sap.ui.core.Component}\nfor a general description of this argument.",
			"ui5-metadata": {
				"stereotype": "component",
				"aggregations": [
					{
						"name": "rootControl",
						"singularName": "rootControl",
						"type": "sap.ui.core.Control",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "The root control of the UIComponent.\n\nThe root control should be created inside the function {@link sap.ui.core.UIComponent#createContent}.",
						"methods": [
							"getRootControl",
							"destroyRootControl",
							"setRootControl"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "Optional ID for the new control; generated automatically if\n           no non-empty ID is given Note: this can be omitted, no matter\n           whether <code>mSettings</code> will be given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the\n           new component instance"
					}
				],
				"description": "Base Class for UIComponent.\n\nIf you are extending an UIComponent make sure you read the {@link #.extend} documentation since the metadata is special.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "byId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element",
						"description": "element by its ID or <code>undefined</code>"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Component local ID of the element"
						}
					],
					"description": "Returns an element by its ID in the context of the component."
				},
				{
					"name": "createContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View|sap.ui.core.Control",
						"description": "Root control of the UI tree or <code>null</code> if none is configured"
					},
					"description": "Hook method to create the content (UI Control Tree) of this component.\n\nThe default implementation in this class reads the name (and optionally type) of a root view from the\ndescriptor for this component (path <code>/sap.ui5/rootView</code>) or, for backward compatibility,\njust the name from static component metadata (property <code>rootView</code>). When no type is specified,\nit defaults to XML. The method then calls the {@link sap.ui.view view factory} to instantiate the root\nview and returns the result.\n\nWhen there is no root view configuration, <code>null</code> will be returned.\n\nThis method can be overwritten by subclasses if the default implementation doesn't fit their needs.\nSubclasses are not limited to views as return type but may return any control, but only a single control\n(can be the root of a larger control tree, however)."
				},
				{
					"name": "createId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "prefixed id"
					},
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Component local ID of the element"
						}
					],
					"description": "Convert the given component local element ID to a globally unique ID\nby prefixing it with the component ID."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.UIComponent with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Component.extend}."
				},
				{
					"name": "getAutoPrefixId",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "true, if the Controls IDs should be prefixed automatically"
					},
					"since": "1.15.1",
					"description": "A method to be implemented by UIComponents, returning the flag whether to prefix\nthe IDs of controls automatically or not if the controls are created inside\nthe {@link sap.ui.core.UIComponent#createContent} function. By default this\nfeature is not activated.\n\nYou can overwrite this function and return <code>true</code> to activate the automatic\nprefixing. In addition the default behavior can be configured in the manifest\nby specifying the entry <code>sap.ui5/autoPrefixId</code>."
				},
				{
					"name": "getEventingParent",
					"visibility": "protected"
				},
				{
					"name": "getLocalId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "ID without prefix or <code>null</code>"
					},
					"since": "1.39.0",
					"parameters": [
						{
							"name": "sId",
							"type": "string",
							"optional": false,
							"description": "Prefixed ID"
						}
					],
					"description": "Returns the local ID of an element by removing the component ID prefix or\n<code>null</code> if the ID does not contain a prefix."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.UIComponent."
				},
				{
					"name": "getRootControl",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.Control",
						"description": "the control created by {@link sap.ui.core.UIComponent#createContent}"
					},
					"since": "1.44.0",
					"description": "Returns the content of {@link sap.ui.core.UIComponent#createContent}.\nIf you specified a <code>rootView</code> in your metadata or in the descriptor file (manifest.json),\nyou will get the instance of the root view.\nThis getter will only return something if the {@link sap.ui.core.UIComponent#init} function was invoked.\nIf <code>createContent</code> is not implemented, and there is no root view, it will return <code>null</code>. Here is an example:\n<code>\n    <pre>\n         var MyExtension = UIComponent.extend(\"my.Component\", {\n              metadata: {\n                   rootView: \"my.View\"\n              },\n              init: function () {\n                   this.getRootControl(); // returns null\n                   UIComponent.prototype.init.apply(this, arguments);\n                   this.getRootControl(); // returns the view \"my.View\"\n              }\n         });\n    </pre>\n</code>"
				},
				{
					"name": "getRouter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "the router instance"
					},
					"since": "1.16.1",
					"description": "Returns the reference to the router instance which has been created by\nthe UIComponent once the routes in the routing metadata has been defined."
				},
				{
					"name": "getRouterFor",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.routing.Router",
						"description": "the router instance"
					},
					"since": "1.16.1",
					"parameters": [
						{
							"name": "oControllerOrView",
							"type": "sap.ui.core.mvc.View|sap.ui.core.mvc.Controller",
							"optional": false,
							"description": "either a view or controller"
						}
					],
					"description": "Returns the reference to the router instance. The passed controller or view\nhas to be created in the context of a UIComponent to return the router\ninstance. Otherwise this function will return undefined.\nYou may define the routerClass property in the config section of the routing to make the Component create your router extension.\nExample:\nrouting: {\n\tconfig: {\n\t\trouterClass : myAppNamespace.MyRouterClass\n\t\t...\n}\n..."
				},
				{
					"name": "getTargets",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.routing.Targets",
						"description": "the targets instance"
					},
					"since": "1.28",
					"description": "Returns the reference to the Targets instance which has been created by\nthe UIComponent once the targets in the routing metadata has been defined.\nIf routes have been defined, it will be the Targets instance created and used by the router."
				},
				{
					"name": "getUIArea",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIArea",
						"description": "reference to the UIArea of the container"
					},
					"description": "Returns the reference to the UIArea of the container."
				},
				{
					"name": "init",
					"visibility": "protected",
					"description": "Initializes the Component instance after creation.\n\nApplications must not call this hook method directly, it is called by the\nframework while the constructor of a Component is executed.\n\nSubclasses of Component should override this hook to implement any necessary\ninitialization. <b>When overriding this function make sure to invoke the\ninit function of the UIComponent as well!</b>"
				},
				{
					"name": "onAfterRendering",
					"visibility": "protected",
					"description": "Function is called when the rendering of the ComponentContainer is completed.\n\nApplications must not call this hook method directly, it is called from ComponentContainer.\n\nSubclasses of UIComponent override this hook to implement any necessary actions after the rendering."
				},
				{
					"name": "onBeforeRendering",
					"visibility": "protected",
					"description": "Function is called when the rendering of the ComponentContainer is started.\n\nApplications must not call this hook method directly, it is called from ComponentContainer.\n\nSubclasses of UIComponent override this hook to implement any necessary actions before the rendering."
				},
				{
					"name": "render",
					"visibility": "public",
					"parameters": [
						{
							"name": "oRenderManager",
							"type": "sap.ui.core.RenderManager",
							"optional": false,
							"description": "a RenderManager instance"
						}
					],
					"description": "Renders the the root control of the UIComponent."
				},
				{
					"name": "setContainer",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.UIComponent",
						"description": "reference to this instance to allow method chaining"
					},
					"parameters": [
						{
							"name": "oContainer",
							"type": "sap.ui.core.ComponentContainer",
							"optional": false,
							"description": "reference to a ComponentContainer"
						}
					],
					"description": "Sets the reference to the ComponentContainer - later required for the\ndetermination of the UIArea for the UIComponent."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.URI",
			"basename": "URI",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "URI",
			"final": true,
			"static": true,
			"visibility": "public",
			"description": "A string type that represents an RFC 3986 conformant URI."
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.Export",
			"basename": "Export",
			"resource": "sap/ui/core/util/Export.js",
			"module": "sap/ui/core/util/Export",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"extends": "sap.ui.core.Control",
			"description": "Export provides the possibility to generate a list of data in a specific format / type, e.g. CSV to use it in other programs / applications.",
			"ui5-metadata": {
				"stereotype": "control",
				"aggregations": [
					{
						"name": "exportType",
						"singularName": "exportType",
						"type": "sap.ui.core.util.ExportType",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Type that generates the content.",
						"methods": [
							"getExportType",
							"destroyExportType",
							"setExportType"
						]
					},
					{
						"name": "columns",
						"singularName": "column",
						"type": "sap.ui.core.util.ExportColumn",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "Columns for the Export.",
						"methods": [
							"getColumns",
							"destroyColumns",
							"insertColumn",
							"addColumn",
							"removeColumn",
							"indexOfColumn",
							"removeAllColumns",
							"bindColumns",
							"unbindColumns"
						]
					},
					{
						"name": "rows",
						"singularName": "row",
						"type": "sap.ui.core.util.ExportRow",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "Rows of the Export.",
						"methods": [
							"getRows",
							"destroyRows",
							"insertRow",
							"addRow",
							"removeRow",
							"indexOfRow",
							"removeAllRows",
							"bindRows",
							"unbindRows"
						]
					},
					{
						"name": "_template",
						"singularName": "_template",
						"type": "sap.ui.core.util.ExportRow",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Template row used for the export",
						"methods": [
							"get_template",
							"destroy_template",
							"set_template"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Export.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.ui.core.util.ExportColumn",
							"optional": false,
							"description": "the column to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some column to the aggregation <code>columns</code>."
				},
				{
					"name": "addRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRow",
							"type": "sap.ui.core.util.ExportRow",
							"optional": false,
							"description": "the row to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some row to the aggregation <code>rows</code>."
				},
				{
					"name": "bindColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>columns</code> to model data.\r\rSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \rdetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "bindRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>rows</code> to model data.\r\rSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \rdetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the columns in the aggregation <code>columns</code>."
				},
				{
					"name": "destroyExportType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the exportType in the aggregation <code>exportType</code>."
				},
				{
					"name": "destroyRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the rows in the aggregation <code>rows</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.Export with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}."
				},
				{
					"name": "generate",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "Promise object"
					},
					"description": "Generates the file content and returns a Promise\nwith the instance as context (this).<br>\nThe promise will be resolved with the generated content\nas a string.\n\n<p><b>Please note: The return value was changed from jQuery Promises to standard ES6 Promises.\njQuery specific Promise methods ('done', 'fail', 'always', 'pipe' and 'state') are still available but should not be used.\nPlease use only the standard methods 'then' and 'catch'!</b></p>"
				},
				{
					"name": "getColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportColumn[]"
					},
					"description": "Gets content of aggregation <code>columns</code>.\r\rColumns for the Export."
				},
				{
					"name": "getExportType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportType"
					},
					"description": "Gets content of aggregation <code>exportType</code>.\r\rType that generates the content."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.Export."
				},
				{
					"name": "getRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportRow[]"
					},
					"description": "Gets content of aggregation <code>rows</code>.\r\rRows of the Export."
				},
				{
					"name": "indexOfColumn",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.ui.core.util.ExportColumn",
							"optional": false,
							"description": "The column whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.util.ExportColumn</code> in the aggregation <code>columns</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfRow",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oRow",
							"type": "sap.ui.core.util.ExportRow",
							"optional": false,
							"description": "The row whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.util.ExportRow</code> in the aggregation <code>rows</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oColumn",
							"type": "sap.ui.core.util.ExportColumn",
							"optional": false,
							"description": "the column to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the column should be inserted at; for\r             a negative value of <code>iIndex</code>, the column is inserted at position 0; for a value\r             greater than the current size of the aggregation, the column is inserted at\r             the last position"
						}
					],
					"description": "Inserts a column into the aggregation <code>columns</code>."
				},
				{
					"name": "insertRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oRow",
							"type": "sap.ui.core.util.ExportRow",
							"optional": false,
							"description": "the row to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the row should be inserted at; for\r             a negative value of <code>iIndex</code>, the row is inserted at position 0; for a value\r             greater than the current size of the aggregation, the row is inserted at\r             the last position"
						}
					],
					"description": "Inserts a row into the aggregation <code>rows</code>."
				},
				{
					"name": "removeAllColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportColumn[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>columns</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportRow[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>rows</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeColumn",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportColumn",
						"description": "The removed column or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vColumn",
							"type": "int|string|sap.ui.core.util.ExportColumn",
							"optional": false,
							"description": "The column to remove or its index or id"
						}
					],
					"description": "Removes a column from the aggregation <code>columns</code>."
				},
				{
					"name": "removeRow",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportRow",
						"description": "The removed row or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vRow",
							"type": "int|string|sap.ui.core.util.ExportRow",
							"optional": false,
							"description": "The row to remove or its index or id"
						}
					],
					"description": "Removes a row from the aggregation <code>rows</code>."
				},
				{
					"name": "saveFile",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "Promise object"
					},
					"parameters": [
						{
							"name": "sFileName",
							"type": "string",
							"optional": true,
							"description": "file name, defaults to 'data'"
						}
					],
					"description": "Generates the file content, triggers a download / save action and\nreturns a Promise with the instance as context (this).<br>\nThe promise will be resolved with the generated content\nas a string.\n<p><b>For information about browser support, see <code>sap.ui.core.util.File.save</code></b></p>\n\n<p><b>Please note: The return value was changed from jQuery Promises to standard ES6 Promises.\njQuery specific Promise methods ('done', 'fail', 'always', 'pipe' and 'state') are still available but should not be used.\nPlease use only the standard methods 'then' and 'catch'!</b></p>"
				},
				{
					"name": "setExportType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oExportType",
							"type": "sap.ui.core.util.ExportType",
							"optional": false,
							"description": "The exportType to set"
						}
					],
					"description": "Sets the aggregated <code>exportType</code>."
				},
				{
					"name": "unbindColumns",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>columns</code> from model data."
				},
				{
					"name": "unbindRows",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.Export",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>rows</code> from model data."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.ExportCell",
			"basename": "ExportCell",
			"resource": "sap/ui/core/util/ExportCell.js",
			"module": "sap/ui/core/util/ExportCell",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"extends": "sap.ui.core.Element",
			"description": "Contains content that can be used to export data. Used in {@link sap.ui.core.util.ExportColumn ExportColumn} / {@link sap.ui.core.util.Export Export}.",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "content",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Cell content.",
						"methods": [
							"getContent",
							"setContent"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ExportCell.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.ExportCell with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getContent",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>content</code>"
					},
					"description": "Gets current value of property <code>content</code>.\r\rCell content."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.ExportCell."
				},
				{
					"name": "setContent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportCell",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sContent",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>content</code>"
						}
					],
					"description": "Sets a new value for property <code>content</code>.\r\rCell content.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.ExportColumn",
			"basename": "ExportColumn",
			"resource": "sap/ui/core/util/ExportColumn.js",
			"module": "sap/ui/core/util/ExportColumn",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Can have a name and a cell template.",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Column name.",
						"methods": [
							"getName",
							"setName"
						]
					}
				],
				"aggregations": [
					{
						"name": "template",
						"singularName": "template",
						"type": "sap.ui.core.util.ExportCell",
						"cardinality": "0..1",
						"visibility": "public",
						"description": "Cell template for column.",
						"methods": [
							"getTemplate",
							"destroyTemplate",
							"setTemplate"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ExportCell.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "destroyTemplate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportColumn",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys the template in the aggregation <code>template</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.ExportColumn with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.ExportColumn."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\r\rColumn name."
				},
				{
					"name": "getTemplate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportCell"
					},
					"description": "Gets content of aggregation <code>template</code>.\r\rCell template for column."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportColumn",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\r\rColumn name.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTemplate",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportColumn",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oTemplate",
							"type": "sap.ui.core.util.ExportCell",
							"optional": false,
							"description": "The template to set"
						}
					],
					"description": "Sets the aggregated <code>template</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.ExportRow",
			"basename": "ExportRow",
			"resource": "sap/ui/core/util/ExportRow.js",
			"module": "sap/ui/core/util/ExportRow",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Internally used in {@link sap.ui.core.util.Export Export}.",
			"ui5-metadata": {
				"stereotype": "object",
				"aggregations": [
					{
						"name": "cells",
						"singularName": "cell",
						"type": "sap.ui.core.util.ExportCell",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Cells for the Export.",
						"methods": [
							"getCells",
							"destroyCells",
							"insertCell",
							"addCell",
							"removeCell",
							"indexOfCell",
							"removeAllCells"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ExportRow.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addCell",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCell",
							"type": "sap.ui.core.util.ExportCell",
							"optional": false,
							"description": "the cell to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some cell to the aggregation <code>cells</code>."
				},
				{
					"name": "destroyCells",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the cells in the aggregation <code>cells</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.ExportRow with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "getCells",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportCell[]"
					},
					"description": "Gets content of aggregation <code>cells</code>.\r\rCells for the Export."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.ExportRow."
				},
				{
					"name": "indexOfCell",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oCell",
							"type": "sap.ui.core.util.ExportCell",
							"optional": false,
							"description": "The cell whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.util.ExportCell</code> in the aggregation <code>cells</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertCell",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportRow",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oCell",
							"type": "sap.ui.core.util.ExportCell",
							"optional": false,
							"description": "the cell to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the cell should be inserted at; for\r             a negative value of <code>iIndex</code>, the cell is inserted at position 0; for a value\r             greater than the current size of the aggregation, the cell is inserted at\r             the last position"
						}
					],
					"description": "Inserts a cell into the aggregation <code>cells</code>."
				},
				{
					"name": "removeAllCells",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportCell[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>cells</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeCell",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportCell",
						"description": "The removed cell or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vCell",
							"type": "int|string|sap.ui.core.util.ExportCell",
							"optional": false,
							"description": "The cell to remove or its index or id"
						}
					],
					"description": "Removes a cell from the aggregation <code>cells</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.ExportType",
			"basename": "ExportType",
			"resource": "sap/ui/core/util/ExportType.js",
			"module": "sap/ui/core/util/ExportType",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Base export type. Subclasses can be used for {@link sap.ui.core.util.Export Export}.",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "fileExtension",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "File extension.",
						"methods": [
							"getFileExtension",
							"setFileExtension"
						]
					},
					{
						"name": "mimeType",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "MIME type.",
						"methods": [
							"getMimeType",
							"setMimeType"
						]
					},
					{
						"name": "charset",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Charset.",
						"methods": [
							"getCharset",
							"setCharset"
						]
					},
					{
						"name": "byteOrderMark",
						"type": "boolean",
						"group": "Misc",
						"visibility": "public",
						"description": "Whether to prepend an unicode byte order mark when saving as a file (only applies for utf-8 charset).",
						"methods": [
							"getByteOrderMark",
							"setByteOrderMark"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ExportType.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "_generate",
					"visibility": "protected",
					"returnValue": {
						"type": "string",
						"description": "content"
					},
					"parameters": [
						{
							"name": "oExport",
							"type": "sap.ui.core.util.Export",
							"optional": false,
							"description": "export instance"
						}
					],
					"description": "Handles the generation process of the file.<br>"
				},
				{
					"name": "cellGenerator",
					"visibility": "protected",
					"returnValue": {
						"type": "Generator",
						"description": "generator"
					},
					"description": "Creates a cell \"generator\" (inspired by ES6 Generators)"
				},
				{
					"name": "columnGenerator",
					"visibility": "protected",
					"returnValue": {
						"type": "Generator",
						"description": "generator"
					},
					"description": "Creates a column \"generator\" (inspired by ES6 Generators)"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.ExportType with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "generate",
					"visibility": "protected",
					"returnValue": {
						"type": "string",
						"description": "content"
					},
					"description": "Generates the file content.<br>\nShould be implemented by the individual types!"
				},
				{
					"name": "getByteOrderMark",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>byteOrderMark</code>"
					},
					"description": "Gets current value of property <code>byteOrderMark</code>.\r\rWhether to prepend an unicode byte order mark when saving as a file (only applies for utf-8 charset).\r\rDefault value is <code>undefined</code>."
				},
				{
					"name": "getCharset",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>charset</code>"
					},
					"description": "Gets current value of property <code>charset</code>.\r\rCharset."
				},
				{
					"name": "getColumnCount",
					"visibility": "protected",
					"returnValue": {
						"type": "int",
						"description": "count"
					},
					"description": "Returns the number of columns."
				},
				{
					"name": "getFileExtension",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>fileExtension</code>"
					},
					"description": "Gets current value of property <code>fileExtension</code>.\r\rFile extension."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.ExportType."
				},
				{
					"name": "getMimeType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>mimeType</code>"
					},
					"description": "Gets current value of property <code>mimeType</code>.\r\rMIME type."
				},
				{
					"name": "getRowCount",
					"visibility": "protected",
					"returnValue": {
						"type": "int",
						"description": "count"
					},
					"description": "Returns the number of rows."
				},
				{
					"name": "rowGenerator",
					"visibility": "protected",
					"returnValue": {
						"type": "Generator",
						"description": "generator"
					},
					"description": "Creates a row \"generator\" (inspired by ES6 Generators)"
				},
				{
					"name": "setByteOrderMark",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportType",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bByteOrderMark",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>byteOrderMark</code>"
						}
					],
					"description": "Sets a new value for property <code>byteOrderMark</code>.\r\rWhether to prepend an unicode byte order mark when saving as a file (only applies for utf-8 charset).\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>undefined</code>."
				},
				{
					"name": "setCharset",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportType",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sCharset",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>charset</code>"
						}
					],
					"description": "Sets a new value for property <code>charset</code>.\r\rCharset.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setFileExtension",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportType",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sFileExtension",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>fileExtension</code>"
						}
					],
					"description": "Sets a new value for property <code>fileExtension</code>.\r\rFile extension.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setMimeType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportType",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMimeType",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>mimeType</code>"
						}
					],
					"description": "Sets a new value for property <code>mimeType</code>.\r\rMIME type.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.ExportTypeCSV",
			"basename": "ExportTypeCSV",
			"resource": "sap/ui/core/util/ExportTypeCSV.js",
			"module": "sap/ui/core/util/ExportTypeCSV",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"extends": "sap.ui.core.util.ExportType",
			"description": "CSV export type. Can be used for {@link sap.ui.core.util.Export Export}.\n\nPlease note that there could be an issue with the separator char depending on the user's system language in some programs such as Microsoft Excel.\nTo prevent those issues use the data-import functionality which enables the possibility to explicitly set the separator char that should be used.\nThis way the content will be displayed correctly.\n\nPotential formulas (cell data starts with one of = + - @) will be escaped by prepending a single quote.\nAs the export functionality is intended to be used with actual (user) data there is no reason to allow formulas.",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "separatorChar",
						"type": "string",
						"defaultValue": ",",
						"group": "Misc",
						"visibility": "public",
						"description": "Separator char.\n\nValue needs to be exactly one character or empty for default.",
						"methods": [
							"getSeparatorChar",
							"setSeparatorChar"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ExportTypeCSV.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.ExportTypeCSV with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.util.ExportType.extend}."
				},
				{
					"name": "generate",
					"visibility": "protected",
					"returnValue": {
						"type": "string",
						"description": "content"
					},
					"description": "Generates the file content."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.ExportTypeCSV."
				},
				{
					"name": "getSeparatorChar",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>separatorChar</code>"
					},
					"description": "Gets current value of property <code>separatorChar</code>.\r\rSeparator char.\n\nValue needs to be exactly one character or empty for default.\r\rDefault value is <code>,</code>."
				},
				{
					"name": "setSeparatorChar",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.util.ExportTypeCSV",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSeparatorChar",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>separatorChar</code>"
						}
					],
					"description": "Setter for property <code>separatorChar</code>.\n\nValue needs to be exactly one character or empty for default. Default value is ','."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.util.File",
			"basename": "File",
			"resource": "sap/ui/core/util/File.js",
			"module": "sap/ui/core/util/File",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22.0",
			"description": "Utility class to handle files",
			"methods": [
				{
					"name": "save",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sData",
							"type": "string",
							"optional": false,
							"description": "file content"
						},
						{
							"name": "sFileName",
							"type": "string",
							"optional": false,
							"description": "file name"
						},
						{
							"name": "sFileExtension",
							"type": "string",
							"optional": false,
							"description": "file extension"
						},
						{
							"name": "sMimeType",
							"type": "string",
							"optional": false,
							"description": "file mime-type"
						},
						{
							"name": "sCharset",
							"type": "string",
							"optional": false,
							"description": "file charset"
						},
						{
							"name": "bByteOrderMark",
							"type": "boolean",
							"optional": true,
							"description": "Whether to prepend an unicode byte order mark (only applies for utf-8 charset).\n                                  Default is <code>false</code> except when <code>sFileExtension</code> = <code>csv/code> it is <code>true</code> (compatibility reasons)."
						}
					],
					"description": "<p>Triggers a download / save action of the given file.</p>\n\n<p>There are limitations for this feature in some browsers:<p>\n\n<p><b>Safari (OS X / iOS)</b><br>\nA new window/tab will be opened. In OS X the user has to manually save the file (CMD + S), choose \"page source\" and specify a filename.\nIn iOS the content can be opened in another app (Mail, Notes, ...) or copied to the clipboard.\nIn case the popup blocker prevents this action, an error will be thrown which can be used to notify the user to disable it.</p>\n\n<p><b>Android Browser</b><br>\nNot supported</p>\n\n<p><b>Windows Phone 10 Edge</b><br>\nNot supported</p>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.MockServer",
			"basename": "MockServer",
			"resource": "sap/ui/core/util/MockServer.js",
			"module": "sap/ui/core/util/MockServer",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Class to mock http requests made to a remote server",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "rootUri",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Getter for property <code>rootUri</code>.\n\nDefault value is empty/<code>undefined</code>",
						"methods": [
							"getRootUri",
							"setRootUri"
						]
					},
					{
						"name": "requests",
						"type": "object[]",
						"defaultValue": "[]",
						"group": "Misc",
						"visibility": "public",
						"description": "Getter for property <code>requests</code>.\n\nDefault value is <code>[]</code>",
						"methods": [
							"getRequests",
							"setRequests"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new server object; generated automatically if no non-empty id is given\n     Note: this can be omitted, no matter whether <code>mSettings</code> will be given or not!"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial property values, aggregated objects etc. for the new object"
					},
					{
						"name": "oScope",
						"type": "object",
						"optional": true,
						"description": "scope object for resolving string based type and formatter references in bindings"
					}
				],
				"description": "Creates a mocked server. This helps to mock all or some backend calls, e.g. for OData/JSON Models or simple XHR calls, without\nchanging the application code. This class can also be used for qunit tests.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"properties": [
				{
					"name": "HTTPMETHOD",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Enum for the method."
				}
			],
			"methods": [
				{
					"name": "attachAfter",
					"visibility": "public",
					"parameters": [
						{
							"name": "event",
							"type": "string",
							"optional": false,
							"description": "type according to HTTP Method"
						},
						{
							"name": "fnCallback",
							"type": "function",
							"optional": false,
							"description": "the name of the function that will be called at this exit\nThe callback function exposes an event with parameters, depending on the type of the request.\noEvent.getParameters() lists the parameters as per the request. Examples are:\noXhr : the request object; oFilteredData : the mock data entries that are about to be returned in the response; oEntry : the mock data entry that is about to be returned in the response;"
						},
						{
							"name": "sEntitySet",
							"type": "string",
							"optional": false,
							"description": "(optional) the name of the entity set"
						}
					],
					"description": "Attaches an event handler to be called after the built-in request processing of the mock server"
				},
				{
					"name": "attachBefore",
					"visibility": "public",
					"parameters": [
						{
							"name": "event",
							"type": "string",
							"optional": false,
							"description": "type according to HTTP Method"
						},
						{
							"name": "fnCallback",
							"type": "function",
							"optional": false,
							"description": "the name of the function that will be called at this exit.\nThe callback function exposes an event with parameters, depending on the type of the request.\noEvent.getParameters() lists the parameters as per the request. Examples are:\noXhr : the request object; sUrlParams : the URL parameters of the request; sKeys : key properties of the requested entry; sNavProp/sNavName : name of navigation"
						},
						{
							"name": "sEntitySet",
							"type": "string",
							"optional": false,
							"description": "(optional) the name of the entity set"
						}
					],
					"description": "Attaches an event handler to be called before the built-in request processing of the mock server"
				},
				{
					"name": "config",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "mConfig",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"autoRespond": {
									"name": "autoRespond",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "If set true, all mock servers will respond automatically. If set false you have to call {@link sap.ui.core.util.MockServer#respond} method for response."
								},
								"autoRespondAfter": {
									"name": "autoRespondAfter",
									"type": "int",
									"optional": true,
									"defaultValue": 0,
									"description": "the time in ms after all mock servers should send their response."
								},
								"fakeHTTPMethods": {
									"name": "fakeHTTPMethods",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "If set to true, all mock server will find <code>_method</code> parameter in the POST body and use this to override the the actual method."
								}
							},
							"description": "the configuration object."
						}
					],
					"description": "Global configuration of all mock servers."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"parameters": [
						{
							"name": "bSuppressInvalidate",
							"type": "boolean",
							"optional": true,
							"description": "if true, this ManagedObject is not marked as changed"
						}
					],
					"description": "Cleans up the resources associated with this object and all its aggregated children.\n\nAfter an object has been destroyed, it can no longer be used in!\n\nApplications should call this method if they don't need the object any longer."
				},
				{
					"name": "destroyAll",
					"visibility": "public",
					"static": true,
					"description": "Stops and calls destroy on all registered servers. Use this method for cleaning up."
				},
				{
					"name": "detachAfter",
					"visibility": "public",
					"parameters": [
						{
							"name": "event",
							"type": "string",
							"optional": false,
							"description": "type according to HTTP Method"
						},
						{
							"name": "fnCallback",
							"type": "function",
							"optional": false,
							"description": "the name of the function that will be called at this exit"
						},
						{
							"name": "sEntitySet",
							"type": "string",
							"optional": false,
							"description": "(optional) the name of the entity set"
						}
					],
					"description": "Removes a previously attached event handler"
				},
				{
					"name": "detachBefore",
					"visibility": "public",
					"parameters": [
						{
							"name": "event",
							"type": "string",
							"optional": false,
							"description": "type according to HTTP Method"
						},
						{
							"name": "fnCallback",
							"type": "function",
							"optional": false,
							"description": "the name of the function that will be called at this exit"
						},
						{
							"name": "sEntitySet",
							"type": "string",
							"optional": false,
							"description": "(optional) the name of the entity set"
						}
					],
					"description": "Removes a previously attached event handler"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.MockServer with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "getEntitySetData",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "data model of the given EntitySet"
					},
					"parameters": [
						{
							"name": "sEntitySetName",
							"type": "undefined",
							"optional": false,
							"description": "EntitySet name"
						}
					],
					"description": "Returns the data model of the given EntitySet name."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.MockServer."
				},
				{
					"name": "getRequests",
					"visibility": "public",
					"returnValue": {
						"type": "object[]",
						"description": "the value of property <code>rootUri</code>"
					},
					"description": "Getter for property <code>requests</code>.\n\nDefault value is <code>[]</code>"
				},
				{
					"name": "getRootUri",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of property <code>rootUri</code>"
					},
					"description": "Getter for property <code>rootUri</code>.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "isStarted",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether the server is started or not."
					},
					"description": "Returns whether the server is started or not."
				},
				{
					"name": "respond",
					"visibility": "public",
					"static": true,
					"description": "Respond to a request, when the servers are configured not to automatically respond."
				},
				{
					"name": "setEntitySetData",
					"visibility": "public",
					"parameters": [
						{
							"name": "sEntitySetName",
							"type": "undefined",
							"optional": false,
							"description": "EntitySet name"
						},
						{
							"name": "aData",
							"type": "undefined",
							"optional": false
						}
					],
					"description": "Sets the data of the given EntitySet name with the given array."
				},
				{
					"name": "setRequests",
					"visibility": "public",
					"parameters": [
						{
							"name": "requests",
							"type": "object[]",
							"optional": false,
							"description": "new value for property <code>requests</code>"
						}
					],
					"description": "Setter for property <code>requests</code>.\n\nDefault value is is <code>[]</code>\n\nEach array entry should consist of an array with the following properties / values:\n\n<ul>\n<li><b>method <string>: \"GET\"|\"POST\"|\"DELETE|\"PUT\"</b>\n<br>\n(any HTTP verb)\n</li>\n<li><b>path <string>: \"/path/to/resource\"</b>\n<br>\nThe path is converted to a regular expression, so it can contain normal regular expression syntax.\nAll regular expression groups are forwarded as arguments to the <code>response</code> function.\nIn addition to this, parameters can be written in this notation: <code>:param</code>. These placeholder will be replaced by regular expression groups.\n</li>\n<li><b>response <function>: function(xhr, param1, param2, ...) { }</b>\n<br>\nThe xhr object can be used to respond on the request. Supported methods are:\n<br>\n<code>xhr.respond(iStatusCode, mHeaders, sBody)</code>\n<br>\n<code>xhr.respondJSON(iStatusCode, mHeaders, oJsonObjectOrString)</code>. By default a JSON header is set for response header\n<br>\n<code>xhr.respondXML(iStatusCode, mHeaders, sXmlString)</code>. By default a XML header is set for response header\n<br>\n<code>xhr.respondFile(iStatusCode, mHeaders, sFileUrl)</code>. By default the mime type of the file is set for response header\n</li>\n</ul>"
				},
				{
					"name": "setRootUri",
					"visibility": "public",
					"parameters": [
						{
							"name": "rootUri",
							"type": "string",
							"optional": false,
							"description": "new value for property <code>rootUri</code>"
						}
					],
					"description": "Setter for property <code>rootUri</code>. All request path URI are prefixed with this root URI if set.\n\nDefault value is empty/<code>undefined</code>"
				},
				{
					"name": "simulate",
					"visibility": "public",
					"since": "1.13.2",
					"parameters": [
						{
							"name": "sMetadataUrl",
							"type": "string",
							"optional": false,
							"description": "url to the service metadata document"
						},
						{
							"name": "vMockdataSettings",
							"type": "string|object",
							"optional": true,
							"parameterProperties": {
								"sMockdataBaseUrl": {
									"name": "sMockdataBaseUrl",
									"type": "string",
									"optional": true,
									"description": "base url which contains the mockdata as single .json files or the .json file containing the complete mock data"
								},
								"bGenerateMissingMockData": {
									"name": "bGenerateMissingMockData",
									"type": "boolean",
									"optional": true,
									"description": "true for the MockServer to generate mock data for missing .json files that are not found in sMockdataBaseUrl. Default value is false."
								},
								"aEntitySetsNames": {
									"name": "aEntitySetsNames",
									"type": "array",
									"optional": true,
									"description": "list of entity set names to fetch. This parameter should be used to improve performance in case there are a lot of entity sets but only a few are needed to be fetched. Default value is empty - in this case all entity sets will be retrieved."
								}
							},
							"description": "(optional) base url which contains the path to the mockdata, or an object which contains the following properties: sMockdataBaseUrl, bGenerateMissingMockData, aEntitySetsNames. See below for descriptions of these parameters. Ommit this parameter to produce random mock data based on the service metadata."
						}
					],
					"description": "Simulates an existing OData service by sepcifiying the metadata URL and the base URL for the mockdata. The server\nconfigures the request handlers depending on the service metadata. The mockdata needs to be stored individually for\neach entity type in a separate JSON file. The name of the JSON file needs to match the name of the entity type. If\nno base url for the mockdata is specified then the mockdata are generated from the metadata"
				},
				{
					"name": "start",
					"visibility": "public",
					"description": "Starts the server."
				},
				{
					"name": "startAll",
					"visibility": "public",
					"static": true,
					"description": "Starts all registered servers."
				},
				{
					"name": "stop",
					"visibility": "public",
					"description": "Stops the server."
				},
				{
					"name": "stopAll",
					"visibility": "public",
					"static": true,
					"description": "Stops all registered servers."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.serializer.delegate.Delegate",
			"basename": "Delegate",
			"resource": "sap/ui/core/util/serializer/delegate/Delegate.js",
			"module": "sap/ui/core/util/serializer/delegate/Delegate",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "restricted",
			"extends": "sap.ui.base.EventProvider",
			"description": "Abstract serializer delegate class.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"description": "Abstract serializer delegate class. All delegates must extend from this class and implement the abstract methods."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.serializer.delegate.Delegate with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.serializer.delegate.Delegate."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.serializer.delegate.HTML",
			"basename": "HTML",
			"resource": "sap/ui/core/util/serializer/delegate/HTML.js",
			"module": "sap/ui/core/util/serializer/delegate/HTML",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"extends": "sap.ui.core.util.serializer.delegate.Delegate",
			"description": "HTML serializer delegate class.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "fnGetControlId",
						"type": "function",
						"optional": true,
						"description": "delegate function which returns the control id"
					},
					{
						"name": "fnGetEventHandlerName",
						"type": "function",
						"optional": true,
						"description": "delegate function which returns the event handler name"
					}
				],
				"description": "HTML serializer delegate class. Called by the serializer instance."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.serializer.delegate.HTML with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.util.serializer.delegate.Delegate.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.serializer.delegate.HTML."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.serializer.delegate.XML",
			"basename": "XML",
			"resource": "sap/ui/core/util/serializer/delegate/XML.js",
			"module": "sap/ui/core/util/serializer/delegate/XML",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"extends": "sap.ui.core.util.serializer.delegate.Delegate",
			"description": "XML serializer delegate class.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "sDefaultXmlNamespace",
						"type": "string",
						"optional": true,
						"description": "defines the default XML namespace"
					},
					{
						"name": "fnGetControlId",
						"type": "function",
						"optional": true,
						"description": "delegate function which returns the control id"
					},
					{
						"name": "fnGetEventHandlerName",
						"type": "function",
						"optional": true,
						"description": "delegate function which returns the event handler name"
					},
					{
						"name": "fnMemorizePackage",
						"type": "function",
						"optional": true,
						"description": "a delegate function to memorize the control packages"
					}
				],
				"description": "XML serializer delegate class. Called by the serializer instance."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.serializer.delegate.XML with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.util.serializer.delegate.Delegate.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.serializer.delegate.XML."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.serializer.HTMLViewSerializer",
			"basename": "HTMLViewSerializer",
			"resource": "sap/ui/core/util/serializer/HTMLViewSerializer.js",
			"module": "sap/ui/core/util/serializer/HTMLViewSerializer",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"extends": "sap.ui.base.EventProvider",
			"description": "HTMLViewSerializer class.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "oView",
						"type": "sap.ui.core.mvc.HTMLView",
						"optional": false,
						"description": "the view to serialize"
					},
					{
						"name": "oWindow",
						"type": "object",
						"optional": true,
						"defaultValue": "window",
						"description": "the window object. Default is the window object the instance of the serializer is running in"
					},
					{
						"name": "fnGetControlId",
						"type": "function",
						"optional": false,
						"description": "delegate function which returns the control id"
					},
					{
						"name": "fnGetEventHandlerName",
						"type": "function",
						"optional": false,
						"description": "delegate function which returns the event handler name"
					}
				],
				"description": "HTML view serializer class. Serializes a given view."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.serializer.HTMLViewSerializer with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.serializer.HTMLViewSerializer."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.serializer.Serializer",
			"basename": "Serializer",
			"resource": "sap/ui/core/util/serializer/Serializer.js",
			"module": "sap/ui/core/util/serializer/Serializer",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"extends": "sap.ui.base.EventProvider",
			"description": "Serializer class.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "oRootControl",
						"type": "sap.ui.core.Control|sap.ui.core.UIArea",
						"optional": false,
						"description": "the root control to serialize"
					},
					{
						"name": "serializeDelegate",
						"type": "object",
						"optional": false,
						"description": "the serializer delegate. Has to implement start/middle/end methods."
					},
					{
						"name": "bSkipRoot",
						"type": "boolean",
						"optional": false,
						"description": "whether to skip the root node or not"
					},
					{
						"name": "fnSkipAggregations",
						"type": "function",
						"optional": false,
						"description": "whether to skip aggregations"
					},
					{
						"name": "fnSkipElement",
						"type": "function",
						"optional": false,
						"description": "whether to skip an element"
					}
				],
				"description": "Serializer class. Iterates over all controls and call a given serializer delegate."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.serializer.Serializer with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.serializer.Serializer."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.serializer.ViewSerializer",
			"basename": "ViewSerializer",
			"resource": "sap/ui/core/util/serializer/ViewSerializer.js",
			"module": "sap/ui/core/util/serializer/ViewSerializer",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"extends": "sap.ui.base.EventProvider",
			"description": "ViewSerializer class.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "oRootControl",
						"type": "sap.ui.core.Control|sap.ui.core.UIArea",
						"optional": false,
						"description": "the root control to serialize"
					},
					{
						"name": "oWindow",
						"type": "object",
						"optional": true,
						"defaultValue": "window",
						"description": "the window object. Default is the window object the instance of the serializer is running in."
					},
					{
						"name": "sDefaultXmlNamespace",
						"type": "string",
						"optional": true,
						"description": "defines the default xml namespace"
					}
				],
				"description": "View serializer class. Iterates over all controls and serializes all found views by calling the corresponding view type serializer."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.serializer.ViewSerializer with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.serializer.ViewSerializer."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.util.serializer.XMLViewSerializer",
			"basename": "XMLViewSerializer",
			"resource": "sap/ui/core/util/serializer/XMLViewSerializer.js",
			"module": "sap/ui/core/util/serializer/XMLViewSerializer",
			"export": "",
			"static": true,
			"visibility": "restricted",
			"extends": "sap.ui.base.EventProvider",
			"description": "XMLViewSerializer class.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "restricted",
				"parameters": [
					{
						"name": "oView",
						"type": "sap.ui.core.mvc.XMLView",
						"optional": false,
						"description": "the view to serialize"
					},
					{
						"name": "oWindow",
						"type": "object",
						"optional": true,
						"defaultValue": "window",
						"description": "the window object. Default is the window object the instance of the serializer is running in"
					},
					{
						"name": "sDefaultXmlNamespace",
						"type": "string",
						"optional": true,
						"description": "defines the default XML namespace"
					},
					{
						"name": "fnGetControlId",
						"type": "function",
						"optional": false,
						"description": "delegate function which returns the control id"
					},
					{
						"name": "fnGetEventHandlerName",
						"type": "function",
						"optional": false,
						"description": "delegate function which returns the event handler name"
					}
				],
				"description": "XML view serializer class. Serializes a given view."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.util.serializer.XMLViewSerializer with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.util.serializer.XMLViewSerializer."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.util.XMLPreprocessor",
			"basename": "XMLPreprocessor",
			"resource": "sap/ui/core/util/XMLPreprocessor.js",
			"module": "sap/ui/core/util/XMLPreprocessor",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.1",
			"description": "The XML pre-processor for template instructions in XML views."
		},
		{
			"kind": "interface",
			"name": "sap.ui.core.util.XMLPreprocessor.IContext",
			"basename": "IContext",
			"resource": "sap/ui/core/util/XMLPreprocessor.js",
			"module": "sap/ui/core/util/XMLPreprocessor",
			"export": "IContext",
			"static": true,
			"visibility": "public",
			"since": "1.27.1",
			"description": "Context interface provided by XML template processing as an additional first\nargument to any formatter function which opts in to this mechanism. Candidates for\nsuch formatter functions are all those used in binding expressions which are\nevaluated during XML template processing, including those used inside template\ninstructions like <code>&lt;template:if></code>. The formatter function needs to be\nmarked with a property <code>requiresIContext = true</code> to express that it\nrequires this extended signature (compared to ordinary formatter functions). The\nusual arguments are provided after the first one (currently: the raw value from the\nmodel).\n\nThis interface provides callback functions to access the model and path  which are\nneeded to process OData V4 annotations. It initially offers a subset of methods\nfrom {@link sap.ui.model.Context} so that formatters might also be called with a\ncontext object for convenience, e.g. outside of XML template processing (see below\nfor an exception to this rule).\n\n<b>Example:</b> Suppose you have a formatter function called \"foo\" like below\nand it is used within an XML template like\n<code>&lt;template:if test=\"{path: '...', formatter: 'foo'}\"></code>.\nIn this case <code>foo</code> is called with arguments\n<code>oInterface, vRawValue</code> such that\n<code>oInterface.getModel().getObject(oInterface.getPath()) === vRawValue</code>\nholds.\n<pre>\nwindow.foo = function (oInterface, vRawValue) {\n    //TODO ...\n};\nwindow.foo.requiresIContext = true;\n</pre>\n\n<b>Composite Binding Examples:</b> Suppose you have the same formatter function and\nit is used in a composite binding like <code>&lt;Text text=\"{path: 'Label',\nformatter: 'foo'}: {path: 'Value', formatter: 'foo'}\"/></code>.\nIn this case <code>oInterface.getPath()</code> refers to \".../Label\" in the 1st call\nand \".../Value\" in the 2nd call. This means each formatter call knows which part of\nthe composite binding it belongs to and behaves just as if it was an ordinary\nbinding.\n\nSuppose your formatter is not used within a part of the composite binding, but at\nthe root of the composite binding in order to aggregate all parts like <code>\n&lt;Text text=\"{parts: [{path: 'Label'}, {path: 'Value'}], formatter: 'foo'}\"/>\n</code>. In this case <code>oInterface.getPath(0)</code> refers to \".../Label\" and\n<code>oInterface.getPath(1)</code> refers to \".../Value\". This means, the root\nformatter can access the ith part of the composite binding at will (since 1.31.0);\nsee also {@link #.getInterface getInterface}.\nThe function <code>foo</code> is called with arguments such that <code>\noInterface.getModel(i).getObject(oInterface.getPath(i)) === arguments[i + 1]</code>\nholds.\nThis use is not supported within an expression binding, that is, <code>&lt;Text\ntext=\"{= ${parts: [{path: 'Label'}, {path: 'Value'}], formatter: 'foo'} }\"/></code>\ndoes not work as expected because the property <code>requiresIContext = true</code>\nis ignored.\n\nTo distinguish those two use cases, just check whether\n<code>oInterface.getModel() === undefined</code>, in which case the formatter is\ncalled on root level of a composite binding. To find out the number of parts, probe\nfor the smallest non-negative integer where\n<code>oInterface.getModel(i) === undefined</code>.\nThis additional functionality is, of course, not available from\n{@link sap.ui.model.Context}, i.e. such formatters MUST be called with an instance\nof this context interface.",
			"methods": [
				{
					"name": "getInterface",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.util.XMLPreprocessor.IContext",
						"description": "the context interface related to the indicated part"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "iPart",
							"type": "number",
							"optional": true,
							"description": "index of part in case of the root formatter of a composite binding"
						},
						{
							"name": "sPath",
							"type": "string",
							"optional": true,
							"description": "a path, interpreted relative to <code>this.getPath(iPart)</code>"
						}
					],
					"description": "Returns a context interface for the indicated part in case of the root formatter\nof a composite binding. The new interface provides access to the original\nsettings, but only to the model and path of the indicated part:\n<pre>\nthis.getInterface(i).getSetting(sName) === this.getSetting(sName);\nthis.getInterface(i).getModel() === this.getModel(i);\nthis.getInterface(i).getPath() === this.getPath(i);\n</pre>\n\nIf a path is given, the new interface points to the resolved path as follows:\n<pre>\nthis.getInterface(i, \"foo/bar\").getPath() === this.getPath(i) + \"/foo/bar\";\nthis.getInterface(i, \"/absolute/path\").getPath() === \"/absolute/path\";\n</pre>\nA formatter which is not at the root level of a composite binding can also\nprovide a path, but must not provide an index:\n<pre>\nthis.getInterface(\"foo/bar\").getPath() === this.getPath() + \"/foo/bar\";\nthis.getInterface(\"/absolute/path\").getPath() === \"/absolute/path\";\n</pre>\nNote that at least one argument must be present."
				},
				{
					"name": "getModel",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "the model related to the current formatter call, or (since 1.31.0)\n  <code>undefined</code> in case of a root formatter if no <code>iPart</code> is\n  given or if <code>iPart</code> is out of range"
					},
					"parameters": [
						{
							"name": "iPart",
							"type": "number",
							"optional": true,
							"description": "index of part in case of the root formatter of a composite binding\n  (since 1.31.0)"
						}
					],
					"description": "Returns the model related to the current formatter call."
				},
				{
					"name": "getPath",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the absolute path related to the current formatter call, or (since 1.31.0)\n  <code>undefined</code> in case of a root formatter if no <code>iPart</code> is\n  given or if <code>iPart</code> is out of range"
					},
					"parameters": [
						{
							"name": "iPart",
							"type": "number",
							"optional": true,
							"description": "index of part in case of the root formatter of a composite binding\n  (since 1.31.0)"
						}
					],
					"description": "Returns the absolute path related to the current formatter call."
				},
				{
					"name": "getSetting",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "any",
						"description": "the value of the setting"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of the setting"
						}
					],
					"description": "Returns the value of the setting with the given name which was provided to the\nXML template processing."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.ValueState",
			"basename": "ValueState",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "ValueState",
			"static": true,
			"visibility": "public",
			"description": "Marker for the correctness of the current value.",
			"properties": [
				{
					"name": "Error",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "State is not valid."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "State is not specified."
				},
				{
					"name": "Success",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "State is valid."
				},
				{
					"name": "Warning",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "State is valid but with a warning."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.ValueStateSupport",
			"basename": "ValueStateSupport",
			"resource": "sap/ui/core/ValueStateSupport.js",
			"module": "sap/ui/core/ValueStateSupport",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Helper functionality for value state support.",
			"methods": [
				{
					"name": "enrichTooltip",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the given text, with appended success/warning/error text, if appropriate"
					},
					"parameters": [
						{
							"name": "oElement",
							"type": "sap.ui.core.Element",
							"optional": false,
							"description": "the Element of which the tooltip needs to be modified"
						},
						{
							"name": "sTooltipText",
							"type": "string",
							"optional": false,
							"description": "the original tooltip text (may be null)"
						}
					],
					"description": "Appends a generic success, warning or error message to the given tooltip text if the given Element\nhas a property \"valueState\" with one of these three states."
				},
				{
					"name": "formatValueState",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.ValueState",
						"description": "the corresponding ValueState object"
					},
					"since": "1.25.0",
					"parameters": [
						{
							"name": "iState",
							"type": "int",
							"optional": false,
							"description": "the state as an integer"
						}
					],
					"description": "Returns a ValueState object based on the given integer value\n\n 0 : ValueState.None\n 1 : ValueState.Warning\n 2 : ValueState.Success\n 3 : ValueState.Error"
				},
				{
					"name": "getAdditionalText",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the success/warning/error text, if appropriate; otherwise null"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "sap.ui.core.Element|sap.ui.core.ValueState",
							"optional": false,
							"description": "the Element of which the valueState needs to be checked, or the ValueState explicitly"
						}
					],
					"description": "Returns a generic success, warning or error message if the given Element\nhas a property \"valueState\" with one of these three states or the given ValueState\nrepresents one of these states."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.VariantLayoutData",
			"basename": "VariantLayoutData",
			"resource": "sap/ui/core/VariantLayoutData.js",
			"module": "sap/ui/core/VariantLayoutData",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.9.2",
			"extends": "sap.ui.core.LayoutData",
			"description": "Allows to add multiple LayoutData to one control in case that a easy switch of layouts (e.g. in a Form) is needed.",
			"ui5-metadata": {
				"stereotype": "element",
				"aggregations": [
					{
						"name": "multipleLayoutData",
						"singularName": "multipleLayoutData",
						"type": "sap.ui.core.LayoutData",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Allows multiple LayoutData.",
						"methods": [
							"getMultipleLayoutData",
							"destroyMultipleLayoutData",
							"insertMultipleLayoutData",
							"addMultipleLayoutData",
							"removeMultipleLayoutData",
							"indexOfMultipleLayoutData",
							"removeAllMultipleLayoutData"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new VariantLayoutData.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "addMultipleLayoutData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.VariantLayoutData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMultipleLayoutData",
							"type": "sap.ui.core.LayoutData",
							"optional": false,
							"description": "the multipleLayoutData to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some multipleLayoutData to the aggregation <code>multipleLayoutData</code>."
				},
				{
					"name": "destroyMultipleLayoutData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.VariantLayoutData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the multipleLayoutData in the aggregation <code>multipleLayoutData</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.VariantLayoutData with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.VariantLayoutData."
				},
				{
					"name": "getMultipleLayoutData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.LayoutData[]"
					},
					"description": "Gets content of aggregation <code>multipleLayoutData</code>.\r\rAllows multiple LayoutData."
				},
				{
					"name": "indexOfMultipleLayoutData",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oMultipleLayoutData",
							"type": "sap.ui.core.LayoutData",
							"optional": false,
							"description": "The multipleLayoutData whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.ui.core.LayoutData</code> in the aggregation <code>multipleLayoutData</code>.\rand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertMultipleLayoutData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.VariantLayoutData",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMultipleLayoutData",
							"type": "sap.ui.core.LayoutData",
							"optional": false,
							"description": "the multipleLayoutData to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the multipleLayoutData should be inserted at; for\r             a negative value of <code>iIndex</code>, the multipleLayoutData is inserted at position 0; for a value\r             greater than the current size of the aggregation, the multipleLayoutData is inserted at\r             the last position"
						}
					],
					"description": "Inserts a multipleLayoutData into the aggregation <code>multipleLayoutData</code>."
				},
				{
					"name": "removeAllMultipleLayoutData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.LayoutData[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>multipleLayoutData</code>.\r\rAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeMultipleLayoutData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.LayoutData",
						"description": "The removed multipleLayoutData or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vMultipleLayoutData",
							"type": "int|string|sap.ui.core.LayoutData",
							"optional": false,
							"description": "The multipleLayoutData to remove or its index or id"
						}
					],
					"description": "Removes a multipleLayoutData from the aggregation <code>multipleLayoutData</code>."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.VerticalAlign",
			"basename": "VerticalAlign",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "VerticalAlign",
			"static": true,
			"visibility": "public",
			"description": "Configuration options for vertical alignments, for example of a layout cell content within the borders.",
			"properties": [
				{
					"name": "Bottom",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Content is aligned at the bottom."
				},
				{
					"name": "Inherit",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Content respect the parent's vertical alignment."
				},
				{
					"name": "Middle",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Content is centered vertically ."
				},
				{
					"name": "Top",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Content is aligned at the top."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.Wrapping",
			"basename": "Wrapping",
			"resource": "sap/ui/core/library.js",
			"module": "sap/ui/core/library",
			"export": "Wrapping",
			"static": true,
			"visibility": "public",
			"description": "Configuration options for text wrapping.",
			"properties": [
				{
					"name": "Hard",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Inserts actual line breaks in the text at the wrap point."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The standard browser behavior is considered for wrapping."
				},
				{
					"name": "Off",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Wrapping shall not be allowed."
				},
				{
					"name": "Soft",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "The text is actually on the same line but displayed within several lines."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.core.ws.ReadyState",
			"basename": "ReadyState",
			"resource": "sap/ui/core/ws/ReadyState.js",
			"module": "sap/ui/core/ws/ReadyState",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Defines the different ready states for a WebSocket connection.",
			"properties": [
				{
					"name": "CLOSED",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "The connection has been closed or could not be opened."
				},
				{
					"name": "CLOSING",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "The connection is going through the closing handshake."
				},
				{
					"name": "CONNECTING",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "The connection has not yet been established."
				},
				{
					"name": "OPEN",
					"visibility": "public",
					"static": true,
					"type": "int",
					"description": "The WebSocket connection is established and communication is possible."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.ws.SapPcpWebSocket",
			"basename": "SapPcpWebSocket",
			"resource": "sap/ui/core/ws/SapPcpWebSocket.js",
			"module": "sap/ui/core/ws/SapPcpWebSocket",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.ws.WebSocket",
			"description": "WebSocket class implementing the pcp-protocol",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sUrl",
						"type": "string",
						"optional": false,
						"description": "relative or absolute URL for WebSocket connection."
					},
					{
						"name": "aProtocols",
						"type": "array",
						"optional": true,
						"description": "array of protocols as strings, a single protocol as a string.\nProtocol(s) should be selected from {@link sap.ui.core.ws.SapPcpWebSocket.SUPPORTED_PROTOCOLS}."
					}
				],
				"description": "Creates a new WebSocket connection and uses the pcp-protocol for communication."
			},
			"events": [
				{
					"name": "message",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"data": {
											"name": "data",
											"type": "string",
											"optional": false,
											"description": "Received data from the server."
										},
										"pcpFields": {
											"name": "pcpFields",
											"type": "string",
											"optional": false,
											"description": "Received pcpFields as a key-value map."
										}
									}
								}
							}
						}
					],
					"description": "The 'message' event is fired, when a message was received."
				}
			],
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.ws.SapPcpWebSocket with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.ws.WebSocket.extend}."
				},
				{
					"name": "fireMessage",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.ws.SapPcpWebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"data": {
									"name": "data",
									"type": "string",
									"optional": true,
									"description": "Received data from the server."
								},
								"pcpFields": {
									"name": "pcpFields",
									"type": "string",
									"optional": true,
									"description": "Received pcpFields as a key-value map."
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event 'message' to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.ws.SapPcpWebSocket."
				},
				{
					"name": "send",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.SapPcpWebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "message",
							"type": "string|Blob|ArrayBuffer",
							"optional": false,
							"description": "message to send"
						},
						{
							"name": "oPcpFields",
							"type": "object",
							"optional": true,
							"description": "additional pcp-fields as key-value map"
						}
					],
					"description": "Sends a message and optional pcp-header-fields using the pcp-protocol.<br>\n<br>\nIf the connection is not yet opened, the message will be queued and sent\nwhen the connection is established."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.core.ws.SapPcpWebSocket.SUPPORTED_PROTOCOLS",
			"basename": "SUPPORTED_PROTOCOLS",
			"resource": "sap/ui/core/ws/SapPcpWebSocket.js",
			"module": "sap/ui/core/ws/SapPcpWebSocket",
			"export": "SUPPORTED_PROTOCOLS",
			"static": true,
			"visibility": "public",
			"description": "Protocol versions.<br>\nOne (or more) of these have to be selected to create a SapPcpWebSocket connection\n(or no protocol at all).",
			"properties": [
				{
					"name": "v10",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Protocol v10.pcp.sap.com"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.core.ws.WebSocket",
			"basename": "WebSocket",
			"resource": "sap/ui/core/ws/WebSocket.js",
			"module": "sap/ui/core/ws/WebSocket",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"description": "Basic WebSocket class",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sUrl",
						"type": "string",
						"optional": false,
						"description": "relative or absolute URL for WebSocket connection."
					},
					{
						"name": "aProtocols",
						"type": "array",
						"optional": true,
						"description": "array of protocols as strings, a single protocol as a string"
					}
				],
				"description": "Creates a new WebSocket connection."
			},
			"events": [
				{
					"name": "close",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"code": {
											"name": "code",
											"type": "string",
											"optional": false,
											"description": "Close code provided by the server."
										},
										"reason": {
											"name": "reason",
											"type": "string",
											"optional": false,
											"description": "Reason from server for closing the connection."
										},
										"wasClean": {
											"name": "wasClean",
											"type": "string",
											"optional": false,
											"description": "Indicates whether the connection was cleanly closed or not."
										}
									}
								}
							}
						}
					],
					"description": "The 'close' event is fired, when the connection was closed."
				},
				{
					"name": "error",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The 'error' event is fired, when an error occurred."
				},
				{
					"name": "message",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"data": {
											"name": "data",
											"type": "string",
											"optional": false,
											"description": "Received data from the server."
										}
									}
								}
							}
						}
					],
					"description": "The 'message' event is fired, when a message was received."
				},
				{
					"name": "open",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The 'open' event is fired, when the connection was successfully opened."
				}
			],
			"methods": [
				{
					"name": "attachClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this WebSocket is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'close' event of this <code>sap.ui.core.ws.WebSocket</code>.<br>"
				},
				{
					"name": "attachError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this WebSocket is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'error' event of this <code>sap.ui.core.ws.WebSocket</code>.<br>"
				},
				{
					"name": "attachMessage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this WebSocket is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'message' event of this <code>sap.ui.core.ws.WebSocket</code>.<br>"
				},
				{
					"name": "attachOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this WebSocket is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'open' event of this <code>sap.ui.core.ws.WebSocket</code>.<br>"
				},
				{
					"name": "close",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iCode",
							"type": "int",
							"optional": true,
							"description": "Status code that explains why the connection is closed. Must be either 1000, or between 3000 and 4999 (default 1000)"
						},
						{
							"name": "sReason",
							"type": "string",
							"optional": true,
							"description": "Closing reason as a string"
						}
					],
					"description": "Closes the connection."
				},
				{
					"name": "detachClose",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'close' event of this <code>sap.ui.core.ws.WebSocket</code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'error' event of this <code>sap.ui.core.ws.WebSocket</code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachMessage",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'message' event of this <code>sap.ui.core.ws.WebSocket</code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachOpen",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'open' event of this <code>sap.ui.core.ws.WebSocket</code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.core.ws.WebSocket with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireClose",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"code": {
									"name": "code",
									"type": "string",
									"optional": true,
									"description": "Close code provided by the server."
								},
								"reason": {
									"name": "reason",
									"type": "string",
									"optional": true,
									"description": "Reason from server for closing the connection."
								},
								"wasClean": {
									"name": "wasClean",
									"type": "string",
									"optional": true,
									"description": "Indicates whether the connection was cleanly closed or not."
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event 'close' to attached listeners."
				},
				{
					"name": "fireError",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event 'error' to attached listeners."
				},
				{
					"name": "fireMessage",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"data": {
									"name": "data",
									"type": "string",
									"optional": true,
									"description": "Received data from the server."
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event 'message' to attached listeners."
				},
				{
					"name": "fireOpen",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event 'open' to attached listeners."
				},
				{
					"name": "getInterface",
					"visibility": "public"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.core.ws.WebSocket."
				},
				{
					"name": "getProtocol",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "protocol"
					},
					"description": "Getter for the protocol selected by the server once the connection is open."
				},
				{
					"name": "getReadyState",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.ReadyState",
						"description": "readyState"
					},
					"description": "Getter for WebSocket readyState."
				},
				{
					"name": "send",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.ws.WebSocket",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "sMessage",
							"type": "string",
							"optional": false,
							"description": "Message to send"
						}
					],
					"description": "Sends a message.<br>\n<br>\nIf the connection is not yet opened, the message will be queued and sent\nwhen the connection is established."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device",
			"basename": "Device",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Device and Feature Detection API: Provides information about the used browser / device and cross platform support for certain events\nlike media queries, orientation change or resizing.\n\nThis API is independent from any other part of the UI5 framework. This allows it to be loaded beforehand, if it is needed, to create the UI5 bootstrap\ndynamically depending on the capabilities of the browser or device."
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.browser",
			"basename": "browser",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "browser",
			"static": true,
			"visibility": "public",
			"description": "Contains information about the used browser.",
			"properties": [
				{
					"name": "chrome",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the Google Chrome browser is used."
				},
				{
					"name": "edge",
					"visibility": "public",
					"static": true,
					"since": "1.30.0",
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the Microsoft Edge browser is used."
				},
				{
					"name": "firefox",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the Mozilla Firefox browser is used."
				},
				{
					"name": "fullscreen",
					"visibility": "public",
					"static": true,
					"since": "1.31.0",
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the Safari browser runs in standalone fullscreen mode on iOS.\n\n<b>Note:</b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected,\ntechnically not a standard Safari is used. There might be slight differences in behavior and detection, e.g.\nthe availability of {@link sap.ui.Device.browser.version}."
				},
				{
					"name": "internet_explorer",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the Microsoft Internet Explorer browser is used.",
					"deprecated": {
						"since": "1.20",
						"text": "use {@link sap.ui.Device.browser.msie} instead."
					}
				},
				{
					"name": "mobile",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the mobile variant of the browser is used or\na tablet or phone device is detected.\n\n<b>Note:</b> This information might not be available for all browsers."
				},
				{
					"name": "mozilla",
					"visibility": "public",
					"static": true,
					"since": "1.20.0",
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, a browser featuring a Mozilla engine is used."
				},
				{
					"name": "msie",
					"visibility": "public",
					"static": true,
					"since": "1.20.0",
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the Microsoft Internet Explorer browser is used."
				},
				{
					"name": "name",
					"visibility": "public",
					"static": true,
					"type": "String",
					"description": "The name of the browser."
				},
				{
					"name": "safari",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the Apple Safari browser is used.\n\n<b>Note:</b>\nThis flag is also <code>true</code> when the standalone (fullscreen) mode or webview is used on iOS devices.\nPlease also note the flags {@link sap.ui.Device.browser.fullscreen} and {@link sap.ui.Device.browser.webview}."
				},
				{
					"name": "version",
					"visibility": "public",
					"static": true,
					"type": "float",
					"description": "The version of the browser as <code>float</code>.\n\nMight be <code>-1</code> if no version can be determined."
				},
				{
					"name": "versionStr",
					"visibility": "public",
					"static": true,
					"type": "String",
					"description": "The version of the browser as <code>string</code>.\n\nMight be empty if no version can be determined."
				},
				{
					"name": "webkit",
					"visibility": "public",
					"static": true,
					"since": "1.20.0",
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, a browser featuring a Webkit engine is used."
				},
				{
					"name": "webview",
					"visibility": "public",
					"static": true,
					"since": "1.31.0",
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the Safari browser runs in webview mode on iOS.\n\n<b>Note:</b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected,\ntechnically not a standard Safari is used. There might be slight differences in behavior and detection, e.g.\nthe availability of {@link sap.ui.Device.browser.version}."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.browser.BROWSER",
			"basename": "BROWSER",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "browser.BROWSER",
			"static": true,
			"visibility": "public",
			"description": "Enumeration containing the names of known browsers.",
			"properties": [
				{
					"name": "ANDROID",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Android stock browser name."
				},
				{
					"name": "CHROME",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Chrome browser name."
				},
				{
					"name": "EDGE",
					"visibility": "public",
					"static": true,
					"since": "1.28.0",
					"type": "undefined",
					"description": "Edge browser name."
				},
				{
					"name": "FIREFOX",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Firefox browser name."
				},
				{
					"name": "INTERNET_EXPLORER",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Internet Explorer browser name."
				},
				{
					"name": "SAFARI",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Safari browser name."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.media",
			"basename": "media",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "media",
			"static": true,
			"visibility": "public",
			"description": "Event API for screen width changes.\n\nThis API is based on media queries but can also be used if media queries are not natively supported by the used browser.\nIn this case, the behavior of media queries is simulated by this API.\n\nThere are several predefined {@link sap.ui.Device.media.RANGESETS range sets} available. Each of them defines a\nset of intervals for the screen width (from small to large). Whenever the screen width changes and the current screen width is in\na different interval to the one before the change, the registered event handlers for the range set are called.\n\nIf needed, it is also possible to define a custom set of intervals.\n\nThe following example shows a typical use case:\n<pre>\nfunction sizeChanged(mParams) {\n    switch(mParams.name) {\n        case \"Phone\":\n            // Do what is needed for a little screen\n            break;\n        case \"Tablet\":\n            // Do what is needed for a medium sized screen\n            break;\n        case \"Desktop\":\n            // Do what is needed for a large screen\n    }\n}\n\n// Register an event handler to changes of the screen size\nsap.ui.Device.media.attachHandler(sizeChanged, null, sap.ui.Device.media.RANGESETS.SAP_STANDARD);\n// Do some initialization work based on the current size\nsizeChanged(sap.ui.Device.media.getCurrentRange(sap.ui.Device.media.RANGESETS.SAP_STANDARD));\n</pre>",
			"methods": [
				{
					"name": "attachHandler",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to call when the event occurs. This function will be called in the context of the\n                      <code>oListener</code> instance (if present) or on the <code>window</code> instance. A map with information\n                      about the entered range set is provided as a single argument to the handler (see details above)."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wants to be notified when the event occurs (<code>this</code> context within the\n                       handler function). If it is not specified, the handler function is called in the context of the <code>window</code>."
						},
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The name of the range set to listen to. The range set must be initialized beforehand\n                 ({@link sap.ui.Device.media.initRangeSet}). If no name is provided, the\n                 {@link sap.ui.Device.media.RANGESETS.SAP_STANDARD default range set} is used."
						}
					],
					"description": "Registers the given event handler to change events of the screen width based on the range set with the specified name.\n\nThe event is fired whenever the screen width changes and the current screen width is in\na different interval of the given range set than before the width change.\n\nThe event handler is called with a single argument: a map <code>mParams</code> which provides the following information\nabout the entered interval:\n<ul>\n<li><code>mParams.from</code>: The start value (inclusive) of the entered interval as a number</li>\n<li><code>mParams.to</code>: The end value (exclusive) range of the entered interval as a number or undefined for the last interval (infinity)</li>\n<li><code>mParams.unit</code>: The unit used for the values above, e.g. <code>\"px\"</code></li>\n<li><code>mParams.name</code>: The name of the entered interval, if available</li>\n</ul>"
				},
				{
					"name": "detachHandler",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to detach from the event"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wanted to be notified when the event occurred"
						},
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The name of the range set to listen to. If no name is provided, the\n                  {@link sap.ui.Device.media.RANGESETS.SAP_STANDARD default range set} is used."
						}
					],
					"description": "Removes a previously attached event handler from the change events of the screen width.\n\nThe passed parameters must match those used for registration with {@link #.attachHandler} beforehand."
				},
				{
					"name": "getCurrentRange",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "map",
						"description": "Information about the current active interval of the range set. The returned map has the same structure as the argument of the event handlers ({@link sap.ui.Device.media.attachHandler})"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The name of the range set. The range set must be initialized beforehand ({@link sap.ui.Device.media.initRangeSet})"
						},
						{
							"name": "iWidth",
							"type": "int",
							"optional": true,
							"description": "An optional width, based on which the range should be determined;\n            If <code>iWidth</code> is not a number, the window size will be used."
						}
					],
					"description": "Returns information about the current active range of the range set with the given name.\n\nIf the optional parameter <code>iWidth</iWidth> is given, the active range will be determined for that width,\notherwise it is determined for the current window size."
				},
				{
					"name": "hasRangeSet",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "Returns <code>true</code> if a range set with the given name is already initialized"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The name of the range set."
						}
					],
					"description": "Returns <code>true</code> if a range set with the given name is already initialized."
				},
				{
					"name": "initRangeSet",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The name of the range set to be initialized - either a {@link sap.ui.Device.media.RANGESETS predefined} or custom one.\n                  The name must be a valid id and consist only of letters and numeric digits."
						},
						{
							"name": "aRangeBorders",
							"type": "int[]",
							"optional": true,
							"description": "The range borders"
						},
						{
							"name": "sUnit",
							"type": "string",
							"optional": true,
							"description": "The unit which should be used for the values given in <code>aRangeBorders</code>.\n                    The allowed values are <code>\"px\"</code> (default), <code>\"em\"</code> or <code>\"rem\"</code>"
						},
						{
							"name": "aRangeNames",
							"type": "string[]",
							"optional": true,
							"description": "The names of the ranges. The names must be a valid id and consist only of letters and digits. If names\n            are specified, CSS classes are also added to the document root as described above. This behavior can be\n            switched off explicitly by using <code>bSuppressClasses</code>. <b>Note:</b> <code>aRangeBorders</code> with <code>n</code> entries\n            define <code>n+1</code> ranges. Therefore <code>n+1</code> names must be provided."
						},
						{
							"name": "bSuppressClasses",
							"type": "boolean",
							"optional": true,
							"description": "Whether or not writing of CSS classes to the document root should be suppressed when\n            <code>aRangeNames</code> are provided"
						}
					],
					"description": "Initializes a screen width media query range set.\n\nThis initialization step makes the range set ready to be used for one of the other functions in namespace <code>sap.ui.Device.media</code>.\nThe most important {@link sap.ui.Device.media.RANGESETS predefined range sets} are initialized automatically.\n\nTo make a not yet initialized {@link sap.ui.Device.media.RANGESETS predefined range set} ready to be used, call this function with the\nname of the range set to be initialized:\n<pre>\nsap.ui.Device.media.initRangeSet(sap.ui.Device.media.RANGESETS.SAP_3STEPS);\n</pre>\n\nAlternatively it is possible to define custom range sets as shown in the following example:\n<pre>\nsap.ui.Device.media.initRangeSet(\"MyRangeSet\", [200, 400], \"px\", [\"Small\", \"Medium\", \"Large\"]);\n</pre>\nThis example defines the following named ranges:\n<ul>\n<li><code>\"Small\"</code>: For screens smaller than 200 pixels.</li>\n<li><code>\"Medium\"</code>: For screens greater than or equal to 200 pixels and smaller than 400 pixels.</li>\n<li><code>\"Large\"</code>: For screens greater than or equal to 400 pixels.</li>\n</ul>\nThe range names are optional. If they are specified a CSS class (e.g. <code>sapUiMedia-MyRangeSet-Small</code>) is also\nadded to the document root depending on the current active range. This can be suppressed via parameter <code>bSuppressClasses</code>."
				},
				{
					"name": "removeRangeSet",
					"visibility": "protected",
					"static": true,
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "The name of the range set which should be removed."
						}
					],
					"description": "Removes a previously initialized range set and detaches all registered handlers.\n\nOnly custom range sets can be removed via this function. Initialized predefined range sets\n({@link sap.ui.Device.media.RANGESETS}) cannot be removed."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.media.RANGESETS",
			"basename": "RANGESETS",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "media.RANGESETS",
			"static": true,
			"visibility": "public",
			"description": "Enumeration containing the names and settings of predefined screen width media query range sets.",
			"properties": [
				{
					"name": "SAP_3STEPS",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "A 3-step range set (S-L).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"S\"</code>: For screens smaller than 520 pixels.</li>\n<li><code>\"M\"</code>: For screens greater than or equal to 520 pixels and smaller than 960 pixels.</li>\n<li><code>\"L\"</code>: For screens greater than or equal to 960 pixels.</li>\n</ul>\n\nTo use this range set, you must initialize it explicitly ({@link sap.ui.Device.media.initRangeSet}).\n\nIf this range set is initialized, a CSS class is added to the page root (<code>html</code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-3Step-<i>NAME_OF_THE_INTERVAL</i></code>."
				},
				{
					"name": "SAP_4STEPS",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "A 4-step range set (S-XL).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"S\"</code>: For screens smaller than 520 pixels.</li>\n<li><code>\"M\"</code>: For screens greater than or equal to 520 pixels and smaller than 760 pixels.</li>\n<li><code>\"L\"</code>: For screens greater than or equal to 760 pixels and smaller than 960 pixels.</li>\n<li><code>\"XL\"</code>: For screens greater than or equal to 960 pixels.</li>\n</ul>\n\nTo use this range set, you must initialize it explicitly ({@link sap.ui.Device.media.initRangeSet}).\n\nIf this range set is initialized, a CSS class is added to the page root (<code>html</code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-4Step-<i>NAME_OF_THE_INTERVAL</i></code>."
				},
				{
					"name": "SAP_6STEPS",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "A 6-step range set (XS-XXL).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"XS\"</code>: For screens smaller than 241 pixels.</li>\n<li><code>\"S\"</code>: For screens greater than or equal to 241 pixels and smaller than 400 pixels.</li>\n<li><code>\"M\"</code>: For screens greater than or equal to 400 pixels and smaller than 541 pixels.</li>\n<li><code>\"L\"</code>: For screens greater than or equal to 541 pixels and smaller than 768 pixels.</li>\n<li><code>\"XL\"</code>: For screens greater than or equal to 768 pixels and smaller than 960 pixels.</li>\n<li><code>\"XXL\"</code>: For screens greater than or equal to 960 pixels.</li>\n</ul>\n\nTo use this range set, you must initialize it explicitly ({@link sap.ui.Device.media.initRangeSet}).\n\nIf this range set is initialized, a CSS class is added to the page root (<code>html</code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-6Step-<i>NAME_OF_THE_INTERVAL</i></code>."
				},
				{
					"name": "SAP_STANDARD",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "A 3-step range set (Phone, Tablet, Desktop).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"Phone\"</code>: For screens smaller than 600 pixels.</li>\n<li><code>\"Tablet\"</code>: For screens greater than or equal to 600 pixels and smaller than 1024 pixels.</li>\n<li><code>\"Desktop\"</code>: For screens greater than or equal to 1024 pixels.</li>\n</ul>\n\nThis range set is initialized by default. An initialization via {@link sap.ui.Device.media.initRangeSet} is not needed.\n\nA CSS class is added to the page root (<code>html</code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-Std-<i>NAME_OF_THE_INTERVAL</i></code>.\nFurthermore there are 5 additional CSS classes to hide elements based on the width of the screen:\n<ul>\n<li><code>sapUiHideOnPhone</code>: Will be hidden if the screen has 600px or more</li>\n<li><code>sapUiHideOnTablet</code>: Will be hidden if the screen has less than 600px or more than 1023px</li>\n<li><code>sapUiHideOnDesktop</code>: Will be hidden if the screen is smaller than 1024px</li>\n<li><code>sapUiVisibleOnlyOnPhone</code>: Will be visible if the screen has less than 600px</li>\n<li><code>sapUiVisibleOnlyOnTablet</code>: Will be visible if the screen has 600px or more but less than 1024px</li>\n<li><code>sapUiVisibleOnlyOnDesktop</code>: Will be visible if the screen has 1024px or more</li>\n</ul>"
				},
				{
					"name": "SAP_STANDARD_EXTENDED",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "A 4-step range set (Phone, Tablet, Desktop, LargeDesktop).\n\nThe ranges of this set are:\n<ul>\n<li><code>\"Phone\"</code>: For screens smaller than 600 pixels.</li>\n<li><code>\"Tablet\"</code>: For screens greater than or equal to 600 pixels and smaller than 1024 pixels.</li>\n<li><code>\"Desktop\"</code>: For screens greater than or equal to 1024 pixels and smaller than 1440 pixels.</li>\n<li><code>\"LargeDesktop\"</code>: For screens greater than or equal to 1440 pixels.</li>\n</ul>\n\nThis range set is initialized by default. An initialization via {@link sap.ui.Device.media.initRangeSet} is not needed.\n\nA CSS class is added to the page root (<code>html</code> tag) which indicates the current\nscreen width range: <code>sapUiMedia-StdExt-<i>NAME_OF_THE_INTERVAL</i></code>."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.orientation",
			"basename": "orientation",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "orientation",
			"static": true,
			"visibility": "public",
			"description": "Common API for orientation change notifications across all platforms.\n\nFor browsers or devices that do not provide native support for orientation change events\nthe API simulates them based on the ratio of the document's width and height.",
			"properties": [
				{
					"name": "landscape",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the screen is currently in landscape mode (the width is greater than the height)."
				},
				{
					"name": "portrait",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the screen is currently in portrait mode (the height is greater than the width)."
				}
			],
			"methods": [
				{
					"name": "attachHandler",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to call when the event occurs. This function will be called in the context of the\n                      <code>oListener</code> instance (if present) or on the <code>window</code> instance. A map with information\n                      about the orientation is provided as a single argument to the handler (see details above)."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wants to be notified when the event occurs (<code>this</code> context within the\n                       handler function). If it is not specified, the handler function is called in the context of the <code>window</code>."
						}
					],
					"description": "Registers the given event handler to orientation change events of the document's window.\n\nThe event is fired whenever the screen orientation changes and the width of the document's window\nbecomes greater than its height or the other way round.\n\nThe event handler is called with a single argument: a map <code>mParams</code> which provides the following information:\n<ul>\n<li><code>mParams.landscape</code>: If this flag is set to <code>true</code>, the screen is currently in landscape mode, otherwise in portrait mode.</li>\n</ul>"
				},
				{
					"name": "detachHandler",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to detach from the event"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wanted to be notified when the event occurred"
						}
					],
					"description": "Removes a previously attached event handler from the orientation change events.\n\nThe passed parameters must match those used for registration with {@link #.attachHandler} beforehand."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.os",
			"basename": "os",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "os",
			"static": true,
			"visibility": "public",
			"description": "Contains information about the operating system of the device.",
			"properties": [
				{
					"name": "android",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, an Android operating system is used."
				},
				{
					"name": "blackberry",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, a Blackberry operating system is used."
				},
				{
					"name": "ios",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, an iOS operating system is used."
				},
				{
					"name": "linux",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, a Linux operating system is used."
				},
				{
					"name": "macintosh",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, a Mac operating system is used."
				},
				{
					"name": "name",
					"visibility": "public",
					"static": true,
					"type": "String",
					"description": "The name of the operating system."
				},
				{
					"name": "version",
					"visibility": "public",
					"static": true,
					"type": "float",
					"description": "The version of the operating system as <code>float</code>.\n\nMight be <code>-1</code> if no version can be determined."
				},
				{
					"name": "versionStr",
					"visibility": "public",
					"static": true,
					"type": "String",
					"description": "The version of the operating system as <code>string</code>.\n\nMight be empty if no version can be determined."
				},
				{
					"name": "windows",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, a Windows operating system is used."
				},
				{
					"name": "windows_phone",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, a Windows Phone operating system is used."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.os.OS",
			"basename": "OS",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "os.OS",
			"static": true,
			"visibility": "public",
			"description": "Enumeration containing the names of known operating systems.",
			"properties": [
				{
					"name": "ANDROID",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Android operating system name."
				},
				{
					"name": "BLACKBERRY",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Blackberry operating system name."
				},
				{
					"name": "IOS",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "iOS operating system name."
				},
				{
					"name": "LINUX",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Linux operating system name."
				},
				{
					"name": "MACINTOSH",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "MAC operating system name."
				},
				{
					"name": "WINDOWS",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Windows operating system name."
				},
				{
					"name": "WINDOWS_PHONE",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Windows Phone operating system name."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.resize",
			"basename": "resize",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "resize",
			"static": true,
			"visibility": "public",
			"description": "Common API for document window size change notifications across all platforms.",
			"properties": [
				{
					"name": "height",
					"visibility": "public",
					"static": true,
					"type": "integer",
					"description": "The current height of the document's window in pixels."
				},
				{
					"name": "width",
					"visibility": "public",
					"static": true,
					"type": "integer",
					"description": "The current width of the document's window in pixels."
				}
			],
			"methods": [
				{
					"name": "attachHandler",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to call when the event occurs. This function will be called in the context of the\n                      <code>oListener</code> instance (if present) or on the <code>window</code> instance. A map with information\n                      about the size is provided as a single argument to the handler (see details above)."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wants to be notified when the event occurs (<code>this</code> context within the\n                       handler function). If it is not specified, the handler function is called in the context of the <code>window</code>."
						}
					],
					"description": "Registers the given event handler to resize change events of the document's window.\n\nThe event is fired whenever the document's window size changes.\n\nThe event handler is called with a single argument: a map <code>mParams</code> which provides the following information:\n<ul>\n<li><code>mParams.height</code>: The height of the document's window in pixels.</li>\n<li><code>mParams.width</code>: The width of the document's window in pixels.</li>\n</ul>"
				},
				{
					"name": "detachHandler",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The handler function to detach from the event"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The object that wanted to be notified when the event occurred"
						}
					],
					"description": "Removes a previously attached event handler from the resize events.\n\nThe passed parameters must match those used for registration with {@link #.attachHandler} beforehand."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.support",
			"basename": "support",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "support",
			"static": true,
			"visibility": "public",
			"description": "Contains information about detected capabilities of the used browser or device.",
			"properties": [
				{
					"name": "matchmedia",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the used browser natively supports media queries via JavaScript.\n\n<b>Note:</b> The {@link sap.ui.Device.media media queries API} of the device API can also be used when there is no native support."
				},
				{
					"name": "matchmedialistener",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the used browser natively supports events of media queries via JavaScript.\n\n<b>Note:</b> The {@link sap.ui.Device.media media queries API} of the device API can also be used when there is no native support."
				},
				{
					"name": "orientation",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the used browser natively supports the <code>orientationchange</code> event.\n\n<b>Note:</b> The {@link sap.ui.Device.orientation orientation event} of the device API can also be used when there is no native support."
				},
				{
					"name": "pointer",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the used browser supports pointer events."
				},
				{
					"name": "retina",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the device has a display with a high resolution."
				},
				{
					"name": "touch",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the used browser supports touch events.\n\n<b>Note:</b> This flag indicates whether the used browser supports touch events or not.\nThis does not necessarily mean that the used device has a touchable screen."
				},
				{
					"name": "websocket",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the used browser supports web sockets."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.Device.system",
			"basename": "system",
			"resource": "sap/ui/Device.js",
			"module": "sap/ui/Device",
			"export": "system",
			"static": true,
			"visibility": "public",
			"description": "Provides a basic categorization of the used device based on various indicators.\n\nThese indicators are for example the support of touch events, the screen size, the used operation system or\nthe user agent of the browser.\n\n<b>Note:</b> Depending on the capabilities of the device it is also possible that multiple flags are set to <code>true</code>.",
			"properties": [
				{
					"name": "combi",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the device is recognized as a combination of a desktop system and tablet.\n\nFurthermore, a CSS class <code>sap-combi</code> is added to the document root element.\n\n<b>Note:</b> This property is mainly for Microsoft Windows 8 (and following) devices where the mouse and touch event may be supported\nnatively by the browser being used. This property is set to <code>true</code> only when both mouse and touch event are natively supported."
				},
				{
					"name": "desktop",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the device is recognized as a desktop system.\n\nFurthermore, a CSS class <code>sap-desktop</code> is added to the document root element."
				},
				{
					"name": "phone",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the device is recognized as a phone.\n\nFurthermore, a CSS class <code>sap-phone</code> is added to the document root element."
				},
				{
					"name": "tablet",
					"visibility": "public",
					"static": true,
					"type": "boolean",
					"description": "If this flag is set to <code>true</code>, the device is recognized as a tablet.\n\nFurthermore, a CSS class <code>sap-tablet</code> is added to the document root element.\n\n<b>Note:</b> This flag is also true for some browsers on desktop devices running on Windows 8 or higher. Also see the\ndocumentation for {@link sap.ui.Device.system.combi} devices.\nYou can use the following logic to ensure that the current device is a tablet device:\n\n<pre>\nif(sap.ui.Device.system.tablet && !sap.ui.Device.system.desktop){\n\t...tablet related commands...\n}\n</pre>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model",
			"basename": "model",
			"resource": "sap/ui/model/Model.js",
			"module": "sap/ui/model/Model",
			"static": true,
			"visibility": "public",
			"description": "The SAPUI5 Data Binding API.\n\nThe default binding mode for model implementations (if not implemented otherwise) is two way and the supported binding modes by the model\nare one way, two way and one time. The default binding mode can be changed by the application for each model instance.\nA model implementation should specify its supported binding modes and set the default binding mode accordingly\n(e.g. if the model supports only one way binding the default binding mode should also be set to one way).\n\nThe default size limit for models is 100. The size limit determines the number of entries used for the list bindings.",
			"methods": [
				{
					"name": "FormatException",
					"module": "sap/ui/model/FormatException",
					"export": "",
					"visibility": "public",
					"static": true,
					"description": "FormatException class\n\nThis exception is thrown, when an error occurs while trying to convert a value of the model to\na specific property value in the UI.",
					"resource": "sap/ui/model/FormatException.js"
				},
				{
					"name": "ParseException",
					"module": "sap/ui/model/ParseException",
					"export": "",
					"visibility": "public",
					"static": true,
					"description": "ParseException class\n\nThis exception is thrown, when a parse error occurs while converting a\nstring value to a specific property type in the model.",
					"resource": "sap/ui/model/ParseException.js"
				},
				{
					"name": "ValidateException",
					"module": "sap/ui/model/ValidateException",
					"export": "",
					"visibility": "public",
					"static": true,
					"description": "ValidateException class\n\nThis exception is thrown, when a validation error occurs while checking the\ndefined constraints for a type.",
					"resource": "sap/ui/model/ValidateException.js"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.analytics",
			"basename": "analytics",
			"resource": "sap/ui/model/analytics/ODataModelAdapter.js",
			"module": "sap/ui/model/analytics/ODataModelAdapter",
			"static": true,
			"visibility": "public",
			"description": "Analytical Adapter for ODataModels",
			"methods": [
				{
					"name": "ODataModelAdapter",
					"visibility": "protected",
					"static": true,
					"description": "If called on an instance of an (v1/v2) ODataModel it will enrich it with analytics capabilities.",
					"experimental": {
						"text": "This module is only for experimental use!"
					}
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.AnalyticalBinding",
			"basename": "AnalyticalBinding",
			"resource": "sap/ui/model/analytics/AnalyticalBinding.js",
			"module": "sap/ui/model/analytics/AnalyticalBinding",
			"export": "",
			"static": true,
			"visibility": "protected",
			"extends": "sap.ui.model.TreeBinding",
			"description": "Tree binding implementation for OData entity sets with aggregate semantics.\n\nNote on the handling of different count modes:\nThe AnalyticalBinding always uses the OData $inlinecount system query option to determine the total\ncount of matching entities. It ignores the default count mode set in the ODataModel instance and the\ncount mode specified in the binding parameters. If the default count mode is None, a warning is added\nto the log to remind the application that OData requests generated by the AnalyticalBinding will include\na $inlinecount. If a count mode has been specified in the binding parameters, an error message will be\nlogged if it is None, because the binding will still add the $inlinecount to OData requests. If a\nbinding count mode is set to Request or Both, a warning will be logged to remind the application that\nthe OData requests generated by the AnalyticalBinding will include a $inlinecount.",
			"experimental": {
				"text": "This module is only for experimental use!"
			},
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "protected",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false,
						"description": "the path pointing to the tree / array that should be bound"
					},
					{
						"name": "oContext",
						"type": "object",
						"optional": true,
						"defaultValue": null,
						"description": "the context object for this data binding"
					},
					{
						"name": "aSorter",
						"type": "array",
						"optional": true,
						"defaultValue": null,
						"description": "predefined sorter/s contained in an array"
					},
					{
						"name": "aFilters",
						"type": "array",
						"optional": true,
						"defaultValue": null,
						"description": "predefined filter/s contained in an array"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"defaultValue": null,
						"description": "additional control parameters. Supported parameters are:\n           <ul>\n           <li>entitySet: if set, it explicitly specifies the entity set addressed by the last segment of the given binding path</li>\n           <li>useBatchRequests: if true, multiple OData requests will be wrapped into a single batch request, wherever possible</li>\n           <li>provideGrandTotals: if true, grand total values will be provided for all bound measure properties</li>\n           <li>provideTotalResultSize: if true, the total number of matching entries in the bound OData entity set will be provided</li>\n           <li>reloadSingleUnitMeasures: if true, the binding will check aggregated entries with multi-unit occurrences, if\n           some measure properties have a unique unit and will trigger separate OData requests to fetch them</li>\n           </ul>"
					}
				]
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.analytics.AnalyticalBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}."
				},
				{
					"name": "filter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.AnalyticalBinding",
						"description": "returns <code>this</code> to facilitate method chaining"
					},
					"parameters": [
						{
							"name": "aFilter",
							"type": "sap.ui.model.Filter[]|sap.ui.model.Filter",
							"optional": false,
							"description": "an Array of sap.ui.model.Filter objects or a single Filter instance."
						},
						{
							"name": "sFilterType",
							"type": "sap.ui.model.FilterType",
							"optional": true,
							"defaultValue": "sap.ui.model.FilterType.Control",
							"description": "Type of the filter which should be adjusted."
						}
					],
					"description": "Sets filters for matching only a subset of the entities in the bound OData entity set.\n\nInvoking this function resets the state of the binding. Subsequent data requests such as calls to getNodeContexts() will\nneed to trigger OData requests in order to fetch the data that are in line with these filters."
				},
				{
					"name": "getAnalyticalInfoForColumn",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "analytical information for the column; see {@link #updateAnalyticalInfo}\n           for an explanation of the object structure"
					},
					"parameters": [
						{
							"name": "sColumnName",
							"type": "undefined",
							"optional": false,
							"description": "the column name."
						}
					],
					"description": "Gets the analytical information for a column with a given name."
				},
				{
					"name": "getAnalyticalQueryResult",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.QueryResult",
						"description": "analytical metadata for the bound OData entity set"
					},
					"description": "Gets analytical metadata for the bound OData entity set."
				},
				{
					"name": "getDimensionDetails",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "details for every dimension property addressed by its name. The details object provides these properties: name of the dimension,\nkeyPropertyName for the name of the property holding the dimension key, textPropertyName for the name of the property holding the\ntext for the dimension, aAttributeName listing all properties holding dimension attributes, grouped as indicator whether or not this\ndimension is currently grouped, and analyticalInfo, which contains the binding information for this dimension passed from the\nAnalyticalBinding's consumer via call to function updateAnalyticalInfo."
					},
					"description": "Gets details about the dimension properties included in the bound OData entity set."
				},
				{
					"name": "getDownloadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "URL which can be used for downloading"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sFormat",
							"type": "string",
							"optional": false,
							"description": "Value for the $format Parameter"
						}
					],
					"description": "Get a download URL with the specified format considering the\nsort/filter/custom parameters.\n\nThe download URL also takes into account the selected dimensions and measures,\ndepending on the given column definitions of the AnalyticalTable.\nThis is based on the visible/inResult flags of the columns, as well as integrity dependencies,\ne.g. for mandatory Unit properties."
				},
				{
					"name": "getFilterablePropertyNames",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "names of properties that can be filtered."
					},
					"description": "Gets the names of the filterable properties in the bound OData entity set."
				},
				{
					"name": "getGroupName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "a printable name for the group."
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the parent context identifying the requested group."
						},
						{
							"name": "iLevel",
							"type": "int",
							"optional": false,
							"description": "the level number of oContext (because the context might occur at multiple levels)"
						}
					],
					"description": "Gets a printable name for a group.\n\nThe printable name follows the pattern is <code>&lt;label&gt;:&lt;key-value&gt;[-&lt;text-value&gt;]</code>,\nwhere <code>label</code> is the label of the dimension property used at the aggregation level for the group,\n<code>key-value</code> is the key value of that dimension for the group, and <code>text-value</code> is the\nvalue of the associated text property, if it is also used in the binding.\n\nWhenever a formatter function has been defined for a column displaying the key or text of this dimension, the return value\nof this function is applied for the group name instead of the respective key or text value."
				},
				{
					"name": "getGroupSize",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The currently known group size, or -1, if not yet determined"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the parent context identifying the requested group of child contexts."
						},
						{
							"name": "iLevel",
							"type": "int",
							"optional": false,
							"description": "the level number of oContext (because the context might occur at multiple levels)"
						}
					],
					"description": "Gets the total number of contexts contained in a group, if known.\n\nFor a given group, be aware that the group size might vary over time. In principle, this can happen if the\nbound set of OData entities includes measure properties with amount or quantity values. The AnalyticalBinding\nrecognizes situations where the OData service returns multiple entries for a single group entry due to the fact that a\nmeasure property cannot be aggregated properly, because an amount exists in multiple currencies or a quantity exists\nin multiple units. In such situations, the AnalyticalBinding substitutes these entries by a single representative, and\nthe group size gets reduced by the count of duplicate entries. Finally, since the Binding does not always fetch all children of\na group at once, but only a page with a certain range, such size changes might happen after every page access."
				},
				{
					"name": "getMeasureDetails",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "details for every measure property addressed by its name. The details object provides these properties: name of the measure,\nrawValuePropertyName for the name of the property holding the raw value, unitPropertyName for the name of the property holding the related\nvalue unit or currency, if any, and analyticalInfo, which contains the binding information for this measure passed from the\nAnalyticalBinding's consumer via call to function updateAnalyticalInfo."
					},
					"description": "Gets details about the measure properties included in the bound OData entity set."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.analytics.AnalyticalBinding."
				},
				{
					"name": "getNodeContexts",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "Array containing the requested contexts of class sap.ui.model.Context, limited by the number of entries contained\n           in the entity set at that aggregation level.\n           The array will contain less than the requested number of contexts, if some are not locally available and an OData request is\n           pending to fetch them. In this case, if the parameter numberOfExpandedLevels > 0, the array will be completely empty."
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "map",
							"optional": false,
							"description": "specifying the aggregation level for which contexts shall be fetched. Supported parameters are:\n<ul>\n<li>oContext: parent context identifying the requested group of child contexts</li>\n<li>level: level number for oContext, because it might occur at multiple levels; context with group ID <code>\"/\"</code> has level 0</li>\n<li>numberOfExpandedLevels: number of child levels that shall be fetched automatically</li>\n<li>startIndex: index of first child entry to return from the parent context (zero-based)</li>\n<li>length: number of entries to return; counting begins at the given start index</li>\n<li>threshold: number of additional entries that shall be locally available in the binding for subsequent\naccesses to child entries of the given parent context. </li>\n</ul>"
						}
					],
					"description": "Gets child contexts for a specified parent context.\n\nContexts are returned in a stable order imposed by the\ndimension property that defines this aggregation level beneath the parent context: Either a sort order has been specified for this property,\nor the entries are returned in ascending order of the values of this dimension property by default.\n\nIf any of the requested data is missing, an OData request will be triggered to load it."
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "OData metadata of this property or null if it does not exist."
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The property name."
						}
					],
					"description": "Gets the metadata of a property with a given name."
				},
				{
					"name": "getPropertyHeading",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The heading maintained for this property or null if it does not exist."
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The property name."
						}
					],
					"description": "Gets the label of a property with a given name."
				},
				{
					"name": "getPropertyLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The label maintained for this property or null if it does not exist."
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The property name."
						}
					],
					"description": "Gets the label of a property with a given name."
				},
				{
					"name": "getPropertyQuickInfo",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The quick info maintained for this property or null if it does not exist."
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The property name."
						}
					],
					"description": "Gets the quick info of a property with a given name."
				},
				{
					"name": "getRootContexts",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "Array with a single object of class sap.ui.model.Context for the root context,\n           or an empty array if an OData request is pending to fetch requested contexts that are not yet locally available."
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "map",
							"optional": false,
							"description": "specifying how the top-most aggregation level shall be fetched. Supported parameters are:\n<ul>\n<li>numberOfExpandedLevels: number of child levels that shall be fetched automatically</li>\n<li>startIndex: index of first entry to return from parent group ID <code>\"/\"</code> (zero-based)</li>\n<li>length: number of entries to return at and after the given start index</li>\n<li>threshold: number of additional entries that shall be locally available in the binding for subsequent\naccesses to contexts of parent group ID <code>\"/\"</code> or below, if auto-expanding is selected</li>\n</ul>"
						}
					],
					"description": "Gets the context for the root aggregation level representing the grand total for all bound measure properties.\n\nThe context is assigned to parent group ID <code>null</code>. If the binding is configured not to provide a grand total,\nthis context is empty. If data for this context is not locally available yet, an OData request will be triggered to load it.\n\nThis function must be called whenever the bound set of OData entities changes, e.g., by changing selected dimensions,\nmodifying filter conditions, etc."
				},
				{
					"name": "getSortablePropertyNames",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "names of properties that can be used for sorting the result entities."
					},
					"description": "Gets the names of the sortable properties in the bound OData entity set."
				},
				{
					"name": "getTotalSize",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the total number of addressed entities in the OData entity set"
					},
					"description": "Gets the total number of entities in the bound OData entity set.\n\nCounting takes place at the lowest aggregation level defined by the possible value combinations for the complete set of\ndimension properties included in the bound entity set. This means that intermediate aggregate entities with\nsub-totals at higher aggregation levels are not counted."
				},
				{
					"name": "hasAvailableNodeContexts",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "property of sap.ui.model.analytics.AnalyticalBinding.ContextsAvailabilityStatus,\nindicating whether all, some, or none of the entries are locally available."
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the parent context identifying the aggregation level."
						},
						{
							"name": "iLevel",
							"type": "int",
							"optional": false,
							"description": "the level number of oContext (because the context might occur at multiple levels)."
						}
					],
					"description": "Determines if the binding has the entries of a given aggregation level locally available.\n\nIf so, no further OData request is required to fetch any of them."
				},
				{
					"name": "hasChildren",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if and only if the contexts in the specified group have further children."
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the parent context identifying the requested group of child contexts."
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": false,
							"description": "The only supported parameter is level as the level number of oContext (because the context might occur at multiple levels)"
						}
					],
					"description": "Determines if the contexts in a specified group have further children. If so,\nany of these group contexts can be a parent context of a nested sub-group in\na subsequent aggregation level."
				},
				{
					"name": "hasMeasures",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if and only one or more properties are measure properties."
					},
					"description": "Determines if any of the properties included in the bound OData entity set is a measure property."
				},
				{
					"name": "isMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if and only if the bound OData entity set includes a measure property with this name."
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The property name."
						}
					],
					"description": "Determines if a given name refers to a measure property"
				},
				{
					"name": "loadGroups",
					"visibility": "public",
					"parameters": [
						{
							"name": "mGroupIdRanges",
							"type": "map",
							"optional": false,
							"description": "specifies index ranges of child contexts to be loaded for multiple groups identified by their ID. A group index range is\n           given by an object consisting of startIndex, length, threshold. For every group ID, the map holds an array of such range objects."
						}
					],
					"description": "Loads child contexts of multiple groups."
				},
				{
					"name": "providesGrandTotal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if and only if the binding provides a context for the grand totals of all selected measure properties."
					},
					"description": "Determines if the binding has been configured to provide a grand total for the selected measure properties."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": true,
							"description": "Update the bound control even if no data has been changed"
						}
					],
					"description": "Refreshes the binding, check whether the model data has been changed and fire change event if this is the case. For service side models this should refetch\nthe data from the service. To update a control, even if no data has been changed, e.g. to reset a control after failed validation, please use the parameter\nbForceUpdate."
				},
				{
					"name": "sort",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.AnalyticalBinding",
						"description": "returns <code>this</code> to facilitate method chaining."
					},
					"parameters": [
						{
							"name": "aSorter",
							"type": "sap.ui.model.Sorter|array",
							"optional": false,
							"description": "an sorter object or an array of sorter objects which define the sort order."
						}
					],
					"description": "Sets sorters for retrieving the entities in the bound OData entity set in a specific order.\n\nInvoking this function resets the state of the binding. Subsequent data requests such as calls to getNodeContexts() will\nneed to trigger OData requests in order to fetch the data that are in line with these sorters."
				},
				{
					"name": "updateAnalyticalInfo",
					"visibility": "protected",
					"parameters": [
						{
							"name": "aColumns",
							"type": "array",
							"optional": false,
							"description": "an array with objects holding the analytical information for every column, from left to right."
						}
					],
					"description": "Updates the binding's structure with new analytical information.\n\nAnalytical information is the mapping of UI columns to properties in the bound OData entity set. Every column object contains\nthe name of the bound property and in addition:\n<ol>\n  <li>A column bound to a dimension property has further boolean properties:\n    <ul>\n      <li>grouped: dimension will be used for building groups</li>\n      <li>visible: if the column is visible, values for the related property will be fetched from the OData service</li>\n      <li>inResult: if the column is not visible, but declared to be part of the result, values for the related property\n      will also be fetched from the OData service</li>\n    </ul>\n  </li>\n  <li>A column bound to a measure property has further boolean properties:\n    <ul>\n      <li>total: totals and sub-totals will be provided for the measure at all aggregation levels</li>\n    </ul>\n  </li>\n</ol>\n\nInvoking this function resets the state of the binding and subsequent data requests such as calls to getNodeContexts() will\nneed to trigger OData requests in order to fetch the data that are in line with this analytical information.\n\nPlease be aware that a call of this function might lead to additional back-end requests, as well as a control re-rendering later on.\nWhenever possible use the API of the analytical control, instead of relying on the binding."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.AnalyticalTreeBindingAdapter",
			"basename": "AnalyticalTreeBindingAdapter",
			"resource": "sap/ui/model/analytics/AnalyticalTreeBindingAdapter.js",
			"module": "sap/ui/model/analytics/AnalyticalTreeBindingAdapter",
			"export": "",
			"static": true,
			"visibility": "protected",
			"experimental": {
				"text": "This module is only for experimental use!"
			},
			"constructor": {
				"visibility": "protected",
				"description": "Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls."
			},
			"methods": [
				{
					"name": "getNumberOfExpandedLevels",
					"visibility": "protected",
					"returnValue": {
						"type": "int",
						"description": "the number of expanded levels"
					},
					"description": "Retrieves the currently set number of expanded levels from the Binding (commonly an AnalyticalBinding)."
				},
				{
					"name": "hasTotaledMeasures",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "wether the binding has totaled measures or not"
					},
					"description": "Checks if the AnalyticalBinding has totaled measures available.\nUsed for rendering sum rows."
				},
				{
					"name": "setNumberOfExpandedLevels",
					"visibility": "protected",
					"parameters": [
						{
							"name": "iLevels",
							"type": "int",
							"optional": false,
							"description": "the number of levels which should be expanded, minimum is 0"
						}
					],
					"description": "Sets the number of expanded levels on the TreeBinding (commonly an AnalyticalBinding).\nThis is NOT the same as AnalyticalTreeBindingAdapter#collapse or AnalyticalTreeBindingAdapter#expand.\nSetting the number of expanded levels leads to different requests.\nThis function is used by the AnalyticalTable for the ungroup/ungroup-all feature."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.BatchResponseCollector",
			"basename": "BatchResponseCollector",
			"resource": "sap/ui/model/analytics/BatchResponseCollector.js",
			"module": "sap/ui/model/analytics/BatchResponseCollector",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Simple Response Collection Component, collects the responses for each sub-request inside a bigger batch request.\n\nAlso handles clean-up after all responses (either success or error) have been collected.\nInstantiated in AnalyticalBinding.prototype._executeBatchRequest()",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mParams",
						"type": "object",
						"optional": true,
						"description": "optional Setup-Parameter, @see BatchResponseCollector#setup"
					}
				],
				"description": "Constructor for a batch response collecting component."
			},
			"methods": [
				{
					"name": "collect",
					"visibility": "public",
					"parameters": [
						{
							"name": "oResponse",
							"type": "object",
							"optional": false,
							"description": "the response which should be collected"
						},
						{
							"name": "sResponseType",
							"type": "string",
							"optional": true,
							"description": "the type of the response, either BatchResponseCollector.TYPE_SUCCESS\n\t\t\t\t\t\t\t\t\tor BatchResponseCollector.TYPE_ERROR"
						}
					],
					"description": "Collects responses of type BatchResponseCollector.TYPE_SUCCESS and BatchResponseCollector.TYPE_ERROR.\n\nKeeps track of all collected responses and fires the necessary events after all responses for the\nrequests, given in the constructor, have returned."
				},
				{
					"name": "error",
					"visibility": "public",
					"parameters": [
						{
							"name": "oResponse",
							"type": "object",
							"optional": false,
							"description": "the erroneous response object"
						}
					],
					"description": "Convenience function to collect an error response.\n\nInternally BatchResponseCollector#collect is called, the second parameter is set to BatchResponseCollector.TYPE_ERROR"
				},
				{
					"name": "setup",
					"visibility": "public",
					"parameters": [
						{
							"name": "mParams",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"executedRequests": {
									"name": "executedRequests",
									"type": "array",
									"optional": false,
									"description": "an Array with detail informations for all executed batch sub-requests"
								},
								"binding": {
									"name": "binding",
									"type": "object",
									"optional": false,
									"description": "a reference to the AnalyticalBinding which started the batch request"
								},
								"lastAnalyticalInfoVersion": {
									"name": "lastAnalyticalInfoVersion",
									"type": "int",
									"optional": false,
									"description": "the analyticalInfo version at the time of the creation of this\n\t\t\tBatchResponseCollector instance, this may change during the process of a pending request. Typically changed\n\t\t\tvia a call to AnalyticalBinding#updateAnalyticalInfo."
								}
							},
							"description": "optional Setup-Parameter"
						}
					],
					"description": "Setup-Function to initialize/reset the BatchResponseCollector."
				},
				{
					"name": "success",
					"visibility": "public",
					"parameters": [
						{
							"name": "oResponse",
							"type": "object",
							"optional": false,
							"description": "the successful response, which should be collected"
						}
					],
					"description": "Convenience function to collect a success response.\n\nInternally BatchResponseCollector#collect is called with second parameter BatchResponseCollector.TYPE_SUCCESS"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.analytics.odata4analytics",
			"basename": "odata4analytics",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "",
			"static": true,
			"visibility": "protected",
			"description": "The OData4Analytics API is purely experimental, not yet functionally complete\nand not meant for productive usage. At present, its only purpose is to\ndemonstrate how easy analytical extensions of OData4SAP can be consumed.\n\n<em>USE OBJECTS VIA METHODS ONLY - DO NOT ACCESS JAVASCRIPT OBJECT PROPERTIES DIRECTLY !</em>\n\nLazy initialization of attributes will cause unexpected values when you\naccess object attributes directly.",
			"experimental": {
				"text": "This module is only for experimental use!"
			},
			"methods": [
				{
					"name": "includeDimensionTextAttributes",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "bIncludeText",
							"type": "undefined",
							"optional": false,
							"description": "Indicator whether or not to include the dimension text (if\n           available) in the value set."
						},
						{
							"name": "bIncludeAttributes",
							"type": "undefined",
							"optional": false,
							"description": "Indicator whether or not to include all dimension attributes\n           (if available) in the value set."
						}
					],
					"description": "Specify which components of the dimension shall be included in the value\nset."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.Dimension",
			"basename": "Dimension",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "Dimension",
			"static": true,
			"visibility": "public",
			"description": "Representation of a property annotated with\n       sap:aggregation-role=\"dimension\".",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oQueryResult",
						"type": "sap.ui.model.analytics.odata4analytics.QueryResult",
						"optional": false,
						"description": "The query result containing this dimension"
					},
					{
						"name": "oProperty",
						"type": "object",
						"optional": false,
						"description": "The DataJS object object representing the dimension"
					}
				],
				"description": "Create a representation of a dimension provided by an analytic query. Do not create your own instances."
			},
			"methods": [
				{
					"name": "findAttributeByName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Dimension",
						"description": "The dimension attribute\n         object with this name or null if it does not exist"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Attribute name"
						}
					],
					"description": "Find attribute by name"
				},
				{
					"name": "getAllAttributeNames",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "List of all attribute names"
					},
					"description": "Get the names of all attributes included in this dimension"
				},
				{
					"name": "getAllAttributes",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object with individual JS properties for each\n         attribute of this dimension. The JS object properties all are\n         objects of type odata4analytics.DimensionAttribute. The\n         names of the JS object properties are given by the OData entity\n         type property names representing the dimension attribute keys."
					},
					"description": "Get all attributes of this dimension"
				},
				{
					"name": "getContainingQueryResult",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.QueryResult",
						"description": "The query result object"
					},
					"description": "Get query result containing this dimension"
				},
				{
					"name": "getHierarchy",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The hierarchy object or null if there is none. It can\n         be an instance of class\n         odata4analytics.RecursiveHierarchy (TODO later: or a\n         leveled hierarchy). Use methods isLeveledHierarchy and\n         isRecursiveHierarchy to determine object type."
					},
					"description": "Get associated hierarchy"
				},
				{
					"name": "getKeyProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the property for the\n         dimension key"
					},
					"description": "Get the key property"
				},
				{
					"name": "getLabelText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The (possibly language-dependent) label text for this\n         dimension"
					},
					"description": "Get label"
				},
				{
					"name": "getMasterDataEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.EntitySet",
						"description": "The master data entity set\n        for this dimension, or null, if it does not exist"
					},
					"description": "Get master data entity set for this dimension"
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The name of this dimension, which is identical to the\n         name of the dimension key property in the entity type"
					},
					"description": "Get the name of the dimension"
				},
				{
					"name": "getSuperOrdinateDimension",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The super-ordinate dimension or null if there is none"
					},
					"description": "Get super-ordinate dimension"
				},
				{
					"name": "getTextProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the text property or\n         null if it does not exist"
					},
					"description": "Get text property related to this dimension"
				},
				{
					"name": "hasMasterData",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "True iff master data is available"
					},
					"description": "Get indicator whether or not master data is available for this dimension"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.DimensionAttribute",
			"basename": "DimensionAttribute",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "DimensionAttribute",
			"static": true,
			"visibility": "public",
			"description": "Representation of a dimension attribute.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oQueryResult",
						"type": "sap.ui.model.analytics.odata4analytics.QueryResult",
						"optional": false,
						"description": "The query result containing this dimension attribute"
					},
					{
						"name": "oProperty",
						"type": "object",
						"optional": false,
						"description": "The DataJS object object representing the dimension\n           attribute"
					}
				],
				"description": "Create a representation of a dimension attribute provided by an analytic\nquery. Do not create your own instances."
			},
			"methods": [
				{
					"name": "getDimension",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Dimension",
						"description": "The dimension object\n         containing this attribute"
					},
					"description": "Get dimension"
				},
				{
					"name": "getKeyProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the property for the key\n         of this dimension attribute"
					},
					"description": "Get the key property"
				},
				{
					"name": "getLabelText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The (possibly language-dependent) label text for this\n         dimension attribute"
					},
					"description": "Get label"
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The name of the dimension attribute, which is identical\n         to the name of the property in the entity type holding the\n         attribute value"
					},
					"description": "Get the name of the dimension attribute"
				},
				{
					"name": "getTextProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the text property or\n         null if it does not exist"
					},
					"description": "Get text property related to this dimension attribute"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.DimensionMemberSetRequest",
			"basename": "DimensionMemberSetRequest",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "DimensionMemberSetRequest",
			"static": true,
			"visibility": "public",
			"description": "Creation of URIs for fetching a query dimension value set.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oDimension",
						"type": "sap.ui.model.analytics.odata4analytics.Dimension",
						"optional": false,
						"description": "Description of a dimension"
					},
					{
						"name": "oParameterizationRequest",
						"type": "sap.ui.model.analytics.odata4analytics.ParameterizationRequest",
						"optional": false,
						"description": "(optional) Request object for\n           interactions with the parameterization of the query result or (not\n           yet supported) master data entity set Such an object is required\n           if the entity set holding the dimension members includes\n           parameters."
					},
					{
						"name": "bUseMasterData",
						"type": "boolean",
						"optional": false,
						"description": "(optional) Indicates use of master data for\n           determining the dimension members."
					}
				],
				"description": "Create a request object for interaction with a dimension value help. Such a\nvalue help is served by either the query result entity set, in which case the\nreturned dimension members are limited to those also used in the query result\ndata. Or, the value help is populated by a master data entity set, if made\navailable by the service. In this case, the result will include all valid\nmembers for that dimension."
			},
			"methods": [
				{
					"name": "getFilterExpression",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
						"description": "The filter object\n         associated to this request."
					},
					"description": "Get the filter expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created."
				},
				{
					"name": "getResultPageBoundaries",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "the current page boundaries as object"
					},
					"description": "Returns the current page boundaries as object with properties\n<code>start</code> and <code>end</code>. If the end of the page is\nunbounded, <code>end</code> is null."
				},
				{
					"name": "getSortExpression",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.SortExpression",
						"description": "The sort object\n         associated to this request."
					},
					"description": "Get the sort expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created."
				},
				{
					"name": "getURIQueryOptionValue",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The value of the requested query option or null, if\n         this option is not used for the OData request."
					},
					"parameters": [
						{
							"name": "sQueryOptionName",
							"type": "String",
							"optional": false,
							"description": "Identifies the query option: $select,\n           $filter,... or any custom query option"
						}
					],
					"description": "Get the value of an query option for the OData request URI corresponding\nto this request."
				},
				{
					"name": "getURIToDimensionMemberEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The resource path of the URI pointing to the entity\n         set. It is a relative URI unless a service root is given, which\n         would then prefixed in order to return a complete URL."
					},
					"parameters": [
						{
							"name": "sServiceRootURI",
							"type": "String",
							"optional": false,
							"description": "(optional) Identifies the root of the OData\n           service"
						}
					],
					"description": "Get the URI to locate the entity set for the dimension memebers."
				},
				{
					"name": "getURIToDimensionMemberEntries",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The unescaped URI that contains the OData resource path\n         and OData system query options to express the request for the\n         parameter value set.."
					},
					"parameters": [
						{
							"name": "sServiceRootURI",
							"type": "String",
							"optional": false,
							"description": "(optional) Identifies the root of the OData\n           service"
						}
					],
					"description": "Get the unescaped URI to fetch the dimension members, optionally\naugmented by text and attributes."
				},
				{
					"name": "setFilterExpression",
					"visibility": "public",
					"parameters": [
						{
							"name": "oFilter",
							"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
							"optional": false,
							"description": "The filter object to be associated with this request."
						}
					],
					"description": "Set the filter expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the filter object maintained by this request."
				},
				{
					"name": "setParameterizationRequest",
					"visibility": "public",
					"parameters": [
						{
							"name": "oParameterizationRequest",
							"type": "undefined",
							"optional": false,
							"description": "Request object for interactions with the parameterization of\n           this query result"
						}
					],
					"description": "Set the parameterization request required for retrieving dimension\nmembers directly from the query result, if it is parameterized."
				},
				{
					"name": "setRequestOptions",
					"visibility": "public",
					"parameters": [
						{
							"name": "bIncludeCount",
							"type": "Boolean",
							"optional": false,
							"description": "Indicates whether or not the result shall\n           include a count for the returned entities. Default is not to\n           include it. Pass null to keep current setting."
						}
					],
					"description": "Set further options to be applied for the OData request"
				},
				{
					"name": "setResultPageBoundaries",
					"visibility": "public",
					"parameters": [
						{
							"name": "start",
							"type": "Number",
							"optional": false,
							"description": "The first row of the query result to be returned.\n           Numbering starts at 1. Passing null is equivalent to start\n           with the first row."
						},
						{
							"name": "end",
							"type": "Number",
							"optional": false,
							"description": "The last row of the query result to be returned. Passing\n           null is equivalent to get all rows up to the end of the query\n           result."
						}
					],
					"description": "Specify that only a page of the query result shall be returned. A page is\ndescribed by its boundaries, that are row numbers for the first and last\nrows in the query result to be returned."
				},
				{
					"name": "setSortExpression",
					"visibility": "public",
					"parameters": [
						{
							"name": "oSorter",
							"type": "sap.ui.model.analytics.odata4analytics.SortExpression",
							"optional": false,
							"description": "The sort object to be associated with this request."
						}
					],
					"description": "Set the sort expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the sort object maintained by this request."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.EntitySet",
			"basename": "EntitySet",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "EntitySet",
			"static": true,
			"visibility": "public",
			"description": "Representation of a OData entity set.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the OData model containing this entity\n           set"
					},
					{
						"name": "oSchema",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the schema surrounding the container of\n           this entity set"
					},
					{
						"name": "oContainer",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the container holding this entity set"
					},
					{
						"name": "oEntitySet",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the entity set"
					},
					{
						"name": "oEntityType",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the entity type"
					}
				],
				"description": "Create a representation of an OData entity set in the context of an analytic\nquery. Do not create your own instances."
			},
			"methods": [
				{
					"name": "getEntityType",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the entity type"
					},
					"description": "Get entity type used for this entity set"
				},
				{
					"name": "getQName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The fully qualified name"
					},
					"description": "Get the fully qualified name for this entity type"
				},
				{
					"name": "getSetDescription",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the entity set"
					},
					"description": "Get full description for this entity set"
				},
				{
					"name": "getUpdatablePropertyNameSet",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object with individual JS properties for each\n         updatable property. For testing whether propertyName is the name\n         of an updatable property, use\n         <code>getUpdatablePropertyNameSet()[propertyName]</code>. The\n         included JS object properties are all set to true."
					},
					"description": "Get names of properties in this entity set that can be updated"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.EntityType",
			"basename": "EntityType",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "EntityType",
			"static": true,
			"visibility": "public",
			"description": "Representation of a OData entity type.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the OData model containing this entity\n           type"
					},
					{
						"name": "oSchema",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the schema containing this entity type"
					},
					{
						"name": "oEntityType",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the entity type"
					}
				],
				"description": "Create a representation of an OData entity type in the context of an analytic\nquery. Do not create your own instances."
			},
			"methods": [
				{
					"name": "findPropertyByName",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the property or null if\n         it does not exist"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "Property name"
						}
					],
					"description": "Find property by name"
				},
				{
					"name": "getAllHierarchyPropertyNames",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "List of all property names"
					},
					"description": "Get the names of all properties with an associated hierarchy"
				},
				{
					"name": "getFilterablePropertyNames",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Array with names of properties that can be\n         filtered."
					},
					"description": "Get names of properties that can be filtered, that is they can be used in\n$filter expressions"
				},
				{
					"name": "getHeadingOfProperty",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The heading string"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "Property name"
						}
					],
					"description": "Get heading of the property with specified name (identified by property\nmetadata annotation sap:heading)"
				},
				{
					"name": "getHierarchy",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.RecursiveHierarchy",
						"description": "The hierarchy\n         object or null if it does not exist"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Parameter name"
						}
					],
					"description": "Get the hierarchy associated to a given property Based on the current\nspecification, hierarchies are always recursive. TODO: Extend behavior\nwhen leveled hierarchies get in scope"
				},
				{
					"name": "getKeyProperties",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "The list of key property names"
					},
					"description": "Get key properties of this type"
				},
				{
					"name": "getLabelOfProperty",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The label string"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "Property name"
						}
					],
					"description": "Get label of the property with specified name (identified by property\nmetadata annotation sap:label)"
				},
				{
					"name": "getProperties",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Object with (JavaScript) properties, one for each (OData\n        entity type) property. These (JavaScript) properties hold the\n        DataJS object representing the property"
					},
					"description": "Get all properties"
				},
				{
					"name": "getPropertiesWithFilterRestrictions",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Object with (JavaScript) properties, one for each\n         (OData entity type) property. The property value is from\n         odata4analytics.EntityType.propertyFilterRestriction and\n         indicates the filter restriction for this property."
					},
					"description": "Get properties for which filter restrictions have been specified"
				},
				{
					"name": "getQName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The fully qualified name"
					},
					"description": "Get the fully qualified name for this entity type"
				},
				{
					"name": "getQuickInfoOfProperty",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The quick info string"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "Property name"
						}
					],
					"description": "Get quick info of the property with specified name (identified by property\nmetadata annotation sap:quickinfo)"
				},
				{
					"name": "getRequiredFilterPropertyNames",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Array with names of properties that must be\n         filtered."
					},
					"description": "Get names of properties that must be filtered, that is they must appear\nin every $filter expression"
				},
				{
					"name": "getSortablePropertyNames",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Array with names of properties that can be\n         sorted."
					},
					"description": "Get names of properties that can be sorted, that is they can be used in\n$orderby expressions"
				},
				{
					"name": "getSuperOrdinatePropertyOfProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the super-ordinate\n         property or null if it does not exist"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "Property name"
						}
					],
					"description": "Get the super-ordinate property related to the property with specified\nname (identified by property metadata annotation sap:super-ordinate)"
				},
				{
					"name": "getTextPropertyOfProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the text property or\n         null if it does not exist"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "Property name"
						}
					],
					"description": "Get the text property related to the property with specified name\n(identified by property metadata annotation sap:text)"
				},
				{
					"name": "getTypeDescription",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the entity type"
					},
					"description": "Get full description for this entity type"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.FilterExpression",
			"basename": "FilterExpression",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "FilterExpression",
			"static": true,
			"visibility": "public",
			"description": "Representation of a $filter expression for an OData entity type.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the OData model containing this entity type"
					},
					{
						"name": "oSchema",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the schema containing this entity type"
					},
					{
						"name": "oEntityType",
						"type": "sap.ui.model.analytics.odata4analytics.EntityType",
						"optional": false,
						"description": "object for the entity type"
					}
				],
				"description": "Create a representation of a filter expression for a given entity type. It can be rendered as value for the $filter system\nquery option."
			},
			"methods": [
				{
					"name": "addCondition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
						"description": "This object for method chaining"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The name of the property bound in the condition"
						},
						{
							"name": "sOperator",
							"type": "sap.ui.model.FilterOperator",
							"optional": false,
							"description": "operator used for the condition"
						},
						{
							"name": "oValue",
							"type": "object",
							"optional": false,
							"description": "value to be used for this condition"
						},
						{
							"name": "oValue2",
							"type": "object",
							"optional": false,
							"description": "(optional) as second value to be used for this condition"
						}
					],
					"description": "Add a condition to the filter expression.\n\nMultiple conditions on the same property are combined with a logical OR first, and in a second step conditions for\ndifferent properties are combined with a logical AND."
				},
				{
					"name": "addSetCondition",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
						"description": "This object for method chaining"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The name of the property bound in the condition"
						},
						{
							"name": "aValues",
							"type": "array",
							"optional": false,
							"description": "values defining the set"
						}
					],
					"description": "Add a set condition to the filter expression.\n\nA set condition tests if the value of a property is included in a set of given values. It is a convenience method for\nthis particular use case eliminating the need for multiple API calls."
				},
				{
					"name": "addUI5FilterConditions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
						"description": "This object for method chaining"
					},
					"parameters": [
						{
							"name": "aUI5Filter",
							"type": "sap.ui.model.Filter[]",
							"optional": false,
							"description": "Array of UI5 filter objects"
						}
					],
					"description": "Add an array of UI5 filter conditions to the filter expression.\n\nThe UI5 filter condition is combined with the other given conditions using a logical AND. This method\nis particularly useful for passing forward already created UI5 filter arrays."
				},
				{
					"name": "checkValidity",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "The value true. In case the expression violates some of the rules, an exception with some explanatory\n         message is thrown"
					},
					"description": "Check if request is compliant with basic filter constraints expressed in metadata:\n\n(a) all properties required in the filter expression have been referenced (b) the single-value filter restrictions have been obeyed"
				},
				{
					"name": "clear",
					"visibility": "public",
					"description": "Clear expression from any conditions that may have been set previously"
				},
				{
					"name": "getEntityType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.EntityType",
						"description": "The object representing the entity type"
					},
					"description": "Get description for this entity type"
				},
				{
					"name": "getExpressionAsUI5FilterArray",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Filter[]",
						"description": "List of filter objects representing this expression"
					},
					"description": "Get an array of SAPUI5 Filter objects corresponding to this expression."
				},
				{
					"name": "getURIFilterOptionValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The $filter value for the filter expression"
					},
					"description": "Get the value for the OData system query option $filter corresponding to this expression."
				},
				{
					"name": "removeConditions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
						"description": "This object for method chaining"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The name of the property bound in the condition"
						}
					],
					"description": "Remove all conditions for some property from the filter expression.\n\nAll previously set conditions for some property are removed from the filter expression."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.Measure",
			"basename": "Measure",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "Measure",
			"static": true,
			"visibility": "public",
			"description": "Representation of a property annotated with\n       sap:aggregation-role=\"measure\".",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oQueryResult",
						"type": "sap.ui.model.analytics.odata4analytics.QueryResult",
						"optional": false,
						"description": "The query result containing this measure"
					},
					{
						"name": "oProperty",
						"type": "object",
						"optional": false,
						"description": "The DataJS object object representing the measure"
					}
				],
				"description": "Create a representation of a measure provided by an analytic query. Do not create your own instances."
			},
			"methods": [
				{
					"name": "getFormattedValueProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the property holding the\n         formatted value text of this measure or null if this measure\n         does not have a unit"
					},
					"description": "Get the text property associated to the raw value property holding the\nformatted value related to this measure"
				},
				{
					"name": "getLabelText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The (possibly language-dependent) label text for this\n         measure"
					},
					"description": "Get label"
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The name of the measure, which is identical to the name\n         of the measure raw value property in the entity type"
					},
					"description": "Get the name of the measure"
				},
				{
					"name": "getRawValueProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the property holding the\n         raw value of this measure"
					},
					"description": "Get the raw value property"
				},
				{
					"name": "getUnitProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the unit property or\n         null if this measure does not have a unit"
					},
					"description": "Get the unit property related to this measure"
				},
				{
					"name": "isUpdatable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "True iff the measure is updatable"
					},
					"description": "Get indicator whether or not the measure is updatable"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.Model",
			"basename": "Model",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "Model",
			"static": true,
			"visibility": "public",
			"description": "Representation of an OData model with analytical annotations defined\n       by OData4SAP.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModelReference",
						"type": "object",
						"optional": false,
						"description": "An instance of ReferenceByURI, ReferenceByModel or\n           ReferenceWithWorkaround for locating the OData service."
					},
					{
						"name": "mParameter",
						"type": "object",
						"optional": true,
						"description": "Additional parameters for controlling the model construction. Currently supported are:\n           <li> sAnnotationJSONDoc - A JSON document providing extra annotations to the elements of the\n                structure of the given service\n           </li>\n           <li> modelVersion - Parameter to define which ODataModel version should be used, in you use\n                'odata4analytics.Model.ReferenceByURI': 1 (default), 2\n                see also: AnalyticalVersionInfo constants\n           </li>"
					}
				],
				"description": "Create a representation of the analytical semantics of OData service metadata"
			},
			"methods": [
				{
					"name": "findQueryResultByName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.QueryResult",
						"description": "The query result object\n         with this name or null if it does not exist"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Fully qualified name of query result entity set"
						}
					],
					"description": "Find analytic query result by name"
				},
				{
					"name": "getAllQueryResultNames",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "List of all query result names"
					},
					"description": "Get the names of all query results (entity sets) offered by the model"
				},
				{
					"name": "getAllQueryResults",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object with individual JS properties for each query\n         result included in the model. The JS object properties all are\n         objects of type odata4analytics.QueryResult. The names\n         of the JS object properties are given by the entity set names\n         representing the query results."
					},
					"description": "Get all query results offered by the model"
				},
				{
					"name": "getODataModel",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The SAP UI5 representation of the model."
					},
					"description": "Get underlying OData model provided by SAP UI5"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.Model.ReferenceByModel",
			"basename": "ReferenceByModel",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "Model.ReferenceByModel",
			"static": true,
			"visibility": "public",
			"description": "Handle to an already instantiated SAP UI5 OData model.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "object",
						"optional": false,
						"description": "holding the OData model."
					}
				],
				"description": "Create a reference to an OData model already loaded elsewhere with the help\nof SAP UI5."
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.Model.ReferenceByURI",
			"basename": "ReferenceByURI",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "Model.ReferenceByURI",
			"static": true,
			"visibility": "public",
			"description": "Handle to an OData model by the URI pointing to it.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sURI",
						"type": "string",
						"optional": false,
						"description": "holding the URI."
					}
				],
				"description": "Create a reference to an OData model by the URI of the related OData service."
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround",
			"basename": "ReferenceWithWorkaround",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "Model.ReferenceWithWorkaround",
			"static": true,
			"visibility": "public",
			"description": "Handle to an already instantiated SAP UI5 OData model.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "object",
						"optional": false,
						"description": "holding a reference to the OData model, obtained\n           by odata4analytics.Model.ReferenceByModel or by\n           sap.odata4analytics.Model.ReferenceByURI."
					},
					{
						"name": "aWorkaroundID",
						"type": "string[]",
						"optional": false,
						"description": "listing all workarounds to be applied."
					}
				],
				"description": "Create a reference to an OData model having certain workarounds activated. A\nworkaround is an implementation that changes the standard behavior of the API\nto overcome some gap or limitation in the OData provider. The workaround\nimplementation can be conditionally activated by passing the identifier in\nthe constructor.\n\nKnown workaround identifiers are:\n\n<li>\"CreateLabelsFromTechnicalNames\" - If a property has no label text, it\ngets generated from the property name.</li>\n\n<li>\"IdentifyTextPropertiesByName\" -If a dimension property has no text and\nanother property with the same name and an appended \"Name\", \"Text\" etc.\nexists, they are linked via annotation.</li>"
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.Parameter",
			"basename": "Parameter",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "Parameter",
			"static": true,
			"visibility": "public",
			"description": "Representation of a property annotated with sap:parameter.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oParameterization",
						"type": "sap.ui.model.analytics.odata4analytics.Parameterization",
						"optional": false,
						"description": "The parameterization containing this parameter"
					},
					{
						"name": "oProperty",
						"type": "object",
						"optional": false,
						"description": "The DataJS object object representing the text property"
					}
				],
				"description": "Create a representation of a single parameter contained in a parameterization. Do not create your own instances."
			},
			"methods": [
				{
					"name": "getContainingParameterization",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Parameterization",
						"description": "The parameterization\n        object"
					},
					"description": "Get parameterization containing this parameter"
				},
				{
					"name": "getLabelText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The (possibly language-dependent) label text for this\n         parameter"
					},
					"description": "Get label"
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The name of the parameter, which is identical with the\n         name of the property representing the parameter in the\n         parameterization entity type"
					},
					"description": "Get the name of the parameter"
				},
				{
					"name": "getPeerIntervalBoundaryParameter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Parameter",
						"description": "The parameter representing\n         the peer boundary of the same interval. This means that if\n         *this* parameter is a lower boundary, the returned object"
					},
					"description": "Get property for the parameter representing the peer boundary of the same\ninterval"
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the property of this\n         parameter"
					},
					"description": "Get property"
				},
				{
					"name": "getTextProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing the text property or\n         null if it does not exist"
					},
					"description": "Get text property related to this parameter"
				},
				{
					"name": "getURIToValueEntitySet",
					"visibility": "public",
					"returnValue": {
						"description": "The resource path of the URI pointing to the entity set. It is a\n         relative URI unless a service root is given, which would then\n         prefixed in order to return a complete URL."
					},
					"parameters": [
						{
							"name": "sServiceRootURI",
							"type": "String",
							"optional": false,
							"description": "(optional) Identifies the root of the OData\n           service"
						}
					],
					"description": "Get the URI to locate the entity set holding the value set, if it is\navailable."
				},
				{
					"name": "isIntervalBoundary",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "True iff it represents an interval boundary, otherwise\n         false"
					},
					"description": "Get indicator if the parameter represents an interval boundary"
				},
				{
					"name": "isLowerIntervalBoundary",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "True iff it represents the lower boundary of an\n         interval, otherwise false"
					},
					"description": "Get indicator if the parameter represents the lower boundary of an\ninterval"
				},
				{
					"name": "isOptional",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "True iff the parameter is optional"
					},
					"description": "Get indicator whether or not the parameter is optional"
				},
				{
					"name": "isValueSetAvailable",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "True iff a value set is available, otherwise false"
					},
					"description": "Get indicator if a set of values is available for this parameter.\nTypically, this is true for parameters with a finite set of known values\nsuch as products, business partners in different roles, organization\nunits, and false for integer or date parameters"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.Parameterization",
			"basename": "Parameterization",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "Parameterization",
			"static": true,
			"visibility": "public",
			"description": "Representation of an entity type annotated with\n       sap:semantics=\"parameters\".",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oEntityType",
						"type": "sap.ui.model.analytics.odata4analytics.EntityType",
						"optional": false,
						"description": "The OData entity type for this parameterization"
					},
					{
						"name": "oEntitySet",
						"type": "sap.ui.model.analytics.odata4analytics.EntitySet",
						"optional": false,
						"description": "The OData entity set for this parameterization offered\n           by the OData service"
					}
				],
				"description": "Create a representation of a parameterization for an analytic query. Do not create your own instances."
			},
			"methods": [
				{
					"name": "findParameterByName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Parameter",
						"description": "The parameter object with\n         this name or null if it does not exist"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Parameter name"
						}
					],
					"description": "Find parameter by name"
				},
				{
					"name": "getAllParameterNames",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "List of all parameter names"
					},
					"description": "Get the names of all parameters part of the parameterization"
				},
				{
					"name": "getAllParameters",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object with individual JS properties for each\n         parameter included in the query result. The JS object properties\n         all are objects of type odata4analytics.Parameter. The\n         names of the JS object properties are given by the OData entity\n         type property names representing the parameter keys."
					},
					"description": "Get all parameters included in this parameterization"
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.EntitySet",
						"description": "The OData entity set\n         representing this query result"
					},
					"description": "Get the entity set representing this query result in the OData model"
				},
				{
					"name": "getEntityType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.EntityType",
						"description": "The OData entity type for\n         this query result"
					},
					"description": "Get the entity type defining the type of this query result in the OData\nmodel"
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The name of the parameterization, which is identical\n         with the name of the entity set representing the\n         parameterization in the OData service"
					},
					"description": "Get the name of the parameter"
				},
				{
					"name": "getNavigationPropertyToQueryResult",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.QueryResult",
						"description": "The parameter object with\n         this name or null if it does not exist"
					},
					"description": "Get navigation property to query result"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.ParameterizationRequest",
			"basename": "ParameterizationRequest",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "ParameterizationRequest",
			"static": true,
			"visibility": "public",
			"description": "Creation of URIs for query parameterizations.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oParameterization",
						"type": "sap.ui.model.analytics.odata4analytics.Parameterization",
						"optional": false,
						"description": "Description of a query parameterization"
					}
				],
				"description": "Create a request object for interaction with a query parameterization."
			},
			"methods": [
				{
					"name": "getParameterization",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Parameterization",
						"description": "Description of a\n         query parameterization"
					},
					"description": "Get the description of the parameterization on which this request\noperates on"
				},
				{
					"name": "getURIToParameterizationEntitySet",
					"visibility": "public",
					"returnValue": {
						"description": "The resource path of the URI pointing to the entity set. It is a\n         relative URI unless a service root is given, which would then\n         prefixed in order to return a complete URL."
					},
					"parameters": [
						{
							"name": "sServiceRootURI",
							"type": "String",
							"optional": false,
							"description": "(optional) Identifies the root of the OData\n           service"
						}
					],
					"description": "Get the URI to locate the entity set for the query parameterization."
				},
				{
					"name": "getURIToParameterizationEntry",
					"visibility": "public",
					"returnValue": {
						"description": "The resource path of the URI pointing to the entity set. It is a\n         relative URI unless a service root is given, which would then\n         prefixed in order to return a complete URL."
					},
					"parameters": [
						{
							"name": "sServiceRootURI",
							"type": "String",
							"optional": false,
							"description": "(optional) Identifies the root of the OData\n           service"
						}
					],
					"description": "Get the URI to locate the parameterization entity for the values assigned\nto all parameters beforehand. Notice that a value must be supplied for\nevery parameter including those marked as optional. For optional\nparameters, assign the special value that the service provider uses as an\n\"omitted\" value. For example, for services based on BW Easy Queries, this\nwould be an empty string."
				},
				{
					"name": "setParameterValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "sParameterName",
							"type": "String",
							"optional": false,
							"description": "Name of the parameter. In case of a range\n           value, provide the name of the lower boundary parameter."
						},
						{
							"name": "sValue",
							"type": "String",
							"optional": false,
							"description": "Assigned value. Pass null to remove a value assignment."
						},
						{
							"name": "sToValue",
							"type": "String",
							"optional": false,
							"description": "Omit it or set it to null for single values. If set,\n           it will be assigned to the upper boundary parameter"
						}
					],
					"description": "Assign a value to a parameter"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.ParameterValueSetRequest",
			"basename": "ParameterValueSetRequest",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "ParameterValueSetRequest",
			"static": true,
			"visibility": "public",
			"description": "Creation of URIs for fetching a query parameter value set.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oParameter",
						"type": "sap.ui.model.analytics.odata4analytics.Parameter",
						"optional": false,
						"description": "Description of a query parameter"
					}
				],
				"description": "Create a request object for interaction with a query parameter value help."
			},
			"methods": [
				{
					"name": "getFilterExpression",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
						"description": "The filter object\n         associated to this request."
					},
					"description": "Get the filter expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created."
				},
				{
					"name": "getSortExpression",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.SortExpression",
						"description": "The sort object\n         associated to this request."
					},
					"description": "Get the sort expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created."
				},
				{
					"name": "getURIQueryOptionValue",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The value of the requested query option or null, if\n         this option is not used for the OData request."
					},
					"parameters": [
						{
							"name": "sQueryOptionName",
							"type": "String",
							"optional": false,
							"description": "Identifies the query option: $select,\n           $filter,... or any custom query option"
						}
					],
					"description": "Get the value of an query option for the OData request URI corresponding\nto this request."
				},
				{
					"name": "getURIToParameterValueSetEntries",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The unescaped URI that contains the OData resource path\n         and OData system query options to express the request for the\n         parameter value set.."
					},
					"parameters": [
						{
							"name": "sServiceRootURI",
							"type": "String",
							"optional": false,
							"description": "(optional) Identifies the root of the OData\n           service"
						}
					],
					"description": "Get the unescaped URI to fetch the parameter value set."
				},
				{
					"name": "includeParameterText",
					"visibility": "public",
					"parameters": [
						{
							"name": "bIncludeText",
							"type": "undefined",
							"optional": false,
							"description": "Indicator whether or not to include the parameter text (if\n           available) in the value set. Pass null to keep current\n           setting."
						}
					],
					"description": "Specify which components of the parameter shall be included in the value\nset."
				},
				{
					"name": "setFilterExpression",
					"visibility": "public",
					"parameters": [
						{
							"name": "oFilter",
							"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
							"optional": false,
							"description": "The filter object to be associated with this request."
						}
					],
					"description": "Set the filter expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the filter object maintained by this request."
				},
				{
					"name": "setSortExpression",
					"visibility": "public",
					"parameters": [
						{
							"name": "oSorter",
							"type": "sap.ui.model.analytics.odata4analytics.SortExpression",
							"optional": false,
							"description": "The sort object to be associated with this request."
						}
					],
					"description": "Set the sort expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the sort object maintained by this request."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.QueryResult",
			"basename": "QueryResult",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "QueryResult",
			"static": true,
			"visibility": "public",
			"description": "Representation of an entity type annotated with\n       sap:semantics=\"aggregate\".",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.analytics.odata4analytics.Model",
						"optional": false,
						"description": "The analytical model containing this query result entity\n           set"
					},
					{
						"name": "oEntityType",
						"type": "sap.ui.model.analytics.odata4analytics.EntityType",
						"optional": false,
						"description": "The OData entity type for this query"
					},
					{
						"name": "oEntitySet",
						"type": "sap.ui.model.analytics.odata4analytics.EntitySet",
						"optional": false,
						"description": "The OData entity set for this query offered by the\n           OData service"
					},
					{
						"name": "oParameterization",
						"type": "sap.ui.model.analytics.odata4analytics.Parameterization",
						"optional": false,
						"description": "The parameterization of this query, if any"
					}
				],
				"description": "Create a representation of an analytic query. Do not create your own instances."
			},
			"methods": [
				{
					"name": "findDimensionByName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Dimension",
						"description": "The dimension object with\n         this name or null if it does not exist"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Dimension name"
						}
					],
					"description": "Find dimension by name"
				},
				{
					"name": "findDimensionByPropertyName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Dimension",
						"description": "The dimension object to\n         which the given property name is related, because the property\n         holds the dimension key, its text, or is an attribute of this\n         dimension. If no such dimension exists, null is returned."
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Property name"
						}
					],
					"description": "Find dimension by property name"
				},
				{
					"name": "findMeasureByName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Measure",
						"description": "The measure object with this\n         name or null if it does not exist"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Measure name"
						}
					],
					"description": "Find measure by name"
				},
				{
					"name": "findMeasureByPropertyName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Measure",
						"description": "The measure object to which\n         the given property name is related, because the property holds\n         the raw measure value or its formatted value. If no such measure\n         exists, null is returned."
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "Property name"
						}
					],
					"description": "Find measure by property name"
				},
				{
					"name": "getAllDimensionNames",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "List of all dimension names"
					},
					"description": "Get the names of all dimensions included in the query result"
				},
				{
					"name": "getAllDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object with individual JS properties for each\n         dimension included in the query result. The JS object properties\n         all are objects of type odata4analytics.Dimension. The\n         names of the JS object properties are given by the OData entity\n         type property names representing the dimension keys."
					},
					"description": "Get all dimensions included in this query result"
				},
				{
					"name": "getAllMeasureNames",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "List of all measure names"
					},
					"description": "Get the names of all measures included in the query result"
				},
				{
					"name": "getAllMeasures",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object with individual JS properties for each\n         measure included in the query result. The JS object properties\n         all are objects of type odata4analytics.Measure. The\n         names of the JS object properties are given by the OData entity\n         type property names representing the measure raw values."
					},
					"description": "Get all measures included in this query result"
				},
				{
					"name": "getEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.EntitySet",
						"description": "The OData entity set\n         representing this query result"
					},
					"description": "Get the entity set representing this query result in the OData model"
				},
				{
					"name": "getEntityType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.EntityType",
						"description": "The OData entity type for\n         this query result"
					},
					"description": "Get the entity type defining the type of this query result in the OData\nmodel"
				},
				{
					"name": "getModel",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The analytical representation of the OData model"
					},
					"description": "Get the analytical model containing the entity set for this query result"
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The fully qualified name of the query result, which is\n         identical with the name of the entity set representing the query\n         result in the OData service"
					},
					"description": "Get the name of the query result"
				},
				{
					"name": "getParameterization",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.Parameterization",
						"description": "The object for the\n         parameterization or null if the query result is not\n         parameterized"
					},
					"description": "Get the parameterization of this query result"
				},
				{
					"name": "getTotaledPropertiesListProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing this property"
					},
					"description": "Get property holding the totaled property list"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.QueryResultRequest",
			"basename": "QueryResultRequest",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "QueryResultRequest",
			"static": true,
			"visibility": "public",
			"description": "Creation of URIs for fetching query results.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oQueryResult",
						"type": "sap.ui.model.analytics.odata4analytics.QueryResult",
						"optional": false,
						"description": "Description of a query parameterization"
					},
					{
						"name": "oParameterizationRequest",
						"type": "sap.ui.model.analytics.odata4analytics.ParameterizationRequest",
						"optional": true,
						"description": "Request object for\n           interactions with the parameterization of this query. Only\n           required if the query service includes parameters."
					}
				],
				"description": "Create a request object for interaction with a query result."
			},
			"methods": [
				{
					"name": "addToAggregationLevel",
					"visibility": "public",
					"parameters": [
						{
							"name": "aDimensionName",
							"type": "undefined",
							"optional": false,
							"description": "Array of dimension names to be added to the already defined\n           aggregation level."
						}
					],
					"description": "Add one or more dimensions to the aggregation level"
				},
				{
					"name": "getAggregationLevel",
					"visibility": "public",
					"returnValue": {
						"type": "Array",
						"description": "The dimension names included in the aggregation level"
					},
					"description": "Get the names of the dimensions included in the aggregation level"
				},
				{
					"name": "getAggregationLevelDetails",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object with three properties named key and text,\n         both with Boolean values indicating whether the key and text of\n         this dimension are included in this request. The third property\n         named attributes is an array of attribute names of this\n         dimension included in this request, or null, if there are none."
					},
					"parameters": [
						{
							"name": "sDImensionName",
							"type": "undefined",
							"optional": false,
							"description": "Name of a dimension included in the aggregation level of this\n           request, for which details shall be returned"
						}
					],
					"description": "Get details about a dimensions included in the aggregation level"
				},
				{
					"name": "getFilterExpression",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
						"description": "The filter object\n         associated to this request."
					},
					"description": "Get the filter expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created."
				},
				{
					"name": "getMeasureNames",
					"visibility": "public",
					"returnValue": {
						"type": "Array",
						"description": "The measure names included in the query result request"
					},
					"description": "Get the names of the measures included in the query result request"
				},
				{
					"name": "getParameterizationRequest",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.ParameterizationRequest"
					},
					"description": "Retrieves the current parametrization request"
				},
				{
					"name": "getQueryResult",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.QueryResult",
						"description": "Description of a query\n         result"
					},
					"description": "Get the description of the query result on which this request operates on"
				},
				{
					"name": "getResultPageBoundaries",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "the current page boundaries as object"
					},
					"description": "Returns the current page boundaries as object with properties\n<code>start</code> and <code>end</code>. If the end of the page is\nunbounded, <code>end</code> is null."
				},
				{
					"name": "getSortExpression",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.SortExpression",
						"description": "The sort object\n         associated to this request."
					},
					"description": "Get the sort expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a\nnew expression object gets created."
				},
				{
					"name": "getURIQueryOptionValue",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The value of the requested query option or null, if\n         this option is not used for the OData request."
					},
					"parameters": [
						{
							"name": "sQueryOptionName",
							"type": "String",
							"optional": false,
							"description": "Identifies the query option: $select,\n           $filter,$orderby ... or any custom query option"
						}
					],
					"description": "Get the value of an query option for the OData request URI corresponding\nto this request."
				},
				{
					"name": "getURIToQueryResultEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The resource path of the URI pointing to the entity\n         set. It is a relative URI unless a service root is given, which\n         would then prefixed in order to return a complete URL."
					},
					"parameters": [
						{
							"name": "sServiceRootURI",
							"type": "String",
							"optional": false,
							"description": "(optional) Identifies the root of the OData\n           service"
						}
					],
					"description": "Get the URI to locate the entity set for the query result."
				},
				{
					"name": "getURIToQueryResultEntries",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "The unescaped URI that contains the OData resource path\n         and OData system query options to express the aggregation level,\n         filter expression and further options."
					},
					"parameters": [
						{
							"name": "sServiceRootURI",
							"type": "String",
							"optional": false,
							"description": "(optional) Identifies the root of the OData\n           service"
						},
						{
							"name": "sResourcePath",
							"type": "String",
							"optional": false,
							"description": "(optional) OData resource path to be considered.\n           If provided, it overwrites any parameterization object that\n           might have been specified separately."
						}
					],
					"description": "Get the unescaped URI to fetch the query result."
				},
				{
					"name": "includeDimensionKeyTextAttributes",
					"visibility": "public",
					"parameters": [
						{
							"name": "sDimensionName",
							"type": "undefined",
							"optional": false,
							"description": "Name of the dimension for which the settings get applied.\n           Specify null to apply the settings to all dimensions in the\n           aggregation level."
						},
						{
							"name": "bIncludeKey",
							"type": "undefined",
							"optional": false,
							"description": "Indicator whether or not to include the dimension key in the\n           query result. Pass null to keep current setting."
						},
						{
							"name": "bIncludeText",
							"type": "undefined",
							"optional": false,
							"description": "Indicator whether or not to include the dimension text (if\n           available) in the query result. Pass null to keep current\n           setting."
						},
						{
							"name": "aAttributeName",
							"type": "undefined",
							"optional": false,
							"description": "Array of dimension attribute names to be included in the\n           result. Pass null to keep current setting. This argument is\n           ignored if sDimensionName is null."
						}
					],
					"description": "Specify which dimension components shall be included in the query result.\nThe settings get applied to the currently defined aggregation level."
				},
				{
					"name": "includeMeasureRawFormattedValueUnit",
					"visibility": "public",
					"parameters": [
						{
							"name": "sMeasureName",
							"type": "undefined",
							"optional": false,
							"description": "Name of the measure for which the settings get applied.\n           Specify null to apply the settings to all currently set\n           measures."
						},
						{
							"name": "bIncludeRawValue",
							"type": "undefined",
							"optional": false,
							"description": "Indicator whether or not to include the raw value in the query\n           result. Pass null to keep current setting."
						},
						{
							"name": "bIncludeFormattedValue",
							"type": "undefined",
							"optional": false,
							"description": "Indicator whether or not to include the formatted value (if\n           available) in the query result. Pass null to keep current\n           setting."
						},
						{
							"name": "bIncludeUnit",
							"type": "undefined",
							"optional": false,
							"description": "Indicator whether or not to include the unit (if available) in\n           the query result. Pass null to keep current setting."
						}
					],
					"description": "Specify which measure components shall be included in the query result.\nThe settings get applied to the currently set measures."
				},
				{
					"name": "removeFromAggregationLevel",
					"visibility": "public",
					"parameters": [
						{
							"name": "aDimensionName",
							"type": "undefined",
							"optional": false,
							"description": "Array of dimension names to be removed from the already\n           defined aggregation level."
						}
					],
					"description": "Remove one or more dimensions from the aggregation level. The method also\nremoved a potential sort expression on the dimension."
				},
				{
					"name": "setAggregationLevel",
					"visibility": "public",
					"parameters": [
						{
							"name": "aDimensionName",
							"type": "undefined",
							"optional": false,
							"description": "Array of dimension names to be part of the aggregation level.\n           If null, the aggregation level includes all dimensions, if\n           empty, no dimension is included."
						}
					],
					"description": "Set the aggregation level for the query result request. By default, the\nquery result will include the properties holding the keys of the given\ndimensions. This setting can be changed using\nincludeDimensionKeyTextAttributes."
				},
				{
					"name": "setFilterExpression",
					"visibility": "public",
					"parameters": [
						{
							"name": "oFilter",
							"type": "sap.ui.model.analytics.odata4analytics.FilterExpression",
							"optional": false,
							"description": "The filter object to be associated with this request."
						}
					],
					"description": "Set the filter expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the filter object maintained by this request."
				},
				{
					"name": "setMeasures",
					"visibility": "public",
					"parameters": [
						{
							"name": "aMeasureName",
							"type": "undefined",
							"optional": false,
							"description": "Array of measure names to be part of the query result request.\n           If null, the request includes all measures, if empty, no\n           measure is included."
						}
					],
					"description": "Set the measures to be included in the query result request. By default,\nthe query result will include the properties holding the raw values of\nthe given measures. This setting can be changed using\nincludeMeasureRawFormattedValueUnit."
				},
				{
					"name": "setParameterizationRequest",
					"visibility": "public",
					"parameters": [
						{
							"name": "oParameterizationRequest",
							"type": "undefined",
							"optional": false,
							"description": "Request object for interactions with the parameterization of\n           this query"
						}
					],
					"description": "Set the parameterization request required for interactions with the query\nresult of parameterized queries. This method provides an alternative way\nto assign a parameterization request to a query result request."
				},
				{
					"name": "setRequestOptions",
					"visibility": "public",
					"parameters": [
						{
							"name": "bIncludeEntityKey",
							"type": "Boolean",
							"optional": false,
							"description": "Indicates whether or not the entity key\n           should be returned for every entry in the query result.\n           Default is not to include it. Pass null to keep current\n           setting."
						},
						{
							"name": "bIncludeCount",
							"type": "Boolean",
							"optional": false,
							"description": "Indicates whether or not the result shall\n           include a count for the returned entities. Default is not to\n           include it. Pass null to keep current setting."
						},
						{
							"name": "bReturnNoEntities",
							"type": "Boolean",
							"optional": false,
							"description": "Indicates whether or not the result shall\n           be empty. This will translate to $top=0 in the OData request and override\n           any setting done with setResultPageBoundaries. The default is not to\n           suppress entities in the result. Pass null to keep current setting.\n           The main use case for this option is to create a request\n           with $inlinecount returning an entity count."
						}
					],
					"description": "Set further options to be applied for the OData request to fetch the\nquery result"
				},
				{
					"name": "setResourcePath",
					"visibility": "public",
					"parameters": [
						{
							"name": "sResourcePath",
							"type": "undefined",
							"optional": false,
							"description": "Resource path pointing to the entity set of the query result.\n           Must include a valid parameterization if query contains\n           parameters."
						}
					],
					"description": "Set the resource path to be considered for the OData request URI of this\nquery request object. This method provides an alternative way to assign a\npath comprising a parameterization. If a path is provided, it overwrites\nany parameterization object that might have been specified separately."
				},
				{
					"name": "setResultPageBoundaries",
					"visibility": "public",
					"parameters": [
						{
							"name": "start",
							"type": "Number",
							"optional": false,
							"description": "The first row of the query result to be returned.\n           Numbering starts at 1. Passing null is equivalent to start\n           with the first row."
						},
						{
							"name": "end",
							"type": "Number",
							"optional": false,
							"description": "The last row of the query result to be returned. Passing\n           null is equivalent to get all rows up to the end of the query\n           result."
						}
					],
					"description": "Specify that only a page of the query result shall be returned. A page is\ndescribed by its boundaries, that are row numbers for the first and last\nrows in the query result to be returned."
				},
				{
					"name": "setSortExpression",
					"visibility": "public",
					"parameters": [
						{
							"name": "oSorter",
							"type": "sap.ui.model.analytics.odata4analytics.SortExpression",
							"optional": false,
							"description": "The sort object to be associated with this request."
						}
					],
					"description": "Set the sort expression for this request.\n\nExpressions are represented by separate objects. Calling this method\nreplaces the sort object maintained by this request."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.RecursiveHierarchy",
			"basename": "RecursiveHierarchy",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "RecursiveHierarchy",
			"static": true,
			"visibility": "public",
			"description": "Representation of a recursive hierarchy.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oEntityType",
						"type": "sap.ui.model.analytics.odata4analytics.EntityType",
						"optional": false,
						"description": "object for the entity type"
					},
					{
						"name": "oNodeIDProperty",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the property holding the\n           hierarchy node ID identifying the hierarchy node to which the\n           OData entry belongs"
					},
					{
						"name": "oParentNodeIDProperty",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the property holding the\n           node ID of the parent of the hierarchy node pointed to by the\n           value of oNodeIDProperty"
					},
					{
						"name": "oNodeLevelProperty",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the property holding the\n           level number for the of the hierarchy node pointed to by the value\n           of oNodeIDProperty"
					},
					{
						"name": "oNodeValueProperty",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the property holding the data\n           value for the of the hierarchy node pointed to by the value of\n           oNodeIDProperty"
					}
				],
				"description": "Create a representation of a recursive hierarchy defined on one multiple\nproperties in an OData entity type query. Do not create your own instances."
			},
			"methods": [
				{
					"name": "getNodeIDProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing this property"
					},
					"description": "Get the property holding the node ID of the hierarchy node"
				},
				{
					"name": "getNodeLevelProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing this property"
					},
					"description": "Get the property holding the level of the hierarchy node"
				},
				{
					"name": "getNodeValueProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing this property"
					},
					"description": "Get the property holding the value that is structurally organized by the\nhierarchy"
				},
				{
					"name": "getParentNodeIDProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The DataJS object representing this property"
					},
					"description": "Get the property holding the parent node ID of the hierarchy node"
				},
				{
					"name": "isLeveledHierarchy",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "False"
					},
					"description": "Get indicator if this is a leveled hierarchy"
				},
				{
					"name": "isRecursiveHierarchy",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "True"
					},
					"description": "Get indicator if this is a recursive hierarchy"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.analytics.odata4analytics.SortExpression",
			"basename": "SortExpression",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "SortExpression",
			"static": true,
			"visibility": "public",
			"description": "Representation of a $orderby expression for an OData entity type.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the OData model containing this entity\n           type"
					},
					{
						"name": "oSchema",
						"type": "object",
						"optional": false,
						"description": "DataJS object for the schema containing this entity type"
					},
					{
						"name": "oEntityType",
						"type": "sap.ui.model.analytics.odata4analytics.EntityType",
						"optional": false,
						"description": "object for the entity type"
					}
				],
				"description": "Create a representation of an order by expression for a given entity type. It\ncan be rendered as value for the $orderby system query option."
			},
			"methods": [
				{
					"name": "addSorter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.SortExpression",
						"description": "This object for method\n         chaining"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The name of the property bound in the condition"
						},
						{
							"name": "sSortOrder",
							"type": "sap.ui.model.analytics.odata4analytics.SortOrder",
							"optional": false,
							"description": "sorting order used for the condition"
						}
					],
					"description": "Add a condition to the order by expression. It replaces any previously specified\nsort order for the property."
				},
				{
					"name": "clear",
					"visibility": "public",
					"description": "Clear expression from any sort conditions that may have been set\npreviously"
				},
				{
					"name": "getEntityType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.analytics.odata4analytics.EntityType",
						"description": "The object representing the\n         entity type"
					},
					"description": "Get description for this entity type"
				},
				{
					"name": "getExpressionAsUI5Sorter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Sorter",
						"description": "first sorter object or null if empty"
					},
					"description": "Get the first SAPUI5 Sorter object."
				},
				{
					"name": "getExpressionsAsUI5SorterArray",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Sorter[]",
						"description": "List of sorter objects representing\n         this expression"
					},
					"description": "Get an array of SAPUI5 Sorter objects corresponding to this expression."
				},
				{
					"name": "getURIOrderByOptionValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The $orderby value for the sort expressions"
					},
					"parameters": [
						{
							"name": "oSelectedPropertyNames",
							"type": "object",
							"optional": false,
							"description": "Object with properties requested for $select"
						}
					],
					"description": "Get the value for the OData system query option $orderby corresponding to\nthis expression."
				},
				{
					"name": "removeSorter",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "The name of the property to be removed from the\n           condition"
						}
					],
					"description": "Removes the order by expression for the given property name from the list\nof order by expression. If no order by expression with this property name\nexists the method does nothing."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.model.analytics.odata4analytics.SortOrder",
			"basename": "SortOrder",
			"resource": "sap/ui/model/analytics/odata4analytics.js",
			"module": "sap/ui/model/analytics/odata4analytics",
			"export": "SortOrder",
			"static": true,
			"visibility": "public",
			"description": "Sort order of a property.",
			"properties": [
				{
					"name": "Ascending",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Sort Order: ascending."
				},
				{
					"name": "Descending",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Sort Order: descending."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.Binding",
			"basename": "Binding",
			"resource": "sap/ui/model/Binding.js",
			"module": "sap/ui/model/Binding",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"description": "The Binding is the object, which holds the necessary information for a data binding,\nlike the binding path and the binding context, and acts like an interface to the\nmodel for the control, so it is the event provider for changes in the data model\nand provides getters for accessing properties or lists.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false,
						"description": "the model"
					},
					{
						"name": "sPath",
						"type": "String",
						"optional": false,
						"description": "the path"
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": false,
						"description": "the context object"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true
					}
				],
				"description": "Constructor for Binding class."
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"reason": {
											"name": "reason",
											"type": "string",
											"optional": true,
											"description": "A string stating the reason for the data change. Can be any string and new values can be added in the future."
										}
									}
								}
							}
						}
					],
					"description": "The 'change' event is fired, when the data of the Binding is changed from the model. The reason parameter of the event provides a hint where the change came from.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "dataReceived",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"data": {
											"name": "data",
											"type": "string",
											"optional": true,
											"description": "The data received. In error cases it will be undefined."
										}
									}
								}
							}
						}
					],
					"description": "The 'dataReceived' event is fired, when data was received from a backend. This event may also be fired when an error occured.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "dataRequested",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "The 'dataRequested' event is fired, when data was requested from a backend.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				}
			],
			"methods": [
				{
					"name": "attachAggregatedDataStateChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'AggregatedDataStateChange' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "attachChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'change' event of this <code>sap.ui.model.Model</code>.<br/>"
				},
				{
					"name": "attachDataReceived",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'dataReceived' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "attachDataRequested",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'dataRequested' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "attachDataStateChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'DataStateChange' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "attachEvents",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvents",
							"type": "object",
							"optional": false
						}
					],
					"description": "Attach multiple events."
				},
				{
					"name": "attachRefresh",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'refresh' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Removes all control messages for this binding from the MessageManager in addition to the standard clean-up tasks."
				},
				{
					"name": "detachAggregatedDataStateChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'AggregatedDataStateChange' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "detachChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'change' event of this <code>sap.ui.model.Model</code>.<br/>"
				},
				{
					"name": "detachDataReceived",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'dataReceived' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "detachDataRequested",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'dataRequested' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "detachDataStateChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'DataStateChange' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "detachEvents",
					"visibility": "protected",
					"parameters": [
						{
							"name": "oEvents",
							"type": "object",
							"optional": false
						}
					],
					"description": "Detach multiple events-"
				},
				{
					"name": "detachRefresh",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'refresh' event of this <code>sap.ui.model.Binding</code>.<br/>"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.Binding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireDataReceived",
					"visibility": "protected",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": false,
							"parameterProperties": {
								"data": {
									"name": "data",
									"type": "object",
									"optional": true,
									"description": "the data received. In error cases it will be undefined."
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event dataReceived to attached listeners. This event may also be fired when an error occured."
				},
				{
					"name": "fireDataRequested",
					"visibility": "protected",
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": false,
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event dataRequested to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.Binding."
				},
				{
					"name": "initialize",
					"visibility": "protected",
					"description": "Initialize the binding. The message should be called when creating a binding.\nThe default implementation calls checkUpdate(true)."
				},
				{
					"name": "isInitial",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether binding is initial"
					},
					"description": "Returns whether the binding is initial, which means it did not get an initial value yet"
				},
				{
					"name": "isRelative",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether binding is relative"
					},
					"description": "Returns whether the binding is relative, which means it did not start with a /"
				},
				{
					"name": "isSuspended",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether binding is suspended"
					},
					"description": "Returns true if the binding is suspended or false if not."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": false,
							"description": "Update the bound control even if no data has been changed"
						}
					],
					"description": "Refreshes the binding, check whether the model data has been changed and fire change event\nif this is the case. For server side models this should refetch the data from the server.\nTo update a control, even if no data has been changed, e.g. to reset a control after failed\nvalidation, please use the parameter bForceUpdate."
				},
				{
					"name": "resume",
					"visibility": "public",
					"description": "Resumes the binding update. Change events will be fired again.\n\nWhen the binding is resumed, a change event will be fired immediately, if the data has changed while the binding\nwas suspended. For serverside models, a request to the server will be triggered, if a refresh was requested\nwhile the binding was suspended."
				},
				{
					"name": "suspend",
					"visibility": "public",
					"description": "Suspends the binding update. No change events will be fired.\n\nA refresh call with bForceUpdate set to true will also update the binding and fire a change in suspended mode.\nSpecial operations on bindings, which require updates to work properly (as paging or filtering in list bindings)\nwill also update and cause a change event although the binding is suspended."
				},
				{
					"name": "updateRequired",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "true if this binding should be updated"
					},
					"parameters": [
						{
							"name": "oModel",
							"type": "object",
							"optional": false,
							"description": "The model instance to compare against"
						}
					],
					"description": "Determines if the binding should be updated by comparing the current model against a specified model."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.model.BindingMode",
			"basename": "BindingMode",
			"resource": "sap/ui/model/BindingMode.js",
			"module": "sap/ui/model/BindingMode",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Binding type definitions.",
			"properties": [
				{
					"name": "Default",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "BindingMode default means that the binding mode of the model is used"
				},
				{
					"name": "OneTime",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "BindingMode one time means value is only read from the model once"
				},
				{
					"name": "OneWay",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "BindingMode one way means from model to view"
				},
				{
					"name": "TwoWay",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "BindingMode two way means from model to view and vice versa"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.ChangeReason",
			"basename": "ChangeReason",
			"resource": "sap/ui/model/ChangeReason.js",
			"module": "sap/ui/model/ChangeReason",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Change Reason for Model/ListBinding/TreeBinding.",
			"properties": [
				{
					"name": "Add",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "A context was added to a binding."
				},
				{
					"name": "Binding",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Binding changes a model property value"
				},
				{
					"name": "Change",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The list has changed"
				},
				{
					"name": "Collapse",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The tree node was collapsed"
				},
				{
					"name": "Context",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The list context has changed"
				},
				{
					"name": "Expand",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The tree node was expanded"
				},
				{
					"name": "Filter",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The List was filtered"
				},
				{
					"name": "Refresh",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The list was refreshed"
				},
				{
					"name": "Sort",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "The list was sorted"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.ClientContextBinding",
			"basename": "ClientContextBinding",
			"resource": "sap/ui/model/ClientContextBinding.js",
			"module": "sap/ui/model/ClientContextBinding",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.ContextBinding",
			"description": "The ContextBinding is a specific binding for a setting context for the model",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "String",
						"optional": false
					},
					{
						"name": "oContext",
						"type": "Object",
						"optional": false
					},
					{
						"name": "mParameters",
						"type": "Object",
						"optional": true
					}
				],
				"description": "Constructor for ClientContextBinding"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.ClientContextBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.ClientContextBinding."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.ClientModel",
			"basename": "ClientModel",
			"resource": "sap/ui/model/ClientModel.js",
			"module": "sap/ui/model/ClientModel",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Model",
			"description": "Model implementation for Client models",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oData",
						"type": "object",
						"optional": false,
						"description": "URL where to load the data from"
					}
				],
				"description": "Constructor for a new ClientModel."
			},
			"methods": [
				{
					"name": "destroy",
					"visibility": "public"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.ClientModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}."
				},
				{
					"name": "forceNoCache",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceNoCache",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether to force not to cache"
						}
					],
					"description": "Force no caching."
				},
				{
					"name": "getData",
					"visibility": "public",
					"returnValue": {
						"description": "the data object"
					},
					"description": "Returns the current data of the model.\nBe aware that the returned object is a reference to the model data so all changes to that data will also change the model data."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.ClientModel."
				},
				{
					"name": "updateBindings",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": false,
							"description": "true/false: Default = false. If set to false an update\n\t\t\t\t\twill only be done when the value of a binding changed."
						}
					],
					"description": "update all bindings"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.ClientTreeBindingAdapter",
			"basename": "ClientTreeBindingAdapter",
			"resource": "sap/ui/model/ClientTreeBindingAdapter.js",
			"module": "sap/ui/model/ClientTreeBindingAdapter",
			"export": "",
			"static": true,
			"visibility": "protected",
			"experimental": {
				"text": "This module is only for experimental use!"
			},
			"constructor": {
				"visibility": "protected",
				"description": "Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls."
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.model.CompositeBinding",
			"basename": "CompositeBinding",
			"resource": "sap/ui/model/CompositeBinding.js",
			"module": "sap/ui/model/CompositeBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.PropertyBinding",
			"description": "The CompositeBinding is used to bundle multiple property bindings which are be used to provide a single binding against\nthese property bindings.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for CompositeBinding"
			},
			"methods": [
				{
					"name": "attachAggregatedDataStateChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'AggregatedDataStateChange' event of this\n<code>sap.ui.model.CompositeBinding</code>. The CombinedDataStateChange event is fired asynchronously, meaning\nthat the datastate object given as parameter of the event contains all changes that were applied to the datastate\nin the running thread."
				},
				{
					"name": "attachChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the '_change' event of this <code>sap.ui.model.CompositeBinding</code>.<br/>"
				},
				{
					"name": "attachDataStateChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'DataStateChange' event of this <code>sap.ui.model.CompositeBinding</code>.<br/>"
				},
				{
					"name": "detachAggregatedDataStateChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'AggregatedDataStateChange' event of this <code>sap.ui.model.CompositeBinding</code>.<br/>"
				},
				{
					"name": "detachChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the '_change' event of this <code>sap.ui.model.CompositeBinding</code>.<br/>"
				},
				{
					"name": "detachDataStateChange",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'DataStateChange' event of this <code>sap.ui.model.CompositeBinding</code>.<br/>"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.CompositeBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}."
				},
				{
					"name": "getBindings",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "the property bindings in this composite binding"
					},
					"description": "Returns the property bindings contained in this composite binding."
				},
				{
					"name": "getExternalValue",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the current value of the bound target"
					},
					"description": "Returns the current external value of the bound target which is formatted via a type or formatter function."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.CompositeBinding."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the values of the internal property bindings in an array"
					},
					"description": "Returns the raw values of the property bindings in an array."
				},
				{
					"name": "initialize",
					"visibility": "protected",
					"description": "Initialize the binding. The message should be called when creating a binding.\nThe default implementation calls checkUpdate(true).\nPrevent checkUpdate to be triggered while initializing nestend bindings, it is\nsufficient to call checkUpdate when all nested bindings are initialized."
				},
				{
					"name": "resume",
					"visibility": "public",
					"description": "Suspends the binding update. No change events will be fired.\n\nA refresh call with bForceUpdate set to true will also update the binding and fire a change in suspended mode.\nSpecial operations on bindings, which require updates to work properly (as paging or filtering in list bindings)\nwill also update and cause a change event although the binding is suspended."
				},
				{
					"name": "setExternalValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "oValue",
							"type": "object",
							"optional": false,
							"description": "the value to set for this binding"
						}
					],
					"description": "Sets the external value of a composite binding. If no CompositeType is assigned to the binding, the default\nimplementation assumes a space separated list of values. This will cause the setValue to be called for each\nnested binding, except for undefined values in the array."
				},
				{
					"name": "setType",
					"visibility": "public",
					"parameters": [
						{
							"name": "oType",
							"type": "sap.ui.model.CompositeType",
							"optional": false,
							"description": "the type for the binding"
						},
						{
							"name": "sInternalType",
							"type": "String",
							"optional": false,
							"description": "the internal type of the element property which this binding is bound against."
						}
					],
					"description": "Sets the optional type and internal type for the binding. The type and internal type are used to do the parsing/formatting correctly.\nThe internal type is the property type of the element which the value is formatted to."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "aValues",
							"type": "array",
							"optional": false,
							"description": "the values to set for this binding"
						}
					],
					"description": "Sets the values. This will cause the setValue to be called for each nested binding, except\nfor undefined values in the array."
				},
				{
					"name": "suspend",
					"visibility": "public",
					"description": "Suspends the binding update. No change events will be fired.\n\nA refresh call with bForceUpdate set to true will also update the binding and fire a change in suspended mode.\nSpecial operations on bindings, which require updates to work properly (as paging or filtering in list bindings)\nwill also update and cause a change event although the binding is suspended."
				},
				{
					"name": "updateRequired",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "true if this binding should be updated"
					},
					"parameters": [
						{
							"name": "oModel",
							"type": "object",
							"optional": false,
							"description": "The model instance to compare against"
						}
					],
					"description": "Determines if the property bindings in the composite binding should be updated by calling updateRequired on all property bindings with the specified model."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.CompositeDataState",
			"basename": "CompositeDataState",
			"resource": "sap/ui/model/CompositeDataState.js",
			"module": "sap/ui/model/CompositeDataState",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.DataState",
			"description": "Provides and update the status data of a binding.\nDepending on the models state and controls state changes, the data state is used to propagated changes to a control.\nThe control can react on these changes by implementing the <code>refreshDataState</code> method for the control.\nHere the the data state object is passed as a parameter.\n\nUsing the {@link #getChanges getChanges} method the control can determine the changed properties and their old and new value.\n<pre>\n    //sample implementation to handle message changes\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var aMessages = oDataState.getChanges().messages;\n       if (aMessages) {\n           for (var i = 0; i &lt; aMessages.length; i++) {\n               console.log(aMessages.message);\n           }\n       }\n    }\n\n    //sample implementation to handle laundering state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var bLaundering = oDataState.getChanges().laundering || false;\n       this.setBusy(bLaundering);\n    }\n\n    //sample implementation to handle dirty state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       if (oDataState.isDirty()) console.log(\"Control \" + this.getId() + \" is now dirty\");\n    }\n</pre>\n\nUsing the {@link #getProperty getProperty} method the control can read the properties of the data state. The properties are\n<ul>\n    <li><code>value</code> The value formatted by the formatter of the binding\n    <li><code>originalValue</code> The original value of the model formatted by the formatter of the binding\n    <li><code>invalidValue</code> The control value that was tried to be applied to the model but was rejected by a type validation\n    <li><code>modelMessages</code> The messages that were applied to the binding by the <code>sap.ui.model.MessageModel</code>\n    <li><code>controlMessages</code> The messages that were applied due to type validation errors\n    <li><code>messages</code> All messages of the data state\n     <li><code>dirty</code> true if the value was not yet confirmed by the server\n</ul>",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public"
			},
			"methods": [
				{
					"name": "changed",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "whether the data state was changed."
					},
					"parameters": [
						{
							"name": "bNewState",
							"type": "boolean",
							"optional": true,
							"description": "the optional new state"
						}
					],
					"description": "Returns or sets whether the data state is changed.\nAs long as changed was not set to false the data state is dirty\nand the corresponding binding will fire data state change events."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.CompositeDataState with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.DataState.extend}."
				},
				{
					"name": "getChanges",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "the changed of the data state"
					},
					"description": "Returns the changes of the data state in a map that the control can use in the\n<code>refreshDataState</code> method.\nThe changed property's name is the key in the map. Each element in the map contains an object of below structure.\n<pre>\n   {\n       oldValue : The old value of the property,\n       value    : The new value of the property\n   }\n</pre>\nThe map only contains the changed properties."
				},
				{
					"name": "getControlMessages",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.DataState",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "the",
							"type": "sap.ui.core.Message[]",
							"optional": false,
							"description": "control messages"
						}
					],
					"description": "Sets an array of control state messages."
				},
				{
					"name": "getInternalProperty",
					"visibility": "protected",
					"description": "Returns an array of the properties set on the inner datastates"
				},
				{
					"name": "getInvalidValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value that was rejected or null"
					},
					"description": "Returns the dirty value of a binding that was rejected by a type validation.\nThis value was of an incorrect type and could not be applied to the model. If the\nvalue was not rejected it will return null. In this case the current\nmodel value can be accessed using the <code>getValue</code> method."
				},
				{
					"name": "getMessages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message[]",
						"description": "the array of all messages or null if no {link:sap.ui.core.messages.ModelManager ModelManager} is used."
					},
					"description": "Returns the array of all state messages or null.\nThis combines the model and control messages."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.CompositeDataState."
				},
				{
					"name": "getModelMessages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message[]",
						"description": "the array of messages of the model or null if no {link:sap.ui.core.messages.ModelManager ModelManager} is used."
					},
					"description": "Returns the array of state messages of the model or undefined"
				},
				{
					"name": "isControlDirty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the data state is dirty"
					},
					"description": "Returns whether the data state is dirty in the UI control.\nA data state is dirty in the UI control if the entered value did not yet pass the type validation."
				},
				{
					"name": "isDirty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the data state is dirty"
					},
					"description": "Returns whether the data state is dirty.\nA data state is dirty if the value was changed\nbut is not yet confirmed by a server or the entered value did not yet pass the type validation."
				},
				{
					"name": "isLaundering",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the data is laundering"
					},
					"description": "Returns whether the data state is in laundering.\nIf data is send to the server the data state becomes laundering until the\ndata was accepted or rejected."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.CompositeType",
			"basename": "CompositeType",
			"resource": "sap/ui/model/CompositeType.js",
			"module": "sap/ui/model/CompositeType",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.SimpleType",
			"description": "This is an abstract base class for composite types. Composite types have multiple input values and know\nhow to merge/split them upon formatting/parsing the value. Typical use case a currency or amount values.\n\nSubclasses of CompositeTypes can define boolean properties in the constructor:\n- bUseRawValues: the format and parse method will handle raw model values, types of embedded bindings are ignored\n- bParseWithValues: the parse method call will include the current binding values as a third parameter",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "options as provided by concrete subclasses"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"description": "constraints as supported by concrete subclasses"
					}
				],
				"description": "Constructor for a new CompositeType."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.CompositeType with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the formatted output value"
					},
					"parameters": [
						{
							"name": "aValues",
							"type": "array",
							"optional": false,
							"description": "the values to be formatted"
						},
						{
							"name": "sInternalType",
							"type": "string",
							"optional": false,
							"description": "the target type"
						}
					],
					"description": "Format the given set of values in model representation to an output value in the given\ninternal type. This happens according to the format options, if target type is 'string'.\nIf aValues is not defined or null, null will be returned."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.CompositeType."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "the parse result array"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "the value to be parsed"
						},
						{
							"name": "sInternalType",
							"type": "string",
							"optional": false,
							"description": "the source type"
						},
						{
							"name": "aCurrentValues",
							"type": "array",
							"optional": false,
							"description": "the current values of all binding parts"
						}
					],
					"description": "Parse a value of an internal type to the expected set of values of the model type."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "aValues",
							"type": "array",
							"optional": false,
							"description": "the set of values to be validated"
						}
					],
					"description": "Validate whether a given value in model representation is valid and meets the\ndefined constraints (if any)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.Context",
			"basename": "Context",
			"resource": "sap/ui/model/Context.js",
			"module": "sap/ui/model/Context",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "The Context is a pointer to an object in the model data, which is used to\nallow definition of relative bindings, which are resolved relative to the\ndefined object.\nContext elements are created either by the ListBinding for each list entry\nor by using createBindingContext.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false,
						"description": "the model"
					},
					{
						"name": "sPath",
						"type": "String",
						"optional": false,
						"description": "the binding path"
					}
				],
				"description": "Constructor for Context class."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.Context with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.Context."
				},
				{
					"name": "getModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "the model"
					},
					"description": "Getter for model"
				},
				{
					"name": "getObject",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the context object"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "String",
							"optional": true,
							"description": "the binding path"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "additional model specific parameters (optional)"
						}
					],
					"description": "Gets the (model dependent) object the context points to or the object with the given relative binding path"
				},
				{
					"name": "getPath",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "the binding path"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "String",
							"optional": false,
							"description": "the binding path"
						}
					],
					"description": "Getter for path of the context itself or a subpath"
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the property value"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "String",
							"optional": false,
							"description": "the binding path"
						}
					],
					"description": "Gets the property with the given relative binding path"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.ContextBinding",
			"basename": "ContextBinding",
			"resource": "sap/ui/model/ContextBinding.js",
			"module": "sap/ui/model/ContextBinding",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Binding",
			"description": "The ContextBinding is a specific binding for a setting context for the model",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "String",
						"optional": false
					},
					{
						"name": "oContext",
						"type": "Object",
						"optional": false
					},
					{
						"name": "mParameters",
						"type": "Object",
						"optional": true
					},
					{
						"name": "oEvents",
						"type": "Object",
						"optional": true,
						"description": "object defining event handlers"
					}
				],
				"description": "Constructor for ContextBinding"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.ContextBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.ContextBinding."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.control",
			"basename": "control",
			"resource": "sap/ui/model/control/ControlModel.js",
			"module": "sap/ui/model/control/ControlModel",
			"static": true,
			"visibility": "public",
			"description": "Control-based DataBinding"
		},
		{
			"kind": "class",
			"name": "sap.ui.model.DataState",
			"basename": "DataState",
			"resource": "sap/ui/model/DataState.js",
			"module": "sap/ui/model/DataState",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Provides and update the status data of a binding.\nDepending on the models state and controls state changes, the data state is used to propagated changes to a control.\nThe control can react on these changes by implementing the <code>refreshDataState</code> method for the control.\nHere the the data state object is passed as a parameter.\n\nUsing the {@link #getChanges getChanges} method the control can determine the changed properties and their old and new value.\n<pre>\n    //sample implementation to handle message changes\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var aMessages = oDataState.getChanges().messages;\n       if (aMessages) {\n           for (var i = 0; i &lt; aMessages.length; i++) {\n               console.log(aMessages.message);\n           }\n       }\n    }\n\n    //sample implementation to handle laundering state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var bLaundering = oDataState.getChanges().laundering || false;\n       this.setBusy(bLaundering);\n    }\n\n    //sample implementation to handle dirty state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       if (oDataState.isDirty()) console.log(\"Control \" + this.getId() + \" is now dirty\");\n    }\n</pre>\n\nUsing the {@link #getProperty getProperty} method the control can read the properties of the data state. The properties are\n<ul>\n    <li><code>value</code> The value formatted by the formatter of the binding\n    <li><code>originalValue</code> The original value of the model formatted by the formatter of the binding\n    <li><code>invalidValue</code> The control value that was tried to be applied to the model but was rejected by a type validation\n    <li><code>modelMessages</code> The messages that were applied to the binding by the <code>sap.ui.model.MessageModel</code>\n    <li><code>controlMessages</code> The messages that were applied due to type validation errors\n    <li><code>messages</code> All messages of the data state\n     <li><code>dirty</code> true if the value was not yet confirmed by the server\n</ul>",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public"
			},
			"methods": [
				{
					"name": "changed",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "whether the data state was changed."
					},
					"parameters": [
						{
							"name": "bNewState",
							"type": "boolean",
							"optional": true,
							"description": "the optional new state"
						}
					],
					"description": "Returns or sets whether the data state is changed.\nAs long as changed was not set to false the data state is dirty\nand the corresponding binding will fire data state change events."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.DataState with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getChanges",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "the changed of the data state"
					},
					"description": "Returns the changes of the data state in a map that the control can use in the\n<code>refreshDataState</code> method.\nThe changed property's name is the key in the map. Each element in the map contains an object of below structure.\n<pre>\n   {\n       oldValue : The old value of the property,\n       value    : The new value of the property\n   }\n</pre>\nThe map only contains the changed properties."
				},
				{
					"name": "getControlMessages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message[]",
						"description": "the array of messages of the control or null if no {link:sap.ui.core.messages.ModelManager ModelManager} is used."
					},
					"description": "Returns the array of state messages of the control or undefined."
				},
				{
					"name": "getInvalidValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value that was rejected or null"
					},
					"description": "Returns the dirty value of a binding that was rejected by a type validation.\nThis value was of an incorrect type and could not be applied to the model. If the\nvalue was not rejected it will return null. In this case the current\nmodel value can be accessed using the <code>getValue</code> method."
				},
				{
					"name": "getMessages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message[]",
						"description": "the array of all messages or null if no {link:sap.ui.core.messages.ModelManager ModelManager} is used."
					},
					"description": "Returns the array of all state messages or null.\nThis combines the model and control messages."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.DataState."
				},
				{
					"name": "getModelMessages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Message[]",
						"description": "the array of messages of the model or null if no {link:sap.ui.core.messages.ModelManager ModelManager} is used."
					},
					"description": "Returns the array of state messages of the model or undefined"
				},
				{
					"name": "getOriginalValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the original confirmed value of the server"
					},
					"description": "Returns the formatted original value of the data.\nThe original value is the last confirmed value."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The value of the data."
					},
					"description": "Returns the formatted value of the data state."
				},
				{
					"name": "isControlDirty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the data state is dirty"
					},
					"description": "Returns whether the data state is dirty in the UI control.\nA data state is dirty in the UI control if the entered value did not yet pass the type validation."
				},
				{
					"name": "isDirty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the data state is dirty"
					},
					"description": "Returns whether the data state is dirty.\nA data state is dirty if the value was changed\nbut is not yet confirmed by a server or the entered value did not yet pass the type validation."
				},
				{
					"name": "isLaundering",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the data is laundering"
					},
					"description": "Returns whether the data state is in laundering.\nIf data is send to the server the data state becomes laundering until the\ndata was accepted or rejected."
				},
				{
					"name": "setControlMessages",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.DataState",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "the",
							"type": "sap.ui.core.Message[]",
							"optional": false,
							"description": "control messages"
						}
					],
					"description": "Sets an array of control state messages."
				},
				{
					"name": "setInvalidValue",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.DataState",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "vInvalidValue",
							"type": "any",
							"optional": false,
							"description": "the value that was rejected by the type validation or null if the value was valid"
						}
					],
					"description": "Sets the dirty value that was rejected by the type validation."
				},
				{
					"name": "setLaundering",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.DataState",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "bLaundering",
							"type": "boolean",
							"optional": false,
							"description": "true if the state is laundering"
						}
					],
					"description": "Sets the laundering state of the data state."
				},
				{
					"name": "setModelMessages",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.DataState",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "the",
							"type": "array",
							"optional": false,
							"description": "model messages for this data state."
						}
					],
					"description": "Sets an array of model state messages."
				},
				{
					"name": "setOriginalValue",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.DataState",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "vOriginalValue",
							"type": "boolean",
							"optional": false,
							"description": "the original value"
						}
					],
					"description": "Sets the formatted original value of the data."
				},
				{
					"name": "setValue",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.DataState",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "any",
							"optional": false,
							"description": "the value"
						}
					],
					"description": "Sets the formatted value of the data state,"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.Filter",
			"basename": "Filter",
			"resource": "sap/ui/model/Filter.js",
			"module": "sap/ui/model/Filter",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Filter for the list binding.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "vFilterInfo",
						"type": "object|string|sap.ui.model.Filter[]",
						"optional": false,
						"parameterProperties": {
							"path": {
								"name": "path",
								"type": "string",
								"optional": false,
								"description": "Binding path for this filter"
							},
							"test": {
								"name": "test",
								"type": "function",
								"optional": false,
								"description": "Function which is used to filter the items and which should return a Boolean value to indicate whether the current item passes the filter"
							},
							"operator": {
								"name": "operator",
								"type": "sap.ui.model.FilterOperator",
								"optional": false,
								"description": "Operator used for the filter"
							},
							"value1": {
								"name": "value1",
								"type": "object",
								"optional": false,
								"description": "First value to use with the given filter operator"
							},
							"value2": {
								"name": "value2",
								"type": "object",
								"optional": true,
								"defaultValue": null,
								"description": "Second value to use with the filter operator (only for some operators)"
							},
							"filters": {
								"name": "filters",
								"type": "sap.ui.model.Filter[]",
								"optional": false,
								"description": "Array of filters on which logical conjunction is applied"
							},
							"and": {
								"name": "and",
								"type": "boolean",
								"optional": false,
								"description": "Indicates whether an \"AND\" logical conjunction is applied on the filters. If it's set to <code>false</code>, an \"OR\" conjunction is applied"
							}
						},
						"description": "Filter info object or a path or an array of filters"
					},
					{
						"name": "vOperator",
						"type": "sap.ui.model.FilterOperator|function|boolean",
						"optional": true,
						"description": "Either a filter operator or a custom filter function or a Boolean flag that defines how to combine multiple filters"
					},
					{
						"name": "oValue1",
						"type": "any",
						"optional": true,
						"description": "First value to use with the given filter operator"
					},
					{
						"name": "oValue2",
						"type": "any",
						"optional": true,
						"description": "Second value to use with the given filter operator (only for some operators)"
					}
				],
				"description": "Constructor for Filter.\n\nYou either pass a single object literal with the filter parameters or use the individual constructor arguments.\nNo matter which variant is used, only certain combinations of parameters are supported\n(the following list uses the names from the object literal):\n<ul>\n<li>A <code>path</code>, <code>operator</code> and one or two values (<code>value1</code>, <code>value2</code>), depending on the operator</li>\n<li>A <code>path</code> and a custom filter function <code>test</code></li>\n<li>An array of other filters named <code>filters</code> and a Boolean flag <code>and</code> that specifies whether to combine\n    the filters with an AND (<code>true</code>) or an OR (<code>false</code>) operator.</li>\n</ul>\nAn error will be logged to the console if an invalid combination of parameters is provided.\nPlease note that a model implementation may not support a custom filter function, e.g. if the model does not perform client side filtering.\nIt also depends on the model implementation if the filtering is case sensitive or not.\nSee particular model documentation for details.",
				"examples": [
					{
						"caption": "Using an object with a path, an operator and one or two values",
						"text": "  new sap.ui.model.Filter({\n    path: \"...\",\n    operator: \"...\",\n    value1: \"...\",\n    value2: \"...\"\n  })"
					},
					{
						"caption": "Using a path and a custom filter function:",
						"text": "  new sap.ui.model.Filter({\n    path: \"...\",\n    test: function(oValue) {\n    }\n  })"
					},
					{
						"caption": "Combining a list of filters either with AND or OR",
						"text": "  new sap.ui.model.Filter({\n    filters: [...],\n    and: true|false\n  })"
					},
					{
						"caption": "Same as above, but using individual constructor arguments",
						"text": "    new sap.ui.model.Filter(sPath, sOperator, oValue1, oValue2);\n  OR\n    new sap.ui.model.Filter(sPath, fnTest);\n  OR\n    new sap.ui.model.Filter(aFilters, bAnd);"
					}
				]
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.Filter with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.Filter."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.model.FilterOperator",
			"basename": "FilterOperator",
			"resource": "sap/ui/model/FilterOperator.js",
			"module": "sap/ui/model/FilterOperator",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Operators for the Filter.",
			"properties": [
				{
					"name": "BT",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator between.\nWhen used on strings, the BT operator might not behave intuitively. For example,\nwhen filtering a list of Names with BT \"A\", \"B\", all Names starting with \"A\" will be\nincluded as well as the name \"B\" itself, but no other name starting with \"B\"."
				},
				{
					"name": "Contains",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator contains"
				},
				{
					"name": "EndsWith",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator ends with"
				},
				{
					"name": "EQ",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator equals"
				},
				{
					"name": "GE",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator greater or equals"
				},
				{
					"name": "GT",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator greater than"
				},
				{
					"name": "LE",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator less or equals"
				},
				{
					"name": "LT",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator less than"
				},
				{
					"name": "NE",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator not equals"
				},
				{
					"name": "StartsWith",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "FilterOperator starts with"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.model.FilterType",
			"basename": "FilterType",
			"resource": "sap/ui/model/FilterType.js",
			"module": "sap/ui/model/FilterType",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Types of Filters.",
			"properties": [
				{
					"name": "Application",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Filters which are changed by the application"
				},
				{
					"name": "Control",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Filters which are set by the different controls"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.json",
			"basename": "json",
			"resource": "sap/ui/model/json/JSONModel.js",
			"module": "sap/ui/model/json/JSONModel",
			"static": true,
			"visibility": "public",
			"description": "JSON-based DataBinding"
		},
		{
			"kind": "class",
			"name": "sap.ui.model.json.JSONModel",
			"basename": "JSONModel",
			"resource": "sap/ui/model/json/JSONModel.js",
			"module": "sap/ui/model/json/JSONModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.ClientModel",
			"description": "Model implementation for JSON format\n\nThe observation feature is experimental! When observation is activated, the application can directly change the\nJS objects without the need to call setData, setProperty or refresh. Observation does only work for existing\nproperties in the JSON, it can not detect new properties or new array entries.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oData",
						"type": "object",
						"optional": false,
						"description": "either the URL where to load the JSON from or a JS object"
					},
					{
						"name": "bObserve",
						"type": "boolean",
						"optional": false,
						"description": "whether to observe the JSON data for property changes (experimental)"
					}
				],
				"description": "Constructor for a new JSONModel."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.json.JSONModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}."
				},
				{
					"name": "getJSON",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "sJSON the JSON data serialized as string"
					},
					"description": "Serializes the current JSON data of the model into a string.\nNote: May not work in Internet Explorer 8 because of lacking JSON support (works only if IE 8 mode is enabled)"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.json.JSONModel."
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value of the property"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path to the property"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context which will be used to retrieve the property"
						}
					],
					"description": "Returns the value for the property with the given <code>sPropertyName</code>"
				},
				{
					"name": "loadData",
					"visibility": "public",
					"parameters": [
						{
							"name": "sURL",
							"type": "string",
							"optional": false,
							"description": "A string containing the URL to which the request is sent."
						},
						{
							"name": "oParameters",
							"type": "object|string",
							"optional": true,
							"description": "A map or string that is sent to the server with the request.\nData that is sent to the server is appended to the URL as a query string.\nIf the value of the data parameter is an object (map), it is converted to a string and\nurl-encoded before it is appended to the URL."
						},
						{
							"name": "bAsync",
							"type": "boolean",
							"optional": true,
							"defaultValue": true,
							"description": "By default, all requests are sent asynchronous\n(i.e. this is set to true by default). If you need synchronous requests, set this option to false.\nCross-domain requests do not support synchronous operation. Note that synchronous requests may\ntemporarily lock the browser, disabling any actions while the request is active."
						},
						{
							"name": "sType",
							"type": "string",
							"optional": true,
							"defaultValue": "GET",
							"description": "The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\nNote: Other HTTP request methods, such as PUT and DELETE, can also be used here, but\nthey are not supported by all browsers."
						},
						{
							"name": "bMerge",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether the data should be merged instead of replaced"
						},
						{
							"name": "bCache",
							"type": "string",
							"optional": true,
							"defaultValue": false,
							"description": "force no caching if false. Default is false"
						},
						{
							"name": "mHeaders",
							"type": "object",
							"optional": true,
							"description": "An object of additional header key/value pairs to send along with the request"
						}
					],
					"description": "Load JSON-encoded data from the server using a GET HTTP request and store the resulting JSON data in the model.\nNote: Due to browser security restrictions, most \"Ajax\" requests are subject to the same origin policy,\nthe request can not successfully retrieve data from a different domain, subdomain, or protocol."
				},
				{
					"name": "setData",
					"visibility": "public",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "the data to set on the model"
						},
						{
							"name": "bMerge",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether to merge the data instead of replacing it"
						}
					],
					"description": "Sets the JSON encoded data to the model."
				},
				{
					"name": "setJSON",
					"visibility": "public",
					"parameters": [
						{
							"name": "sJSONText",
							"type": "string",
							"optional": false,
							"description": "the string data to set on the model"
						},
						{
							"name": "bMerge",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether to merge the data instead of replacing it"
						}
					],
					"description": "Sets the JSON encoded string data to the model."
				},
				{
					"name": "setProperty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the value was set correctly and false if errors occurred like the entry was not found."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "path of the property to set"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "value to set the property to"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context which will be used to set the property"
						},
						{
							"name": "bAsyncUpdate",
							"type": "boolean",
							"optional": true,
							"description": "whether to update other bindings dependent on this property asynchronously"
						}
					],
					"description": "Sets a new value for the given property <code>sPropertyName</code> in the model.\nIf the model value changed all interested parties are informed."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.ListBinding",
			"basename": "ListBinding",
			"resource": "sap/ui/model/ListBinding.js",
			"module": "sap/ui/model/ListBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Binding",
			"description": "The ListBinding is a specific binding for lists in the model, which can be used\nto populate Tables or ItemLists.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": false
					},
					{
						"name": "aSorters",
						"type": "array",
						"optional": true,
						"description": "initial sort order (can be either a sorter or an array of sorters)"
					},
					{
						"name": "aFilters",
						"type": "array",
						"optional": true,
						"description": "predefined filter/s (can be either a filter or an array of filters)"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true
					}
				],
				"description": "Constructor for ListBinding"
			},
			"methods": [
				{
					"name": "attachFilter",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'filter' event of this <code>sap.ui.model.ListBinding</code>.<br/>",
					"deprecated": {
						"text": "use the change event. It now contains a parameter (reason : \"filter\") when a filter event is fired."
					}
				},
				{
					"name": "attachSort",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'sort' event of this <code>sap.ui.model.ListBinding</code>.<br/>",
					"deprecated": {
						"text": "use the change event. It now contains a parameter (reason : \"sort\") when a sorter event is fired."
					}
				},
				{
					"name": "detachFilter",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'filter' event of this <code>sap.ui.model.ListBinding</code>.<br/>",
					"deprecated": {
						"text": "use the change event."
					}
				},
				{
					"name": "detachSort",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'sort' event of this <code>sap.ui.model.ListBinding</code>.<br/>",
					"deprecated": {
						"text": "use the change event."
					}
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.ListBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}."
				},
				{
					"name": "filter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding",
						"description": "returns <code>this</code> to facilitate method chaining"
					},
					"parameters": [
						{
							"name": "aFilters",
							"type": "object[]",
							"optional": false,
							"description": "Array of filter objects"
						},
						{
							"name": "sFilterType",
							"type": "sap.ui.model.FilterType",
							"optional": false,
							"description": "Type of the filter which should be adjusted, if it is not given, the standard behaviour applies"
						}
					],
					"description": "Filters the list according to the filter definitions"
				},
				{
					"name": "getContexts",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.Context[]",
						"description": "the array of contexts for each row of the bound list"
					},
					"parameters": [
						{
							"name": "iStartIndex",
							"type": "int",
							"optional": true,
							"defaultValue": 0,
							"description": "the startIndex where to start the retrieval of contexts"
						},
						{
							"name": "iLength",
							"type": "int",
							"optional": true,
							"defaultValue": "length of the list",
							"description": "determines how many contexts to retrieve beginning from the start index."
						}
					],
					"description": "Returns an array of binding contexts for the bound target list.\n\n<strong>Note:</strong>The public usage of this method is deprecated, as calls from outside of controls will lead\nto unexpected side effects. For avoidance use {@link sap.ui.model.ListBinding.prototype.getCurrentContexts}\ninstead."
				},
				{
					"name": "getCurrentContexts",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context[]",
						"description": "the array of contexts for each row of the bound list"
					},
					"since": "1.28",
					"description": "Returns an array of currently used binding contexts of the bound control\n\nThis method does not trigger any data requests from the backend or delta calculation, but just returns the context\narray as last requested by the control. This can be used by the application to get access to the data currently\ndisplayed by a list control."
				},
				{
					"name": "getDistinctValues",
					"visibility": "public",
					"returnValue": {
						"type": "Array",
						"description": "the array of distinct values."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the relative binding path"
						}
					],
					"description": "Returns list of distinct values for the given relative binding path"
				},
				{
					"name": "getGroup",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the group object containing a key property and optional custom properties"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the binding context"
						}
					],
					"description": "Gets the group for the given context.\nMust only be called if isGrouped() returns that grouping is enabled for this binding. The grouping will be\nperformed using the first sorter (in case multiple sorters are defined)."
				},
				{
					"name": "getLength",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "returns the number of entries in the list"
					},
					"since": "1.24",
					"description": "Returns the number of entries in the list. This might be an estimated or preliminary length, in case\nthe full length is not known yet, see method isLengthFinal()."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.ListBinding."
				},
				{
					"name": "isGrouped",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether grouping is enabled"
					},
					"description": "Indicates whether grouping is enabled for the binding.\nGrouping is enabled for a list binding, if at least one sorter exists on the binding and the first sorter\nis a grouping sorter."
				},
				{
					"name": "isLengthFinal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "returns whether the length is final"
					},
					"since": "1.24",
					"description": "Returns whether the length which can be retrieved using getLength() is a known, final length,\nor an preliminary or estimated length which may change if further data is requested."
				},
				{
					"name": "sort",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding",
						"description": "returns <code>this</code> to facilitate method chaining"
					},
					"parameters": [
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter|Array",
							"optional": false,
							"description": "the Sorter object or an array of sorters which defines the sort order"
						}
					],
					"description": "Sorts the list according to the sorter object"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.message",
			"basename": "message",
			"resource": "sap/ui/model/message/MessageModel.js",
			"module": "sap/ui/model/message/MessageModel",
			"static": true,
			"visibility": "public",
			"description": "Message DataBinding"
		},
		{
			"kind": "class",
			"name": "sap.ui.model.message.MessageModel",
			"basename": "MessageModel",
			"resource": "sap/ui/model/message/MessageModel.js",
			"module": "sap/ui/model/message/MessageModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.ClientModel",
			"description": "Model implementation for Messages\n\t *",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oMessageManager",
						"type": "sap.ui.core.message.MessageManager",
						"optional": false,
						"description": "The MessageManager instance"
					}
				],
				"description": "Constructor for a new JSONModel."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.message.MessageModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.message.MessageModel."
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value of the property"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path to the property"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context which will be used to retrieve the property"
						}
					],
					"description": "Returns the value for the property with the given <code>sPropertyName</code>"
				},
				{
					"name": "setData",
					"visibility": "public",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "the data to set on the model"
						}
					],
					"description": "Sets the message data to the model."
				},
				{
					"name": "setProperty",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "path of the property to set"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "value to set the property to"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context which will be used to set the property"
						}
					],
					"description": "Sets a new value for the given property <code>sPropertyName</code> in the model.\nIf the model value changed all interested parties are informed."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.MetaModel",
			"basename": "MetaModel",
			"resource": "sap/ui/model/MetaModel.js",
			"module": "sap/ui/model/MetaModel",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Model",
			"description": "Model implementation for meta models",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a new MetaModel."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.MetaModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.MetaModel."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.Model",
			"basename": "Model",
			"resource": "sap/ui/model/Model.js",
			"module": "sap/ui/model/Model",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.message.MessageProcessor",
			"description": "This is an abstract base class for model objects.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a new Model.\n\nEvery Model is a MessageProcessor that is able to handle Messages with the normal binding path syntax in the target."
			},
			"events": [
				{
					"name": "parseError",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"errorCode": {
											"name": "errorCode",
											"type": "int",
											"optional": false
										},
										"url": {
											"name": "url",
											"type": "string",
											"optional": false
										},
										"reason": {
											"name": "reason",
											"type": "string",
											"optional": false
										},
										"srcText": {
											"name": "srcText",
											"type": "string",
											"optional": false
										},
										"line": {
											"name": "line",
											"type": "int",
											"optional": false
										},
										"linepos": {
											"name": "linepos",
											"type": "int",
											"optional": false
										},
										"filepos": {
											"name": "filepos",
											"type": "int",
											"optional": false
										}
									}
								}
							}
						}
					],
					"description": "The 'parseError' event is fired when parsing of a model document (e.g. XML response) fails."
				},
				{
					"name": "propertyChange",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"reason": {
											"name": "reason",
											"type": "sap.ui.model.ChangeReason",
											"optional": false,
											"description": "The cause of the property value change"
										},
										"path": {
											"name": "path",
											"type": "string",
											"optional": false,
											"description": "The path of the property"
										},
										"context": {
											"name": "context",
											"type": "sap.ui.model.Context",
											"optional": true,
											"description": "The binding context (if available)"
										},
										"value": {
											"name": "value",
											"type": "object",
											"optional": false,
											"description": "The current value of the property"
										}
									}
								}
							}
						}
					],
					"description": "The 'propertyChange' event is fired when changes occur to a property value in the model. The event contains a reason parameter which describes the cause of the property value change.\nCurrently the event is only fired with reason <code>sap.ui.model.ChangeReason.Binding</code> which is fired when two way changes occur to a value of a property binding.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "requestCompleted",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"url": {
											"name": "url",
											"type": "string",
											"optional": false,
											"description": "The url which was sent to the backend"
										},
										"type": {
											"name": "type",
											"type": "string",
											"optional": true,
											"description": "The type of the request (if available)"
										},
										"success": {
											"name": "success",
											"type": "boolean",
											"optional": false,
											"description": "if the request has been successful or not. In case of errors consult the optional errorobject parameter."
										},
										"errorobject": {
											"name": "errorobject",
											"type": "object",
											"optional": true,
											"description": "If the request failed the error if any can be accessed in this property."
										},
										"async": {
											"name": "async",
											"type": "boolean",
											"optional": true,
											"description": "If the request is synchronous or asynchronous (if available)"
										},
										"info": {
											"name": "info",
											"type": "string",
											"optional": true,
											"description": "Additional information for the request (if available) <strong>deprecated</strong>"
										},
										"infoObject": {
											"name": "infoObject",
											"type": "object",
											"optional": true,
											"description": "Additional information for the request (if available)"
										}
									}
								}
							}
						}
					],
					"description": "The 'requestCompleted' event is fired, after a request has been completed (includes receiving a response),\nno matter whether the request succeeded or not.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "requestFailed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"message": {
											"name": "message",
											"type": "string",
											"optional": false,
											"description": "A text that describes the failure."
										},
										"statusCode": {
											"name": "statusCode",
											"type": "string",
											"optional": false,
											"description": "HTTP status code returned by the request (if available)"
										},
										"statusText": {
											"name": "statusText",
											"type": "string",
											"optional": false,
											"description": "The status as a text, details not specified, intended only for diagnosis output"
										},
										"responseText": {
											"name": "responseText",
											"type": "string",
											"optional": true,
											"description": "Response that has been received for the request, as a text string"
										}
									}
								}
							}
						}
					],
					"description": "The 'requestFailed' event is fired, when data retrieval from a backend failed.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "requestSent",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"url": {
											"name": "url",
											"type": "string",
											"optional": false,
											"description": "The url which is sent to the backend"
										},
										"type": {
											"name": "type",
											"type": "string",
											"optional": true,
											"description": "The type of the request (if available)"
										},
										"async": {
											"name": "async",
											"type": "boolean",
											"optional": true,
											"description": "If the request is synchronous or asynchronous (if available)"
										},
										"info": {
											"name": "info",
											"type": "string",
											"optional": true,
											"description": "Additional information for the request (if available) <strong>deprecated</strong>"
										},
										"infoObject": {
											"name": "infoObject",
											"type": "object",
											"optional": true,
											"description": "Additional information for the request (if available)"
										}
									}
								}
							}
						}
					],
					"description": "The 'requestSent' event is fired, after a request has been sent to a backend.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				}
			],
			"methods": [
				{
					"name": "attachParseError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'parseError' event of this <code>sap.ui.model.Model</code>.<br/>"
				},
				{
					"name": "attachPropertyChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'propertyChange' event of this <code>sap.ui.model.Model</code>."
				},
				{
					"name": "attachRequestCompleted",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'requestCompleted' event of this <code>sap.ui.model.Model</code>."
				},
				{
					"name": "attachRequestFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'requestFailed' event of this <code>sap.ui.model.Model</code>.<br/>"
				},
				{
					"name": "attachRequestSent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'requestSent' event of this <code>sap.ui.model.Model</code>."
				},
				{
					"name": "bindContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ContextBinding"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string|object",
							"optional": false,
							"description": "the path pointing to the property that should be bound or an object\n        which contains the following parameter properties: path, context, parameters"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context object for this databinding (optional)"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "additional model specific parameters (optional)"
						},
						{
							"name": "oEvents",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "event handlers can be passed to the binding ({change:myHandler})"
						}
					],
					"description": "Create ContextBinding"
				},
				{
					"name": "bindList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path pointing to the list / array that should be bound"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context object for this databinding (optional)"
						},
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter",
							"optional": true,
							"defaultValue": null,
							"description": "initial sort order (can be either a sorter or an array of sorters) (optional)"
						},
						{
							"name": "aFilters",
							"type": "array",
							"optional": true,
							"defaultValue": null,
							"description": "predefined filter/s (can be either a filter or an array of filters) (optional)"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "additional model specific parameters (optional)"
						}
					],
					"description": "Implement in inheriting classes"
				},
				{
					"name": "bindProperty",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.PropertyBinding"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path pointing to the property that should be bound"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context object for this databinding (optional)"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "additional model specific parameters (optional)"
						}
					],
					"description": "Implement in inheriting classes"
				},
				{
					"name": "bindTree",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.TreeBinding"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path pointing to the tree / array that should be bound"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context object for this databinding (optional)"
						},
						{
							"name": "aFilters",
							"type": "array",
							"optional": true,
							"defaultValue": null,
							"description": "predefined filter/s contained in an array (optional)"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "additional model specific parameters (optional)"
						},
						{
							"name": "aSorters",
							"type": "array",
							"optional": true,
							"defaultValue": null,
							"description": "predefined sap.ui.model.sorter/s contained in an array (optional)"
						}
					],
					"description": "Implement in inheriting classes"
				},
				{
					"name": "createBindingContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context",
						"description": "the binding context, if it could be created synchronously"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path to create the new context from"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context which should be used to create the new binding context"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the parameters used to create the new binding context"
						},
						{
							"name": "fnCallBack",
							"type": "function",
							"optional": true,
							"description": "the function which should be called after the binding context has been created"
						},
						{
							"name": "bReload",
							"type": "boolean",
							"optional": true,
							"description": "force reload even if data is already available. For server side models this should\n                  refetch the data from the server"
						}
					],
					"description": "Implement in inheriting classes"
				},
				{
					"name": "destroy",
					"visibility": "public",
					"description": "Destroys the model and clears the model data.\nA model implementation may override this function and perform model specific cleanup tasks e.g.\nabort requests, prevent new requests, etc."
				},
				{
					"name": "destroyBindingContext",
					"visibility": "public",
					"parameters": [
						{
							"name": "oContext",
							"type": "object",
							"optional": false,
							"description": "to destroy"
						}
					],
					"description": "Implement in inheriting classes"
				},
				{
					"name": "detachParseError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'parseError' event of this <code>sap.ui.model.Model</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachPropertyChange",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'propertyChange' event of this <code>sap.ui.model.Model</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachRequestCompleted",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'requestCompleted' event of this <code>sap.ui.model.Model</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachRequestFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'requestFailed' event of this <code>sap.ui.model.Model</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachRequestSent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'requestSent' event of this <code>sap.ui.model.Model</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.Model with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageProcessor.extend}."
				},
				{
					"name": "fireParseError",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"errorCode": {
									"name": "errorCode",
									"type": "int",
									"optional": true
								},
								"url": {
									"name": "url",
									"type": "string",
									"optional": true
								},
								"reason": {
									"name": "reason",
									"type": "string",
									"optional": true
								},
								"srcText": {
									"name": "srcText",
									"type": "string",
									"optional": true
								},
								"line": {
									"name": "line",
									"type": "int",
									"optional": true
								},
								"linepos": {
									"name": "linepos",
									"type": "int",
									"optional": true
								},
								"filepos": {
									"name": "filepos",
									"type": "int",
									"optional": true
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event parseError to attached listeners."
				},
				{
					"name": "firePropertyChange",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"reason": {
									"name": "reason",
									"type": "sap.ui.model.ChangeReason",
									"optional": true,
									"description": "The reason of the property change"
								},
								"path": {
									"name": "path",
									"type": "string",
									"optional": true,
									"description": "The path of the property"
								},
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "the context of the property"
								},
								"value": {
									"name": "value",
									"type": "object",
									"optional": true,
									"description": "the value of the property"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event propertyChange to attached listeners."
				},
				{
					"name": "fireRequestCompleted",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "The url which was sent to the backend."
								},
								"type": {
									"name": "type",
									"type": "string",
									"optional": true,
									"description": "The type of the request (if available)"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"description": "If the request was synchronous or asynchronous (if available)"
								},
								"info": {
									"name": "info",
									"type": "string",
									"optional": true,
									"description": "additional information for the request (if available) <strong>deprecated</strong>"
								},
								"infoObject": {
									"name": "infoObject",
									"type": "object",
									"optional": true,
									"description": "Additional information for the request (if available)"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event requestCompleted to attached listeners."
				},
				{
					"name": "fireRequestFailed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"message": {
									"name": "message",
									"type": "string",
									"optional": true,
									"description": "A text that describes the failure."
								},
								"statusCode": {
									"name": "statusCode",
									"type": "string",
									"optional": true,
									"description": "HTTP status code returned by the request (if available)"
								},
								"statusText": {
									"name": "statusText",
									"type": "string",
									"optional": true,
									"description": "The status as a text, details not specified, intended only for diagnosis output"
								},
								"responseText": {
									"name": "responseText",
									"type": "string",
									"optional": true,
									"description": "Response that has been received for the request ,as a text string"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event requestFailed to attached listeners."
				},
				{
					"name": "fireRequestSent",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "The url which is sent to the backend."
								},
								"type": {
									"name": "type",
									"type": "string",
									"optional": true,
									"description": "The type of the request (if available)"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"description": "If the request is synchronous or asynchronous (if available)"
								},
								"info": {
									"name": "info",
									"type": "string",
									"optional": true,
									"description": "additional information for the request (if available) <strong>deprecated</strong>"
								},
								"infoObject": {
									"name": "infoObject",
									"type": "object",
									"optional": true,
									"description": "Additional information for the request (if available)"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event requestSent to attached listeners."
				},
				{
					"name": "getDefaultBindingMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.BindingMode",
						"description": "default binding mode of the model"
					},
					"description": "Get the default binding mode for the model"
				},
				{
					"name": "getMessagesByPath",
					"visibility": "protected",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The binding path"
						}
					],
					"description": "Get messages for path"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.Model."
				},
				{
					"name": "getMetaModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.MetaModel",
						"description": "The meta model or undefined if no meta model exists."
					},
					"description": "Returns the meta model associated with this model if it is available for the concrete\nmodel type."
				},
				{
					"name": "getObject",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path to where to read the object"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context with which the path should be resolved"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"description": "additional model specific parameters"
						}
					],
					"description": "Implement in inheriting classes"
				},
				{
					"name": "getOriginalProperty",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "vValue the value of the property"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path/name of the property"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "the context if available to access the property value"
						}
					],
					"description": "Returns the original value for the property with the given path and context.\nThe original value is the value that was last responded by a server if using a server model implementation."
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path to where to read the attribute value"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context with which the path should be resolved"
						}
					],
					"description": "Implement in inheriting classes"
				},
				{
					"name": "isBindingModeSupported",
					"visibility": "public",
					"parameters": [
						{
							"name": "sMode",
							"type": "sap.ui.model.BindingMode",
							"optional": false,
							"description": "the binding mode to check"
						}
					],
					"description": "Check if the specified binding mode is supported by the model."
				},
				{
					"name": "isLegacySyntax",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"description": "Returns whether legacy path syntax is used"
				},
				{
					"name": "refresh",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": false,
							"description": "Update controls even if data has not been changed"
						}
					],
					"description": "Refresh the model.\nThis will check all bindings for updated data and update the controls if data has been changed."
				},
				{
					"name": "setDefaultBindingMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Model",
						"description": "this pointer for chaining"
					},
					"parameters": [
						{
							"name": "sMode",
							"type": "sap.ui.model.BindingMode",
							"optional": false,
							"description": "the default binding mode to set for the model"
						}
					],
					"description": "Set the default binding mode for the model. If the default binding mode should be changed,\nthis method should be called directly after model instance creation and before any binding creation.\nOtherwise it is not guaranteed that the existing bindings will be updated with the new binding mode."
				},
				{
					"name": "setLegacySyntax",
					"visibility": "public",
					"parameters": [
						{
							"name": "bLegacySyntax",
							"type": "boolean",
							"optional": false,
							"description": "the path syntax to use"
						}
					],
					"description": "Enables legacy path syntax handling\n\nThis defines, whether relative bindings, which do not have a defined\nbinding context, should be compatible to earlier releases which means\nthey are resolved relative to the root element or handled strict and\nstay unresolved until a binding context is set"
				},
				{
					"name": "setMessages",
					"visibility": "public",
					"parameters": [
						{
							"name": "mMessages",
							"type": "object",
							"optional": false,
							"description": "Messages for this model"
						}
					],
					"description": "Sets messages"
				},
				{
					"name": "setSizeLimit",
					"visibility": "public",
					"parameters": [
						{
							"name": "iSizeLimit",
							"type": "int",
							"optional": false,
							"description": "collection size limit"
						}
					],
					"description": "Set the maximum number of entries which are used for list bindings."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.odata",
			"basename": "odata",
			"resource": "sap/ui/model/odata/ODataUtils.js",
			"module": "sap/ui/model/odata/ODataUtils",
			"static": true,
			"visibility": "public",
			"description": "OData-based DataBinding Utility Class",
			"methods": [
				{
					"name": "ODataTreeBindingAdapter",
					"module": "sap/ui/model/odata/ODataTreeBindingAdapter",
					"export": "",
					"visibility": "public",
					"static": true,
					"description": "Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls.\nOnly usable with the sap.ui.table.TreeTable control.\nThe functions defined here are only available when you are using a TreeTable and an ODataModel.",
					"experimental": {
						"text": "This module is only for experimental and internal use!"
					},
					"resource": "sap/ui/model/odata/ODataTreeBindingAdapter.js"
				},
				{
					"name": "ODataTreeBindingFlat",
					"module": "sap/ui/model/odata/ODataTreeBindingFlat",
					"export": "",
					"visibility": "public",
					"static": true,
					"description": "Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls.",
					"resource": "sap/ui/model/odata/ODataTreeBindingFlat.js"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.odata.AnnotationHelper",
			"basename": "AnnotationHelper",
			"resource": "sap/ui/model/odata/AnnotationHelper.js",
			"module": "sap/ui/model/odata/AnnotationHelper",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"description": "A collection of methods which help to consume\n<a href=\"http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html\">\nOData V4 annotations</a> in XML template views. Every context argument must belong to a\n<code>sap.ui.model.odata.ODataMetaModel</code> instance.\n\nFormatter functions like {@link #.format format} and {@link #.simplePath simplePath} can\nbe used in complex bindings to turn OData V4 annotations into texts or data bindings,\ne.g. <code>&lt;sfi:SmartField value=\"{path : 'meta>Value', formatter :\n'sap.ui.model.odata.AnnotationHelper.simplePath'}\"/></code>.\n\nHelper functions like {@link #.resolvePath resolvePath} can be used by template\ninstructions in XML template views, e.g. <code>&lt;template:with path=\"meta>Value\"\nhelper=\"sap.ui.model.odata.AnnotationHelper.resolvePath\" var=\"target\"></code>.\n\nSince 1.31.0, you DO NOT need to {@link jQuery.sap.require} this module before use.",
			"methods": [
				{
					"name": "createPropertySetting",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "any|object",
						"description": "constant value or binding info object for a property as expected by\n  {@link sap.ui.base.ManagedObject#applySettings applySettings}"
					},
					"since": "1.31.0",
					"parameters": [
						{
							"name": "vParts",
							"type": "any[]",
							"optional": false,
							"description": "array of parts"
						},
						{
							"name": "fnRootFormatter",
							"type": "function",
							"optional": true,
							"description": "root formatter function; default: <code>Array.prototype.join(., \" \")</code>\n  in case of multiple parts, just like\n  {@link sap.ui.model.CompositeBinding#getExternalValue getExternalValue}"
						}
					],
					"description": "Creates a property setting (which is either a constant value or a binding info\nobject) from the given parts and from the optional root formatter function.\nEach part can have one of the following types:\n<ul>\n  <li><code>boolean</code>, <code>number</code>, <code>undefined</code>: The part is\n  a constant value.\n\n  <li><code>string</code>: The part is a data binding expression with complex\n  binding syntax (for example, as created by {@link #.format format}) and is parsed\n  accordingly to create either a constant value or a binding info object. Proper\n  backslash escaping must be used for constant values with curly braces.\n\n  <li><code>object</code>: The part is a binding info object if it has a \"path\" or\n  \"parts\" property, otherwise it is a constant value.\n</ul>\nIf a binding info object is not the only part and has a \"parts\" property itself,\nthen it must have no other properties except \"formatter\"; this is the case for\nexpression bindings and data binding expressions created by {@link #.format format}.\n\nIf all parts are constant values, the resulting property setting is also a constant\nvalue computed by applying the root formatter function to the constant parts once.\nIf at least one part is a binding info object, the resulting property setting is\nalso a binding info object and the root formatter function will be applied again and\nagain to the current values of all parts, no matter whether constant or variable.\n\nNote: The root formatter function should not rely on its <code>this</code> value\nbecause it depends on how the function is called.\n\nNote: A single data binding expression can be given directly to\n{@link sap.ui.base.ManagedObject#applySettings applySettings}, no need to call this\nfunction first.\n\nExample:\n<pre>\nfunction myRootFormatter(oValue1, oValue2, sFullName, sGreeting, iAnswer) {\n    return ...; //TODO compute something useful from the given values\n}\n\noSupplierContext = oMetaModel.getMetaContext(\"/ProductSet('HT-1021')/ToSupplier\");\noValueContext = oMetaModel.createBindingContext(\"com.sap.vocabularies.UI.v1.DataPoint/Value\", oSupplierContext);\n\nvPropertySetting =  sap.ui.model.odata.AnnotationHelper.createPropertySetting([\n    sap.ui.model.odata.AnnotationHelper.format(oValueContext),\n    \"{path : 'meta>Value', formatter : 'sap.ui.model.odata.AnnotationHelper.simplePath'}\",\n    \"{:= 'Mr. ' + ${/FirstName} + ' ' + ${/LastName}}\",\n    \"hello, world!\",\n    42\n], myRootFormatter);\n\noControl.applySettings({\"someProperty\" : vPropertySetting});\n</pre>"
				},
				{
					"name": "format",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the resulting string value to write into the processed XML"
					},
					"parameters": [
						{
							"name": "oInterface",
							"type": "sap.ui.core.util.XMLPreprocessor.IContext|sap.ui.model.Context",
							"optional": false,
							"description": "the callback interface related to the current formatter call"
						},
						{
							"name": "vRawValue",
							"type": "any",
							"optional": true,
							"description": "the raw value from the meta model, which is embedded within an entity set or\n  entity type:\n  <ul>\n  <li>if this function is used as formatter the value\n  is provided by the framework</li>\n  <li>if this function is called directly, provide the parameter only if it is\n  already calculated</li>\n  <li>if the parameter is omitted, it is calculated automatically through\n  <code>oInterface.getObject(\"\")</code></li>\n  </ul>"
						}
					],
					"description": "A formatter function to be used in a complex binding inside an XML template view\nin order to interpret OData V4 annotations. It knows about\n<ul>\n  <li> the \"14.4 Constant Expressions\" for \"edm:Bool\", \"edm:Date\",\n  \"edm:DateTimeOffset\", \"edm:Decimal\", \"edm:Float\", \"edm:Guid\", \"edm:Int\",\n  \"edm:TimeOfDay\".\n  <li> the constant \"14.4.11 Expression edm:String\": This is turned into a fixed\n  text (e.g. <code>\"Width\"</code>) or into a data binding expression (e.g. <code>\n  \"{/##/dataServices/schema/0/entityType/1/com.sap.vocabularies.UI.v1.FieldGroup#Dimensions/Data/0/Label/String}\"\n  </code>). Data binding expressions are used in case XML template processing has\n  been started with the setting <code>bindTexts : true</code>. The purpose is to\n  reference translatable texts from OData V4 annotations, especially for XML\n  template processing at design time. Since 1.31.0, string constants that contain a\n  simple binding <code>\"{@i18n>...}\"</code> to the hard-coded model name \"@i18n\"\n  with arbitrary path are not turned into a fixed text, but kept as a data binding\n  expression; this allows local annotation files to refer to a resource bundle for\n  internationalization.\n  <li> the dynamic \"14.5.1 Comparison and Logical Operators\": These are turned into\n  expression bindings to perform the operations at run-time.\n  <li> the dynamic \"14.5.3 Expression edm:Apply\":\n  <ul>\n    <li> \"14.5.3.1.1 Function odata.concat\": This is turned into a data binding\n    expression relative to an entity.\n    <li> \"14.5.3.1.2 Function odata.fillUriTemplate\": This is turned into an\n    expression binding to fill the template at run-time.\n    <li> \"14.5.3.1.3 Function odata.uriEncode\": This is turned into an expression\n    binding to encode the parameter at run-time.\n    <li> Apply functions may be nested arbitrarily.\n  </ul>\n  <li> the dynamic \"14.5.6 Expression edm:If\": This is turned into an expression\n  binding to be evaluated at run-time. The expression is a conditional expression\n  like <code>\"{=condition ? expression1 : expression2}\"</code>.\n  <li> the dynamic \"14.5.10 Expression edm:Null\": This is turned into a\n  <code>null</code> value. In <code>odata.concat</code> it is ignored.\n  <li> the dynamic \"14.5.12 Expression edm:Path\" and \"14.5.13 Expression\n  edm:PropertyPath\": This is turned into a data binding relative to an entity,\n  including type information and constraints as available from metadata,\n  e.g. <code>\"{path : 'Name', type : 'sap.ui.model.odata.type.String',\n  constraints : {'maxLength':'255'}}\"</code>.\n  Depending on the used type, some additional constraints of this type are set:\n  <ul>\n    <li>Edm.DateTime: The \"displayFormat\" constraint is set to the value of the\n    \"sap:display-format\" annotation of the referenced property.\n    <li>Edm.Decimal: The \"precision\" and \"scale\" constraints are set to the values\n    of the corresponding attributes of the referenced property. The \"minimum\",\n    \"maximum\", \"minimumExclusive\" and \"maximumExlusive\" constraints are set to the\n    values of the corresponding \"Org.OData.Validation.V1\" annotation of the\n    referenced property; note that in this case only constant expressions are\n    supported to determine the annotation value.\n    <li>Edm.String: The \"maxLength\" constraint is set to the value of the\n    corresponding attribute of the referenced property and the \"isDigitSequence\"\n    constraint is set to the value of the\n    \"com.sap.vocabularies.Common.v1.IsDigitSequence\" annotation of the referenced\n    property; note that in this case only constant expressions are supported to\n    determine the annotation value.\n  </ul>\n</ul>\nUnsupported or incorrect values are turned into a string nevertheless, but indicated\nas such. Proper escaping is used to make sure that data binding syntax is not\ncorrupted. An error describing the problem is logged to the console in such a case.\n\nExample:\n<pre>\n&lt;Text text=\"{path: 'meta>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}\" />\n</pre>"
				},
				{
					"name": "getNavigationPath",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the resulting string value to write into the processed XML, e.g. \"{ToSupplier}\"\n  or \"{}\" (in case no navigation is needed); returns \"\" in case the navigation path\n  cannot be determined (this is treated as falsy in <code>template:if</code>\n  statements!)"
					},
					"parameters": [
						{
							"name": "oInterface",
							"type": "sap.ui.core.util.XMLPreprocessor.IContext|sap.ui.model.Context",
							"optional": false,
							"description": "the callback interface related to the current formatter call"
						},
						{
							"name": "vRawValue",
							"type": "any",
							"optional": true,
							"description": "the raw value from the meta model, e.g. <code>{AnnotationPath :\n  \"ToSupplier/@com.sap.vocabularies.Communication.v1.Address\"}</code> or <code>\n  {AnnotationPath : \"@com.sap.vocabularies.UI.v1.FieldGroup#Dimensions\"}</code>;\n  embedded within an entity set or entity type;\n  <ul>\n  <li>if this function is used as formatter the value\n  is provided by the framework</li>\n  <li>if this function is called directly, provide the parameter only if it is\n  already calculated</li>\n  <li>if the parameter is omitted, it is calculated automatically through\n  <code>oInterface.getObject(\"\")</code></li>\n  </ul>"
						}
					],
					"description": "A formatter function to be used in a complex binding inside an XML template view\nin order to interpret OData V4 annotations. It knows about the following dynamic\nexpressions:\n<ul>\n<li>\"14.5.2 Expression edm:AnnotationPath\"</li>\n<li>\"14.5.11 Expression edm:NavigationPropertyPath\"</li>\n<li>\"14.5.12 Expression edm:Path\"</li>\n<li>\"14.5.13 Expression edm:PropertyPath\"</li>\n</ul>\nIt returns a binding expression for a navigation path in an OData model, starting at\nan entity.\nCurrently supports navigation properties. Term casts and annotations of\nnavigation properties terminate the navigation path.\n\nExamples:\n<pre>\n&lt;template:if test=\"{path: 'facet>Target', formatter: 'sap.ui.model.odata.AnnotationHelper.getNavigationPath'}\">\n    &lt;form:SimpleForm binding=\"{path: 'facet>Target', formatter: 'sap.ui.model.odata.AnnotationHelper.getNavigationPath'}\" />\n&lt;/template:if>\n</pre>"
				},
				{
					"name": "gotoEntitySet",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the path to the entity set, or <code>undefined</code> if no such set is found. In\n  this case, a warning is logged to the console."
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "a context which must point to a simple string or to an annotation (or annotation\n  property) of type <code>Edm.AnnotationPath</code>,\n  <code>Edm.NavigationPropertyPath</code>, <code>Edm.Path</code>, or\n  <code>Edm.PropertyPath</code> embedded within an entity set or entity type;\n  the context's model must be an {@link sap.ui.model.odata.ODataMetaModel}"
						}
					],
					"description": "Helper function for a <code>template:with</code> instruction that depending on how\nit is called goes to the entity set with the given name or to the one determined\nby the last navigation property. Supports the following dynamic expressions:\n<ul>\n<li>\"14.5.2 Expression edm:AnnotationPath\"</li>\n<li>\"14.5.11 Expression edm:NavigationPropertyPath\"</li>\n<li>\"14.5.12 Expression edm:Path\"</li>\n<li>\"14.5.13 Expression edm:PropertyPath\"</li>\n</ul>\n\nExample:\n<pre>\n  &lt;template:with path=\"facet>Target\" helper=\"sap.ui.model.odata.AnnotationHelper.gotoEntitySet\" var=\"entitySet\"/>\n  &lt;template:with path=\"associationSetEnd>entitySet\" helper=\"sap.ui.model.odata.AnnotationHelper.gotoEntitySet\" var=\"entitySet\"/>\n</pre>"
				},
				{
					"name": "gotoEntityType",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the path to the entity type with the given qualified name,\n  or <code>undefined</code> if no such type is found. In this case, a warning is\n  logged to the console."
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "a context which must point to the qualified name of an entity type;\n  the context's model must be an {@link sap.ui.model.odata.ODataMetaModel}"
						}
					],
					"description": "Helper function for a <code>template:with</code> instruction that goes to the\nentity type with the qualified name which <code>oContext</code> points at.\n\nExample: Assume that \"entitySet\" refers to an entity set within an OData meta model;\nthe helper function is then called on the \"entityType\" property of that entity set\n(which holds the qualified name of the entity type) and in turn the path of that\nentity type is assigned to the variable \"entityType\".\n<pre>\n  &lt;template:with path=\"entitySet>entityType\" helper=\"sap.ui.model.odata.AnnotationHelper.gotoEntityType\" var=\"entityType\">\n</pre>"
				},
				{
					"name": "gotoFunctionImport",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the path to the function import with the given qualified name,\n  or <code>undefined</code> if no function import is found. In this case, a warning\n  is logged to the console."
					},
					"since": "1.29.1",
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "a context which must point to an object with a <code>String</code> property, which\n  holds the qualified name of the function import;\n  the context's model must be an {@link sap.ui.model.odata.ODataMetaModel}"
						}
					],
					"description": "Helper function for a <code>template:with</code> instruction that goes to the\nfunction import with the name which <code>oContext</code> points at.\n\nExample: Assume that \"dataField\" refers to a DataFieldForAction within an\nOData meta model;\nthe helper function is then called on the \"Action\" property of that data field\n(which holds an object with the qualified name of the function import in the\n<code>String</code> property) and in turn the path of that function import\nis assigned to the variable \"function\".\n<pre>\n  &lt;template:with path=\"dataField>Action\"\n  helper=\"sap.ui.model.odata.AnnotationHelper.gotoFunctionImport\" var=\"function\">\n</pre>"
				},
				{
					"name": "isMultiple",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "<code>\"true\"</code> if the navigation path ends with an association end with\n   multiplicity \"*\", <code>\"\"</code> in case the navigation path cannot be\n   determined, <code>\"false\"</code> otherwise (the latter are both treated as falsy\n   in <code>template:if</code> statements!)"
					},
					"parameters": [
						{
							"name": "oInterface",
							"type": "sap.ui.core.util.XMLPreprocessor.IContext|sap.ui.model.Context",
							"optional": false,
							"description": "the callback interface related to the current formatter call"
						},
						{
							"name": "vRawValue",
							"type": "any",
							"optional": true,
							"description": "the raw value from the meta model, e.g. <code>{AnnotationPath :\n  \"ToSupplier/@com.sap.vocabularies.Communication.v1.Address\"}</code> or <code>\n  {AnnotationPath : \"@com.sap.vocabularies.UI.v1.FieldGroup#Dimensions\"}</code>;\n  embedded within an entity set or entity type;\n  <ul>\n  <li>if this function is used as formatter the value\n  is provided by the framework</li>\n  <li>if this function is called directly, provide the parameter only if it is\n  already calculated</li>\n  <li>if the parameter is omitted, it is calculated automatically through\n  <code>oInterface.getObject(\"\")</code></li>\n  </ul>"
						}
					],
					"description": "A formatter function to be used in a complex binding inside an XML template view\nin order to interpret OData V4 annotations. It knows about the following dynamic\nexpressions:\n<ul>\n<li>\"14.5.2 Expression edm:AnnotationPath\"</li>\n<li>\"14.5.11 Expression edm:NavigationPropertyPath\"</li>\n<li>\"14.5.12 Expression edm:Path\"</li>\n<li>\"14.5.13 Expression edm:PropertyPath\"</li>\n</ul>\nIt returns the information whether the navigation path ends with an association end\nwith multiplicity \"*\". It throws an error if the navigation path has an association\nend with multiplicity \"*\" which is not the last one.\nCurrently supports navigation properties. Term casts and annotations of\nnavigation properties terminate the navigation path.\n\nExamples:\n<pre>\n&lt;template:if test=\"{path: 'facet>Target', formatter: 'sap.ui.model.odata.AnnotationHelper.isMultiple'}\">\n</pre>"
				},
				{
					"name": "resolvePath",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the path to the target, or <code>undefined</code> in case the path cannot be\n  resolved. In this case, a warning is logged to the console."
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "a context which must point to an annotation or annotation property of type\n  <code>Edm.AnnotationPath</code>, <code>Edm.NavigationPropertyPath</code>,\n  <code>Edm.Path</code> or <code>Edm.PropertyPath</code>, embedded within an entity\n  set or entity type;\n  the context's model must be an {@link sap.ui.model.odata.ODataMetaModel}"
						}
					],
					"description": "Helper function for a <code>template:with</code> instruction that resolves a dynamic\n\"14.5.2 Expression edm:AnnotationPath\",\n\"14.5.11 Expression edm:NavigationPropertyPath\", \"14.5.12 Expression edm:Path\" or\n\"14.5.13 Expression edm:PropertyPath\".\nCurrently supports navigation properties and term casts.\n\nExample:\n<pre>\n  &lt;template:with path=\"meta>Value\" helper=\"sap.ui.model.odata.AnnotationHelper.resolvePath\" var=\"target\">\n</pre>"
				},
				{
					"name": "simplePath",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the resulting string value to write into the processed XML"
					},
					"parameters": [
						{
							"name": "oInterface",
							"type": "sap.ui.core.util.XMLPreprocessor.IContext|sap.ui.model.Context",
							"optional": false,
							"description": "the callback interface related to the current formatter call"
						},
						{
							"name": "vRawValue",
							"type": "any",
							"optional": true,
							"description": "the raw value from the meta model, which is embedded within an entity set or\n  entity type:\n  <ul>\n  <li>if this function is used as formatter the value\n  is provided by the framework</li>\n  <li>if this function is called directly, provide the parameter only if it is\n  already calculated</li>\n  <li>if the parameter is omitted, it is calculated automatically through\n  <code>oInterface.getObject(\"\")</code></li>\n  </ul>"
						}
					],
					"description": "Formatter function that is used in a complex binding inside an XML template view.\nThe function is used to interpret OData V4 annotations, supporting the same\nannotations as {@link #.format format} but with a simplified output aimed at\ndesign-time templating with smart controls.\n\nIn contrast to <code>format</code>, \"14.5.12 Expression edm:Path\" or\n\"14.5.13 Expression edm:PropertyPath\" is turned into a simple binding path without\ntype or constraint information. In certain cases, a complex binding is required to\nallow for proper escaping of the path.\n\nExample:\n<pre>\n  &lt;sfi:SmartField value=\"{path: 'meta>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.simplePath'}\"/>\n</pre>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.odata.BatchMode",
			"basename": "BatchMode",
			"resource": "sap/ui/model/odata/v2/BatchMode.js",
			"module": "sap/ui/model/odata/v2/BatchMode",
			"static": true,
			"visibility": "public",
			"description": "Different modes for retrieving the count of collections",
			"properties": [
				{
					"name": "Group",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Batch grouping enabled"
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "No batch requests"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.model.odata.CountMode",
			"basename": "CountMode",
			"resource": "sap/ui/model/odata/CountMode.js",
			"module": "sap/ui/model/odata/CountMode",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Different modes for retrieving the count of collections.",
			"properties": [
				{
					"name": "Both",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Count is retrieved by a separate request upfront and inline with each data request.\n\nThe only purpose of this mode is to reflect the behavior of the {@link sap.ui.model.odata.ODataModel ODataModel (v1)}\nbefore the introduction of the <code>CountMode</code>. For compatibility reasons, it is the\ndefault for the <code>ODataModel</code> (v1) and shouldn't be used otherwise.",
					"deprecated": {
						"since": "1.43",
						"text": "this shouldn't be used any longer, decide for one of the other modes."
					}
				},
				{
					"name": "Inline",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Count is retrieved by adding <code>$inlinecount=allpages</code> to data requests\nas long as no count has been determined yet."
				},
				{
					"name": "InlineRepeat",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Count is retrieved by adding <code>$inlinecount=allpages</code> to every data request."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Count is not requested from the server."
				},
				{
					"name": "Request",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Count is retrieved by sending a separate <code>$count</code> request before requesting data.\n\nIt depends on the concrete model implementation whether and how the <code>$count</code> request\nand the data request are synchronized."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.Filter",
			"basename": "Filter",
			"resource": "sap/ui/model/odata/Filter.js",
			"module": "sap/ui/model/odata/Filter",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Filter for the list binding",
			"deprecated": {
				"since": "1.22",
				"text": "Please use the {@link sap.ui.model.Filter} instead."
			},
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sPath",
						"type": "string",
						"optional": false,
						"description": "the binding path for this filter"
					},
					{
						"name": "aValues",
						"type": "object[]",
						"optional": false,
						"description": "Array of FilterOperators and their values: [{operator:\"GE\",value1:\"val1\"},{operator:\"LE\",value1:\"val1\"},{operator:\"BT\",value1:\"val1\",value2:\"val2\"}]"
					},
					{
						"name": "bAND",
						"type": "boolean",
						"optional": true,
						"defaultValue": true,
						"description": "If true the values from aValues will be ANDed; otherwise ORed"
					}
				],
				"description": "Constructor for Filter"
			},
			"methods": [
				{
					"name": "convert",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Filter",
						"description": "a <code>sap.ui.model.Filter</code> object"
					},
					"description": "Converts the <code>sap.ui.model.odata.Filter</code> into a\n<code>sap.ui.model.Filter</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.Filter with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.Filter."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.ODataAnnotations",
			"basename": "ODataAnnotations",
			"resource": "sap/ui/model/odata/ODataAnnotations.js",
			"module": "sap/ui/model/odata/ODataAnnotations",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"description": "Implementation to access oData Annotations",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "aAnnotationURI",
						"type": "string|string[]",
						"optional": false,
						"description": "The annotation-URL or an array of URLS that should be parsed and merged"
					},
					{
						"name": "oMetadata",
						"type": "sap.ui.model.odata.ODataMetadata",
						"optional": false
					},
					{
						"name": "mParams",
						"type": "object",
						"optional": false
					}
				]
			},
			"methods": [
				{
					"name": "addUrl",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "The Promise to load the given URL(s), resolved if all URLs have been loaded, rejected if at\n        least one failed to load. The argument is an object containing the annotations object, success (an array\n        of sucessfully loaded URLs), fail (an array ob of failed URLs)."
					},
					"parameters": [
						{
							"name": "vUrl",
							"type": "string|string[]",
							"optional": false,
							"description": "Either one URL as string or an array of URL strings"
						}
					],
					"description": "Adds either one URL or an array of URLs to be loaded and parsed. The result will be merged into the annotations\ndata which can be retrieved using the getAnnotations-method."
				},
				{
					"name": "attachFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataAnnotations",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'failed' event of this <code>sap.ui.model.odata.ODataAnnotations</code>."
				},
				{
					"name": "attachLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataAnnotations",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'loaded' event of this <code>sap.ui.model.odata.ODataAnnotations</code>."
				},
				{
					"name": "detachFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataAnnotations",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'failed' event of this <code>sap.ui.model.odata.ODataAnnotations</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataAnnotations",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'loaded' event of this <code>sap.ui.model.odata.ODataAnnotations</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.ODataAnnotations with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireFailed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataAnnotations",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"message": {
									"name": "message",
									"type": "string",
									"optional": true,
									"description": "A text that describes the failure."
								},
								"statusCode": {
									"name": "statusCode",
									"type": "string",
									"optional": true,
									"description": "HTTP status code returned by the request (if available)"
								},
								"statusText": {
									"name": "statusText",
									"type": "string",
									"optional": true,
									"description": "The status as a text, details not specified, intended only for diagnosis output"
								},
								"responseText": {
									"name": "responseText",
									"type": "string",
									"optional": true,
									"description": "Response that has been received for the request ,as a text string"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event failed to attached listeners."
				},
				{
					"name": "fireLoaded",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataAnnotations",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "map",
							"optional": true,
							"description": "Map of arguments that will be given as parameters to teh event handler"
						}
					],
					"description": "Fire event loaded to attached listeners."
				},
				{
					"name": "getAnnotationsData",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "returns annotations data"
					},
					"description": "returns the raw annotation data"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.ODataAnnotations."
				},
				{
					"name": "isFailed",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "whether annotations request has failed"
					},
					"description": "Checks whether annotations loading of at least one of the given URLs has already failed.\nNote: For asynchronous annotations {@link #attachFailed} has to be used."
				},
				{
					"name": "isLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "returns whether annotations is already loaded"
					},
					"description": "Checks whether annotations from at least one source are available"
				},
				{
					"name": "setHeaders",
					"visibility": "public",
					"parameters": [
						{
							"name": "mHeaders",
							"type": "map",
							"optional": false,
							"description": "the header name/value map."
						}
					],
					"description": "Set custom headers which are provided in a key/value map. These headers are used for all requests.\nThe Accept-Language header cannot be modified and is set using the Core's language setting.\n\nTo remove these headers simply set the mHeaders parameter to {}. Please also note that when calling this method\nagain all previous custom headers are removed unless they are specified again in the mCustomHeaders parameter."
				},
				{
					"name": "setXML",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Whether or not parsing was successful"
					},
					"parameters": [
						{
							"name": "oXMLDocument",
							"type": "object",
							"optional": false,
							"description": "The XML document to parse for annotations"
						},
						{
							"name": "sXMLContent",
							"type": "string",
							"optional": false,
							"description": "The XML content as string to parse for annotations"
						},
						{
							"name": "mOptions",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "Success callback gets an objec as argument with the\n                  properties \"annotations\" containing the parsed annotations and \"xmlDoc\"\n                  containing the XML-Document that was returned by the request."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "Error callback gets an objec as argument with the\n                  property \"xmlDoc\" containing the XML-Document that was returned by the\n                  request and could not be correctly parsed."
								},
								"fireEvents": {
									"name": "fireEvents",
									"type": "boolean",
									"optional": true,
									"description": "If this option is set to true, events are fired as if the annotations\n                  were loaded from a URL"
								}
							},
							"description": "Additional options"
						}
					],
					"description": "Sets an XML document."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.ODataContextBinding",
			"basename": "ODataContextBinding",
			"resource": "sap/ui/model/odata/ODataContextBinding.js",
			"module": "sap/ui/model/odata/ODataContextBinding",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.ContextBinding",
			"description": "The ContextBinding is a specific binding for a setting context for the model",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "String",
						"optional": false
					},
					{
						"name": "oContext",
						"type": "Object",
						"optional": false
					},
					{
						"name": "mParameters",
						"type": "Object",
						"optional": true
					}
				],
				"description": "Constructor for odata.ODataContextBinding"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.ODataContextBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.ODataContextBinding."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.ODataListBinding",
			"basename": "ODataListBinding",
			"resource": "sap/ui/model/odata/ODataListBinding.js",
			"module": "sap/ui/model/odata/ODataListBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.ListBinding",
			"description": "List binding implementation for oData format.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.odata.ODataModel",
						"optional": false,
						"description": "Model that this list binding belongs to"
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false,
						"description": "Path into the model data, relative to the given <code>oContext</code>"
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": false,
						"description": "Context that the <code>sPath</code> is based on"
					},
					{
						"name": "aSorters",
						"type": "array",
						"optional": true,
						"description": "Initial sort order (can be either a sorter or an array of sorters)"
					},
					{
						"name": "aFilters",
						"type": "array",
						"optional": true,
						"description": "Predefined filter/s (can be either a filter or an array of filters)"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"expand": {
								"name": "expand",
								"type": "string",
								"optional": true,
								"description": "Value for the OData <code>$expand</code> query parameter which should be included in the request"
							},
							"select": {
								"name": "select",
								"type": "string",
								"optional": true,
								"description": "Value for the OData <code>$select</code> query parameter which should be included in the request"
							},
							"custom": {
								"name": "custom",
								"type": "map",
								"optional": true,
								"description": "An optional map of custom query parameters. Custom parameters must not start with <code>$</code>"
							},
							"countMode": {
								"name": "countMode",
								"type": "sap.ui.model.odata.CountMode",
								"optional": true,
								"description": "Defines the count mode of this binding;\n          if not specified, the default count mode of the <code>oModel</code> is applied"
							}
						},
						"description": "A map which contains additional parameters for the binding"
					}
				]
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.ODataListBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}."
				},
				{
					"name": "filter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding",
						"description": "returns <code>this</code> to facilitate method chaining"
					},
					"parameters": [
						{
							"name": "aFilters",
							"type": "sap.ui.model.Filter[]|sap.ui.model.odata.Filter[]",
							"optional": false,
							"description": "Array of filter objects"
						},
						{
							"name": "sFilterType",
							"type": "sap.ui.model.FilterType",
							"optional": false,
							"description": "Type of the filter which should be adjusted, if it is not given, the standard behaviour applies"
						}
					],
					"description": "Filters the list.\n\nWhen using sap.ui.model.Filter the filters are first grouped according to their binding path.\nAll filters belonging to a group are combined with OR and after that the\nresults of all groups are combined with AND.\nUsually this means, all filters applied to a single table column\nare combined with OR, while filters on different table columns are combined with AND.\nPlease note that a custom filter function is not supported."
				},
				{
					"name": "getContexts",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.Context[]",
						"description": "the array of contexts for each row of the bound list"
					},
					"parameters": [
						{
							"name": "iStartIndex",
							"type": "int",
							"optional": true,
							"defaultValue": 0,
							"description": "the start index of the requested contexts"
						},
						{
							"name": "iLength",
							"type": "int",
							"optional": true,
							"description": "the requested amount of contexts"
						},
						{
							"name": "iThreshold",
							"type": "int",
							"optional": true,
							"defaultValue": 0
						}
					],
					"description": "Return contexts for the list"
				},
				{
					"name": "getDownloadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "URL which can be used for downloading"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sFormat",
							"type": "string",
							"optional": false,
							"description": "Value for the $format Parameter"
						}
					],
					"description": "Get a download URL with the specified format considering the\nsort/filter/custom parameters."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.ODataListBinding."
				},
				{
					"name": "initialize",
					"visibility": "public",
					"description": "Initialize binding. Fires a change if data is already available ($expand) or a refresh.\nIf metadata is not yet available, do nothing, method will be called again when\nmetadata is loaded."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": true,
							"description": "Update the bound control even if no data has been changed"
						}
					],
					"description": "Refreshes the binding, check whether the model data has been changed and fire change event\nif this is the case. For server side models this should refetch the data from the server.\nTo update a control, even if no data has been changed, e.g. to reset a control after failed\nvalidation, please use the parameter bForceUpdate."
				},
				{
					"name": "sort",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding",
						"description": "returns <code>this</code> to facilitate method chaining"
					},
					"parameters": [
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter|Array",
							"optional": false,
							"description": "the Sorter or an array of sorter objects object which define the sort order"
						}
					],
					"description": "Sorts the list."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.ODataMessageParser",
			"basename": "ODataMessageParser",
			"resource": "sap/ui/model/odata/ODataMessageParser.js",
			"module": "sap/ui/model/odata/ODataMessageParser",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.core.message.MessageParser",
			"description": "OData implementation of the sap.ui.core.message.MessageParser class. Parses message responses from the back-end.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "OData implementation of the sap.ui.core.message.MessageParser class. Parses message responses from the back-end."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.ODataMessageParser with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageParser.extend}."
				},
				{
					"name": "getHeaderField",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The name of the header field"
					},
					"description": "Returns the name of the header field that is used to parse the server messages"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.ODataMessageParser."
				},
				{
					"name": "parse",
					"visibility": "public",
					"parameters": [
						{
							"name": "oResponse",
							"type": "object",
							"optional": false,
							"description": "The response from the server containing body and headers"
						},
						{
							"name": "oRequest",
							"type": "object",
							"optional": false,
							"description": "The original request that lead to this response"
						},
						{
							"name": "mGetEntities",
							"type": "map",
							"optional": false,
							"description": "A map containing the entities requested from the back-end as keys"
						},
						{
							"name": "mChangeEntities",
							"type": "map",
							"optional": false,
							"description": "A map containing the entities changed on the back-end as keys"
						}
					],
					"description": "Parses the given response for messages, calculates the delta and fires the messageChange-event\non the MessageProcessor if messages are found."
				},
				{
					"name": "setHeaderField",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataMessageParser",
						"description": "Instance reference for method chaining"
					},
					"parameters": [
						{
							"name": "sFieldName",
							"type": "string",
							"optional": false,
							"description": "The name of the header field that should be used as source of the message object"
						}
					],
					"description": "Sets the header field name that should be used for parsing the JSON messages"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.ODataMetadata",
			"basename": "ODataMetadata",
			"resource": "sap/ui/model/odata/ODataMetadata.js",
			"module": "sap/ui/model/odata/ODataMetadata",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"description": "Implementation to access oData metadata",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sMetadataURI",
						"type": "string",
						"optional": false,
						"description": "needs the correct metadata uri including $metadata"
					},
					{
						"name": "mParams",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"async": {
								"name": "async",
								"type": "boolean",
								"optional": true,
								"defaultValue": true,
								"description": "request is per default async"
							},
							"user": {
								"name": "user",
								"type": "string",
								"optional": true,
								"description": "user for the service,"
							},
							"password": {
								"name": "password",
								"type": "string",
								"optional": true,
								"description": "password for service"
							},
							"headers": {
								"name": "headers",
								"type": "object",
								"optional": true,
								"description": "(optional) map of custom headers which should be set with the request."
							}
						},
						"description": "optional map of parameters."
					}
				],
				"description": "Constructor for a new ODataMetadata."
			},
			"methods": [
				{
					"name": "attachFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataMetadata",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'failed' event of this <code>sap.ui.model.odata.ODataMetadata</code>."
				},
				{
					"name": "attachLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataMetadata",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'loaded' event of this <code>sap.ui.model.odata.ODataMetadata</code>."
				},
				{
					"name": "detachFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataMetadata",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'failed' event of this <code>sap.ui.model.odata.ODataMetadata</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataMetadata",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'loaded' event of this <code>sap.ui.model.odata.ODataMetadata</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.ODataMetadata with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireFailed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataMetadata",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"message": {
									"name": "message",
									"type": "string",
									"optional": true,
									"description": "A text that describes the failure."
								},
								"statusCode": {
									"name": "statusCode",
									"type": "string",
									"optional": true,
									"description": "HTTP status code returned by the request (if available)"
								},
								"statusText": {
									"name": "statusText",
									"type": "string",
									"optional": true,
									"description": "The status as a text, details not specified, intended only for diagnosis output"
								},
								"responseText": {
									"name": "responseText",
									"type": "string",
									"optional": true,
									"description": "Response that has been received for the request ,as a text string"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event failed to attached listeners."
				},
				{
					"name": "fireLoaded",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataMetadata",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Fire event loaded to attached listeners."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.ODataMetadata."
				},
				{
					"name": "getServiceMetadata",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "metdata object"
					},
					"description": "Return the metadata object"
				},
				{
					"name": "getUseBatch",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true/false"
					},
					"description": "Get the the use-batch extension value if any"
				},
				{
					"name": "isFailed",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "returns whether metadata request has failed"
					},
					"description": "Checks whether metadata loading has already failed"
				},
				{
					"name": "isLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "returns whether metadata is already loaded"
					},
					"description": "Checks whether metadata is available"
				},
				{
					"name": "loaded",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "returns a promise on metadata loaded state"
					},
					"description": "Returns a promise for the loaded state of the metadata"
				},
				{
					"name": "refresh",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "returns a promise on metadata loaded state"
					},
					"description": "Refreshes the metadata creating a new request to the server.\nReturns a new promise which can be resolved or rejected depending on the metadata loading state."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.ODataMetaModel",
			"basename": "ODataMetaModel",
			"resource": "sap/ui/model/odata/ODataMetaModel.js",
			"module": "sap/ui/model/odata/ODataMetaModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.MetaModel",
			"description": "Implementation of an OData meta model which offers a unified access to both OData V2\nmetadata and V4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata}\nas a foundation and merges V4 annotations from the existing\n{@link sap.ui.model.odata.ODataAnnotations} directly into the corresponding model element.\n\nAlso, annotations from the \"http://www.sap.com/Protocols/SAPData\" namespace are lifted up\nfrom the <code>extensions</code> array and transformed from objects into simple properties\nwith an \"sap:\" prefix for their name. Note that this happens in addition, thus the\nfollowing example shows both representations. This way, such annotations can be addressed\nvia a simple relative path instead of searching an array.\n<pre>\n\t\t{\n\t\t\t\"name\" : \"BusinessPartnerID\",\n\t\t\t\"extensions\" : [{\n\t\t\t\t\"name\" : \"label\",\n\t\t\t\t\"value\" : \"Bus. Part. ID\",\n\t\t\t\t\"namespace\" : \"http://www.sap.com/Protocols/SAPData\"\n\t\t\t}],\n\t\t\t\"sap:label\" : \"Bus. Part. ID\"\n\t\t}\n</pre>\n\nAs of 1.29.0, the corresponding vocabulary-based annotations for the following\n\"<a href=\"http://www.sap.com/Protocols/SAPData\">SAP Annotations for OData Version 2.0</a>\"\nare added, if they are not yet defined in the V4 annotations:\n<ul>\n<li><code>label</code>;</li>\n<li><code>creatable</code>, <code>deletable</code>, <code>deletable-path</code>,\n<code>pageable</code>, <code>requires-filter</code>, <code>searchable</code>,\n<code>topable</code>, <code>updatable</code> and <code>updatable-path</code> on entity sets;\n</li>\n<li><code>creatable</code>, <code>creatable-path</code>, <code>filterable</code>\non navigation properties;</li>\n<li><code>aggregation-role</code> (\"dimension\" and \"measure\"), <code>creatable</code>,\n<code>display-format</code> (\"UpperCase\" and \"NonNegative\"), <code>field-control</code>,\n<code>filterable</code>, <code>filter-restriction</code>, <code>heading</code>,\n<code>precision</code>, <code>quickinfo</code>, <code>required-in-filter</code>,\n<code>sortable</code>, <code>text</code>, <code>unit</code>, <code>updatable</code> and\n<code>visible</code> on properties;</li>\n<li><code>semantics</code>; the following values are supported:\n<ul>\n<li>\"bday\", \"city\", \"country\", \"email\" (including support for types, for example\n\"email;type=home,pref\"), \"familyname\", \"givenname\", \"honorific\", \"middlename\", \"name\",\n\"nickname\", \"note\", \"org\", \"org-unit\", \"org-role\", \"photo\", \"pobox\", \"region\", \"street\",\n\"suffix\", \"tel\" (including support for types, for example \"tel;type=cell,pref\"), \"title\" and\n\"zip\" (mapped to V4 annotation <code>com.sap.vocabularies.Communication.v1.Contact</code>);\n</li>\n<li>\"class\", \"dtend\", \"dtstart\", \"duration\", \"fbtype\", \"location\", \"status\", \"transp\" and\n\"wholeday\" (mapped to V4 annotation\n<code>com.sap.vocabularies.Communication.v1.Event</code>);</li>\n<li>\"body\", \"from\", \"received\", \"sender\" and \"subject\" (mapped to V4 annotation\n<code>com.sap.vocabularies.Communication.v1.Message</code>);</li>\n<li>\"completed\", \"due\", \"percent-complete\" and \"priority\" (mapped to V4 annotation\n<code>com.sap.vocabularies.Communication.v1.Task</code>).</li>\n</ul>\n</ul>\nFor example:\n<pre>\n\t\t{\n\t\t\t\"name\" : \"BusinessPartnerID\",\n\t\t\t...\n\t\t\t\"sap:label\" : \"Bus. Part. ID\",\n\t\t\t\"com.sap.vocabularies.Common.v1.Label\" : {\n\t\t\t\t\"String\" : \"Bus. Part. ID\"\n\t\t\t}\n\t\t}\n</pre>\n\nThis model is read-only and thus only supports\n{@link sap.ui.model.BindingMode.OneTime OneTime} binding mode. No events\n({@link sap.ui.model.Model#event:parseError parseError},\n{@link sap.ui.model.Model#event:requestCompleted requestCompleted},\n{@link sap.ui.model.Model#event:requestFailed requestFailed},\n{@link sap.ui.model.Model#event:requestSent requestSent}) are fired!\n\nWithin the meta model, the objects are arranged in arrays.\n<code>/dataServices/schema</code>, for example, is an array of schemas where each schema has\nan <code>entityType</code> property with an array of entity types, and so on. So,\n<code>/dataServices/schema/0/entityType/16</code> can be the path to the entity type with\nname \"Order\" in the schema with namespace \"MySchema\". However, these paths are not stable:\nIf an entity type with lower index is removed from the schema, the path to\n<code>Order</code> changes to <code>/dataServices/schema/0/entityType/15</code>.\n\nTo avoid problems with changing indexes, {@link sap.ui.model.Model#getObject getObject} and\n{@link sap.ui.model.Model#getProperty getProperty} support XPath-like queries for the\nindexes (since 1.29.1). Each index can be replaced by a query in square brackets. You can,\nfor example, address the schema using the path\n<code>/dataServices/schema/[${namespace}==='MySchema']</code> or the entity using\n<code>/dataServices/schema/[${namespace}==='MySchema']/entityType/[sap.ui.core==='Order']</code>.\n\nThe syntax inside the square brackets is the same as in expression binding. The query is\nexecuted for each object in the array until the result is true (truthy) for the first time.\nThis object is then chosen.\n\n<b>BEWARE:</b> Access to this OData meta model will fail before the promise returned by\n{@link #loaded loaded} has been resolved!",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oMetadata",
						"type": "sap.ui.model.odata.ODataMetadata",
						"optional": false,
						"description": "the OData model's metadata object"
					},
					{
						"name": "oAnnotations",
						"type": "sap.ui.model.odata.ODataAnnotations",
						"optional": true,
						"description": "the OData model's annotations object"
					},
					{
						"name": "oODataModelInterface",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"addAnnotationUrl": {
								"name": "addAnnotationUrl",
								"type": "function",
								"optional": true,
								"description": "the {@link sap.ui.model.odata.v2.ODataModel#addAnnotationUrl addAnnotationUrl} method\n  of the OData model, in case this feature is supported"
							},
							"annotationsLoadedPromise": {
								"name": "annotationsLoadedPromise",
								"type": "Promise",
								"optional": true,
								"description": "a promise which is resolved by the OData model once metadata and annotations have been\n  fully loaded"
							}
						},
						"description": "the private interface object of the OData model which provides friend access to\n  selected methods"
					}
				],
				"description": "DO NOT CALL this private constructor for a new <code>ODataMetaModel</code>,\nbut rather use {@link sap.ui.model.odata.ODataModel#getMetaModel getMetaModel} instead!"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.ODataMetaModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.MetaModel.extend}."
				},
				{
					"name": "getMetaContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context",
						"description": "the context for the corresponding metadata object, i.e. an entity type or its property,\n  or <code>null</code> in case no path is given"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": true,
							"description": "an absolute path pointing to an entity or property, e.g.\n  \"/ProductSet(1)/ToSupplier/BusinessPartnerID\"; this equals the\n  <a href=\"http://www.odata.org/documentation/odata-version-2-0/uri-conventions#ResourcePath\">\n  resource path</a> component of a URI according to OData V2 URI conventions"
						}
					],
					"description": "Returns the OData meta model context corresponding to the given OData model path."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.ODataMetaModel."
				},
				{
					"name": "getODataAssociationEnd",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the OData association end or <code>null</code> if no such association end is found"
					},
					"parameters": [
						{
							"name": "oEntityType",
							"type": "object",
							"optional": false,
							"description": "an entity type as returned by {@link #getODataEntityType getODataEntityType}"
						},
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of a navigation property within this entity type"
						}
					],
					"description": "Returns the OData association end corresponding to the given entity type's navigation\nproperty of given name."
				},
				{
					"name": "getODataAssociationSetEnd",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the OData association set end or <code>null</code> if no such association set end is found"
					},
					"parameters": [
						{
							"name": "oEntityType",
							"type": "object",
							"optional": false,
							"description": "an entity type as returned by {@link #getODataEntityType getODataEntityType}"
						},
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "the name of a navigation property within this entity type"
						}
					],
					"description": "Returns the OData association <em>set</em> end corresponding to the given entity type's\nnavigation property of given name."
				},
				{
					"name": "getODataComplexType",
					"visibility": "public",
					"returnValue": {
						"type": "object|string",
						"description": "(the path to) the complex type with the given qualified name; <code>undefined</code> (for\n  a path) or <code>null</code> (for an object) if no such type is found"
					},
					"parameters": [
						{
							"name": "sQualifiedName",
							"type": "string",
							"optional": false,
							"description": "a qualified name, e.g. \"ACME.Address\""
						},
						{
							"name": "bAsPath",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "determines whether the complex type is returned as a path or as an object"
						}
					],
					"description": "Returns the OData complex type with the given qualified name, either as a path or as an\nobject, as indicated."
				},
				{
					"name": "getODataEntityContainer",
					"visibility": "public",
					"returnValue": {
						"type": "object|string",
						"description": "(the path to) the default entity container; <code>undefined</code> (for a path) or\n  <code>null</code> (for an object) if no such container is found"
					},
					"parameters": [
						{
							"name": "bAsPath",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "determines whether the entity container is returned as a path or as an object"
						}
					],
					"description": "Returns the OData default entity container."
				},
				{
					"name": "getODataEntitySet",
					"visibility": "public",
					"returnValue": {
						"type": "object|string",
						"description": "(the path to) the entity set with the given simple name; <code>undefined</code> (for a\n  path) or <code>null</code> (for an object) if no such set is found"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "a simple name, e.g. \"ProductSet\""
						},
						{
							"name": "bAsPath",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "determines whether the entity set is returned as a path or as an object"
						}
					],
					"description": "Returns the OData entity set with the given simple name from the default entity container."
				},
				{
					"name": "getODataEntityType",
					"visibility": "public",
					"returnValue": {
						"type": "object|string",
						"description": "(the path to) the entity type with the given qualified name; <code>undefined</code> (for a\n  path) or <code>null</code> (for an object) if no such type is found"
					},
					"parameters": [
						{
							"name": "sQualifiedName",
							"type": "string",
							"optional": false,
							"description": "a qualified name, e.g. \"ACME.Product\""
						},
						{
							"name": "bAsPath",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "determines whether the entity type is returned as a path or as an object"
						}
					],
					"description": "Returns the OData entity type with the given qualified name, either as a path or as an\nobject, as indicated."
				},
				{
					"name": "getODataFunctionImport",
					"visibility": "public",
					"returnValue": {
						"type": "object|string",
						"description": "(the path to) the function import with the given simple name; <code>undefined</code> (for\n  a path) or <code>null</code> (for an object) if no such function import is found"
					},
					"since": "1.29.0",
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "a simple or qualified name, e.g. \"Save\" or \"MyService.Entities/Save\""
						},
						{
							"name": "bAsPath",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "determines whether the function import is returned as a path or as an object"
						}
					],
					"description": "Returns the OData function import with the given simple or qualified name from the default\nentity container or the respective entity container specified in the qualified name."
				},
				{
					"name": "getODataProperty",
					"visibility": "public",
					"returnValue": {
						"type": "object|string",
						"description": "(the path to) the last OData property found; <code>undefined</code> (for a path) or\n  <code>null</code> (for an object) if no property was found at all"
					},
					"parameters": [
						{
							"name": "oType",
							"type": "object",
							"optional": false,
							"description": "a complex type as returned by {@link #getODataComplexType getODataComplexType}, or\n  an entity type as returned by {@link #getODataEntityType getODataEntityType}"
						},
						{
							"name": "vName",
							"type": "string|string[]",
							"optional": false,
							"description": "the name of a property within this type (e.g. \"Address\"), or an array of such names (e.g.\n  <code>[\"Address\", \"Street\"]</code>) in order to drill-down into complex types;\n  <b>BEWARE</b> that this array is modified by removing each part which is understood!"
						},
						{
							"name": "bAsPath",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "determines whether the property is returned as a path or as an object"
						}
					],
					"description": "Returns the given OData type's property (not navigation property!) of given name.\n\nIf an array is given instead of a single name, it is consumed (via\n<code>Array.prototype.shift</code>) piece by piece. Each element is interpreted as a\nproperty name of the current type, and the current type is replaced by that property's type.\nThis is repeated until an element is encountered which cannot be resolved as a property name\nof the current type anymore; in this case, the last property found is returned and\n<code>vName</code> contains only the remaining names, with <code>vName[0]</code> being the\none which was not found.\n\nExamples:\n<ul>\n<li> Get address property of business partner:\n<pre>\nvar oEntityType = oMetaModel.getODataEntityType(\"GWSAMPLE_BASIC.BusinessPartner\"),\n    oAddressProperty = oMetaModel.getODataProperty(oEntityType, \"Address\");\noAddressProperty.name === \"Address\";\noAddressProperty.type === \"GWSAMPLE_BASIC.CT_Address\";\n</pre>\n</li>\n<li> Get street property of address type:\n<pre>\nvar oComplexType = oMetaModel.getODataComplexType(\"GWSAMPLE_BASIC.CT_Address\"),\n    oStreetProperty = oMetaModel.getODataProperty(oComplexType, \"Street\");\noStreetProperty.name === \"Street\";\noStreetProperty.type === \"Edm.String\";\n</pre>\n</li>\n<li> Get address' street property directly from business partner:\n<pre>\nvar aParts = [\"Address\", \"Street\"];\noMetaModel.getODataProperty(oEntityType, aParts) === oStreetProperty;\naParts.length === 0;\n</pre>\n</li>\n<li> Trying to get address' foo property directly from business partner:\n<pre>\naParts = [\"Address\", \"foo\"];\noMetaModel.getODataProperty(oEntityType, aParts) === oAddressProperty;\naParts.length === 1;\naParts[0] === \"foo\";\n</pre>\n</li>\n</ul>"
				},
				{
					"name": "getODataValueLists",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "a Promise that gets resolved as soon as the value lists as well as the required model\n  elements have been loaded"
					},
					"since": "1.29.1",
					"parameters": [
						{
							"name": "oPropertyContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "a model context for a structural property of an entity type or a complex type, as\n  returned by {@link #getMetaContext getMetaContext}"
						}
					],
					"description": "Returns a <code>Promise</code> which is resolved with a map representing the\n<code>com.sap.vocabularies.Common.v1.ValueList</code> annotations of the given property or\nrejected with an error.\nThe key in the map provided on successful resolution is the qualifier of the annotation or\nthe empty string if no qualifier is defined. The value in the map is the JSON object for\nthe annotation. The map is empty if the property has no\n<code>com.sap.vocabularies.Common.v1.ValueList</code> annotations."
				},
				{
					"name": "loaded",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "a Promise"
					},
					"description": "Returns a promise which is fulfilled once the meta model data is loaded and can be used."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"description": "Refresh not supported by OData meta model!"
				},
				{
					"name": "setLegacySyntax",
					"visibility": "public",
					"parameters": [
						{
							"name": "bLegacySyntax",
							"type": "boolean",
							"optional": false,
							"description": "must not be true!"
						}
					],
					"description": "Legacy syntax not supported by OData meta model!"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.ODataModel",
			"basename": "ODataModel",
			"resource": "sap/ui/model/odata/ODataModel.js",
			"module": "sap/ui/model/odata/ODataModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Model",
			"description": "Model implementation for oData format",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sServiceUrl",
						"type": "string",
						"optional": true,
						"description": "base uri of the service to request data from; additional URL parameters appended here will be appended to every request\n\t\t\t\t\t\t\t\tcan be passed with the mParameters object as well: [mParameters.serviceUrl] A serviceURl is required!"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"json": {
								"name": "json",
								"type": "boolean",
								"optional": true,
								"description": "if set true request payloads will be JSON, XML for false (default = false),"
							},
							"user": {
								"name": "user",
								"type": "string",
								"optional": true,
								"description": "user for the service,"
							},
							"password": {
								"name": "password",
								"type": "string",
								"optional": true,
								"description": "password for service,"
							},
							"headers": {
								"name": "headers",
								"type": "map",
								"optional": true,
								"description": "a map of custom headers like {\"myHeader\":\"myHeaderValue\",...},"
							},
							"tokenHandling": {
								"name": "tokenHandling",
								"type": "boolean",
								"optional": true,
								"description": "enable/disable XCSRF-Token handling (default = true),"
							},
							"withCredentials": {
								"name": "withCredentials",
								"type": "boolean",
								"optional": true,
								"description": "experimental - true when user credentials are to be included in a cross-origin request. Please note that this works only if all requests are asynchronous."
							},
							"loadMetadataAsync": {
								"name": "loadMetadataAsync",
								"type": "object",
								"optional": true,
								"description": "(optional) determined if the service metadata request is sent synchronous or asynchronous. Default is false."
							},
							"maxDataServiceVersion": {
								"name": "maxDataServiceVersion",
								"type": "undefined",
								"optional": true,
								"description": "(default = '2.0') please use the following string format e.g. '2.0' or '3.0'.\n\t\t\t\t\t\t\t\t\tOData version supported by the ODataModel: '2.0',"
							},
							"useBatch": {
								"name": "useBatch",
								"type": "boolean",
								"optional": true,
								"description": "when true all requests will be sent in batch requests (default = false),"
							},
							"refreshAfterChange": {
								"name": "refreshAfterChange",
								"type": "boolean",
								"optional": true,
								"description": "enable/disable automatic refresh after change operations: default = true,"
							},
							"annotationURI": {
								"name": "annotationURI",
								"type": "string|string[]",
								"optional": true,
								"description": "The URL (or an array of URLs) from which the annotation metadata should be loaded,"
							},
							"loadAnnotationsJoined": {
								"name": "loadAnnotationsJoined",
								"type": "boolean",
								"optional": true,
								"description": "Whether or not to fire the metadataLoaded-event only after annotations have been loaded as well,"
							},
							"serviceUrlParams": {
								"name": "serviceUrlParams",
								"type": "map",
								"optional": true,
								"description": "map of URL parameters - these parameters will be attached to all requests,"
							},
							"metadataUrlParams": {
								"name": "metadataUrlParams",
								"type": "map",
								"optional": true,
								"description": "map of URL parameters for metadata requests - only attached to $metadata request."
							},
							"defaultCountMode": {
								"name": "defaultCountMode",
								"type": "string",
								"optional": true,
								"description": "sets the default count mode for the model. If not set, sap.ui.model.odata.CountMode.Both is used."
							},
							"metadataNamespaces": {
								"name": "metadataNamespaces",
								"type": "map",
								"optional": true,
								"description": "a map of namespaces (name => URI) used for parsing the service metadata."
							},
							"skipMetadataAnnotationParsing": {
								"name": "skipMetadataAnnotationParsing",
								"type": "boolean",
								"optional": true,
								"description": "Whether to skip the automated loading of annotations from the metadata document. Loading annotations from metadata does not have any effects (except the lost performance by invoking the parser) if there are not annotations inside the metadata document"
							}
						},
						"description": "(optional) a map which contains the following parameter properties:"
					}
				],
				"description": "Constructor for a new ODataModel."
			},
			"methods": [
				{
					"name": "addAnnotationUrl",
					"visibility": "protected",
					"returnValue": {
						"type": "Promise",
						"description": "The Promise to load the given URL(s), resolved if all URLs have been loaded, rejected if at least one fails to load.\n\t\t\t\t\t If this promise resolves it returns the following parameters:\n\t\t\t\t\t annotations: The annotation object\n\t\t\t\t\t entitySets: An array of EntitySet objects containing the newly merged EntitySets from a $metadata requests.\n\t\t\t\t\t\t\t\t the structure is the same as in the metadata object reached by the getServiceMetadata() method.\n\t\t\t\t\t\t\t\t For non $metadata requests the array will be empty."
					},
					"parameters": [
						{
							"name": "vUrl",
							"type": "string|string[]",
							"optional": false,
							"description": "Either one URL as string or an array or URL strings"
						}
					],
					"description": "Adds (a) new URL(s) to the be parsed for OData annotations, which are then merged into the annotations object\nwhich can be retrieved by calling the getServiceAnnotations()-method. If a $metadata url is passed the data will\nalso be merged into the metadata object, which can be reached by calling the getServiceMetadata() method."
				},
				{
					"name": "addAnnotationXML",
					"visibility": "protected",
					"returnValue": {
						"type": "Promise",
						"description": "The Promise to parse the given XML-String, resolved if parsed without errors, rejected if errors occur"
					},
					"parameters": [
						{
							"name": "sXMLContent",
							"type": "string",
							"optional": false,
							"description": "The string that should be parsed as annotation XML"
						},
						{
							"name": "bSuppressEvents",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "Whether not to fire annotationsLoaded event on the annotationParser"
						}
					],
					"description": "Adds new xml content to be parsed for OData annotations, which are then merged into the annotations object which\ncan be retrieved by calling the getServiceAnnotations()-method."
				},
				{
					"name": "addBatchChangeOperations",
					"visibility": "public",
					"parameters": [
						{
							"name": "aChangeOperations",
							"type": "any[]",
							"optional": false,
							"description": "an array of change batch operations created via <code>createBatchOperation</code> and <code>sMethod</code> = POST, PUT, MERGE or DELETE"
						}
					],
					"description": "Appends the change batch operations to the end of the batch stack. Only PUT, POST or DELETE batch operations should be included in the specified array.\nThe operations in the array will be included in a single changeset. To embed change operations in different change sets call this method with the corresponding change operations again.\nIf an illegal batch operation is added to the change set nothing will be performed and false will be returned."
				},
				{
					"name": "addBatchReadOperations",
					"visibility": "public",
					"parameters": [
						{
							"name": "aReadOperations",
							"type": "any[]",
							"optional": false,
							"description": "an array of read batch operations created via <code>createBatchOperation</code> and <code>sMethod</code> = GET"
						}
					],
					"description": "Appends the read batch operations to the end of the batch stack. Only GET batch operations should be included in the specified array.\nIf an illegal batch operation is added to the batch nothing will be performed and false will be returned."
				},
				{
					"name": "attachAnnotationsFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'annotationsFailed' event of this <code>sap.ui.model.odata.ODataModel</code>."
				},
				{
					"name": "attachAnnotationsLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'annotationsLoaded' event of this <code>sap.ui.model.odata.ODataModel</code>."
				},
				{
					"name": "attachMetadataFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'metadataFailed' event of this <code>sap.ui.model.odata.ODataModel</code>."
				},
				{
					"name": "attachMetadataLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'metadataLoaded' event of this <code>sap.ui.model.odata.ODataModel</code>."
				},
				{
					"name": "bindList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding",
						"description": "oBinding new list binding object"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Binding path, either absolute or relative to a given <code>oContext</code>"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"defaultValue": null,
							"description": "Binding context referring to this model"
						},
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter|sap.ui.model.Sorter[]",
							"optional": true,
							"defaultValue": null,
							"description": "Initial sort order, can be either a sorter or an array of sorters"
						},
						{
							"name": "aFilters",
							"type": "sap.ui.model.Filter|sap.ui.model.Filter[]",
							"optional": true,
							"defaultValue": null,
							"description": "Predefined filter/s, can be either a filter or an array of filters"
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"expand": {
									"name": "expand",
									"type": "string",
									"optional": true,
									"description": "Value for the OData <code>$expand</code> query parameter which should be included in the request"
								},
								"select": {
									"name": "select",
									"type": "string",
									"optional": true,
									"description": "Value for the OData <code>$select</code> query parameter which should be included in the request"
								},
								"custom": {
									"name": "custom",
									"type": "map",
									"optional": true,
									"description": "Optional map of custom query parameters (name/value pairs); names of custom parameters must not start with <code>$</code>"
								},
								"countMode": {
									"name": "countMode",
									"type": "sap.ui.model.odata.CountMode",
									"optional": true,
									"description": "Defines the count mode of the new binding;\n          if not specified, the default count mode of this model will be applied"
								}
							},
							"description": "Map which contains additional parameters for the binding"
						}
					],
					"description": "Creates a new list binding for this model."
				},
				{
					"name": "callFunction",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "an object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sFunctionName",
							"type": "string",
							"optional": false,
							"description": "A string containing the name of the function to call.\n\t\tThe name is concatenated to the sServiceUrl which was specified in the model constructor."
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"method": {
									"name": "method",
									"type": "string",
									"optional": true,
									"description": "A string containing the type of method to call this function with"
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								},
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "If specified the sPath has to be relative to the path given with the context."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the data has been successfully retrieved.\n\t\tThe handler can have the following parameters: <code>oData<code> and <code>response</code>."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the request failed.\n\t\tThe handler can have the parameter: <code>oError</code> which contains additional error information."
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "Whether or not to send the request asynchronously. Default: false\n\t\tIn case sMethod is \"GET\", the request is always asynchronous.\n\t\tPlease be advised that this feature is officially unsupported as using asynchronous\n\t\trequests can lead to data inconsistencies if the application does not make sure that\n\t\tthe request was completed before continuing to work with the data."
								}
							},
							"description": "Optional parameter map containing any of the following properties:"
						}
					],
					"description": "Trigger a request to the function import odata service that was specified in the model constructor."
				},
				{
					"name": "clearBatch",
					"visibility": "public",
					"description": "Removes all operations in the current batch."
				},
				{
					"name": "create",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "an object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the collection where an entry\n\t\tshould be created. The path is concatenated to the sServiceUrl\n\t\twhich was specified in the model constructor."
						},
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "data of the entry that should be created."
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "If specified the sPath has to be relative to the path given with the context."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the data has\n\t\tbeen successfully retrieved. The handler can have the\n\t\tfollowing parameters: oData and response."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the request failed.\n\t\tThe handler can have the parameter <code>oError</code> which contains additional error information."
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "Whether the request should be done asynchronously. Default: false\n\t\tPlease be advised that this feature is officially unsupported as using asynchronous\n\t\trequests can lead to data inconsistencies if the application does not make sure that\n\t\tthe request was completed before continuing to work with the data."
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								}
							},
							"description": "Optional parameter map containing any of the following properties:"
						}
					],
					"description": "Trigger a POST request to the odata service that was specified in the model constructor. Please note that deep creates are not supported\nand may not work."
				},
				{
					"name": "createBatchOperation",
					"visibility": "public",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the collection or entry where the batch operation should be performed.\n\t\t\t\t\t\tThe path is concatenated to the sServiceUrl which was specified in the model constructor."
						},
						{
							"name": "sMethod",
							"type": "string",
							"optional": false,
							"description": "for the batch operation. Possible values are GET, PUT, MERGE, POST, DELETE"
						},
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "optional data payload which should be created, updated, deleted in a change batch operation."
						},
						{
							"name": "oParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"sETag": {
									"name": "sETag",
									"type": "string",
									"optional": true,
									"description": "an ETag which can be used for concurrency control. If it is specified,\n                 it will be used in an If-Match-Header in the request to the server for this entry."
								}
							},
							"description": "optional parameter for additional information introduced in SAPUI5 1.9.1,"
						}
					],
					"description": "Creates a single batch operation (read or change operation) which can be used in a batch request."
				},
				{
					"name": "createEntry",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context",
						"description": "oContext A Context object that point to the new created entry."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "String",
							"optional": false,
							"description": "Name of the path to the collection"
						},
						{
							"name": "vProperties",
							"type": "array|object",
							"optional": false,
							"description": "An array that specifies a set of properties or the entry"
						}
					],
					"description": "Creates a new entry object which is described by the metadata of the entity type of the\nspecified sPath Name. A context object is returned which can be used to bind\nagainst the newly created object.\n\nFor each created entry a request is created and stored in a request queue.\nThe request queue can be submitted by calling submitChanges. To delete a created\nentry from the request queue call deleteCreateEntry.\n\nThe optional vProperties parameter can be used as follows:\n\n  - vProperties could be an array containing the property names which should be included\n    in the new entry. Other properties defined in the entity type are not included.\n  - vProperties could be an object which includes the desired properties and the values\n    which should be used for the created entry.\n\nIf vProperties is not specified, all properties in the entity type will be included in the\ncreated entry.\n\nIf there are no values specified the properties will have undefined values.\n\nPlease note that deep creates (including data defined by navigationproperties) are not supported"
				},
				{
					"name": "createKey",
					"visibility": "public",
					"parameters": [
						{
							"name": "sCollection",
							"type": "string",
							"optional": false,
							"description": "The name of the collection"
						},
						{
							"name": "oKeyParameters",
							"type": "object",
							"optional": false,
							"description": "The object containing at least all the key properties of the entity type"
						},
						{
							"name": "bDecode",
							"type": "boolean",
							"optional": false,
							"description": "Whether the URI decoding should be applied on the key"
						}
					],
					"description": "Creates the key from the given collection name and property map"
				},
				{
					"name": "deleteCreatedEntry",
					"visibility": "public",
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "The context object pointing to the created entry"
						}
					],
					"description": "Deletes a created entry from the request queue and the model."
				},
				{
					"name": "destroy",
					"visibility": "public"
				},
				{
					"name": "detachAnnotationsFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'annotationsFailed' event of this <code>sap.ui.model.odata.ODataModel</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachAnnotationsLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'annotationsLoaded' event of this <code>sap.ui.model.odata.ODataModel</code>."
				},
				{
					"name": "detachMetadataFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'metadataFailed' event of this <code>sap.ui.model.odata.ODataModel</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachMetadataLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'metadataLoaded' event of this <code>sap.ui.model.odata.ODataModel</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.ODataModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}."
				},
				{
					"name": "fireAnnotationsFailed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"message": {
									"name": "message",
									"type": "string",
									"optional": true,
									"description": "A text that describes the failure."
								},
								"statusCode": {
									"name": "statusCode",
									"type": "string",
									"optional": true,
									"description": "HTTP status code returned by the request (if available)"
								},
								"statusText": {
									"name": "statusText",
									"type": "string",
									"optional": true,
									"description": "The status as a text, details not specified, intended only for diagnosis output"
								},
								"responseText": {
									"name": "responseText",
									"type": "string",
									"optional": true,
									"description": "Response that has been received for the request ,as a text string"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event annotationsFailed to attached listeners."
				},
				{
					"name": "fireAnnotationsLoaded",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"annotations": {
									"name": "annotations",
									"type": "sap.ui.model.odata.ODataAnnotations",
									"optional": true,
									"description": "the annotations object."
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event annotationsLoaded to attached listeners."
				},
				{
					"name": "fireMetadataFailed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"message": {
									"name": "message",
									"type": "string",
									"optional": true,
									"description": "A text that describes the failure."
								},
								"statusCode": {
									"name": "statusCode",
									"type": "string",
									"optional": true,
									"description": "HTTP status code returned by the request (if available)"
								},
								"statusText": {
									"name": "statusText",
									"type": "string",
									"optional": true,
									"description": "The status as a text, details not specified, intended only for diagnosis output"
								},
								"responseText": {
									"name": "responseText",
									"type": "string",
									"optional": true,
									"description": "Response that has been received for the request ,as a text string"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event metadataFailed to attached listeners."
				},
				{
					"name": "fireMetadataLoaded",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"metadata": {
									"name": "metadata",
									"type": "sap.ui.model.odata.ODataMetadata",
									"optional": true,
									"description": "the metadata object."
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event metadataLoaded to attached listeners."
				},
				{
					"name": "forceNoCache",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceNoCache",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether to force no caching"
						}
					],
					"description": "Force no caching",
					"deprecated": {
						"text": "The caching should be controlled by the backend by setting the correct cache control header"
					}
				},
				{
					"name": "getData",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "oData Object containing the requested data if the path is valid."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the data object that should be returned."
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "the optional context which is used with the sPath to retrieve the requested data."
						},
						{
							"name": "bIncludeExpandEntries",
							"type": "boolean",
							"optional": true,
							"defaultValue": null,
							"description": "This parameter should be set when a URI or custom parameter\nwith a $expand System Query Option was used to retrieve associated entries embedded/inline.\nIf true then the getProperty function returns a desired property value/entry and includes the associated expand entries (if any).\nIf false the associated/expanded entry properties are removed and not included in the\ndesired entry as properties at all. This is useful for performing updates on the base entry only. Note: A copy and not a reference of the entry will be returned."
						}
					],
					"description": "Return requested data as object if the data has already been loaded and stored in the model.",
					"deprecated": {
						"text": "please use {@link #getProperty} instead"
					}
				},
				{
					"name": "getDefaultCountMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.CountMode"
					},
					"since": "1.20",
					"description": "Returns the default count mode for retrieving the count of collections"
				},
				{
					"name": "getHeaders",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the header map"
					},
					"description": "Returns all headers and custom headers which are stored in the OData model."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"parameters": [
						{
							"name": "oObject",
							"type": "object|sap.ui.model.Context",
							"optional": false,
							"description": "The context or object"
						},
						{
							"name": "bDecode",
							"type": "boolean",
							"optional": false,
							"description": "Whether the URI decoding should be applied on the key"
						}
					],
					"description": "Returns the key part from the entry URI or the given context or object"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.ODataModel."
				},
				{
					"name": "getMetaModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataMetaModel",
						"description": "The meta model for this ODataModel"
					},
					"description": "Returns an instance of an OData meta model which offers a unified access to both OData V2\nmetadata and V4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata}\nas a foundation and merges V4 annotations from the existing\n{@link sap.ui.model.odata.ODataAnnotations} directly into the corresponding model element.\n\n<b>BEWARE:</b> Access to this OData meta model will fail before the promise returned by\n{@link sap.ui.model.odata.ODataMetaModel#loaded loaded} has been resolved!"
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value of the property"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path/name of the property"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "the context if available to access the property value"
						},
						{
							"name": "bIncludeExpandEntries",
							"type": "boolean",
							"optional": true,
							"defaultValue": null,
							"description": "This parameter should be set when a URI or custom parameter\nwith a $expand System Query Option was used to retrieve associated entries embedded/inline.\nIf true then the getProperty function returns a desired property value/entry and includes the associated expand entries (if any).\nIf false the associated/expanded entry properties are removed and not included in the\ndesired entry as properties at all. This is useful for performing updates on the base entry only. Note: A copy and not a reference of the entry will be returned."
						}
					],
					"description": "Returns the value for the property with the given <code>sPath</code>.\nIf the path points to a navigation property which has been loaded via $expand then the <code>bIncludeExpandEntries</code>\nparameter determines if the navigation property should be included in the returned value or not.\nPlease note that this currently works for 1..1 navigation properties only."
				},
				{
					"name": "getSecurityToken",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the CSRF security token"
					},
					"description": "Returns the current security token. If the token has not been requested from the server it will be requested first."
				},
				{
					"name": "getServiceAnnotations",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "metdata object"
					},
					"description": "Return the annotation object. Please note that when using the model with bLoadMetadataAsync = true then this function might return undefined because the\nmetadata has not been loaded yet.\nIn this case attach to the <code>annotationsLoaded</code> event to get notified when the annotations are available and then call this function."
				},
				{
					"name": "getServiceMetadata",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "metdata object"
					},
					"description": "Return the metadata object. Please note that when using the model with bLoadMetadataAsync = true then this function might return undefined because the\nmetadata has not been loaded yet.\nIn this case attach to the <code>metadataLoaded</code> event to get notified when the metadata is available and then call this function."
				},
				{
					"name": "hasPendingChanges",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true/false"
					},
					"description": "Checks if there exist pending changes in the model created by the setProperty method."
				},
				{
					"name": "isCountSupported",
					"visibility": "public",
					"returnValue": {
						"type": "boolean"
					},
					"description": "Returns whether this model supports the $count on its collections\nThis method is deprecated, please use getDefaultCountMode instead.",
					"deprecated": {}
				},
				{
					"name": "read",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "an object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the data which should\n\t\tbe retrieved. The path is concatenated to the sServiceUrl\n\t\twhich was specified in the model constructor."
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "If specified the sPath has to be is relative to the path\n\t\tgiven with the context."
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "true for asynchronous requests."
								},
								"filters": {
									"name": "filters",
									"type": "array",
									"optional": true,
									"description": "an array of sap.ui.model.Filter to be included in the request URL"
								},
								"sorters": {
									"name": "sorters",
									"type": "array",
									"optional": true,
									"description": "an array of sap.ui.model.Sorter to be included in the request URL"
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the data has\n\t\tbeen successfully retrieved. The handler can have the\n\t\tfollowing parameters: oData and response."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the request\n\t\tfailed. The handler can have the parameter: oError which contains\nadditional error information."
								}
							},
							"description": "Optional parameter map containing any of the following properties:"
						}
					],
					"description": "Trigger a GET request to the odata service that was specified in the model constructor.\nThe data will not be stored in the model. The requested data is returned with the response."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "Force update of controls"
						},
						{
							"name": "bRemoveData",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "If set to true then the model data will be removed/cleared.\n\t\t\t\t\tPlease note that the data might not be there when calling e.g. getProperty too early before the refresh call returned."
						}
					],
					"description": "Refresh the model.\nThis will check all bindings for updated data and update the controls if data has been changed."
				},
				{
					"name": "refreshMetadata",
					"visibility": "public",
					"description": "refreshes the metadata for model, e.g. in case the first request for metadata has failed"
				},
				{
					"name": "refreshSecurityToken",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "an object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "fnSuccess",
							"type": "function",
							"optional": true,
							"description": "a callback function which is called when the data has\n           \t\t\t\t\t been successfully retrieved."
						},
						{
							"name": "fnError",
							"type": "function",
							"optional": true,
							"description": "a callback function which is called when the request failed. The handler can have the parameter: oError which contains\n additional error information."
						},
						{
							"name": "bAsync",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "true for asynchronous requests."
						}
					],
					"description": "refresh XSRF token by performing a GET request against the service root URL."
				},
				{
					"name": "remove",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "an object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the data that should be removed.\n\t\tThe path is concatenated to the sServiceUrl which was specified in the model constructor."
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "If specified the sPath has to be relative to the path given with the context."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the data has been successfully retrieved.\n\t\tThe handler can have the following parameters: <code>oData<code> and <code>response</code>."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the request failed.\n\t\tThe handler can have the parameter: <code>oError</code> which contains additional error information."
								},
								"eTag": {
									"name": "eTag",
									"type": "string",
									"optional": true,
									"description": "If specified, the If-Match-Header will be set to this Etag."
								},
								"payload": {
									"name": "payload",
									"type": "object",
									"optional": true,
									"description": "if specified, this optional variable can be used to pass a payload into the delete function,\n\t\te.g. if the entry which should be deleted has not been bound to any control, but has been retrieved via read, only."
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "Whether the request should be done asynchronously.\n\t\tPlease be advised that this feature is officially unsupported as using asynchronous\n\t\trequests can lead to data inconsistencies if the application does not make sure that\n\t\tthe request was completed before continuing to work with the data."
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								}
							},
							"description": "Optional, can contain the following attributes: oContext, fnSuccess, fnError, sETag:"
						}
					],
					"description": "Trigger a DELETE request to the odata service that was specified in the model constructor."
				},
				{
					"name": "resetChanges",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnSuccess",
							"type": "function",
							"optional": true,
							"description": "a callback function which is called when the data has\n           \t\t\t\t\t been successfully resetted. The handler can have the\n           \t                 following parameters: oData and response."
						},
						{
							"name": "fnError",
							"type": "function",
							"optional": true,
							"description": "a callback function which is called when the request failed"
						}
					],
					"description": "Resets the collected changes by the setProperty method and reloads the data from the server."
				},
				{
					"name": "setCountSupported",
					"visibility": "public",
					"parameters": [
						{
							"name": "bCountSupported",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Sets whether this OData service supports $count on its collections.\nThis method is deprecated, please use setDefaultCountMode instead.",
					"deprecated": {}
				},
				{
					"name": "setDefaultCountMode",
					"visibility": "public",
					"since": "1.20",
					"parameters": [
						{
							"name": "sCountMode",
							"type": "sap.ui.model.odata.CountMode",
							"optional": false,
							"description": "The new default count mode for this model"
						}
					],
					"description": "Sets the default mode how to retrieve the item count for a collection in this model.\n\nThe count can be determined in the following ways\n<ul>\n<li>by sending a separate <code>$count</code> request</li>\n<li>by adding parameter <code>$inlinecount=allpages</code> to one or all data requests</li>\n<li>a combination of the previous two</li>\n<li>not at all (questions about the size of the collection can't be answered then)</li>\n</ul>\nSee {@link sap.ui.model.odata.CountMode} for all enumeration values and more details.\n\nNote that a call to this method does not modify the count mode for existing list bindings,\nonly bindings that are created afterwards will use the new mode when no mode is defined at their creation.\n\nIf no default count mode is set for an <code>ODataModel</code> (v1), the mode <code>Both</code>\nwill be used for compatibility reasons."
				},
				{
					"name": "setHeaders",
					"visibility": "public",
					"parameters": [
						{
							"name": "mHeaders",
							"type": "object",
							"optional": false,
							"description": "the header name/value map."
						}
					],
					"description": "Set custom headers which are provided in a key/value map. These headers are used for requests against the OData backend.\nPrivate headers which are set in the ODataModel cannot be modified.\nThese private headers are: accept, accept-language, x-csrf-token, MaxDataServiceVersion, DataServiceVersion.\n\nTo remove these headers simply set the mCustomHeaders parameter to null. Please also note that when calling this method again all previous custom headers\nare removed unless they are specified again in the mCustomHeaders parameter."
				},
				{
					"name": "setProperty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the value was set correctly and false if errors occurred like the entry was not found or another entry was already updated."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "path of the property to set"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "value to set the property to"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context which will be used to set the property"
						},
						{
							"name": "bAsyncUpdate",
							"type": "boolean",
							"optional": true,
							"description": "whether to update other bindings dependent on this property asynchronously"
						}
					],
					"description": "Sets a new value for the given property <code>sPropertyName</code> in the model without triggering a server request.\n This can be done by the submitChanges method.\n\n Note: Only one entry of one collection can be updated at once. Otherwise a fireRejectChange event is fired.\n\n Before updating a different entry the existing changes of the current entry have to be submitted or resetted by the\n corresponding methods: submitChanges, resetChanges.\n\n IMPORTANT: All pending changes are resetted in the model if the application triggeres any kind of refresh\n on that entry. Make sure to submit the pending changes first. To determine if there are any pending changes call the hasPendingChanges method."
				},
				{
					"name": "setRefreshAfterChange",
					"visibility": "public",
					"since": "1.16.3",
					"parameters": [
						{
							"name": "bRefreshAfterChange",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Enable/Disable automatic updates of all Bindings after change operations"
				},
				{
					"name": "setTokenHandlingEnabled",
					"visibility": "public",
					"parameters": [
						{
							"name": "bTokenHandling",
							"type": "boolean",
							"optional": true,
							"defaultValue": true,
							"description": "whether to use token handling or not"
						}
					],
					"description": "Enable/Disable XCSRF-Token handling"
				},
				{
					"name": "setUseBatch",
					"visibility": "public",
					"parameters": [
						{
							"name": "bUseBatch",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "whether the requests should be encapsulated in a batch request"
						}
					],
					"description": "Enable/Disable batch for all requests"
				},
				{
					"name": "submitBatch",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "an object which has an <code>abort</code> function to abort the current request. Returns false if no request will be performed because the batch is empty."
					},
					"parameters": [
						{
							"name": "fnSuccess",
							"type": "function",
							"optional": true,
							"description": "a callback function which is called when the batch request has\n           \t\t\t\t\t been successfully sent. Note: There might have errors occured in the single batch operations. These errors can be accessed in the\n           aErrorResponses parameter in the callback handler.\n           The handler can have the\n           \t                 following parameters: oData, oResponse and aErrorResponses."
						},
						{
							"name": "fnError",
							"type": "function",
							"optional": true,
							"description": "a callback function which is called when the batch request failed. The handler can have the parameter: oError which contains\nadditional error information."
						},
						{
							"name": "bAsync",
							"type": "boolean",
							"optional": true,
							"description": "true for asynchronous request. Default is true."
						},
						{
							"name": "bImportData",
							"type": "boolean",
							"optional": false
						}
					],
					"description": "Submits the collected changes in the batch which were collected via <code>addBatchReadOperations</code> or <code>addBatchChangeOperations</code>.\nThe batch will be cleared afterwards. If the batch is empty no request will be performed and false will be returned.\nNote: No data will be stored in the model."
				},
				{
					"name": "submitChanges",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "an object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "fnSuccess",
							"type": "function",
							"optional": true,
							"description": "a callback function which is called when the data has\n           \t\t\t\t\t been successfully updated. The handler can have the\n           \t                 following parameters: oData and response."
						},
						{
							"name": "fnError",
							"type": "function",
							"optional": true,
							"description": "a callback function which is called when the request failed. The handler can have the parameter: oError which contains\nadditional error information"
						},
						{
							"name": "oParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"sETag": {
									"name": "sETag",
									"type": "string",
									"optional": true,
									"description": "an ETag which can be used for concurrency control. If it is specified, it will be used in an If-Match-Header in the request to the server for this entry."
								}
							},
							"description": "optional parameter for additional information introduced in SAPUI5 1.9.1"
						}
					],
					"description": "Submits the collected changes which were collected by the setProperty method. A MERGE request will be triggered to only update the changed properties.\nIf a URI with a $expand System Query Option was used then the expand entries will be removed from the collected changes.\nChanges to this entries should be done on the entry itself. So no deep updates are supported."
				},
				{
					"name": "update",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "an object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the data that should be updated.\n\t\tThe path is concatenated to the sServiceUrl which was specified\n\t\tin the model constructor."
						},
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "data of the entry that should be updated."
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "If specified the sPath has to be is relative to the path given with the context."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the data has been successfully updated."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "a callback function which is called when the request failed.\n\t\tThe handler can have the parameter <code>oError</code> which contains additional error information."
								},
								"merge": {
									"name": "merge",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "trigger a MERGE request instead of a PUT request to perform a differential update"
								},
								"eTag": {
									"name": "eTag",
									"type": "string",
									"optional": true,
									"description": "If specified, the If-Match-Header will be set to this Etag."
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "Whether the request should be done asynchronously.\n\t\tPlease be advised that this feature is officially unsupported as using asynchronous\n\t\trequests can lead to data inconsistencies if the application does not make sure that\n\t\tthe request was completed before continuing to work with the data."
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								}
							},
							"description": "Optional, can contain the following attributes:"
						}
					],
					"description": "Trigger a PUT/MERGE request to the odata service that was specified in the model constructor. Please note that deep updates are not supported\nand may not work. These should be done seperate on the entry directly."
				},
				{
					"name": "updateBindings",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "If set to false an update  will only be done when the value of a binding changed."
						}
					],
					"description": "update all bindings"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.ODataPropertyBinding",
			"basename": "ODataPropertyBinding",
			"resource": "sap/ui/model/odata/ODataPropertyBinding.js",
			"module": "sap/ui/model/odata/ODataPropertyBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.PropertyBinding",
			"description": "Property binding implementation for oData format",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": false
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true
					}
				]
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.ODataPropertyBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.ODataPropertyBinding."
				},
				{
					"name": "getValue",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "the current value of the bound target"
					},
					"description": "Returns the current value of the bound target"
				},
				{
					"name": "initialize",
					"visibility": "protected",
					"description": "Initialize the binding. The message should be called when creating a binding.\nIf metadata is not yet available, do nothing, method will be called again when\nmetadata is loaded."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.odata.ODataUtils",
			"basename": "ODataUtils",
			"resource": "sap/ui/model/odata/ODataUtils.js",
			"module": "sap/ui/model/odata/ODataUtils",
			"export": "",
			"static": true,
			"visibility": "public",
			"methods": [
				{
					"name": "compare",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "int",
						"description": "the result of the compare: <code>0</code> if the values are equal, <code>-1</code> if the\n  first value is smaller, <code>1</code> if the first value is larger, <code>NaN</code> if\n  they cannot be compared"
					},
					"since": "1.29.1",
					"parameters": [
						{
							"name": "vValue1",
							"type": "any",
							"optional": false,
							"description": "the first value to compare"
						},
						{
							"name": "vValue2",
							"type": "any",
							"optional": false,
							"description": "the second value to compare"
						},
						{
							"name": "bAsDecimal",
							"type": "string",
							"optional": true,
							"defaultValue": false,
							"description": "if <code>true</code>, the string values <code>vValue1</code> and <code>vValue2</code> are\n  compared as a decimal number (only sign, integer and fraction digits; no exponential\n  format). Otherwise they are recognized by looking at their types."
						}
					],
					"description": "Compares the given OData values based on their type. All date and time types can also be\ncompared with a number. This number is then interpreted as the number of milliseconds that\nthe corresponding date or time object should hold."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the formatted value"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "any",
							"optional": false,
							"description": "the value to format"
						},
						{
							"name": "sType",
							"type": "string",
							"optional": false,
							"description": "the EDM type (e.g. Edm.Decimal)"
						}
					],
					"description": "Formats a JavaScript value according to the given\n<a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\nEDM type</a>."
				},
				{
					"name": "getComparator",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "the comparator function taking two values of the given type and returning <code>0</code>\n  if the values are equal, <code>-1</code> if the first value is smaller, <code>1</code> if\n  the first value is larger and <code>NaN</code> if they cannot be compared (e.g. one value\n  is <code>null</code> or <code>undefined</code>)"
					},
					"since": "1.29.1",
					"parameters": [
						{
							"name": "sEdmType",
							"type": "string",
							"optional": false,
							"description": "the EDM type"
						}
					],
					"description": "Returns a comparator function optimized for the given EDM type."
				},
				{
					"name": "setOrigin",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the service URL with the added origin."
					},
					"since": "1.30.7",
					"parameters": [
						{
							"name": "sServiceURL",
							"type": "string",
							"optional": false,
							"description": "the URL which will be enriched with an origin"
						},
						{
							"name": "vParameters",
							"type": "object|string",
							"optional": false,
							"parameterProperties": {
								"alias": {
									"name": "alias",
									"type": "string",
									"optional": false,
									"description": "the system alias which will be used as the origin"
								},
								"system": {
									"name": "system",
									"type": "string",
									"optional": false,
									"description": "the system id which will be used as the origin"
								},
								"client": {
									"name": "client",
									"type": "string",
									"optional": false,
									"description": "the system's client"
								},
								"force": {
									"name": "force",
									"type": "string",
									"optional": false,
									"description": "setting this flag to 'true' overrides the already existing origin"
								}
							},
							"description": "if string then it is asumed its the system alias, else if the argument is an object then additional Parameters can be given"
						}
					],
					"description": "Adds an origin to the given service URL.\nIf an origin is already present, it will only be replaced if the parameters object contains the flag \"force: true\".\nIn case the URL already contains URL parameters, these will be kept.\nAs a parameter, a sole alias is sufficient. The parameters vParameters.system and vParameters.client however have to be given in pairs.\nIn case all three origin specifying parameters are given (system/client/alias), the alias has precedence.\n\nExamples:\nsetOrigin(\"/backend/service/url/\", \"DEMO_123\");\n- result: /backend/service/url;o=DEMO_123/\n\nsetOrigin(\"/backend/service/url;o=OTHERSYS8?myUrlParam=true&x=4\", {alias: \"DEMO_123\", force: true});\n- result /backend/service/url;o=DEMO_123?myUrlParam=true&x=4\n\nsetOrigin(\"/backend/service/url/\", {system: \"DEMO\", client: 134});\n- result /backend/service/url;o=sid(DEMO.134)/"
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.model.odata.OperationMode",
			"basename": "OperationMode",
			"resource": "sap/ui/model/odata/OperationMode.js",
			"module": "sap/ui/model/odata/OperationMode",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Different modes for executing service operations (filtering, sorting)",
			"properties": [
				{
					"name": "Auto",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "With operation mode <code>Auto</code>, operations are either processed on the client or\non the server. The exact behavior depends on the configured {@link sap.ui.model.odata.CountMode CountMode},\non the <code>threshold</code> and on the size of the data:\n<ol>\n<li>Count Modes <code>Request</code> and <code>Both</code><br>\nInitially the binding will issue a <code>$count</code> request without any filters/sorters.\n  <ol type=\"a\">\n  <li>If the count is lower or equal to the threshold, the binding will behave like in operation mode\n      <code>Client</code>, and a data request for all entries is issued.</li>\n  <li>If the count exceeds the threshold, the binding will behave like in operation mode <code>Server</code>.</li>\n  </ol>\n</li>\n\n<li>Count Modes <code>Inline</code> or </code>InlineRepeat<code><br>\nThe initial request tries to fetch as many entries as configured with the <code>threshold</code> parameter,\nwithout specifying any filters/sorters. In addition, the query parameter <code>$inlinecount</code> is added.\nThe binding assumes, that the threshold given by the application can be met, but it adapts its behavior\ndepending on the response:\n  <ol type=\"a\">\n  <li>If the response returns fewer (or just as many) entries as the threshold, the binding will behave exactly\n      like when using the operation mode <code>Client</code>. Initially configured filters/sorters will be\n      applied afterwards on the client.</li>\n  <li>If the <code>$inlinecount</code> is higher than the threshold, the binding will behave like in operation\n      mode <code>Server</code>. In this case a new data request containing the initially set filters/sorters\n      will be issued.</li>\n  </ol>\nIt is up to the application to chose an appropriate threshold value. Ideally, it should be high enough\nto fetch all data in the most common scenarios (to avoid a fallback to operation mode <code>Server</code>,\nrequiring an additional request), but it also should be low enough to ensure a fast response in case there\nis much more data than expected.\n</li>\n<li>Count mode <code>None</code> is not supported together with operation mode <code>Auto</code></li>\n</ol>"
				},
				{
					"name": "Client",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Operations are executed on the client, all entries must be available to be able to do so.\nThe initial request fetches the complete collection, filtering and sorting does not trigger further requests."
				},
				{
					"name": "Server",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Operations are executed on the OData service, by appending corresponding URL parameters\n(<code>$filter</code>, <code>$orderby</code>).\nEach change in filtering or sorting triggers a new request to the server."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.odata.type",
			"basename": "type",
			"resource": "sap/ui/model/odata/type/ODataType.js",
			"module": "sap/ui/model/odata/type/ODataType",
			"static": true,
			"visibility": "public",
			"description": "The types in this namespace are {@link sap.ui.model.SimpleType simple types} corresponding\nto OData primitive types for both\n{@link http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem OData V2}\nand\n{@link http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html OData V4} (see\n\"4.4 Primitive Types\").\n\nThey can be used in any place where simple types are allowed (and the model representation\nmatches), but they are of course most valuable when used in bindings to a\n{@link sap.ui.model.odata.v2.ODataModel} or {@link sap.ui.model.odata.v4.ODataModel}.\n\n<b>Example:</b>\n<pre>\n  &lt;Label text=\"ID\"/&gt;\n  &lt;Input value=\"{path : 'id', type : 'sap.ui.model.odata.type.String',\n      constraints : {nullable : false, maxLength : 10}}\"/&gt;\n  &lt;Label text=\"valid through\"/&gt;\n  &lt;Input value=\"{path : 'validThrough', type : 'sap.ui.model.odata.type.DateTime',\n      constraints : {displayFormat : 'Date'}}\"/&gt;\n</pre>\n\nAll types support formatting from the representation used in ODataModel (\"model format\") to\nvarious representations used by UI elements (\"target type\") and vice versa. Additionally they\nsupport validating a given value against the type's constraints.\n\nThe following target types may be supported:\n<table>\n<tr><th>Type</th><th>Description</th></tr>\n<tr><td><code>string</code></td><td>The value is converted to a <code>string</code>, so that it\ncan be displayed in an input field. Supported by all types.</td></tr>\n<tr><td><code>boolean</code></td><td>The value is converted to a <code>Boolean</code>, so that\nit can be displayed in a checkbox. Only supported by\n{@link sap.ui.model.odata.type.Boolean}.</td></tr>\n<tr><td><code>int</code></td><td>The value is converted to an integer (as <code>number</code>).\nMay cause truncation of decimals and overruns. Supported by all numeric types.</td></tr>\n<tr><td><code>float</code></td><td>The value is converted to a <code>number</code>. Supported by\nall numeric types.</td></tr>\n<tr><td><code>any</code></td><td>A technical format. The value is simply passed through. Only\nsupported by <code>format</code>, not by <code>parse</code>. Supported by all types.</td></tr>\n</table>\n\nAll constraints relevant for OData V2 may be given as strings besides their natural types (e.g.\n<code>nullable : \"false\"</code> or <code>maxLength : \"10\"</code>). This makes the life of\ntemplate processors easier, but is not needed for OData V4.\n\n<b>Handling of <code>null</code></b>:\n\nAll types handle <code>null</code> in the same way. When formatting to <code>string</code>, it\nis simply passed through (and <code>undefined</code> becomes <code>null</code>, too). When\nparsing from <code>string</code>, it is also passed through.  Additionally,\n{@link sap.ui.model.odata.type.String String} and {@link sap.ui.model.odata.type.Guid Guid}\nconvert the empty string to <code>null</code> when parsing. <code>validate</code> decides based\non the constraint <code>nullable</code>: If <code>false</code>, <code>null</code> is not\naccepted and leads to a (locale-dependent) <code>ParseException</code>.\n\nThis ensures that the user cannot clear an input field bound to an attribute with non-nullable\ntype. However it does not ensure that the user really entered something if the field was empty\nbefore."
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Boolean",
			"basename": "Boolean",
			"resource": "sap/ui/model/odata/type/Boolean.js",
			"module": "sap/ui/model/odata/type/Boolean",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Boolean</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>boolean</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in the interface of {@link sap.ui.model.SimpleType}; this\n  type ignores them since it does not support any format options"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for an OData primitive type <code>Edm.Boolean</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Boolean with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean|string",
						"description": "the formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "the value to be formatted"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"boolean\", \"string\", or a type with one of these types as\n  its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  If the target type (or its primitive type) is \"string\", the result is \"Yes\" or \"No\" in the\n  current {@link sap.ui.core.Configuration#getLanguage language}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given boolean value to the given target type."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Boolean."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "the parsed value"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "boolean|string",
							"optional": false,
							"description": "the value to be parsed; the empty string and <code>null</code> are parsed to\n  <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>vValue</code>); may be \"boolean\", \"string\", or\n  a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value from the given type to a boolean."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "bValue",
							"type": "boolean",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the given\nconstraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Byte",
			"basename": "Byte",
			"resource": "sap/ui/model/odata/type/Byte.js",
			"module": "sap/ui/model/odata/type/Byte",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.1",
			"extends": "sap.ui.model.odata.type.Int",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Byte</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>number</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.NumberFormat}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link sap.ui.model.odata.type.Int#validateValue validateValue} throws an\n  error if any constraint is violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.Byte</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Byte with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Byte."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "getRange",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "the range"
					},
					"description": "Returns the type's supported range as object with properties <code>minimum</code> and\n<code>maximum</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Date",
			"basename": "Date",
			"resource": "sap/ui/model/odata/type/Date.js",
			"module": "sap/ui/model/odata/type/Date",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData V4 primitive type <code>Edm.Date</code>.\n\nIn {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a\n<code>string</code> in the format \"yyyy-mm-dd\".",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.DateFormat}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for an OData primitive type <code>Edm.Date</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Date with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be formatted"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Date."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the parsed value"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be parsed, maps <code>\"\"</code> to <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>sValue</code>); must be \"string\", or a type\n  with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value to a date."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ngiven constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.DateTime",
			"basename": "DateTime",
			"resource": "sap/ui/model/odata/type/DateTime.js",
			"module": "sap/ui/model/odata/type/DateTime",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.DateTimeBase",
			"description": "This class represents the OData V2 primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.DateTime</code></a>.\n\nIf you want to display a date and a time, prefer {@link\nsap.ui.model.odata.type.DateTimeOffset}, specifically designed for this purpose.\n\nUse <code>DateTime</code> with the SAP-specific annotation <code>display-format=Date</code>\n(resp. the constraint <code>displayFormat: \"Date\"</code>) to display only a date.\n\nIn {@link sap.ui.model.odata.v2.ODataModel} this type is represented as a\n<code>Date</code>. With the constraint <code>displayFormat: \"Date\"</code>, the time zone is\nUTF and the time part is ignored, otherwise it is a date/time value in local time.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.DateFormat}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							},
							"displayFormat": {
								"name": "displayFormat",
								"type": "string",
								"optional": true,
								"description": "may be \"Date\", in this case only the date part is used, the time part is always 00:00:00\n  and the time zone is UTC to avoid time-zone-related problems"
							}
						},
						"description": "constraints; {@link sap.ui.model.odata.type.DateTimeBase#validateValue validateValue}\n  throws an error if any constraint is violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.DateTime</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.DateTime with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.DateTimeBase.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.DateTime."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.DateTimeBase",
			"basename": "DateTimeBase",
			"resource": "sap/ui/model/odata/type/DateTimeBase.js",
			"module": "sap/ui/model/odata/type/DateTimeBase",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This is an abstract base class for the OData primitive types\n  <code>Edm.DateTime</code> and <code>Edm.DateTimeOffset</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "Type-specific format options; see subtypes"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"isDateOnly": {
								"name": "isDateOnly",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "If <code>true</code>, only the date part is used, the time part is always 00:00:00 and\n  the time zone is UTC to avoid time-zone-related problems"
							},
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "If <code>true</code>, the value <code>null</code> is accepted"
							},
							"precision": {
								"name": "precision",
								"type": "boolean",
								"optional": true,
								"defaultValue": 0,
								"description": "The number of decimal places allowed in the seconds portion of a valid string value\n  (OData V4 only); only integer values between 0 and 12 are valid (since 1.37.0)"
							}
						},
						"description": "Constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Base constructor for the primitive types <code>Edm.DateTime</code> and\n<code>Edm.DateTimeOffset</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.DateTimeBase with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "Date|string",
						"description": "The formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "oValue",
							"type": "Date",
							"optional": false,
							"description": "The value to be formatted, which is represented in the model as a <code>Date</code>\n  instance (OData V2)"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "The target type, may be \"any\", \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.DateTimeBase."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "Date",
						"description": "The parsed value"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The value to be parsed; the empty string and <code>null</code> are parsed to\n  <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "The source type (the expected type of <code>sValue</code>), must be \"string\", or a type\n  with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value to a <code>Date</code> instance (OData V2)."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"since": "1.27.0",
					"parameters": [
						{
							"name": "oValue",
							"type": "Date",
							"optional": false,
							"description": "The value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ndefined constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.DateTimeOffset",
			"basename": "DateTimeOffset",
			"resource": "sap/ui/model/odata/type/DateTimeOffset.js",
			"module": "sap/ui/model/odata/type/DateTimeOffset",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.DateTimeBase",
			"description": "This class represents the OData primitive type <a\n  href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n  <code>Edm.DateTimeOffset</code></a>.\n\n  In {@link sap.ui.model.odata.v2.ODataModel} this type is represented as a\n  <code>Date</code> instance in local time. In {@link sap.ui.model.odata.v4.ODataModel} this\n  type is represented as a <code>string</code> like \"2014-11-27T13:47:26Z\". See parameter\n  <code>oConstraints.V4</code> for more information.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "Format options as defined in {@link sap.ui.core.format.DateFormat}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "If <code>true</code>, the value <code>null</code> is accepted"
							},
							"precision": {
								"name": "precision",
								"type": "boolean",
								"optional": true,
								"defaultValue": 0,
								"description": "The number of decimal places allowed in the seconds portion of a valid string value\n  (OData V4 only); only integer values between 0 and 12 are valid (since 1.37.0)"
							},
							"V4": {
								"name": "V4",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "Whether OData V4 semantics apply and the model representation is expected to be a\n  <code>string</code> like \"2014-11-27T13:47:26Z\" (see {@link #parseValue} and\n  {@link #validateValue}); this type automatically adapts itself whenever it is used within\n  an OData V4 model via {@link sap.ui.model.odata.v4.ODataPropertyBinding#setType}."
							}
						},
						"description": "Constraints; {@link sap.ui.model.odata.type.DateTimeBase#validateValue validateValue}\n  throws an error if any constraint is violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.DateTimeOffset</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.DateTimeOffset with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.DateTimeBase.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "Date|string",
						"description": "The formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "vValue",
							"type": "Date|string",
							"optional": false,
							"description": "The value to be formatted, which is represented in the model as a <code>Date</code>\n  instance (OData V2) or as a string like \"2014-11-27T13:47:26Z\" (OData V4); both\n  representations are accepted independent of the model's OData version"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "The target type, may be \"any\", \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.DateTimeOffset."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "Date|string",
						"description": "The parsed value"
					},
					"since": "1.27.0",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The value to be parsed; the empty string and <code>null</code> are parsed to\n  <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "The source type (the expected type of <code>sValue</code>), must be \"string\", or a type\n  with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value to a <code>Date</code> instance (OData V2) or a string like\n\"2014-11-27T13:47:26Z\" (OData V4), depending on the model's OData version."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"since": "1.27.0",
					"parameters": [
						{
							"name": "vValue",
							"type": "any",
							"optional": false,
							"description": "The value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ndefined constraints, depending on the model's OData version."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Decimal",
			"basename": "Decimal",
			"resource": "sap/ui/model/odata/type/Decimal.js",
			"module": "sap/ui/model/odata/type/Decimal",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Decimal</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>string</code>. It never uses exponential format (\"1e-5\").",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.NumberFormat}. In contrast to\n  NumberFormat <code>groupingEnabled</code> defaults to <code>true</code>.\n  Note that <code>maxFractionDigits</code> and <code>minFractionDigits</code> are set to\n  the value of the constraint <code>scale</code> unless it is \"variable\". They can however\n  be overwritten."
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"maximum": {
								"name": "maximum",
								"type": "string",
								"optional": true,
								"description": "the maximum value allowed"
							},
							"maximumExclusive": {
								"name": "maximumExclusive",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "if <code>true</code>, the maximum value itself is not allowed"
							},
							"minimum": {
								"name": "minimum",
								"type": "string",
								"optional": true,
								"description": "the minimum value allowed"
							},
							"minimumExclusive": {
								"name": "minimumExclusive",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "if <code>true</code>, the minimum value itself is not allowed"
							},
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							},
							"precision": {
								"name": "precision",
								"type": "int|string",
								"optional": true,
								"defaultValue": "Infinity",
								"description": "the maximum number of digits allowed"
							},
							"scale": {
								"name": "scale",
								"type": "int|string",
								"optional": true,
								"defaultValue": 0,
								"description": "the maximum number of digits allowed to the right of the decimal point; the number must be\n  less than <code>precision</code> (if given). As a special case, \"variable\" is supported.\n\n  The number of digits to the right of the decimal point may vary from zero to\n  <code>scale</code>, and the number of digits to the left of the decimal point may vary\n  from one to <code>precision</code> minus <code>scale</code>.\n\n  The number is always displayed with exactly <code>scale</code> digits to the right of the\n  decimal point (unless <code>scale</code> is \"variable\")."
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.Decimal</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Decimal with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "number|string",
						"description": "the formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be formatted, which is represented as a string in the model"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"float\", \"int\", \"string\", or a type with one of these types\n  as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type. When formatting to \"string\" the type's\nconstraint <code>scale</code> is taken into account."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Decimal."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the parsed value"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "string|number",
							"optional": false,
							"description": "the value to be parsed; the empty string and <code>null</code> are parsed to\n  <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>vValue</code>); may be \"float\", \"int\",\n  \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value, which is expected to be of the given type, to a decimal in\n<code>string</code> representation."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ndefined constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Double",
			"basename": "Double",
			"resource": "sap/ui/model/odata/type/Double.js",
			"module": "sap/ui/model/odata/type/Double",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Double</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>number</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.NumberFormat}. In contrast to\n  NumberFormat <code>groupingEnabled</code> defaults to <code>true</code>."
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.Double</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Double with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "number|string",
						"description": "the formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "number|string",
							"optional": false,
							"description": "the value to be formatted, which is represented as a number in the model"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"float\", \"int\", \"string\", or a type with one of these types\n  as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type. When formatting to \"string\", very large\nor very small values are formatted to the exponential format (e.g. \"-3.14 E+15\")."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Double."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "number",
						"description": "the parsed value"
					},
					"since": "1.29.0",
					"parameters": [
						{
							"name": "vValue",
							"type": "string|number",
							"optional": false,
							"description": "the value to be parsed; the empty string and <code>null</code> are parsed to\n  <code>null</code>; note that there is no way to enter <code>Infinity</code> or\n  <code>NaN</code> values"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>vValue</code>); may be \"float\", \"int\",\n  \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value, which is expected to be of the given type, to an Edm.Double in\n<code>number</code> representation."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"since": "1.29.0",
					"parameters": [
						{
							"name": "fValue",
							"type": "number",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ndefined constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Guid",
			"basename": "Guid",
			"resource": "sap/ui/model/odata/type/Guid.js",
			"module": "sap/ui/model/odata/type/Guid",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Guid</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>string</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in the interface of {@link sap.ui.model.SimpleType}; this\n  type ignores them since it does not support any format options"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for an OData primitive type <code>Edm.Guid</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Guid with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be formatted"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Guid."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the parsed value"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be parsed, maps <code>\"\"</code> to <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>sValue</code>); must be \"string\", or\n  a type with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value to a GUID."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ngiven constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Int",
			"basename": "Int",
			"resource": "sap/ui/model/odata/type/Int.js",
			"module": "sap/ui/model/odata/type/Int",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This is an abstract base class for integer-based\n<a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\nOData primitive types</a> like <code>Edm.Int16</code> or <code>Edm.Int32</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "type-specific format options; see subtypes"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for a new <code>Int</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Int with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "number|string",
						"description": "the formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"parameters": [
						{
							"name": "iValue",
							"type": "number",
							"optional": false,
							"description": "the value in model representation to be formatted"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"int\", \"float\", \"string\", or a type with one of these types\n  as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type.\nWhen formatting to <code>string</code> the format options are used."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Int."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "number",
						"description": "the parsed value"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "number|string",
							"optional": false,
							"description": "the value to be parsed. The empty string and <code>null</code> are parsed to\n  <code>null</code>."
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>vValue</code>); may be \"float\", \"int\",\n  \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value, which is expected to be of the given source type, to an Int in\nnumber representation."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "iValue",
							"type": "number",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ndefined constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Int16",
			"basename": "Int16",
			"resource": "sap/ui/model/odata/type/Int16.js",
			"module": "sap/ui/model/odata/type/Int16",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.Int",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Int16</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>number</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.NumberFormat}. In contrast to\n  NumberFormat <code>groupingEnabled</code> defaults to <code>true</code>."
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link sap.ui.model.odata.type.Int#validateValue validateValue} throws an\n  error if any constraint is violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.Int16</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Int16 with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Int16."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "getRange",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "the range"
					},
					"description": "Returns the type's supported range as object with properties <code>minimum</code> and\n<code>maximum</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Int32",
			"basename": "Int32",
			"resource": "sap/ui/model/odata/type/Int32.js",
			"module": "sap/ui/model/odata/type/Int32",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.Int",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Int32</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>number</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.NumberFormat}. In contrast to\n  NumberFormat <code>groupingEnabled</code> defaults to <code>true</code>."
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link sap.ui.model.odata.type.Int#validateValue validateValue} throws an\n  error if any constraint is violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.Int32</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Int32 with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Int32."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "getRange",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "the range"
					},
					"description": "Returns the type's supported range as object with properties <code>minimum</code> and\n<code>maximum</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Int64",
			"basename": "Int64",
			"resource": "sap/ui/model/odata/type/Int64.js",
			"module": "sap/ui/model/odata/type/Int64",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.1",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Int64</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>string</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.NumberFormat}. In contrast to\n  NumberFormat <code>groupingEnabled</code> defaults to <code>true</code>."
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.Int64</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Int64 with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "number|string",
						"description": "the formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be formatted, which is represented as a string in the model"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"float\", \"int\", \"string\", or a type with one of these types\n  as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Int64."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the parsed value"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "string|number",
							"optional": false,
							"description": "the value to be parsed; the empty string and <code>null</code> are parsed to\n  <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>vValue</code>); may be \"float\", \"int\",\n  \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value, which is expected to be of the given type, to an Int64 in\n<code>string</code> representation."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ndefined constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.ODataType",
			"basename": "ODataType",
			"resource": "sap/ui/model/odata/type/ODataType.js",
			"module": "sap/ui/model/odata/type/ODataType",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.SimpleType",
			"description": "This class is an abstract base class for all OData primitive types (see {@link\nhttp://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element\nOData V4 Edm Types} and\n{@link http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\nOData V2 Edm Types}). All subtypes implement the interface of\n{@link sap.ui.model.SimpleType}. That means they implement next to the constructor:\n<ul>\n<li>{@link sap.ui.model.SimpleType#getName getName}</li>\n<li>{@link sap.ui.model.SimpleType#formatValue formatValue}</li>\n<li>{@link sap.ui.model.SimpleType#parseValue parseValue}</li>\n<li>{@link sap.ui.model.SimpleType#validateValue validateValue}</li>\n</ul>\n\nAll ODataTypes are immutable. All format options and constraints are given to the\nconstructor, they cannot be modified later.\n\nAll ODataTypes use a locale-specific message when throwing an error caused by invalid\nuser input (e.g. if {@link sap.ui.model.odata.type.Double#parseValue Double.parseValue}\ncannot parse the given value to a number, or if any type's {@link #validateValue\nvalidateValue} gets a <code>null</code>, but the constraint <code>nullable</code> is\n<code>false</code>).",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "type-specific format options; see subtypes"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"description": "type-specific constraints (e.g. <code>oConstraints.nullable</code>), see subtypes"
					}
				],
				"description": "Constructor for a new <code>ODataType</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.ODataType with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}."
				},
				{
					"name": "getInterface",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "this"
					}
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.ODataType."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Raw",
			"basename": "Raw",
			"resource": "sap/ui/model/odata/type/Raw.js",
			"module": "sap/ui/model/odata/type/Raw",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents a placeholder for all unsupported OData primitive types. It can\n  only be used to retrieve raw values \"as is\" (i.e. <code>formatValue(vValue, \"any\")</code>),\n  but not to actually convert to or from any other representation or to validate.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "Must be <code>undefined</code>"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"description": "Must be <code>undefined</code>"
					}
				],
				"description": "Constructor for a placeholder for all unsupported OData primitive types."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Raw with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The raw value \"as is\""
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "vValue",
							"type": "any",
							"optional": false,
							"description": "The raw value to be retrieved \"as is\""
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "The target type; must be \"any\""
						}
					],
					"description": "Formats the given value to the given target type."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Raw."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The type's name"
					},
					"since": "1.37.0",
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.SByte",
			"basename": "SByte",
			"resource": "sap/ui/model/odata/type/SByte.js",
			"module": "sap/ui/model/odata/type/SByte",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.Int",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.SByte</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>number</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.NumberFormat}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link sap.ui.model.odata.type.Int#validateValue validateValue} throws an\n  error if any constraint is violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.SByte</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.SByte with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.SByte."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "getRange",
					"visibility": "protected",
					"returnValue": {
						"type": "object",
						"description": "the range"
					},
					"description": "Returns the type's supported range as object with properties <code>minimum</code> and\n<code>maximum</code>."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Single",
			"basename": "Single",
			"resource": "sap/ui/model/odata/type/Single.js",
			"module": "sap/ui/model/odata/type/Single",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.1",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Single</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>number</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.NumberFormat}. In contrast to\n  NumberFormat <code>groupingEnabled</code> defaults to <code>true</code>."
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for a primitive type <code>Edm.Single</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Single with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "number|string",
						"description": "the formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "string|number",
							"optional": false,
							"description": "the value to be formatted, which is represented as a number in the model"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"float\", \"int\", \"string\", or a type with one of these types\n  as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Single."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "number",
						"description": "the parsed value"
					},
					"since": "1.29.0",
					"parameters": [
						{
							"name": "vValue",
							"type": "string|number",
							"optional": false,
							"description": "the value to be parsed; the empty string and <code>null</code> are parsed to\n  <code>null</code>; note that there is no way to enter <code>Infinity</code> or\n  <code>NaN</code> values"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>vValue</code>); may be \"float\", \"int\",\n  \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value, which is expected to be of the given type, to an Edm.Single in\n<code>number</code> representation."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"since": "1.29.0",
					"parameters": [
						{
							"name": "fValue",
							"type": "number",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ndefined constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.String",
			"basename": "String",
			"resource": "sap/ui/model/odata/type/String.js",
			"module": "sap/ui/model/odata/type/String",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.String</code></a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel}\nthis type is represented as a <code>string</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in the interface of {@link sap.ui.model.SimpleType}; this\n  type ignores them since it does not support any format options"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"isDigitSequence": {
								"name": "isDigitSequence",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": false,
								"description": "if <code>true</code>, the value is handled as a sequence of digits; while formatting\n  leading zeros are removed from the value and while parsing the value is enhanced with\n  leading zeros (if a maxLength constraint is given) or leading zeros are removed from the\n  value (if no maxLength constraint is given); this constraint is supported since 1.35.0.\n  To make this type behave as ABAP type NUMC, use\n  <code>oConstraints.isDigitSequence=true</code> together with\n  <code>oConstraints.maxLength</code>."
							},
							"maxLength": {
								"name": "maxLength",
								"type": "int|string",
								"optional": true,
								"description": "the maximal allowed length of the string; unlimited if not defined"
							},
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for an OData primitive type <code>Edm.String</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.String with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "string|number|boolean",
						"description": "the formatted output value in the target type; <code>undefined</code> is always formatted\n  to <code>null</code>; <code>null</code> is formatted to \"\" if the target type is \"string\"."
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be formatted"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"boolean\", \"float\", \"int\" or \"string\".\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type.\nIf <code>isDigitSequence</code> constraint of this type is set to <code>true</code> and the\ntarget type is any or string and the given value contains only digits, the leading zeros are\ntruncated."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.String."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the parsed value"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "string|number|boolean",
							"optional": false,
							"description": "the value to be parsed, maps <code>\"\"</code> to <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>vValue</code>).\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value which is expected to be of the given type to a string.\nIf <code>isDigitSequence</code> constraint of this type is set to <code>true</code> and\nthe parsed string is a sequence of digits, then the parsed string is either enhanced with\nleading zeros, if <code>maxLength</code> constraint is given, or leading zeros are removed\nfrom parsed string."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ndefined constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.Time",
			"basename": "Time",
			"resource": "sap/ui/model/odata/type/Time.js",
			"module": "sap/ui/model/odata/type/Time",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData V2 primitive type <a\nhref=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\">\n<code>Edm.Time</code></a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as an\nobject with two properties:\n<ul>\n<li><code>__edmType</code> with the value \"Edm.Time\"\n<li><code>ms</code> with the number of milliseconds since midnight\n</ul>",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "format options as defined in {@link sap.ui.core.format.DateFormat}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean|string",
								"optional": true,
								"defaultValue": true,
								"description": "if <code>true</code>, the value <code>null</code> is accepted"
							}
						},
						"description": "constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for an OData primitive type <code>Edm.Time</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.Time with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"__edmType": {
									"name": "__edmType",
									"type": "string",
									"optional": false,
									"description": "the type has to be \"Edm.Time\""
								},
								"ms": {
									"name": "ms",
									"type": "number",
									"optional": false,
									"description": "the time in milliseconds"
								}
							},
							"description": "the value in model representation to be formatted."
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "the target type; may be \"any\", \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Formats the given value to the given target type"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.Time."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the type's name"
					},
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the parsed value as described in {@link #formatValue formatValue}"
					},
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "the value to be parsed, maps <code>\"\"</code> to <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "the source type (the expected type of <code>sValue</code>); must be \"string\", or a type\n  with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value, which is expected to be of the given type, to a time object."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "oValue",
							"type": "object",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validates whether the given value in model representation is valid and meets the\ndefined constraints."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.type.TimeOfDay",
			"basename": "TimeOfDay",
			"resource": "sap/ui/model/odata/type/TimeOfDay.js",
			"module": "sap/ui/model/odata/type/TimeOfDay",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"extends": "sap.ui.model.odata.type.ODataType",
			"description": "This class represents the OData V4 primitive type {@link\n  http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element\n  <code>Edm.TimeOfDay</code>}.\n  In {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a\n  <code>string</code>.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "Format options as defined in {@link sap.ui.core.format.DateFormat}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"nullable": {
								"name": "nullable",
								"type": "boolean",
								"optional": true,
								"defaultValue": true,
								"description": "If <code>true</code>, the value <code>null</code> is accepted"
							},
							"precision": {
								"name": "precision",
								"type": "number",
								"optional": true,
								"defaultValue": 0,
								"description": "The number of decimal places allowed in the seconds portion of a valid value; must be an\n  integer between 0 and 12, otherwise the default value 0 is used."
							}
						},
						"description": "Constraints; {@link #validateValue validateValue} throws an error if any constraint is\n  violated"
					}
				],
				"description": "Constructor for an OData primitive type <code>Edm.TimeOfDay</code>."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.type.TimeOfDay with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The formatted output value in the target type; <code>undefined</code> or <code>null</code>\n  are formatted to <code>null</code>"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The value to be formatted, which is represented as a string in the model"
						},
						{
							"name": "sTargetType",
							"type": "string",
							"optional": false,
							"description": "The target type, may be \"any\", \"string\", or a type with one of these types as its\n  {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information"
						}
					],
					"description": "Formats the given value to the given target type."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.type.TimeOfDay."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The type's name"
					},
					"since": "1.37.0",
					"description": "Returns the type's name."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The parsed value"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The value to be parsed, maps <code>\"\"</code> to <code>null</code>"
						},
						{
							"name": "sSourceType",
							"type": "string",
							"optional": false,
							"description": "The source type (the expected type of <code>sValue</code>), must be \"string\", or a type\n  with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}.\n  See {@link sap.ui.model.odata.type} for more information."
						}
					],
					"description": "Parses the given value, which is expected to be of the given type, to a string with an\nOData V4 Edm.TimeOfDay value."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sValue",
							"type": "string",
							"optional": false,
							"description": "The value to be validated"
						}
					],
					"description": "Validates the given value in model representation and meets the type's constraints."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.model.odata.UpdateMethod",
			"basename": "UpdateMethod",
			"resource": "sap/ui/model/odata/UpdateMethod.js",
			"module": "sap/ui/model/odata/UpdateMethod",
			"export": "",
			"static": true,
			"visibility": "public",
			"description": "Different methods for update operations.",
			"properties": [
				{
					"name": "Merge",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Update requests will be send with HTTP method <code>MERGE</code>."
				},
				{
					"name": "Put",
					"visibility": "public",
					"static": true,
					"type": "string",
					"description": "Update requests will be send with HTTP method <code>PUT</code>."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.odata.v2",
			"basename": "v2",
			"resource": "sap/ui/model/odata/v2/ODataModel.js",
			"module": "sap/ui/model/odata/v2/ODataModel",
			"static": true,
			"visibility": "public",
			"description": "OData-based DataBinding"
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v2.ODataAnnotations",
			"basename": "ODataAnnotations",
			"resource": "sap/ui/model/odata/v2/ODataAnnotations.js",
			"module": "sap/ui/model/odata/v2/ODataAnnotations",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"extends": "sap.ui.base.EventProvider",
			"description": "Annotation loader for OData V2 services",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oMetadata",
						"type": "sap.ui.model.odata.ODataMetadata",
						"optional": false,
						"description": "Metadata object with the metadata information needed to parse the annotations"
					},
					{
						"name": "mOptions",
						"type": "map",
						"optional": false,
						"parameterProperties": {
							"source": {
								"name": "source",
								"type": "string|map|string[]|map[]",
								"optional": false,
								"description": "One or several annotation sources. See {@link sap.ui.model.odata.v2.ODataAnnotations#addSource} for more details"
							},
							"headers": {
								"name": "headers",
								"type": "map",
								"optional": false,
								"description": "A map of headers to be sent with every request. See {@link sap.ui.model.odata.v2.ODataAnnotations#setHeaders} for more details"
							},
							"skipMetadata": {
								"name": "skipMetadata",
								"type": "boolean",
								"optional": false,
								"description": "If set to <code>true</code>, the metadata document will not be parsed for annotations;"
							}
						},
						"description": "Obligatory options"
					}
				],
				"description": "Creates a new instance of the ODataAnnotations annotation loader."
			},
			"methods": [
				{
					"name": "addSource",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "The promise to (load,) parse and merge the given source(s). The Promise resolves on success\n         with an array of maps containing properties <code>source</code> and <code>data</code>. See the parameters of the <code>success</code>\n         event for more details. The promise fails in case at least one source could not be (loaded,) parsed or\n         merged with an array of objects containing Errors and/or Success objects."
					},
					"parameters": [
						{
							"name": "vSource",
							"type": "string|string[]|ODataAnnotations~Source|ODataAnnotations~Source[]",
							"optional": false,
							"description": "One or several\n       annotation source(s). Can be either a string or a map of the type <code>ODataAnnotations~Source</code> or an array\n       containing several (either strings or source objects)."
						}
					],
					"description": "Adds one or several sources to the annotation loader. Sources will be loaded instantly but merged only after\nthe previously added source has either been successfully merged or failed."
				},
				{
					"name": "attachAllFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback. This function will be called in the context of the oListener\n       object if given as the next argument."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object to use as context of the callback. If empty, the global context is used."
						}
					],
					"description": "This event exists for compatibility with the old Annotation loader\nAttaches the given callback to the <code>allFailed</code> event. This event is fired when no annotation from a group of\nsources was successfully (loaded,) parsed and merged.\nThe parameter <code>result</code> will be set on the event argument and contains an array of Errors in the order in which\nthe sources had been added."
				},
				{
					"name": "attachError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback. This function will be called in the context of the oListener\n       object if given as the next argument."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object to use as context of the callback. If empty, the global context is used."
						}
					],
					"description": "Attaches the given callback to the <code>error</code> event, which is fired whenever a source cannot be loaded, parsed or\nmerged into the annotation data.\nThe following parameters will be set on the event object that is given to the callback function:\n  <code>source</code> - A map containing the properties <code>type</code> - containing either \"url\" or \"xml\" - and <code>data</code> containing\n             the data given as source, either an URL or an XML string depending on how the source was added.\n  <code>error</code>  - An Error object describing the problem that occurred"
				},
				{
					"name": "attachFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback. This function will be called in the context of the oListener\n       object if given as the next argument."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object to use as context of the callback. If empty, the global context is used."
						}
					],
					"description": "Attaches the given callback to the <code>failed</code> event. This event is fired when at least one annotation from a group\nof sources was not successfully (loaded,) parsed or merged.\nThe parameter <code>result</code> will be set on the event argument and contains an array of Errors in the order in which\nthe sources had been added."
				},
				{
					"name": "attachLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback. This function will be called in the context of the oListener\n       object if given as the next argument."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object to use as context of the callback. If empty, the global context is used."
						}
					],
					"description": "Attaches the given callback to the <code>loaded</code> event. This event is fired when all annotations from a group of\nsources was successfully (loaded,) parsed and merged.\nThe parameter <code>result</code> will be set on the event argument and contains an array of all loaded sources as well\nas Errors in the order in which they had been added."
				},
				{
					"name": "attachSomeLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback. This function will be called in the context of the oListener\n       object if given as the next argument."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object to use as context of the callback. If empty, the global context is used."
						}
					],
					"description": "This event exists for compatibility with the old Annotation loader\nAttaches the given callback to the <code>someLoaded</code> event. This event is fired when at least one annotation from a\ngroup of sources was successfully (loaded,) parsed and merged.\nThe parameter <code>result</code> will be set on the event argument and contains an array of all loaded sources as well\nas Errors in the order in which they had been added."
				},
				{
					"name": "attachSuccess",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining."
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback. This function will be called in the context of the oListener\n       object if given as the next argument."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object to use as context of the callback. If empty, the global context is used."
						}
					],
					"description": "Attaches the given callback to the <code>success</code> event, which is fired whenever a source has been successfully\n(loaded,) parsed and merged into the annotation data.\nThe following parameters will be set on the event object that is given to the callback function:\n  <code>source</code> - A map containing the properties <code>type</code> - containing either \"url\" or \"xml\" - and <code>data</code> containing\n             the data given as source, either an URL or an XML string depending on how the source was added."
				},
				{
					"name": "detachAllFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining."
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachFailed}."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The same (if any) context object that was used when attaching to the <code>error</code> event."
						}
					],
					"description": "Detaches the given callback from the <code>allFailed</code> event.\nThe passed function and listener object must match the ones previously used for attaching to the event."
				},
				{
					"name": "detachError",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining."
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachError}."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The same (if any) context object that was used when attaching to the <code>error</code> event."
						}
					],
					"description": "Detaches the given callback from the <code>error</code> event.\nThe passed function and listener object must match the ones previously used for attaching to the event."
				},
				{
					"name": "detachFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining."
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachFailed}."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The same (if any) context object that was used when attaching to the <code>error</code> event."
						}
					],
					"description": "Detaches the given callback from the <code>failed</code> event.\nThe passed function and listener object must match the ones previously used for attaching to the event."
				},
				{
					"name": "detachLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining."
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachLoaded}."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The same (if any) context object that was used when attaching to the <code>error</code> event."
						}
					],
					"description": "Detaches the given callback from the <code>loaded</code> event.\nThe passed function and listener object must match the ones previously used for attaching to the event."
				},
				{
					"name": "detachSomeLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining."
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachSomeLoaded}."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The same (if any) context object that was used when attaching to the <code>error</code> event."
						}
					],
					"description": "Detaches the given callback from the <code>someLoaded</code> event.\nThe passed function and listener object must match the ones previously used for attaching to the event."
				},
				{
					"name": "detachSuccess",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataAnnotations",
						"description": "<code>this</code>-reference to allow method chaining."
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachSuccess}."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "The same (if any) context object that was used when attaching to the <code>success</code> event."
						}
					],
					"description": "Detaches the given callback from the <code>success</code> event.\nThe passed function and listener object must match the ones previously used for attaching to the event."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v2.ODataAnnotations with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "getAnnotationsData",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "returns annotations data"
					},
					"description": "V1 API Compatibility method. @see sap.ui.model.odata.v2.ODataAnnotations#getData\nReturns the parsed and merged annotation data object",
					"deprecated": {}
				},
				{
					"name": "getData",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "returns annotations data"
					},
					"description": "Returns the parsed and merged annotation data object"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v2.ODataAnnotations."
				},
				{
					"name": "loaded",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "The Promise that resolves/rejects after the last added sources have been processed"
					},
					"description": "Returns a promise that resolves when the annotation sources that were added up to this point were successfully\n(loaded,) parsed and merged"
				},
				{
					"name": "setHeaders",
					"visibility": "public",
					"parameters": [
						{
							"name": "mHeaders",
							"type": "map",
							"optional": false,
							"description": "the header name/value map."
						}
					],
					"description": "Set custom headers which are provided in a key/value map. These headers are used for all requests.\nThe \"Accept-Language\" header cannot be modified and is set using the core's language setting.\n\nTo remove these headers, simply set the <code>mHeaders</code> parameter to <code>{}</code>. Please also note that when calling this method\nagain all previous custom headers are removed unless they are specified again in the <code>mCustomHeaders</code> parameter."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v2.ODataContextBinding",
			"basename": "ODataContextBinding",
			"resource": "sap/ui/model/odata/v2/ODataContextBinding.js",
			"module": "sap/ui/model/odata/v2/ODataContextBinding",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.ContextBinding",
			"description": "The ContextBinding is a specific binding for a setting context for the model",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "String",
						"optional": false
					},
					{
						"name": "oContext",
						"type": "Object",
						"optional": false
					},
					{
						"name": "mParameters",
						"type": "map",
						"optional": true,
						"parameterProperties": {
							"expand": {
								"name": "expand",
								"type": "string",
								"optional": true,
								"description": "for the OData <code>$expand</code> query option parameter which should be included in the request"
							},
							"select": {
								"name": "select",
								"type": "string",
								"optional": true,
								"description": "for the OData <code>$select</code> query option parameter which should be included in the request"
							},
							"custom": {
								"name": "custom",
								"type": "map",
								"optional": true,
								"description": "an optional map of custom query parameters. Custom parameters must not start with <code>$</code>."
							}
						},
						"description": "a map which contains additional parameters for the binding."
					}
				],
				"description": "Constructor for odata.ODataContextBinding"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v2.ODataContextBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v2.ODataContextBinding."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": true,
							"description": "Update the bound control even if no data has been changed"
						},
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The group Id for the refresh"
						}
					]
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v2.ODataListBinding",
			"basename": "ODataListBinding",
			"resource": "sap/ui/model/odata/v2/ODataListBinding.js",
			"module": "sap/ui/model/odata/v2/ODataListBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.ListBinding",
			"description": "List binding implementation for oData format.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.odata.v2.ODataModel",
						"optional": false,
						"description": "Model that this list binding belongs to"
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false,
						"description": "Path into the model data, relative to the given <code>oContext</code>"
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": false,
						"description": "Context that the <code>sPath</code> is based on"
					},
					{
						"name": "aSorters",
						"type": "sap.ui.model.Sorter|sap.ui.model.Sorter[]",
						"optional": true,
						"description": "Initial sort order, can be either a sorter or an array of sorters"
					},
					{
						"name": "aFilters",
						"type": "sap.ui.model.Filter|sap.ui.model.Filter[]",
						"optional": true,
						"description": "Predefined filters, can be either a filter or an array of filters"
					},
					{
						"name": "mParameters",
						"type": "map",
						"optional": true,
						"parameterProperties": {
							"expand": {
								"name": "expand",
								"type": "string",
								"optional": true,
								"description": "Value for the OData <code>$expand</code> query parameter which should be included in the request"
							},
							"select": {
								"name": "select",
								"type": "string",
								"optional": true,
								"description": "Value for the OData <code>$select</code> query parameter which should be included in the request"
							},
							"custom": {
								"name": "custom",
								"type": "map",
								"optional": true,
								"description": "An optional map of custom query parameters. Custom parameters must not start with <code>$</code>"
							},
							"countMode": {
								"name": "countMode",
								"type": "sap.ui.model.odata.CountMode",
								"optional": true,
								"description": "Defines the count mode of this binding;\n          if not specified, the default count mode of the <code>oModel</code> is applied"
							},
							"operationMode": {
								"name": "operationMode",
								"type": "sap.ui.model.odata.OperationMode",
								"optional": true,
								"description": "Defines the operation mode of this binding"
							},
							"faultTolerant": {
								"name": "faultTolerant",
								"type": "boolean",
								"optional": true,
								"description": "Turns on the fault tolerance mode, data is not reset if a back-end request returns an error"
							},
							"batchGroupId": {
								"name": "batchGroupId",
								"type": "string",
								"optional": true,
								"description": "Sets the batch group ID to be used for requests originating from this binding"
							},
							"threshold": {
								"name": "threshold",
								"type": "int",
								"optional": true,
								"description": "Threshold that defines how many entries should be fetched at least\n                                     by the binding if <code>operationMode</code> is set to <code>Auto</code>\n                                     (See documentation for {@link sap.ui.model.odata.OperationMode.Auto})"
							}
						},
						"description": "A map which contains additional parameters for the binding"
					}
				]
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v2.ODataListBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}."
				},
				{
					"name": "filter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding",
						"description": "Reference to <code>this</code> to facilitate method chaining or a boolean success indicator"
					},
					"parameters": [
						{
							"name": "aFilters",
							"type": "sap.ui.model.Filter|sap.ui.model.Filter[]",
							"optional": false,
							"description": "Single filter or array of filter objects"
						},
						{
							"name": "sFilterType",
							"type": "sap.ui.model.FilterType",
							"optional": false,
							"description": "Type of the filter which should be adjusted, if it is not given, the standard behaviour applies"
						},
						{
							"name": "bReturnSuccess",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "Whether the success indicator should be returned instead of <code>this</code>"
						}
					],
					"description": "Filters the list.\n\nWhen using <code>sap.ui.model.Filter</code> the filters are first grouped according to their binding path.\nAll filters belonging to the same group are combined with OR and after that the\nresults of all groups are combined with AND.\nUsually this means, all filters applied to a single table column\nare combined with OR, while filters on different table columns are combined with AND.\nPlease note that a custom filter function is only supported with operation mode <code>sap.ui.model.odata.OperationMode.Client</code>."
				},
				{
					"name": "getContexts",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.Context[]",
						"description": "The array of contexts for each row of the bound list"
					},
					"parameters": [
						{
							"name": "iStartIndex",
							"type": "int",
							"optional": true,
							"description": "The start index of the requested contexts"
						},
						{
							"name": "iLength",
							"type": "int",
							"optional": true,
							"description": "The requested amount of contexts"
						},
						{
							"name": "iThreshold",
							"type": "int",
							"optional": true,
							"description": "The threshold value"
						}
					],
					"description": "Return contexts for the list."
				},
				{
					"name": "getDownloadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "URL which can be used for downloading"
					},
					"since": "1.24",
					"parameters": [
						{
							"name": "sFormat",
							"type": "string",
							"optional": false,
							"description": "Value for the $format Parameter"
						}
					],
					"description": "Get a download URL with the specified format considering the\nsort/filter/custom parameters."
				},
				{
					"name": "getLength",
					"visibility": "public",
					"returnValue": {
						"type": "number",
						"description": "The length"
					},
					"description": "Return the length of the list.\n\nIn case the final length is unknown (e.g. when searching on a large dataset), this will\nreturn an estimated length."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v2.ODataListBinding."
				},
				{
					"name": "initialize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataListBinding",
						"description": "oBinding The binding instance"
					},
					"description": "Initialize binding.\n\nFires a change if data is already available ($expand) or a refresh.\nIf metadata is not yet available, do nothing, method will be called again when\nmetadata is loaded."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": true,
							"description": "Update the bound control even if no data has been changed"
						},
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The group Id for the refresh"
						}
					],
					"description": "Refreshes the binding, check whether the model data has been changed and fire change event\nif this is the case. For server side models this should refetch the data from the server.\nTo update a control, even if no data has been changed, e.g. to reset a control after failed\nvalidation, please use the parameter bForceUpdate."
				},
				{
					"name": "sort",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding",
						"description": "Reference to <code>this</code> to facilitate method chaining or the success indicator"
					},
					"parameters": [
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter|sap.ui.model.Sorter[]",
							"optional": false,
							"description": "A new sorter or an array of sorters which define the sort order"
						},
						{
							"name": "bReturnSuccess",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "Whether the success indicator should be returned instead of <code>this</code>"
						}
					],
					"description": "Sorts the list."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v2.ODataModel",
			"basename": "ODataModel",
			"resource": "sap/ui/model/odata/v2/ODataModel.js",
			"module": "sap/ui/model/odata/v2/ODataModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Model",
			"description": "Model implementation for oData format",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "serviceUrl",
						"type": "string|object",
						"optional": false,
						"description": "Base URI of the service to request data from;\nadditional URL parameters appended here will be appended to every request.\nIf you pass an object it will be interpreted as the parameter object (second parameter).\nThen <code>mParameters.serviceUrl</code> is a required parameter."
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"json": {
								"name": "json",
								"type": "boolean",
								"optional": true,
								"defaultValue": true,
								"description": "If set true request payloads will be JSON, XML for <code>false</code>"
							},
							"user": {
								"name": "user",
								"type": "string",
								"optional": true,
								"description": "User for the service"
							},
							"password": {
								"name": "password",
								"type": "string",
								"optional": true,
								"description": "Password for service"
							},
							"headers": {
								"name": "headers",
								"type": "map",
								"optional": true,
								"description": "Map of custom headers (name/value pairs) like {\"myHeader\":\"myHeaderValue\",...}"
							},
							"tokenHandling": {
								"name": "tokenHandling",
								"type": "boolean",
								"optional": true,
								"defaultValue": true,
								"description": "Enable/disable XCSRF-Token handling"
							},
							"withCredentials": {
								"name": "withCredentials",
								"type": "boolean",
								"optional": true,
								"description": "Experimental - <code>true</code> when user credentials are to be included in a cross-origin request. Please note that this works only if all requests are asynchronous."
							},
							"maxDataServiceVersion": {
								"name": "maxDataServiceVersion",
								"type": "undefined",
								"optional": true,
								"defaultValue": "'2.0'",
								"description": "Please use the following string format e.g. '2.0' or '3.0'.\n\t\t\t\t\t\t\t\t\tOData version supported by the ODataModel: '2.0',"
							},
							"useBatch": {
								"name": "useBatch",
								"type": "boolean",
								"optional": true,
								"defaultValue": true,
								"description": "Whether all requests should be sent in batch requests"
							},
							"refreshAfterChange": {
								"name": "refreshAfterChange",
								"type": "boolean",
								"optional": true,
								"defaultValue": true,
								"description": "Enable/disable automatic refresh after change operations"
							},
							"annotationURI": {
								"name": "annotationURI",
								"type": "string|string[]",
								"optional": true,
								"description": "The URL (or an array of URLs) from which the annotation metadata should be loaded,"
							},
							"loadAnnotationsJoined": {
								"name": "loadAnnotationsJoined",
								"type": "boolean",
								"optional": true,
								"description": "Whether the <code>metadataLoaded</code> event will be fired only after all annotations have been loaded as well"
							},
							"serviceUrlParams": {
								"name": "serviceUrlParams",
								"type": "map",
								"optional": true,
								"description": "Map of URL parameters (name/value pairs) - these parameters will be attached to all requests"
							},
							"metadataUrlParams": {
								"name": "metadataUrlParams",
								"type": "map",
								"optional": true,
								"description": "Map of URL parameters for metadata requests - only attached to a <code>$metadata</code> request"
							},
							"defaultBindingMode": {
								"name": "defaultBindingMode",
								"type": "string",
								"optional": true,
								"defaultValue": "OneWay",
								"description": "Sets the default binding mode for the model"
							},
							"defaultCountMode": {
								"name": "defaultCountMode",
								"type": "string",
								"optional": true,
								"defaultValue": "sap.ui.model.odata.CountMode.Request",
								"description": "Sets the default count mode for the model"
							},
							"defaultOperationMode": {
								"name": "defaultOperationMode",
								"type": "string",
								"optional": true,
								"defaultValue": "sap.ui.model.odata.OperationMode.Server",
								"description": "Sets the default operation mode for the model"
							},
							"defaultUpdateMethod": {
								"name": "defaultUpdateMethod",
								"type": "string",
								"optional": true,
								"defaultValue": "sap.ui.model.odata.UpdateMethod.Merge",
								"description": "Default update method which is used for all update requests"
							},
							"metadataNamespaces": {
								"name": "metadataNamespaces",
								"type": "map",
								"optional": true,
								"description": "Map of namespaces (name => URI) used for parsing the service metadata"
							},
							"skipMetadataAnnotationParsing": {
								"name": "skipMetadataAnnotationParsing",
								"type": "boolean",
								"optional": true,
								"description": "Whether to skip the automated loading of annotations from the metadata document. Loading annotations from metadata does not have any effects (except the lost performance by invoking the parser) if there are not annotations inside the metadata document"
							},
							"disableHeadRequestForToken": {
								"name": "disableHeadRequestForToken",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "Set this flag to <code>true</code> if your service does not support <code>HEAD</code> requests for fetching the service document (and thus the CSRF-token) to avoid sending a <code>HEAD</code>-request before falling back to <code>GET</code>"
							},
							"sequentializeRequests": {
								"name": "sequentializeRequests",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "Whether to sequentialize all requests, needed in case the service cannot handle parallel requests"
							},
							"disableSoftStateHeader": {
								"name": "disableSoftStateHeader",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "Set this flag to <code>true</code> if you donÂ´t want to start a new soft state session with context ID (<code>SID</code>) through header mechanism. This is useful if you want to share an <code>SID</code> between different browser windows"
							},
							"bindableResponseHeaders": {
								"name": "bindableResponseHeaders",
								"type": "string[]",
								"optional": true,
								"defaultValue": null,
								"description": "Set this array to make custom response headers bindable via the entity's \"__metadata/headers\" property"
							}
						},
						"description": "Map which contains the following parameter properties:"
					}
				],
				"description": "Constructor for a new ODataModel."
			},
			"events": [
				{
					"name": "annotationsFailed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"result": {
											"name": "result",
											"type": "Error[]",
											"optional": false,
											"description": "An array of Errors"
										}
									}
								}
							}
						}
					],
					"description": "Fired, when the annotations document failed to loaded.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "annotationsLoaded",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"result": {
											"name": "result",
											"type": "sap.ui.model.odata.v2.ODataAnnotations~Source[]",
											"optional": false,
											"description": "One or several annotation source(s)"
										}
									}
								}
							}
						}
					],
					"description": "Fired, when the annotations document was successfully loaded.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "batchRequestCompleted",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"ID": {
											"name": "ID",
											"type": "string",
											"optional": false,
											"description": "The request ID"
										},
										"url": {
											"name": "url",
											"type": "string",
											"optional": false,
											"description": "The URL which is sent to the backend"
										},
										"method": {
											"name": "method",
											"type": "string",
											"optional": false,
											"description": "The HTTP method"
										},
										"headers": {
											"name": "headers",
											"type": "map",
											"optional": false,
											"description": "The request headers"
										},
										"success": {
											"name": "success",
											"type": "boolean",
											"optional": false,
											"description": "Request was successful or not"
										},
										"async": {
											"name": "async",
											"type": "boolean",
											"optional": false,
											"description": "If the request is synchronous or asynchronous (if available)"
										},
										"requests": {
											"name": "requests",
											"type": "array",
											"optional": false,
											"description": "Array of embedded requests ($batch)\nEach request object within the array contains the following properties: url, method, headers, response object"
										},
										"response": {
											"name": "response",
											"type": "object",
											"optional": false,
											"description": "The response object - empty object if no response:\nThe response object contains the following properties: message, success, headers, statusCode, statusText, responseText"
										}
									}
								}
							}
						}
					],
					"description": "Fired after a request has been completed (includes receiving a response),\nno matter whether the request succeeded or not."
				},
				{
					"name": "batchRequestFailed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"ID": {
											"name": "ID",
											"type": "string",
											"optional": false,
											"description": "The request ID"
										},
										"url": {
											"name": "url",
											"type": "string",
											"optional": false,
											"description": "The URL which is sent to the backend"
										},
										"method": {
											"name": "method",
											"type": "string",
											"optional": false,
											"description": "The HTTP method"
										},
										"headers": {
											"name": "headers",
											"type": "map",
											"optional": false,
											"description": "The request headers"
										},
										"async": {
											"name": "async",
											"type": "boolean",
											"optional": false,
											"description": "If the request is synchronous or asynchronous (if available)"
										},
										"success": {
											"name": "success",
											"type": "boolean",
											"optional": false,
											"description": "Request was successful or not"
										},
										"response": {
											"name": "response",
											"type": "object",
											"optional": false,
											"description": "The response object - empty object if no response\nThe response object contains the following properties: message, success, headers, statusCode, statusText, responseText"
										},
										"requests": {
											"name": "requests",
											"type": "array",
											"optional": false,
											"description": "Array of embedded requests ($batch)\nEach request object within the array contains the following properties: url, method, headers, response object"
										}
									}
								}
							}
						}
					],
					"description": "Fired, when a batch request failed."
				},
				{
					"name": "batchRequestSent",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"url": {
											"name": "url",
											"type": "string",
											"optional": false,
											"description": "The URL which is sent to the backend"
										},
										"type": {
											"name": "type",
											"type": "string",
											"optional": true,
											"description": "The type of the request (if available)"
										},
										"async": {
											"name": "async",
											"type": "boolean",
											"optional": true,
											"description": "If the request is synchronous or asynchronous (if available)"
										},
										"requests": {
											"name": "requests",
											"type": "array",
											"optional": false,
											"description": "Array of embedded requests ($batch)\nEach request object within the array contains the following properties: url, method, headers"
										}
									}
								}
							}
						}
					],
					"description": "Fired after a request has been sent to a backend."
				},
				{
					"name": "metadataFailed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"metadata": {
											"name": "metadata",
											"type": "string",
											"optional": false,
											"description": "The parsed metadata"
										},
										"message": {
											"name": "message",
											"type": "string",
											"optional": false,
											"description": "A text that describes the failure."
										},
										"statusCode": {
											"name": "statusCode",
											"type": "string",
											"optional": false,
											"description": "HTTP status code returned by the request (if available)"
										},
										"statusText": {
											"name": "statusText",
											"type": "string",
											"optional": false,
											"description": "The status as a text, details not specified, intended only for diagnosis output"
										},
										"responseText": {
											"name": "responseText",
											"type": "string",
											"optional": false,
											"description": "Response that has been received for the request, as a text string"
										},
										"response": {
											"name": "response",
											"type": "object",
											"optional": false,
											"description": "The response object - empty object if no response"
										}
									}
								}
							}
						}
					],
					"description": "Fired, when the metadata document has failed to load.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "metadataLoaded",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"metadata": {
											"name": "metadata",
											"type": "string",
											"optional": false,
											"description": "The parsed metadata"
										}
									}
								}
							}
						}
					],
					"description": "Fired, when the metadata document was successfully loaded.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "requestCompleted",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"ID": {
											"name": "ID",
											"type": "string",
											"optional": false,
											"description": "The request ID"
										},
										"url": {
											"name": "url",
											"type": "string",
											"optional": false,
											"description": "The URL which is sent to the backend"
										},
										"method": {
											"name": "method",
											"type": "string",
											"optional": false,
											"description": "The HTTP method"
										},
										"headers": {
											"name": "headers",
											"type": "map",
											"optional": false,
											"description": "The request headers"
										},
										"success": {
											"name": "success",
											"type": "boolean",
											"optional": false,
											"description": "Request was successful or not"
										},
										"async": {
											"name": "async",
											"type": "boolean",
											"optional": false,
											"description": "If the request is synchronous or asynchronous (if available)"
										},
										"response": {
											"name": "response",
											"type": "object",
											"optional": false,
											"description": "The response object - empty object if no response:\nThe response object contains the following properties: message, success, headers, statusCode, statusText, responseText"
										}
									}
								}
							}
						}
					],
					"description": "Fired, after a request has been completed (includes receiving a response),\nno matter whether the request succeeded or not.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "requestFailed",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"ID": {
											"name": "ID",
											"type": "string",
											"optional": false,
											"description": "The request ID"
										},
										"url": {
											"name": "url",
											"type": "string",
											"optional": false,
											"description": "The URL which is sent to the backend"
										},
										"method": {
											"name": "method",
											"type": "string",
											"optional": false,
											"description": "The HTTP method"
										},
										"headers": {
											"name": "headers",
											"type": "map",
											"optional": false,
											"description": "The request headers"
										},
										"async": {
											"name": "async",
											"type": "boolean",
											"optional": false,
											"description": "If the request is synchronous or asynchronous (if available)"
										},
										"success": {
											"name": "success",
											"type": "boolean",
											"optional": false,
											"description": "Request was successful or not"
										},
										"response": {
											"name": "response",
											"type": "object",
											"optional": false,
											"description": "The response object - empty object if no response\nThe response object contains the following properties: message, success, headers, statusCode, statusText, responseText"
										}
									}
								}
							}
						}
					],
					"description": "Fired, when data retrieval from a backend failed.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				},
				{
					"name": "requestSent",
					"visibility": "public",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"ID": {
											"name": "ID",
											"type": "string",
											"optional": false,
											"description": "The request ID"
										},
										"url": {
											"name": "url",
											"type": "string",
											"optional": false,
											"description": "The URL which is sent to the backend"
										},
										"method": {
											"name": "method",
											"type": "string",
											"optional": false,
											"description": "The HTTP method"
										},
										"headers": {
											"name": "headers",
											"type": "map",
											"optional": false,
											"description": "The request headers"
										},
										"async": {
											"name": "async",
											"type": "boolean",
											"optional": false,
											"description": "If the request is synchronous or asynchronous (if available)"
										}
									}
								}
							}
						}
					],
					"description": "Fired, after a request has been sent to a backend.\n\nNote: Subclasses might add additional parameters to the event object. Optional parameters can be omitted."
				}
			],
			"methods": [
				{
					"name": "addAnnotationUrl",
					"visibility": "protected",
					"returnValue": {
						"type": "Promise",
						"description": "The Promise to load the given URL(s), resolved if all URLs have been loaded, rejected if at least one fails to load.\n\t\t\t\t\t If this promise resolves it returns an object with the following properties:\n\t\t\t\t\t <code>annotations</code>: The annotation object\n\t\t\t\t\t <code>entitySets</code>: An array of EntitySet objects containing the newly merged EntitySets from a <code>$metadata</code> requests.\n\t\t\t\t\t\t\t\t The structure is the same as in the metadata object reached by the <code>getServiceMetadata()</code> method.\n\t\t\t\t\t\t\t\t For non-<code>$metadata</code> requests the array will be empty."
					},
					"parameters": [
						{
							"name": "vUrl",
							"type": "string|string[]",
							"optional": false,
							"description": "Either one URL as string or an array of URL strings"
						}
					],
					"description": "Adds (a) new URL(s) whose content should be parsed as OData annotations, which are then merged into the annotations object\nwhich can be retrieved by calling the {@link #getServiceAnnotations}-method. If a <code>$metadata</code> URL is passed,\nthe data will also be merged into the metadata object, which can be reached by calling the {@link #getServiceMetadata} method."
				},
				{
					"name": "addAnnotationXML",
					"visibility": "protected",
					"returnValue": {
						"type": "Promise",
						"description": "The Promise to parse the given XML-String, resolved if parsed without errors, rejected if errors occur"
					},
					"parameters": [
						{
							"name": "sXMLContent",
							"type": "string",
							"optional": false,
							"description": "The string that should be parsed as annotation XML"
						},
						{
							"name": "bSuppressEvents",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "Whether not to fire annotationsLoaded event on the annotationParser"
						}
					],
					"description": "Adds new XML content to be parsed for OData annotations, which are then merged into the annotations object which\ncan be retrieved by calling the {@link #getServiceAnnotations}-method."
				},
				{
					"name": "annotationsLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise to load the annotation URLs that were given to the model on instantiation"
					},
					"since": "1.42",
					"description": "Returns a promise that resolves with an array containing information about the initially loaded annotations.\n\n<b>Important</b>: This covers the annotations that were given to the model constructor, not the ones that might have\nbeen added later on using the protected API method {@link #addAnnotationUrl}. In order to get information about those,\nthe event <code>annotationsLoaded</code> can be used."
				},
				{
					"name": "attachAnnotationsFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the <code>annotationsFailed</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>."
				},
				{
					"name": "attachAnnotationsLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the <code>annotationsLoaded</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>."
				},
				{
					"name": "attachBatchRequestCompleted",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the <code>batchRequestCompleted</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>."
				},
				{
					"name": "attachBatchRequestFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the <code>batchRequestFailed</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>."
				},
				{
					"name": "attachBatchRequestSent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the <code>requestSent</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>."
				},
				{
					"name": "attachMetadataFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the <code>metadataFailed</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>."
				},
				{
					"name": "attachMetadataLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, the global context (window) is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the <code>metadataLoaded</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>."
				},
				{
					"name": "bindContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ContextBinding",
						"description": "The new context binding"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Resolved path"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "Context object"
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"description": "Map of parameters"
						}
					],
					"description": "Creates new context binding for this model."
				},
				{
					"name": "bindList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding",
						"description": "The new list binding"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Binding path, either absolute or relative to a given <code>oContext</code>"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "Binding context referring to this model"
						},
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter|sap.ui.model.Sorter[]",
							"optional": true,
							"description": "Initial sort order, can be either a sorter or an array of sorters"
						},
						{
							"name": "aFilters",
							"type": "sap.ui.model.Filter|sap.ui.model.Filter[]",
							"optional": true,
							"description": "Predefined filters, can be either a filter or an array of filters"
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"expand": {
									"name": "expand",
									"type": "string",
									"optional": true,
									"description": "Value for the OData <code>$expand</code> query parameter which should be included in the request"
								},
								"select": {
									"name": "select",
									"type": "string",
									"optional": true,
									"description": "Value for the OData <code>$select</code> query parameter which should be included in the request"
								},
								"custom": {
									"name": "custom",
									"type": "map",
									"optional": true,
									"description": "Optional map of custom query parameters (name/value pairs); names of custom parameters must not start with <code>$</code>"
								},
								"countMode": {
									"name": "countMode",
									"type": "sap.ui.model.odata.CountMode",
									"optional": true,
									"description": "Count mode for this binding;\n          if not specified, the default count mode for this model is used"
								},
								"operationMode": {
									"name": "operationMode",
									"type": "sap.ui.model.odata.OperationMode",
									"optional": true,
									"description": "Operation mode for this binding;\n          if not specified, the default operation mode of this model is used"
								},
								"faultTolerant": {
									"name": "faultTolerant",
									"type": "boolean",
									"optional": true,
									"description": "Turns on the fault tolerance mode, data is not reset if a backend request returns an error"
								},
								"batchGroupId": {
									"name": "batchGroupId",
									"type": "string",
									"optional": true,
									"description": "Sets the batch group ID to be used for requests originating from this binding"
								},
								"threshold": {
									"name": "threshold",
									"type": "int",
									"optional": true,
									"description": "Threshold that defines how many entries should be fetched at least\n                                     by the binding if <code>operationMode</code> is set to <code>Auto</code>\n                                     (See documentation for {@link sap.ui.model.odata.OperationMode.Auto})"
								}
							},
							"description": "Map which contains additional parameters for the binding"
						}
					],
					"description": "Creates a new list binding for this model."
				},
				{
					"name": "bindProperty",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.PropertyBinding",
						"description": "The new property binding"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Path pointing to the property that should be bound;\n                either an absolute path or a path relative to a given <code>oContext</code>"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "A context object for the new binding"
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"description": "Map of optional parameters for the binding; the ODataModel (v2) currently supports no additional parameters"
						}
					],
					"description": "Creates a new property binding for this model."
				},
				{
					"name": "bindTree",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.TreeBinding",
						"description": "The new tree binding"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Binding path, either absolute or relative to a given <code>oContext</code>"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "Binding context referring to this model"
						},
						{
							"name": "aFilters",
							"type": "sap.ui.model.Filter|sap.ui.model.Filter[]",
							"optional": true,
							"description": "Predefined filters, can be either a filter or an array of filters"
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"treeAnnotationProperties": {
									"name": "treeAnnotationProperties",
									"type": "object",
									"optional": true,
									"parameterProperties": {
										"hierarchyLevelFor": {
											"name": "hierarchyLevelFor",
											"type": "int",
											"optional": true,
											"description": "Mapping to the property holding the level information,"
										},
										"hierarchyNodeFor": {
											"name": "hierarchyNodeFor",
											"type": "string",
											"optional": true,
											"description": "Mapping to the property holding the hierarchy node ID,"
										},
										"hierarchyParentNodeFor": {
											"name": "hierarchyParentNodeFor",
											"type": "string",
											"optional": true,
											"description": "Mapping to the property holding the parent node ID,"
										},
										"hierarchyDrillStateFor": {
											"name": "hierarchyDrillStateFor",
											"type": "string",
											"optional": true,
											"description": "Mapping to the property holding the drill state for the node,"
										},
										"hierarchyNodeDescendantCountFor": {
											"name": "hierarchyNodeDescendantCountFor",
											"type": "string",
											"optional": true,
											"description": "Mapping to the property holding the descendant count for the node."
										}
									},
									"description": "This parameter defines the mapping between data properties and\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthe hierarchy used to visualize the tree, if not provided by the services metadata.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFor correct metadata annotation, please check the \"SAP Annotations for OData Version 2.0\" Specification."
								},
								"navigation": {
									"name": "navigation",
									"type": "object",
									"optional": true,
									"description": "A map describing the navigation properties between entity sets, which should be used for constructing and paging the tree."
								},
								"numberOfExpandedLevels": {
									"name": "numberOfExpandedLevels",
									"type": "int",
									"optional": true,
									"defaultValue": 0,
									"description": "This property defines the number of levels, which will be expanded initially.\n\t\t\t\t\t\t\t\t\t\t\t\t   Please be aware, that this property leads to multiple backend requests. Default value is 0."
								},
								"rootLevel": {
									"name": "rootLevel",
									"type": "int",
									"optional": true,
									"defaultValue": 0,
									"description": "The root level is the level of the topmost tree nodes, which will be used as an entry point for OData services.\n\t\t\t\t\t\t\t\t\t\tConforming to the \"SAP Annotations for OData Version 2.0\" Specification, the root level must start at 0.\n\t\t\t\t\t\t\t\t\t\tDefault value is therefore 0."
								},
								"batchGroupId": {
									"name": "batchGroupId",
									"type": "string",
									"optional": true,
									"description": "Deprecated - use <code>groupId</code> instead: sets the batch group ID to be used for requests originating from this binding"
								},
								"groupId": {
									"name": "groupId",
									"type": "string",
									"optional": true,
									"description": "ID of a request group; requests belonging to the same group will be bundled in one batch request"
								},
								"operationMode": {
									"name": "operationMode",
									"type": "sap.ui.model.odata.OperationMode",
									"optional": true,
									"description": "Operation mode for this binding; defaults to the model's default operation mode when not specified"
								},
								"threshold": {
									"name": "threshold",
									"type": "int",
									"optional": true,
									"description": "A threshold, which will be used if the operation mode is set to <code>Auto</code>.\n\t\t\t\t\t\t\t\t\t\tIn case of <code>OperationMode.Auto</code>, the binding tries to fetch (at least) as many entries as the threshold.\n\t\t\t\t\t\t\t\t\t\tAlso see API documentation for {@link sap.ui.model.odata.OperationMode.Auto}."
								},
								"useServersideApplicationFilters": {
									"name": "useServersideApplicationFilters",
									"type": "boolean",
									"optional": true,
									"description": "Set this flag if <code>$filter</code> statements should be used for the <code>$count/$inlinecount</code> and data retrieval in the <code>OperationMode.Auto</code>.\n\t\t\t\t\t\t\t\t\t\t\t\t\t Only use this if your backend supports prefiltering the tree and is capable of responding a complete tree hierarchy,\n\t\t\t\t\t\t\t\t\t\t\t\t\t including all inner nodes. To construct the hierarchy on the client, it is mandatory that all filter matches include their complete\n\t\t\t\t\t\t\t\t\t\t\t\t\t parent chain up to the root level.\n\t\t\t\t\t\t\t\t\t\t\t\t\t <code>OperationMode.Client</code> will still request the complete collection without filters, since they will be applied on the client."
								},
								"treeState": {
									"name": "treeState",
									"type": "boolean",
									"optional": true,
									"description": "A tree state handle can be given to the <code>ODataTreeBinding</code> when two conditions are met:\n\t\t\t\t\t\t\t\t\t\t\t The binding is running in <code>OperationMode.Client</code> AND the <code>sap.ui.table.TreeTable</code> is used.\n\t\t\t\t\t\t\t\t\t\t\t The feature is only available when using the <code>ODataTreeBindingAdapter</code>, which is automatically applied when using the <code>sap.ui.table.TreeTable</code>.\n\t\t\t\t\t\t\t\t\t\t\t The tree state handle will contain all necessary information to expand the tree to the given state.\n\t\t\t\t\t\t\t\t\t\t\t This feature is not supported in <code>OperationMode.Server</code> and <code>OperationMode.Auto</code>.\n\t\t\t\t\t\t\t\t\t\t\t Please see also the {@link sap.ui.model.odata.ODataTreeBindingAdapter#getCurrentTreeState getCurrentTreeState} function in the\n\t\t\t\t\t\t\t\t\t\t\t class <code>ODataTreeBindingAdapter</code>."
								}
							},
							"description": "Map of parameters for the tree binding"
						},
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter[]",
							"optional": true,
							"description": "An array of predefined sorters"
						}
					],
					"description": "Creates a new tree binding for this model."
				},
				{
					"name": "callFunction",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object which has a <code>contextCreated</code> function that returns a <code>Promise</code>.\n        This resolves with the created {@link sap.ui.model.Context}.\n        In addition it has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sFunctionName",
							"type": "string",
							"optional": false,
							"description": "A string containing the name of the function to call. The name is concatenated to the service URL which was\n       specified in the model constructor."
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"method": {
									"name": "method",
									"type": "string",
									"optional": true,
									"defaultValue": "'GET'",
									"description": "HTTP method to use for the function call, should match the metadata for the function import"
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the data has been successfully retrieved. The handler can have\n       the following parameters: <code>oData<code> and <code>response</code>."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the request failed.\n\t\tThe handler can have the parameter: <code>oError</code> which contains additional error information."
								},
								"headers": {
									"name": "headers",
									"type": "map",
									"optional": true,
									"description": "A map of headers for this request"
								},
								"batchGroupId": {
									"name": "batchGroupId",
									"type": "string",
									"optional": true,
									"description": "Deprecated - use <code>groupId</code> instead"
								},
								"groupId": {
									"name": "groupId",
									"type": "string",
									"optional": true,
									"description": "ID of a request group; requests belonging to the same group will be bundled in one batch request"
								},
								"eTag": {
									"name": "eTag",
									"type": "string",
									"optional": true,
									"description": "If the function import changes an entity, the ETag for this entity could be passed with this parameter"
								},
								"changeSetId": {
									"name": "changeSetId",
									"type": "string",
									"optional": true,
									"description": "ID of the <code>ChangeSet</code> that this request should belong to"
								},
								"refreshAfterChange": {
									"name": "refreshAfterChange",
									"type": "string",
									"optional": true,
									"description": "Defines whether to update all bindings after submitting this change operation. See {@link #setRefreshAfterChange}\n\t           If given, this overrules the model-wide <code>refreshAfterChange</code> flag for this operation only."
								}
							},
							"description": "Optional parameter map containing any of the following properties:"
						}
					],
					"description": "Trigger a request to the function import OData service that was specified in the model constructor.\n\nIf the return type of the function import is either an entity type or a collection of an entity type,\nthen the changes are reflected in the model. Otherwise they are ignored, and the <code>response</code> can\nbe processed in the <code>success</code> callback."
				},
				{
					"name": "create",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the collection where an entry\n\t\tshould be created. The path is concatenated to the service URL\n\t\twhich was specified in the model constructor."
						},
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "Data of the entry that should be created."
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "If specified , <code>sPath</code> has to be relative to the path given with the context."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the data has\n\t\tbeen successfully retrieved. The handler can have the\n\t\tfollowing parameters: <code>oData</code> and <code>response</code>. The <code>oData</code> parameter contains the data of the newly created entry if it is provided by the backend.\n\t\tThe <code>response</code> parameter contains information about the response of the request."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the request failed.\n\t\tThe handler can have the parameter <code>oError</code> which contains additional error information."
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								},
								"headers": {
									"name": "headers",
									"type": "map",
									"optional": true,
									"description": "A map of headers for this request"
								},
								"batchGroupId": {
									"name": "batchGroupId",
									"type": "string",
									"optional": true,
									"description": "Deprecated - use <code>groupId</code> instead"
								},
								"groupId": {
									"name": "groupId",
									"type": "string",
									"optional": true,
									"description": "ID of a request group; requests belonging to the same group will be bundled in one batch request"
								},
								"changeSetId": {
									"name": "changeSetId",
									"type": "string",
									"optional": true,
									"description": "ID of the <code>ChangeSet</code> that this request should belong to"
								},
								"refreshAfterChange": {
									"name": "refreshAfterChange",
									"type": "string",
									"optional": true,
									"description": "Defines whether to update all bindings after submitting this change operation. See {@link #setRefreshAfterChange}\n\t           If given, this overrules the model-wide <code>refreshAfterChange</code> flag for this operation only."
								}
							},
							"description": "Optional parameter map containing any of the following properties:"
						}
					],
					"description": "Trigger a <code>POST</code> request to the OData service that was specified in the model constructor.\n\nPlease note that deep creates are not supported and may not work."
				},
				{
					"name": "createBindingContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context",
						"description": "The created binding context"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Binding path"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "Binding context"
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"expand": {
									"name": "expand",
									"type": "string",
									"optional": true,
									"description": "Value for the OData <code>$expand</code> query parameter which should be included in the request"
								},
								"select": {
									"name": "select",
									"type": "string",
									"optional": true,
									"description": "Value for the OData <code>$select</code> query parameter which should be included in the request"
								},
								"custom": {
									"name": "custom",
									"type": "map",
									"optional": true,
									"description": "Optional map of custom query parameters, names of custom parameters must not start with <code>$</code>."
								}
							},
							"description": "Map which contains additional parameters for the binding"
						},
						{
							"name": "fnCallBack",
							"type": "function",
							"optional": true,
							"description": "Function to be called when context has been created"
						},
						{
							"name": "bReload",
							"type": "boolean",
							"optional": true,
							"description": "Whether to reload data"
						}
					],
					"description": "Creates a binding context for the given path.\n\nIf the data of the context is not yet available, it can not be created, but first the\nentity needs to be fetched from the server asynchronously. In case no callback function\nis provided, the request will not be triggered."
				},
				{
					"name": "createEntry",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context",
						"description": "A Context object that points to the new created entry."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Name of the path to the EntitySet"
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": false,
							"parameterProperties": {
								"properties": {
									"name": "properties",
									"type": "array|object",
									"optional": true,
									"description": "An array that specifies a set of properties or the entry"
								},
								"batchGroupId": {
									"name": "batchGroupId",
									"type": "string",
									"optional": true,
									"description": "Deprecated - use <code>groupId</code> instead"
								},
								"groupId": {
									"name": "groupId",
									"type": "string",
									"optional": true,
									"description": "ID of a request group; requests belonging to the same group will be bundled in one batch request"
								},
								"changeSetId": {
									"name": "changeSetId",
									"type": "string",
									"optional": true,
									"description": "ID of the <code>ChangeSet</code> that this request should belong to"
								},
								"context": {
									"name": "context",
									"type": "sap.ui.model.Context",
									"optional": true,
									"description": "The binding context"
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "The success callback function"
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "The error callback function"
								},
								"headers": {
									"name": "headers",
									"type": "map",
									"optional": true,
									"description": "A map of headers"
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map of URL parameters"
								},
								"refreshAfterChange": {
									"name": "refreshAfterChange",
									"type": "string",
									"optional": true,
									"description": "Defines whether to update all bindings after submitting this change operation. See {@link #setRefreshAfterChange}\n\t           If given, this overrules the model-wide <code>refreshAfterChange</code> flag for this operation only."
								}
							},
							"description": "A map of the following parameters:"
						}
					],
					"description": "Creates a new entry object which is described by the metadata of the entity type of the\nspecified <code>sPath</code> Name. A context object is returned which can be used to bind\nagainst the newly created object.\n\nFor each created entry a request is created and stored in a request queue.\nThe request queue can be submitted by calling {@link #submitChanges}. To delete a created\nentry from the request queue call {@link #deleteCreatedEntry}.\n\nThe optional parameter <code>mParameters.properties</code> can be used as follows:\n<ul>\n  <li><code>properties</code> could be an array containing the property names which should be included\n    in the new entry. Other properties defined in the entity type won't be included. </li>\n  <li><code>properties</code> could be an object which includes the desired properties and the\n    corresponding values which should be used for the created entry. </li>\n</ul>\nIf <code>properties</code> is not specified, all properties in the entity type will be included in the\ncreated entry.\n\nIf there are no values specified, the properties will have <code>undefined</code> values.\n\nPlease note that deep creates (including data defined by navigation properties) are not supported."
				},
				{
					"name": "createKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Key of the entry"
					},
					"parameters": [
						{
							"name": "sCollection",
							"type": "string",
							"optional": false,
							"description": "Name of the collection"
						},
						{
							"name": "oKeyProperties",
							"type": "object",
							"optional": false,
							"description": "Object containing at least all the key properties of the entity type"
						}
					],
					"description": "Creates the key from the given collection name and property map.\n\nPlease make sure that the metadata document is loaded before using this function."
				},
				{
					"name": "deleteCreatedEntry",
					"visibility": "public",
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "The context object pointing to the created entry"
						}
					],
					"description": "Deletes a created entry from the request queue and from the model."
				},
				{
					"name": "destroy",
					"visibility": "public"
				},
				{
					"name": "detachAnnotationsFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the <code>annotationsFailed</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachAnnotationsLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the <code>annotationsLoaded</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>."
				},
				{
					"name": "detachBatchRequestCompleted",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the <code>batchRequestCompleted</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachBatchRequestFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the <code>batchRequestFailed</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachBatchRequestSent",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the <code>batchRequestSent</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachMetadataFailed",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the <code>metadataFailed</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "detachMetadataLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the <code>metadataLoaded</code> event of this <code>sap.ui.model.odata.v2.ODataModel</code>.\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v2.ODataModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}."
				},
				{
					"name": "fireAnnotationsFailed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"message": {
									"name": "message",
									"type": "string",
									"optional": true,
									"description": "A text that describes the failure"
								},
								"statusCode": {
									"name": "statusCode",
									"type": "string",
									"optional": true,
									"description": "HTTP status code returned by the request (if available)"
								},
								"statusText": {
									"name": "statusText",
									"type": "string",
									"optional": true,
									"description": "The status as a text, details not specified, intended only for diagnosis output"
								},
								"responseText": {
									"name": "responseText",
									"type": "string",
									"optional": true,
									"description": "Response that has been received for the request, as a text string"
								}
							},
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fire event <code>annotationsFailed</code> to attached listeners."
				},
				{
					"name": "fireAnnotationsLoaded",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"annotations": {
									"name": "annotations",
									"type": "sap.ui.model.odata.v2.ODataAnnotations",
									"optional": true,
									"description": "The annotations object"
								}
							},
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fire event <code>annotationsLoaded</code> to attached listeners."
				},
				{
					"name": "fireBatchRequestCompleted",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"ID": {
									"name": "ID",
									"type": "string",
									"optional": false,
									"description": "The request ID"
								},
								"url": {
									"name": "url",
									"type": "string",
									"optional": false,
									"description": "The URL which is sent to the backend"
								},
								"method": {
									"name": "method",
									"type": "string",
									"optional": false,
									"description": "The HTTP method"
								},
								"headers": {
									"name": "headers",
									"type": "map",
									"optional": false,
									"description": "The request headers"
								},
								"success": {
									"name": "success",
									"type": "boolean",
									"optional": false,
									"description": "Request was successful or not"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": false,
									"description": "If the request is synchronous or asynchronous (if available)"
								},
								"requests": {
									"name": "requests",
									"type": "array",
									"optional": false,
									"description": "Array of embedded requests ($batch) - empty array for non batch requests.\nEach request object within the array contains the following properties: url, method, headers, response object"
								},
								"response": {
									"name": "response",
									"type": "object",
									"optional": false,
									"description": "The response object - empty object if no response:\nThe response object contains the following properties: message, success, headers, statusCode, statusText, responseText"
								}
							},
							"description": "parameters to add to the fired event"
						}
					],
					"description": "Fire event <code>batchRequestCompleted</code> to attached listeners."
				},
				{
					"name": "fireBatchRequestFailed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"ID": {
									"name": "ID",
									"type": "string",
									"optional": false,
									"description": "The request ID"
								},
								"url": {
									"name": "url",
									"type": "string",
									"optional": false,
									"description": "The URL which is sent to the backend"
								},
								"method": {
									"name": "method",
									"type": "string",
									"optional": false,
									"description": "The HTTP method"
								},
								"headers": {
									"name": "headers",
									"type": "map",
									"optional": false,
									"description": "The request headers"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": false,
									"description": "If the request is synchronous or asynchronous (if available)"
								},
								"success": {
									"name": "success",
									"type": "boolean",
									"optional": false,
									"description": "Request was successful or not"
								},
								"response": {
									"name": "response",
									"type": "object",
									"optional": false,
									"description": "The response object - empty object if no response\nThe response object contains the following properties: message, success, headers, statusCode, statusText, responseText"
								},
								"requests": {
									"name": "requests",
									"type": "array",
									"optional": false,
									"description": "Array of embedded requests ($batch)\nEach request object within the array contains the following properties: url, method, headers, response object"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event <code>batchRequestFailed</code> to attached listeners."
				},
				{
					"name": "fireBatchRequestSent",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"url": {
									"name": "url",
									"type": "string",
									"optional": true,
									"description": "The URL which is sent to the backend."
								},
								"type": {
									"name": "type",
									"type": "string",
									"optional": true,
									"description": "The type of the request (if available)"
								},
								"async": {
									"name": "async",
									"type": "boolean",
									"optional": true,
									"description": "If the request is synchronous or asynchronous (if available)"
								},
								"requests": {
									"name": "requests",
									"type": "array",
									"optional": false,
									"description": "Array of embedded requests ($batch)\nEach request object within the array contains the following properties: url, method, headers"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event <code>batchRequestSent</code> to attached listeners."
				},
				{
					"name": "fireMetadataFailed",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"message": {
									"name": "message",
									"type": "string",
									"optional": true,
									"description": "A text that describes the failure."
								},
								"statusCode": {
									"name": "statusCode",
									"type": "string",
									"optional": true,
									"description": "HTTP status code returned by the request (if available)"
								},
								"statusText": {
									"name": "statusText",
									"type": "string",
									"optional": true,
									"description": "The status as a text, details not specified, intended only for diagnosis output"
								},
								"responseText": {
									"name": "responseText",
									"type": "string",
									"optional": true,
									"description": "Response that has been received for the request ,as a text string"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event <code>metadataFailed</code> to attached listeners."
				},
				{
					"name": "fireMetadataLoaded",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"metadata": {
									"name": "metadata",
									"type": "sap.ui.model.odata.ODataMetadata",
									"optional": true,
									"description": "the metadata object."
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event <code>metadataLoaded</code> to attached listeners."
				},
				{
					"name": "forceEntityUpdate",
					"visibility": "public",
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "The key to an Entity e.g.: Customer(4711)"
						}
					],
					"description": "Force the update on the server of an entity by setting its ETag to '*'.\n\nETag handling must be active so the force update will work."
				},
				{
					"name": "getChangeBatchGroups",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "Definition of batch groups for two-way binding changes"
					},
					"description": "Returns the definition of batch groups per entity type for two-way binding changes",
					"deprecated": {
						"since": "1.36",
						"text": "use {@link #getChangeGroups} instead"
					}
				},
				{
					"name": "getChangeGroups",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "mChangeGroups Definition of groups for two-way binding changes"
					},
					"description": "Returns the definition of groups per entity type for two-way binding changes"
				},
				{
					"name": "getData",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Object containing the requested data if the path is valid."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the data object that should be returned."
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "The optional context which is used with the <code>sPath</code> to retrieve the requested data."
						},
						{
							"name": "bIncludeExpandEntries",
							"type": "boolean",
							"optional": true,
							"defaultValue": null,
							"description": "This parameter should be set when a URI or custom parameter\nwith a <code>$expand</code> system query option was used to retrieve associated entries embedded.\nIf set to <code>true</code> then the <code>getProperty</code> function returns a desired property value or entry and includes the associated expand entries (if any).\nIf set to <code>false</code> the associated/expanded entry properties are removed and not included in the\ndesired entry as properties at all. This is useful for performing updates on the base entry only. Note: A copy, not a reference of the entry will be returned."
						}
					],
					"description": "Return requested data as object if the data has already been loaded and stored in the model.",
					"deprecated": {
						"text": "please use {@link #getProperty} instead"
					}
				},
				{
					"name": "getDefaultCountMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.CountMode",
						"description": "Returns the default count mode for this model"
					},
					"since": "1.20",
					"description": "Returns the default count mode for retrieving the count of collections"
				},
				{
					"name": "getDeferredBatchGroups",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "aGroupIds The array of deferred batch group IDs"
					},
					"description": "Returns the array of batch group IDs that are set as deferred",
					"deprecated": {
						"since": "1.32",
						"text": "use {@link #getDeferredGroups} instead"
					}
				},
				{
					"name": "getDeferredGroups",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "aGroupIds The array of deferred group IDs"
					},
					"description": "Returns the array of group IDs that are set as deferred."
				},
				{
					"name": "getETag",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The found ETag (or <code>null</code> if none could be found)"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": true,
							"description": "The binding path"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "The binding context"
						},
						{
							"name": "oEntity",
							"type": "object",
							"optional": true,
							"description": "The entity data"
						}
					],
					"description": "Returns the ETag for a given binding path/context or data object."
				},
				{
					"name": "getHeaders",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "The header map"
					},
					"description": "Returns all headers and custom headers which are stored in this OData model."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Key of the entry or <code>undefined</code>"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "string|object|sap.ui.model.Context",
							"optional": false,
							"description": "The canonical entry URI, the context or entry object"
						}
					],
					"description": "Returns the key part for the given the canonical entry URI, model context or data object or\n<code>undefined</code> when the <code>vValue</code> can't be interpreted."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v2.ODataModel."
				},
				{
					"name": "getMetaModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.ODataMetaModel",
						"description": "The meta model for this <code>ODataModel</code>"
					},
					"description": "Returns an instance of an OData meta model which offers a unified access to both OData V2\nmetadata and V4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata}\nas a foundation and merges V4 annotations from the existing\n{@link sap.ui.model.odata.v2.ODataAnnotations} directly into the corresponding model element.\n\n<b>BEWARE:</b> Access to this OData meta model will fail before the promise returned by\n{@link sap.ui.model.odata.ODataMetaModel#loaded loaded} has been resolved!"
				},
				{
					"name": "getObject",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The value for the given path/context or <code>undefined</code> if data or entity type could not be found or was incomplete"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Path referencing the object"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "Context the path should be resolved with, in case it is relative"
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"select": {
									"name": "select",
									"type": "string",
									"optional": true,
									"description": "Comma-separated list of properties/paths to select"
								},
								"expand": {
									"name": "expand",
									"type": "string",
									"optional": true,
									"description": "Comma-separated list of navigation properties/paths to expand"
								}
							},
							"description": "Map of parameters"
						}
					],
					"description": "Returns the JSON object for an entity with the given <code>sPath</code> and optional <code>oContext</code>.\n\nWith the <code>mParameters.select</code> parameter it is possible to specify comma-separated property or navigation property\nnames which should be included in the result object. This works like the OData <code>$select</code> parameter.\nWith the <code>mParameters.expand</code> parameter it is possible to specify comma-separated navigation property names\nwhich should be included inline in the result object. This works like the OData <code>$expand</code> parameter.\n\nThis method will return a copy and not a reference of the entity. It does not load any data and may not return all requested\ndata if it is not available/loaded. If select entries are contained in the parameters and not all selected properties are\navailable, this method will return <code>undefined</code> instead of incomplete data. If no select entries are defined,\nall properties available on the client will be returned.\n\nExample:<br>\n<code>{select: \"Products/ProductName, Products\", expand:\"Products\"}</code> will return no properties of the entity itself, but\nonly the ProductName property of the Products navigation property. If Products/ProductName has not been loaded before, so is not\navailable on the client, it will return <code>undefined</code>."
				},
				{
					"name": "getOriginalProperty",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value of the property"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The path/name of the property"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "The context if available to access the property value"
						}
					],
					"description": "Returns the original value for the property with the given path and context.\nThe original value is the value that was last responded by the server."
				},
				{
					"name": "getPendingChanges",
					"visibility": "public",
					"returnValue": {
						"type": "map",
						"description": "the pending changes in a map"
					},
					"description": "Returns the changed properties of all changed entities in a map which are still pending.\nThe key is the string name of the entity and the value is an object which contains the changed properties."
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of the property"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Path/name of the property"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"description": "Context if available to access the property value"
						},
						{
							"name": "bIncludeExpandEntries",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "@deprecated Please use {@link #getObject} function with select/expand parameters instead.\nThis parameter should be set when a URI or custom parameter with a <code>$expand</code> system query option was used to retrieve associated entries embedded/inline.\nIf true then the <code>getProperty</code> function returns a desired property value/entry and includes the associated expand entries (if any).\nNote: A copy and not a reference of the entry will be returned."
						}
					],
					"description": "Returns the value for the property with the given <code>sPath</code>.\n\nIf the path points to a navigation property which has been loaded via <code>$expand</code> then the <code>bIncludeExpandEntries</code>\nparameter determines if the navigation property should be included in the returned value or not.\nPlease note that this currently works for 1..1 navigation properties only."
				},
				{
					"name": "getRefreshAfterChange",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "bRefreshAfterChange Whether to automatically refresh after changes"
					},
					"since": "1.46.0"
				},
				{
					"name": "getSecurityToken",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The CSRF security token"
					},
					"description": "Returns the current security token.\n\nIf the token has not been requested from the server it will be requested first (synchronously)."
				},
				{
					"name": "getServiceAnnotations",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Metadata object"
					},
					"description": "Return the annotation object. Please note that the metadata is loaded asynchronously and this function might return undefined because the\nmetadata has not been loaded yet.\nIn this case attach to the <code>annotationsLoaded</code> event to get notified when the annotations are available and then call this function."
				},
				{
					"name": "getServiceMetadata",
					"visibility": "public",
					"returnValue": {
						"type": "Object",
						"description": "Metadata object"
					},
					"description": "Return the parsed XML metadata as a Javascript object.\n\nPlease note that the metadata is loaded asynchronously and this function might return undefined because the\nmetadata has not been loaded yet.\nIn this case attach to the <code>metadataLoaded</code> event to get notified when the metadata is available and then call this function."
				},
				{
					"name": "hasPendingChanges",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Whether there are pending changes"
					},
					"description": "Checks if there exist pending changes in the model created by the {@link #setProperty} method."
				},
				{
					"name": "hasPendingRequests",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Whether there are pending requests"
					},
					"description": "Checks if there are pending requests, either ongoing or sequential."
				},
				{
					"name": "isMetadataLoadingFailed",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Whether metadata request has failed"
					},
					"since": "1.38",
					"description": "Checks whether metadata loading has failed in the past."
				},
				{
					"name": "metadataLoaded",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise on metadata loaded state"
					},
					"since": "1.30",
					"description": "Returns a promise for the loaded state of the metadata.\n\nThe promise won't get rejected in case the metadata loading failed but is only resolved if the metadata is loaded successfully.\nIf <code>refreshMetadata</code> function is called after this promise is already resolved you should rely on the promise returned by\n<code>refreshMetadata</code> to get information about the refreshed metadata loaded state."
				},
				{
					"name": "read",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the data which should\n\t\tbe retrieved. The path is concatenated to the service URL\n\t\twhich was specified in the model constructor."
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "If specified, <code>sPath</code> has to be relative to the path\n\t\tgiven with the context."
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								},
								"filters": {
									"name": "filters",
									"type": "sap.ui.model.Filter[]",
									"optional": true,
									"description": "An array of filters to be included in the request URL"
								},
								"sorters": {
									"name": "sorters",
									"type": "sap.ui.model.Sorter[]",
									"optional": true,
									"description": "An array of sorters to be included in the request URL"
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the data has\n\t\tbeen successfully retrieved. The handler can have the\n\t\tfollowing parameters: <code>oData</code> and <code>response</code>. The <code>oData</code> parameter contains the data of the retrieved data.\n\t\tThe <code>response</code> parameter contains further information about the response of the request."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the request\n\t\tfailed. The handler can have the parameter: <code>oError</code> which contains additional error information."
								},
								"batchGroupId": {
									"name": "batchGroupId",
									"type": "string",
									"optional": true,
									"description": "Deprecated - use <code>groupId</code> instead"
								},
								"groupId": {
									"name": "groupId",
									"type": "string",
									"optional": true,
									"description": "ID of a request group; requests belonging to the same group will be bundled in one batch request"
								}
							},
							"description": "Optional parameter map containing any of the following properties:"
						}
					],
					"description": "Trigger a <code>GET</code> request to the OData service that was specified in the model constructor.\n\nThe data will be stored in the model. The requested data is returned with the response."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "Force update of controls"
						},
						{
							"name": "bRemoveData",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "If set to <code>true</code> then the model data will be removed/cleared.\n\t\t\t\t\tPlease note that the data might not be there when calling e.g. <code>getProperty</code> too early before the refresh call returned."
						},
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "ID of a request group; requests belonging to the same group will be bundled in one batch request"
						}
					],
					"description": "Refresh the model.\n\nThis will check all bindings for updated data and update the controls if data has been changed."
				},
				{
					"name": "refreshMetadata",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise on metadata loaded state or <code>null</code> if metadata is not initialized or currently refreshed."
					},
					"description": "Refreshes the metadata for this model, for example when the request for metadata has failed.\n\n<b>Note</b>: Do not use <code>refreshMetadata</code> if the metadata is outdated or should be updated.\n\t     This will lead to inconsistent data in the application.\n\nReturns a new promise which can be resolved or rejected depending on the metadata loading state.",
					"deprecated": {}
				},
				{
					"name": "refreshSecurityToken",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "fnSuccess",
							"type": "function",
							"optional": true,
							"description": "Callback function which is called when the data has\n           \t\t\t\t\t been successfully retrieved."
						},
						{
							"name": "fnError",
							"type": "function",
							"optional": true,
							"description": "Callback function which is called when the request failed. The handler can have the parameter: oError which contains\n additional error information."
						},
						{
							"name": "bAsync",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "Whether the request should be send asynchronously"
						}
					],
					"description": "Refresh XSRF token by performing a GET request against the service root URL."
				},
				{
					"name": "remove",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the data that should be removed.\n\t\tThe path is concatenated to the service URL which was specified in the model constructor."
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "If specified, <code>sPath</code> has to be relative to the path given with the context."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the data has been successfully retrieved.\n\t\tThe handler can have the following parameters: <code>oData<code> and <code>response</code>."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the request failed.\n\t\tThe handler can have the parameter: <code>oError</code> which contains additional error information."
								},
								"eTag": {
									"name": "eTag",
									"type": "string",
									"optional": true,
									"description": "If specified, the <code>If-Match</code> header will be set to this ETag."
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								},
								"headers": {
									"name": "headers",
									"type": "map",
									"optional": true,
									"description": "A map of headers for this request"
								},
								"batchGroupId": {
									"name": "batchGroupId",
									"type": "string",
									"optional": true,
									"description": "Deprecated - use <code>groupId</code> instead"
								},
								"groupId": {
									"name": "groupId",
									"type": "string",
									"optional": true,
									"description": "ID of a request group; requests belonging to the same group will be bundled in one batch request"
								},
								"changeSetId": {
									"name": "changeSetId",
									"type": "string",
									"optional": true,
									"description": "ID of the <code>ChangeSet</code> that this request should belong to"
								},
								"refreshAfterChange": {
									"name": "refreshAfterChange",
									"type": "string",
									"optional": true,
									"description": "Defines whether to update all bindings after submitting this change operation. See {@link #setRefreshAfterChange}\n\t           If given, this overrules the model-wide <code>refreshAfterChange</code> flag for this operation only."
								}
							},
							"description": "Optional, can contain the following attributes:"
						}
					],
					"description": "Trigger a <code>DELETE</code> request to the OData service that was specified in the model constructor."
				},
				{
					"name": "resetChanges",
					"visibility": "public",
					"parameters": [
						{
							"name": "aPath",
							"type": "array",
							"optional": true,
							"description": "Array of paths that should be reset.\n\t\t\t\t\t\t\tIf no array is passed, all changes will be reset."
						}
					],
					"description": "Resets the changes that have been collected by the {@link #setProperty} method."
				},
				{
					"name": "securityTokenAvailable",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise on the CSRF security token"
					},
					"description": "Returns a promise, which will resolve with the security token as soon as it is available."
				},
				{
					"name": "setChangeBatchGroups",
					"visibility": "public",
					"parameters": [
						{
							"name": "mGroups",
							"type": "map",
							"optional": false,
							"description": "A map containing the definition of batch groups for two-way binding changes. The map has the\nfollowing format:\n<pre>\n{\n  \"EntityTypeName\": {\n    batchGroupId: \"ID\",\n    [changeSetId: \"ID\",]\n    [single: true/false,]\n  }\n}\n</pre>\n<ul>\n<li><code>batchGroupId</code>: Defines the batch group for changes of the defined <i>EntityTypeName</i></li>\n<li><code>changeSetId</code>: ID of a <code>ChangeSet</code> which bundles the changes for the entity type.</li>\n<li><code>single</code>: Defines if every change will get an own change set (defaults to <code>true</code>)</li>\n</ul>"
						}
					],
					"description": "Definition of batch groups per entity type for two-way binding changes.",
					"deprecated": {
						"since": "1.32",
						"text": "use {@link #setChangesGroups} instead"
					}
				},
				{
					"name": "setChangeGroups",
					"visibility": "public",
					"parameters": [
						{
							"name": "mGroups",
							"type": "map",
							"optional": false,
							"description": "A map containing the definition of batch groups for two-way binding changes. The map has the\nfollowing format:\n<pre>\n{\n  \"EntityTypeName\": {\n    groupId: \"ID\",\n    [changeSetId: \"ID\",]\n    [single: true/false,]\n  }\n}\n</pre>\n<ul>\n<li><code>groupId</code>: Defines the group for changes of the defined <i>EntityTypeName</i></li>\n<li><code>changeSetId</code>: ID of a <code>ChangeSet</code> which bundles the changes for the entity type.</li>\n<li><code>single</code>: Defines if every change will get an own change set (defaults to <code>true</code>)</li>\n</ul>"
						}
					],
					"description": "Definition of groups per entity type for two-way binding changes."
				},
				{
					"name": "setDefaultCountMode",
					"visibility": "public",
					"since": "1.20",
					"parameters": [
						{
							"name": "sCountMode",
							"type": "sap.ui.model.odata.CountMode",
							"optional": false,
							"description": "The new default count mode for this model"
						}
					],
					"description": "Sets the default mode how to retrieve the item count for a collection in this model.\n\nThe count can be determined in the following ways\n<ul>\n<li>by sending a separate <code>$count</code> request</li>\n<li>by adding parameter <code>$inlinecount=allpages</code> to one or all data requests</li>\n<li>a combination of the previous two</li>\n<li>not at all (questions about the size of the collection can't be answered then)</li>\n</ul>\nSee {@link sap.ui.model.odata.CountMode} for all enumeration values and more details.\n\nNote that a call to this method does not modify the count mode for existing list bindings,\nonly bindings that are created afterwards will use the new mode when no mode is defined at their creation.\n\nIf no default count mode is set for an <code>ODataModel</code> (v2), the mode <code>Request</code> will be used."
				},
				{
					"name": "setDeferredBatchGroups",
					"visibility": "public",
					"parameters": [
						{
							"name": "aGroupIds",
							"type": "array",
							"optional": false,
							"description": "Array of batch group IDs that should be set as deferred"
						}
					],
					"description": "Setting batch groups as deferred.\n\nRequests that belong to a deferred batch group have to be sent by explicitly calling {@link #submitChanges}.",
					"deprecated": {
						"since": "1.32",
						"text": "use {@link #setDeferredGroups} instead"
					}
				},
				{
					"name": "setDeferredGroups",
					"visibility": "public",
					"parameters": [
						{
							"name": "aGroupIds",
							"type": "array",
							"optional": false,
							"description": "Array of group IDs that should be set as deferred"
						}
					],
					"description": "Setting request groups as deferred.\n\nRequests that belong to a deferred group will be sent by explicitly calling {@link #submitChanges}."
				},
				{
					"name": "setHeaders",
					"visibility": "public",
					"parameters": [
						{
							"name": "mHeaders",
							"type": "object",
							"optional": false,
							"description": "The header name/value map."
						}
					],
					"description": "Set custom headers which are provided in a key/value map.\n\nThese headers are used for requests against the OData backend.\nPrivate headers which are set in the ODataModel cannot be modified.\nThese private headers are: <code>accept, accept-language, x-csrf-token, MaxDataServiceVersion, DataServiceVersion</code>.\n\nTo remove these custom headers simply set the <code>mCustomHeaders</code> parameter to null.\nPlease also note that when calling this method again all previous custom headers\nare removed unless they are specified again in the <code>mCustomHeaders</code> parameter."
				},
				{
					"name": "setProperty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if the value was set correctly and <code>false</code if errors occurred\n                  like the entry was not found or another entry was already updated."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "Path of the property to set"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "Value to set the property to"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"defaultValue": null,
							"description": "The context which will be used to set the property"
						},
						{
							"name": "bAsyncUpdate",
							"type": "boolean",
							"optional": true,
							"description": "Whether to update other bindings dependent on this property asynchronously"
						}
					],
					"description": "Sets a new value for the given property <code>sPath</code> in the model.\n\nIf the <code>changeBatchGroup</code> for the changed entity type is set to deferred changes could be submitted\nwith {@link #submitChanges}. Otherwise the change will be submitted directly."
				},
				{
					"name": "setRefreshAfterChange",
					"visibility": "public",
					"since": "1.16.3",
					"parameters": [
						{
							"name": "bRefreshAfterChange",
							"type": "boolean",
							"optional": false,
							"description": "Whether to automatically refresh after changes"
						}
					],
					"description": "Defines whether all bindings are updated after a change operation.\n\nThis flag can be overruled on request level by providing the <code>refreshAfterChange</code>\nparameter to the corresponding function (for example {@link #update})."
				},
				{
					"name": "setTokenHandlingEnabled",
					"visibility": "public",
					"parameters": [
						{
							"name": "bTokenHandling",
							"type": "boolean",
							"optional": true,
							"defaultValue": true,
							"description": "Whether to use token handling or not"
						}
					],
					"description": "Enable/Disable XCSRF-Token handling."
				},
				{
					"name": "setUseBatch",
					"visibility": "public",
					"parameters": [
						{
							"name": "bUseBatch",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "Whether the requests should be encapsulated in a batch request"
						}
					],
					"description": "Enable or disable batch mode for future requests."
				},
				{
					"name": "submitChanges",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object which has an <code>abort</code> function to abort the current request or requests"
					},
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"batchGroupId": {
									"name": "batchGroupId",
									"type": "string",
									"optional": true,
									"description": "Deprecated - use <code>groupId</code> instead"
								},
								"groupId": {
									"name": "groupId",
									"type": "string",
									"optional": true,
									"description": "Defines the group that should be submitted. If not specified all deferred groups will be submitted. Requests belonging to the same group will be bundled in one batch request."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the data has been successfully updated. The handler can have the following parameters: <code>oData</code>. <code>oData</code> contains the\nparsed response data as a Javascript object. The batch response is in the <code>__batchResponses</code> property which may contain further <code>__changeResponses</code> in an array depending on the amount of changes\nand change sets of the actual batch request which was sent to the backend.\nThe changeResponses contain the actual response of that change set in the <code>response</code> property.\nFor each change set there is also a <code>__changeResponse</code> property."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the request failed. The handler can have the parameter: <code>oError</code> which contains additional error information"
								},
								"eTag": {
									"name": "eTag",
									"type": "string",
									"optional": true,
									"description": "An ETag which can be used for concurrency control. If it is specified, it will be used in an <code>If-Match</code> header in the request to the server for this entry"
								}
							},
							"description": "A map which contains the following parameter properties:"
						}
					],
					"description": "Submits the collected changes which were collected by the {@link #setProperty} method.\n\nThe update method is defined by the global <code>defaultUpdateMethod</code> parameter which is\n<code>sap.ui.model.odata.UpdateMethod.Merge</code> by default. In case of a <code>sap.ui.model.odata.UpdateMethod.Merge</code>\nrequest only the changed properties will be updated.\nIf a URI with a <code>$expand</code> query option was used then the expand entries will be removed from the collected changes.\nChanges to this entries should be done on the entry itself. So no deep updates are supported.\n\n<b>Important</b>: The success/error handler will only be called if batch support is enabled. If multiple batch groups are submitted the handlers will be called for every batch group."
				},
				{
					"name": "update",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object which has an <code>abort</code> function to abort the current request."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A string containing the path to the data that should be updated.\n\t\tThe path is concatenated to the sServiceUrl which was specified\n\t\tin the model constructor."
						},
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "Data of the entry that should be updated."
						},
						{
							"name": "mParameters",
							"type": "map",
							"optional": true,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "object",
									"optional": true,
									"description": "If specified the sPath has to be is relative to the path given with the context."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the data has been successfully updated."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "A callback function which is called when the request failed.\n\t\tThe handler can have the parameter <code>oError</code> which contains additional error information."
								},
								"eTag": {
									"name": "eTag",
									"type": "string",
									"optional": true,
									"description": "If specified, the <code>If-Match</code> header will be set to this ETag.\n\t\tCaution: This feature in not officially supported as using asynchronous requests can lead\n\t\tto data inconsistencies. If you decide to use this feature nevertheless, you have to make\n\t\tsure that the request is completed before the data is processed any further."
								},
								"urlParameters": {
									"name": "urlParameters",
									"type": "map",
									"optional": true,
									"description": "A map containing the parameters that will be passed as query strings"
								},
								"headers": {
									"name": "headers",
									"type": "map",
									"optional": true,
									"description": "A map of headers for this request"
								},
								"batchGroupId": {
									"name": "batchGroupId",
									"type": "string",
									"optional": true,
									"description": "Deprecated - use <code>groupId</code> instead"
								},
								"groupId": {
									"name": "groupId",
									"type": "string",
									"optional": true,
									"description": "ID of a request group; requests belonging to the same group will be bundled in one batch request"
								},
								"changeSetId": {
									"name": "changeSetId",
									"type": "string",
									"optional": true,
									"description": "ID of the <code>ChangeSet</code> that this request should belong to"
								},
								"refreshAfterChange": {
									"name": "refreshAfterChange",
									"type": "string",
									"optional": true,
									"description": "Defines whether to update all bindings after submitting this change operation. See {@link #setRefreshAfterChange}\n\t           If given, this overrules the model-wide <code>refreshAfterChange</code> flag for this operation only."
								}
							},
							"description": "Optional, can contain the following attributes:"
						}
					],
					"description": "Trigger a <code>PUT/MERGE</code> request to the OData service that was specified in the model constructor.\n\nThe update method used is defined by the global <code>defaultUpdateMethod</code> parameter which is\n<code>sap.ui.model.odata.UpdateMethod.Merge</code> by default. Please note that deep updates are not\nsupported and may not work. These should be done separately and directly on the corresponding entry."
				},
				{
					"name": "updateBindings",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "If set to <code>false</code>, an update will only be done when the value of a binding changed."
						}
					],
					"description": "Update all bindings."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v2.ODataTreeBinding",
			"basename": "ODataTreeBinding",
			"resource": "sap/ui/model/odata/v2/ODataTreeBinding.js",
			"module": "sap/ui/model/odata/v2/ODataTreeBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.TreeBinding",
			"description": "Tree binding implementation for OData models.\n\n<h3>Hierarchy Annotations</h3>\nTo use the v2.ODataTreeBinding with an OData service, which exposes hierarchy annotations, please\nsee the <b>\"SAP Annotations for OData Version 2.0\"</b> Specification.\nThe required property annotations, as well as accepted/default values are documented in the specification.\n\nServices which include the <code>hierarchy-node-descendant-count-for</code> annotation and expose the data points in a depth-first pre-order sorted manner,\ncan use an optimized auto-expand feature by specifying the <code>numberOfExpandedLevels</code> in the binding parameters.\nThis will pre-expand the hierarchy to the given number of levels, with one single initial OData request.\n\nFor services without the <code>hierarchy-node-descendant-count-for</code> annotation, the <code>numberOfExpandedLevels</code> property is deprecated.\n\n<h3>Navigation Properties</h3>\n<i>Important: The use of navigation properties to build up the hierarchy structure is deprecated and it is recommended to use the hierarchy annotations mentioned above instead.</i>\nIn addition to these hierarchy annotations, the ODataTreeBinding also supports (cyclic) references between entities based on navigation properties.\nTo do this you have to specify the binding parameter \"navigation\".\nThe pattern for this is as follows: { entitySetName: \"navigationPropertyName\" }.\nExample: {\n\t \"Employees\": \"toColleagues\"\n}\n\n<h3>OperationModes</h3>\nFor a full definition and explanation of all OData binding OperationModes please see {@link sap.ui.model.odata.OperationMode}.\n\n<h4>In OperationMode.Server</h4>\nFiltering on the ODataTreeBinding is only supported with application filters.\nHowever please be aware that this applies only to filters which do not prevent the creation of a hierarchy.\nSo filtering on a property (e.g. a \"Customer\") is fine, as long as the application can ensure that the responses from the backend are sufficient\nto create a valid hierarchy on the client. Subsequent paging requests for sibiling and child nodes must also return responses since the filters will be sent with\nevery request.\nUsing Control-Filters ({@link sap.ui.model.FilterType}) via the filter() function is not supported for the OperationMode.Server.\n\n</h4>OperationMode.Client and OperationMode.Auto</h4>\nThe ODataTreeBinding supports Control-Filters only in OperationModes <code>Client</code> and <code>Auto</code>.\n\nIn these OperationModes, the filters and sorters will be applied on the client, same as for the v2.ODataListBinding.\n\nThe OperationModes <code>Client</code> and <code>Auto</code> are only supported for services. which expose the hierarchy annotations mentioned above, but do <b>not</b>\nexpose the <code>hierarchy-node-descendant-count-for</code> annotation.\nServices with hierarchy annotations including the <code>hierarchy-node-descendant-count-for</code> annotation, do NOT support the OperationModes Client and Auto.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": false
					},
					{
						"name": "aApplicationFilters",
						"type": "sap.ui.model.Filter[]",
						"optional": true,
						"description": "predefined filter/s (can be either a filter or an array of filters). All initial filters,\n\t\t\t\t\t\t\t\t\t\t   will be sent with every request. Filtering on the ODataTreeBinding is only supported with initial filters."
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"treeAnnotationProperties": {
								"name": "treeAnnotationProperties",
								"type": "object",
								"optional": true,
								"parameterProperties": {
									"hierarchyLevelFor": {
										"name": "hierarchyLevelFor",
										"type": "int",
										"optional": true,
										"description": "Mapping to the property holding the level information,"
									},
									"hierarchyNodeFor": {
										"name": "hierarchyNodeFor",
										"type": "string",
										"optional": true,
										"description": "Mapping to the property holding the hierarchy node id,"
									},
									"hierarchyParentNodeFor": {
										"name": "hierarchyParentNodeFor",
										"type": "string",
										"optional": true,
										"description": "Mapping to the property holding the parent node id,"
									},
									"hierarchyDrillStateFor": {
										"name": "hierarchyDrillStateFor",
										"type": "string",
										"optional": true,
										"description": "Mapping to the property holding the drill state for the node,"
									},
									"hierarchyNodeDescendantCountFor": {
										"name": "hierarchyNodeDescendantCountFor",
										"type": "string",
										"optional": true,
										"description": "Mapping to the property holding the descendant count for the node."
									}
								},
								"description": "This parameter defines the mapping between data properties and\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthe hierarchy used to visualize the tree, if not provided by the services metadata.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tFor correct metadata annotation, please check the \"SAP Annotations for OData Version 2.0\" Specification."
							},
							"navigation": {
								"name": "navigation",
								"type": "object",
								"optional": true,
								"description": "An map describing the navigation properties between entity sets, which should be used for constructing and paging the tree."
							},
							"numberOfExpandedLevels": {
								"name": "numberOfExpandedLevels",
								"type": "int",
								"optional": true,
								"defaultValue": 0,
								"description": "This property defines the number of levels, which will be expanded initially.\n\t\t\t\t\t\t\t\t\t\t\t\t\tPlease be aware, that this property leads to multiple backend requests. Default value is 0.\n\t\t\t\t\t\t\t\t\t\t\t\t\tThe auto-expand feature is deprecated for services without the \"hierarchy-node-descendant-count-for\" annotation."
							},
							"rootLevel": {
								"name": "rootLevel",
								"type": "int",
								"optional": true,
								"defaultValue": 0,
								"description": "The root level is the level of the topmost tree nodes, which will be used as an entry point for OData services.\n\t\t\t\t\t\t\t\t\t\tConforming to the \"SAP Annotations for OData Version 2.0\" Specification, the root level must start at 0.\n\t\t\t\t\t\t\t\t\t\tDefault value is thus 0."
							},
							"batchGroupId": {
								"name": "batchGroupId",
								"type": "string",
								"optional": true,
								"description": "Deprecated - use groupId instead: sets the batch group id to be used for requests originating from this binding"
							},
							"groupId": {
								"name": "groupId",
								"type": "string",
								"optional": true,
								"description": "sets the group id to be used for requests originating from this binding"
							},
							"operationMode": {
								"name": "operationMode",
								"type": "sap.ui.model.odata.OperationMode",
								"optional": true,
								"description": "Operation mode for this binding; defaults to the model's default operation mode when not specified"
							},
							"threshold": {
								"name": "threshold",
								"type": "int",
								"optional": true,
								"description": "a threshold, which will be used if the OperationMode is set to \"Auto\".\n\t\t\t\t\t\t\t\t\t\tIn case of OperationMode.Auto, the binding tries to fetch (at least) as many entries as the threshold.\n\t\t\t\t\t\t\t\t\t\tAlso see API documentation for {@link sap.ui.model.odata.OperationMode.Auto}.\n\t\t\t\t\t\t\t\t\t\tOperationMode.Auto is only supported for services which exposes the hierarchy-annotations, yet do NO expose the \"hierarchy-node-descendant-count-for\" annotation."
							},
							"useServersideApplicationFilters": {
								"name": "useServersideApplicationFilters",
								"type": "boolean",
								"optional": true,
								"description": "set this flag if $filter statements should be used for the $count/$inlinecount and data-retrieval in the OperationMode.Auto.\n\t\t\t\t\t\t\t\t\t\t\t\t\t Only use this if your backend supports prefiltering the tree and is capable of responding a complete tree hierarchy,\n\t\t\t\t\t\t\t\t\t\t\t\t\t including all inner nodes. To construct the hierarchy on the client, it is mandatory that all filter-matches include their complete\n\t\t\t\t\t\t\t\t\t\t\t\t\t parent chain up to the root level.\n\t\t\t\t\t\t\t\t\t\t\t\t\t OperationMode.Client will still request the complete collection without filters, since they will be applied clientside."
							},
							"treeState": {
								"name": "treeState",
								"type": "boolean",
								"optional": true,
								"description": "A tree state handle can be given to the ODataTreeBinding when two conditions are met:\n\t\t\t\t\t\t\t\t\t\t\t The binding is running in OperationMode.Client AND the sap.ui.table.TreeTable is used.\n\t\t\t\t\t\t\t\t\t\t\t The feature is only available when using the ODataTreeBindingAdapter, which is automatically applied when using the sap.ui.table.TreeTable.\n\t\t\t\t\t\t\t\t\t\t\t The tree state handle will contain all necessary information to expand the tree to the given state.\n\t\t\t\t\t\t\t\t\t\t\t This feature is not supported in OperationMode.Server and OperationMode.Auto.\n\t\t\t\t\t\t\t\t\t\t\t Please see also the getCurrentTreeState function in the class ODataTreeBindingAdapter."
							}
						},
						"description": "Parameter Object"
					},
					{
						"name": "aSorters",
						"type": "sap.ui.model.Sorter[]",
						"optional": true,
						"description": "predefined sorter/s (can be either a sorter or an array of sorters)"
					}
				]
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v2.ODataTreeBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}."
				},
				{
					"name": "filter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataTreeBinding",
						"description": "returns <code>this</code> to facilitate method chaining"
					},
					"parameters": [
						{
							"name": "aFilters",
							"type": "sap.ui.model.Filter[]|sap.ui.model.Filter",
							"optional": false
						},
						{
							"name": "sFilterType",
							"type": "sap.ui.model.FilterType",
							"optional": false,
							"description": "Type of the filter which should be adjusted, if it is not given, the standard behaviour FilterType.Client applies"
						}
					],
					"description": "Applies the given filters to the ODataTreeBinding.\nPlease note that \"Control\" filters are not suported for OperationMode.Server, here only \"Application\" filters are allowed.\nFilters given via the constructor are always Application filters and will be send with every backend-request.\nPlease see the constructor documentation for more information.\n\nSince 1.34.0 complete clientside filtering is supported for OperationMode.Client and in OperationMode.Auto, in case the backend-count is lower than the threshold.\nIn this case all control and application filters will be applied on the client.\nSee also: {@link sap.ui.model.odata.OperationMode.Auto}, {@link sap.ui.model.FilterType}.\n\nFor the OperationMode.Client and OperationMode.Auto, you may also specify the \"useServersideApplicationFilters\" constructor binding parameter.\nIf this is set, the Application filters will always be applied on the backend, and thus trigger an OData request.\nPlease see the constructor documentation for more information."
				},
				{
					"name": "getChildCount",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the number of children"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "Object",
							"optional": false,
							"description": "the context element of the node"
						}
					],
					"description": "Returns the number of child nodes. This function is not available when the annotation \"hierarchy-node-descendant-count-for\"\nis exposed on the service."
				},
				{
					"name": "getDownloadUrl",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "URL which can be used for downloading"
					},
					"since": "1.28",
					"parameters": [
						{
							"name": "sFormat",
							"type": "string",
							"optional": false,
							"description": "Value for the $format Parameter"
						}
					],
					"description": "Get a download URL with the specified format considering the\nsort/filter/custom parameters."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v2.ODataTreeBinding."
				},
				{
					"name": "getNodeContexts",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context[]",
						"description": "the contexts array"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the context for which the child nodes should be retrieved"
						},
						{
							"name": "iStartIndex",
							"type": "int",
							"optional": false,
							"description": "the start index of the requested contexts"
						},
						{
							"name": "iLength",
							"type": "int",
							"optional": false,
							"description": "the requested amount of contexts"
						},
						{
							"name": "iThreshold",
							"type": "int",
							"optional": false
						}
					],
					"description": "Returns the contexts of the child nodes for the given context. This function is not available when the annotation \"hierarchy-node-descendant-count-for\"\nis exposed on the service."
				},
				{
					"name": "getRootContexts",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context[]",
						"description": "an array containing the contexts for the entities returned by the backend, might be fewer than requested\n\t\t\t\t\t\t\t\t  if the backend does not have enough data."
					},
					"parameters": [
						{
							"name": "iStartIndex",
							"type": "int",
							"optional": true,
							"defaultValue": 0,
							"description": "the start index of the requested contexts"
						},
						{
							"name": "iLength",
							"type": "int",
							"optional": true,
							"defaultValue": "v2.ODataModel.sizeLimit",
							"description": "the requested amount of contexts. If none given, the default value is the size limit of the underlying\n\t\t\t\t\t\t\t\t\t\t\t\t sap.ui.model.odata.v2.ODataModel instance."
						},
						{
							"name": "iThreshold",
							"type": "int",
							"optional": true,
							"defaultValue": 0,
							"description": "the number of entities which should be retrieved in addition to the given length.\n\t\t\t\t  A higher threshold reduces the number of backend requests, yet these request blow up in size, since more data is loaded."
						}
					],
					"description": "Returns root contexts for the tree. You can specify the start index and the length for paging requests.\nThis function is not available when the annotation \"hierarchy-node-descendant-count-for\" is exposed on the service."
				},
				{
					"name": "getRootLevel",
					"visibility": "public",
					"returnValue": {
						"type": "int"
					},
					"description": "Returns the rootLevel"
				},
				{
					"name": "hasChildren",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if node has children"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the context element of the node"
						}
					],
					"description": "Returns if the node has child nodes.\nIf the ODataTreeBinding is running with hierarchy annotations, a context with the property values \"expanded\" or \"collapsed\"\nfor the drilldown state property, returns true. Entities with drilldown state \"leaf\" return false.\n\nThis function is not available when the annotation \"hierarchy-node-descendant-count-for\" is exposed on the service."
				},
				{
					"name": "initialize",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataTreeBinding",
						"description": "The binding instance"
					},
					"description": "Initialize binding. Fires a change if data is already available ($expand) or a refresh.\nIf metadata is not yet available, do nothing, method will be called again when\nmetadata is loaded."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"parameters": [
						{
							"name": "bForceUpdate",
							"type": "boolean",
							"optional": true,
							"description": "Update the bound control even if no data has been changed"
						},
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The  group Id for the refresh"
						}
					],
					"description": "Refreshes the binding, check whether the model data has been changed and fire change event\nif this is the case. For server side models this should refetch the data from the server.\nTo update a control, even if no data has been changed, e.g. to reset a control after failed\nvalidation, please use the parameter bForceUpdate."
				},
				{
					"name": "setRootLevel",
					"visibility": "public",
					"parameters": [
						{
							"name": "iRootLevel",
							"type": "int",
							"optional": false
						}
					],
					"description": "Sets the rootLevel\nThe root level is the level of the topmost tree nodes, which will be used as an entry point for OData services.\nThis is only possible (and necessary) for OData services implementing the hierarchy annotation specification,\nor when providing the annotation information locally as a binding parameter. See the constructor for API documentation on this."
				},
				{
					"name": "sort",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v2.ODataTreeBinding",
						"description": "returns <code>this</code> to facilitate method chaining"
					},
					"parameters": [
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter[]|sap.ui.model.Sorter",
							"optional": false,
							"description": "the Sorter or an Array of sap.ui.model.Sorter instances"
						}
					],
					"description": "Sorts the Tree according to the given Sorter(s).\nIn OperationMode.Client or OperationMode.Auto (if the given threshold is satisfied), the sorters are applied locally on the client."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.odata.v4",
			"basename": "v4",
			"resource": "sap/ui/model/odata/v4/ODataModel.js",
			"module": "sap/ui/model/odata/v4/ODataModel",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"description": "Model and related classes like bindings for OData V4."
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.odata.v4.AnnotationHelper",
			"basename": "AnnotationHelper",
			"resource": "sap/ui/model/odata/v4/AnnotationHelper.js",
			"module": "sap/ui/model/odata/v4/AnnotationHelper",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.43.0",
			"description": "A collection of methods which help to consume\n<a href=\"http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html\">\nOData V4 annotations</a> in XML template views. Every context argument must belong to a\n{@link sap.ui.model.odata.v4.ODataMetaModel} instance.",
			"methods": [
				{
					"name": "getNavigationBinding",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "A data binding according to the result of {@link #getNavigationPath}, for example\n  \"{ToSupplier}\" or \"\""
					},
					"since": "1.43.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The path value from the meta model, for example\n  \"ToSupplier/@com.sap.vocabularies.Communication.v1.Address\" or\n  \"@com.sap.vocabularies.UI.v1.FieldGroup#Dimensions\""
						}
					],
					"description": "Returns a data binding according to the result of {@link #getNavigationPath}."
				},
				{
					"name": "getNavigationPath",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "The path of structural and navigation properties, for example \"ToSupplier\" or \"\""
					},
					"since": "1.43.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The path value from the meta model, for example\n  \"ToSupplier/@com.sap.vocabularies.Communication.v1.Address\" or\n  \"@com.sap.vocabularies.UI.v1.FieldGroup#Dimensions\""
						}
					],
					"description": "A function that helps to interpret OData V4 annotations. It knows about the syntax\nof the path value used by the following dynamic expressions:\n<ul>\n<li>\"14.5.2 Expression edm:AnnotationPath\"</li>\n<li>\"14.5.11 Expression edm:NavigationPropertyPath\"</li>\n<li>\"14.5.12 Expression edm:Path\"</li>\n<li>\"14.5.13 Expression edm:PropertyPath\"</li>\n</ul>\nIt returns the path of structural and navigation properties from the given path\nvalue, but removes \"$count\", types casts, term casts, and annotations of navigation\nproperties."
				},
				{
					"name": "isMultiple",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if the given path ends with \"$count\" or with a multi-valued\n  structural or navigation property, <code>false</code> otherwise"
					},
					"since": "1.43.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The path value from the meta model, for example\n  \"ToSupplier/@com.sap.vocabularies.Communication.v1.Address\" or\n  \"@com.sap.vocabularies.UI.v1.FieldGroup#Dimensions\""
						},
						{
							"name": "oDetails",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "sap.ui.model.Context",
									"optional": false,
									"description": "Points to the given path, that is\n  <code>oDetails.context.getProperty(\"\") === sPath</code>"
								},
								"schemaChildName": {
									"name": "schemaChildName",
									"type": "string",
									"optional": false,
									"description": "The qualified name of the schema child where the computed annotation has been\n  found, for example \"name.space.EntityType\""
								}
							},
							"description": "The details object"
						}
					],
					"description": "A function that helps to interpret OData V4 annotations. It knows about the syntax\nof the path value used by the following dynamic expressions:\n<ul>\n<li>\"14.5.2 Expression edm:AnnotationPath\"</li>\n<li>\"14.5.11 Expression edm:NavigationPropertyPath\"</li>\n<li>\"14.5.12 Expression edm:Path\"</li>\n<li>\"14.5.13 Expression edm:PropertyPath\"</li>\n</ul>\nIt returns the information whether the given path ends with \"$count\" or with a\nmulti-valued structural or navigation property. Term casts and annotations of\nnavigation properties are ignored.\n\nExamples:\n<pre>\n&lt;template:if test=\"{facet>Target/$AnnotationPath@@sap.ui.model.odata.v4.AnnotationHelper.isMultiple}\">\n</pre>"
				},
				{
					"name": "value",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "A data binding or a fixed text or a sequence thereof"
					},
					"since": "1.43.0",
					"parameters": [
						{
							"name": "vRawValue",
							"type": "any",
							"optional": false,
							"description": "The raw value from the meta model"
						},
						{
							"name": "oDetails",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"context": {
									"name": "context",
									"type": "sap.ui.model.Context",
									"optional": false,
									"description": "Points to the given raw value, that is\n  <code>oDetails.context.getProperty(\"\") === vRawValue</code>"
								}
							},
							"description": "The details object"
						}
					],
					"description": "A function that helps to interpret OData V4 annotations. It knows about\n<ul>\n  <li> the \"14.4 Constant Expressions\" for \"edm:Bool\", \"edm:Date\",\n  \"edm:DateTimeOffset\", \"edm:Decimal\", \"edm:Float\", \"edm:Guid\", \"edm:Int\",\n  \"edm:TimeOfDay\".\n  <li> the constant \"14.4.11 Expression edm:String\": This is turned into a fixed\n  text (e.g. <code>\"Width\"</code>). String constants that contain a simple binding\n  <code>\"{@i18n>...}\"</code> to the hard-coded model name \"@i18n\" with arbitrary path\n  are not turned into a fixed text, but kept as a data binding expression; this\n  allows local annotation files to refer to a resource bundle for\n  internationalization.\n  <li> the dynamic \"14.5.1 Comparison and Logical Operators\": These are turned into\n  expression bindings to perform the operations at run-time.\n  <li> the dynamic \"14.5.3 Expression edm:Apply\":\n  <ul>\n    <li> \"14.5.3.1.1 Function odata.concat\": This is turned into a data binding\n    expression.\n    <li> \"14.5.3.1.2 Function odata.fillUriTemplate\": This is turned into an\n    expression binding to fill the template at run-time.\n    <li> \"14.5.3.1.3 Function odata.uriEncode\": This is turned into an expression\n    binding to encode the parameter at run-time.\n    <li> Apply functions may be nested arbitrarily.\n  </ul>\n  <li> the dynamic \"14.5.6 Expression edm:If\": This is turned into an expression\n  binding to be evaluated at run-time. The expression is a conditional expression\n  like <code>\"{=condition ? expression1 : expression2}\"</code>.\n  <li> the dynamic \"14.5.10 Expression edm:Null\": This is turned into a\n  <code>null</code> value. In <code>odata.concat</code> it is ignored.\n  <li> the dynamic \"14.5.12 Expression edm:Path\" and \"14.5.13 Expression\n  edm:PropertyPath\": This is turned into a simple data binding, e.g.\n  <code>\"{Name}\"</code>.\n</ul>\nUnsupported or incorrect values are turned into a string nevertheless, but indicated\nas such. An error describing the problem is logged to the console in such a case.\n\nExample:\n<pre>\n&lt;Text text=\"{meta>Value/@@sap.ui.model.odata.v4.AnnotationHelper.value}\" />\n</pre>"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v4.Context",
			"basename": "Context",
			"resource": "sap/ui/model/odata/v4/Context.js",
			"module": "sap/ui/model/odata/v4/Context",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.39.0",
			"extends": "sap.ui.model.Context",
			"description": "Implementation of an OData V4 model's context.\n\n  The context is a pointer to model data as returned by a query from a\n  {@link sap.ui.model.odata.v4.ODataContextBinding} or a\n  {@link sap.ui.model.odata.v4.ODataListBinding}. Contexts are always and only\n  created by such bindings. A context for a context binding points to the complete query\n  result. A context for a list binding points to one specific entry in the binding's\n  collection. A property binding does not have a context, you can access its value via\n  {@link sap.ui.model.odata.v4.ODataPropertyBinding#getValue}.\n\n  Applications can access model data only via a context, either synchronously with the risk\n  that the values are not available yet ({@link #getProperty} and {@link #getObject}) or\n  asynchronously ({@link #requestProperty} and {@link #requestObject}).\n\n  Context instances are immutable.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.odata.v4.ODataModel",
						"optional": false,
						"description": "The model"
					},
					{
						"name": "oBinding",
						"type": "sap.ui.model.odata.v4.ODataContextBinding|sap.ui.model.odata.v4.ODataListBinding",
						"optional": false,
						"description": "A binding that belongs to the model"
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false,
						"description": "An absolute path without trailing slash"
					},
					{
						"name": "iIndex",
						"type": "number",
						"optional": true,
						"description": "Index of item (within the collection addressed by <code>sPath</code>) represented\n  by this context; used by list bindings, not context bindings"
					},
					{
						"name": "oCreatePromise",
						"type": "Promise",
						"optional": true,
						"description": "Promise returned by {@link #created}"
					}
				],
				"description": "Do <strong>NOT</strong> call this private constructor. In the OData V4 model you cannot\ncreate contexts at will: retrieve them from a binding or a view element instead."
			},
			"methods": [
				{
					"name": "created",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise that is resolved without data when the entity represented by this context has\n  been created in the backend. Returns <code>undefined</code> if the context has not been\n  created using {@link sap.ui.model.odata.v4.ODataListBinding#create}."
					},
					"since": "1.43.0",
					"description": "Returns a promise that is resolved without data when the entity represented by this context\nhas been created in the backend. As long as it is not yet resolved or rejected the entity\nrepresented by this context is transient."
				},
				{
					"name": "delete",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise which is resolved without a result in case of success, or rejected with an\n  instance of <code>Error</code> in case of failure, e.g. if the given context does not point\n  to an entity, if it is not part of a list binding, if there are pending changes for the\n  context's binding, if the resulting group ID is neither '$auto' nor '$direct', or if the\n  deletion on the server fails.\n  <p>\n  The error instance is flagged with <code>isConcurrentModification</code> in case a\n  concurrent modification (e.g. by another user) of the entity between loading and deletion\n  has been detected; this should be shown to the user who needs to decide whether to try\n  deletion again. If the entity does not exist, we assume it has already been deleted by\n  someone else and report success."
					},
					"since": "1.41.0",
					"parameters": [
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The group ID to be used for the DELETE request; if not specified, the update group ID for\n  the context's binding is used, see {@link sap.ui.model.odata.v4.ODataModel#bindContext}\n  and {@link sap.ui.model.odata.v4.ODataModel#bindList}; the resulting group ID must be\n  '$auto' or '$direct'"
						}
					],
					"description": "Deletes the OData entity this context points to. The context must be part of a context\nbinding with an empty path or be part of a list binding.\n\nThe context must not be used anymore after successful deletion."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"since": "1.41.0",
					"description": "Destroys this context, that is, it removes this context from all dependent bindings and drops\nreferences to binding and model, so that the context cannot be used anymore; it keeps path\nand index for debugging purposes."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v4.Context with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Context.extend}."
				},
				{
					"name": "getBinding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ODataContextBinding|sap.ui.model.odata.v4.ODataListBinding",
						"description": "The context's binding"
					},
					"since": "1.39.0",
					"description": "Returns the binding this context belongs to."
				},
				{
					"name": "getCanonicalPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The canonical path (e.g. \"/SalesOrderList('0500000000')\")"
					},
					"since": "1.39.0",
					"description": "Returns the \"canonical path\" of the entity for this context.\nAccording to \"4.3.1 Canonical URL\" of the specification \"OData Version 4.0 Part 2: URL\nConventions\", this is the \"name of the entity set associated with the entity followed by the\nkey predicate identifying the entity within the collection\".\nUse the canonical path in {@link sap.ui.core.Element#bindElement} to create an element\nbinding.\nNote: For a transient context (see {@link #isTransient}) a wrong path is returned unless all\nkey properties are available within the initial data."
				},
				{
					"name": "getIndex",
					"visibility": "public",
					"returnValue": {
						"type": "number",
						"description": "The context's index within the binding's collection or <code>undefined</code> if the\n  context does not belong to a list binding."
					},
					"since": "1.39.0",
					"description": "Returns the context's index within the binding's collection. The return value changes if a\nnew entity is added via {@link sap.ui.model.odata.v4.ODataListBinding#create} or deleted\nagain."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v4.Context."
				},
				{
					"name": "getObject",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The requested value"
					},
					"since": "1.39.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": true,
							"defaultValue": "\"\"",
							"description": "A relative path within the JSON structure"
						}
					],
					"description": "Returns the value for the given path relative to this context. The function allows access to\nthe complete data the context points to (if <code>sPath</code> is \"\") or any part thereof.\nThe data is a JSON structure as described in\n<a href=\"http://docs.oasis-open.org/odata/odata-json-format/v4.0/odata-json-format-v4.0.html\">\n\"OData JSON Format Version 4.0\"</a>.\nNote that the function clones the result. Modify values via\n{@link sap.ui.model.odata.v4.ODataPropertyBinding#setValue}.\n\nReturns <code>undefined</code> if the data is not (yet) available. Use\n{@link #requestObject} for asynchronous access."
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The requested property value"
					},
					"since": "1.39.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A relative path within the JSON structure"
						},
						{
							"name": "bExternalFormat",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "If <code>true</code>, the value is returned in external format using a UI5 type for the\n  given property path that formats corresponding to the property's EDM type and constraints.\n  If the type is not yet available, <code>undefined</code> is returned."
						}
					],
					"description": "Returns the property value for the given path relative to this context. The path is expected\nto point to a structural property with primitive type. Returns <code>undefined</code>\nif the data is not (yet) available. Use {@link #requestProperty} for asynchronous access."
				},
				{
					"name": "isTransient",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Whether this context is transient"
					},
					"since": "1.43.0",
					"description": "Returns <code>true</code> if this context is transient, which means that the promise returned\nby {@link #created} is not yet resolved or rejected."
				},
				{
					"name": "requestCanonicalPath",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise which is resolved with the canonical path (e.g. \"/SalesOrderList('0500000000')\")\n  in case of success, or rejected with an instance of <code>Error</code> in case of failure,\n  e.g. if the given context does not point to an entity"
					},
					"since": "1.39.0",
					"description": "Returns a promise for the \"canonical path\" of the entity for this context.\nAccording to \"4.3.1 Canonical URL\" of the specification \"OData Version 4.0 Part 2: URL\nConventions\", this is the \"name of the entity set associated with the entity followed by the\nkey predicate identifying the entity within the collection\".\nUse the canonical path in {@link sap.ui.core.Element#bindElement} to create an element\nbinding.\nNote: For a transient context (see {@link #isTransient}) a wrong path is returned unless all\nkey properties are available within the initial data."
				},
				{
					"name": "requestObject",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise on the requested value"
					},
					"since": "1.39.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": true,
							"defaultValue": "\"\"",
							"description": "A relative path within the JSON structure"
						}
					],
					"description": "Returns a promise on the value for the given path relative to this context. The function\nallows access to the complete data the context points to (if <code>sPath</code> is \"\") or\nany part thereof. The data is a JSON structure as described in\n<a href=\"http://docs.oasis-open.org/odata/odata-json-format/v4.0/odata-json-format-v4.0.html\">\n\"OData JSON Format Version 4.0\"</a>.\nNote that the function clones the result. Modify values via\n{@link sap.ui.model.odata.v4.ODataPropertyBinding#setValue}.\n\nIf you want {@link #requestObject} to read fresh data, call\n<code>oContext.getBinding().refresh()</code> first."
				},
				{
					"name": "requestProperty",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise on the requested value; it is rejected if the value is not primitive"
					},
					"since": "1.39.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": true,
							"description": "A relative path within the JSON structure"
						},
						{
							"name": "bExternalFormat",
							"type": "boolean",
							"optional": true,
							"defaultValue": false,
							"description": "If <code>true</code>, the value is returned in external format using a UI5 type for the\n  given property path that formats corresponding to the property's EDM type and constraints."
						}
					],
					"description": "Returns a promise on the property value for the given path relative to this context. The path\nis expected to point to a structural property with primitive type."
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "A string description of this binding"
					},
					"since": "1.39.0",
					"description": "Returns a string representation of this object including the binding path."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v4.ODataContextBinding",
			"basename": "ODataContextBinding",
			"resource": "sap/ui/model/odata/v4/ODataContextBinding.js",
			"module": "sap/ui/model/odata/v4/ODataContextBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"extends": "sap.ui.model.ContextBinding",
			"description": "Context binding for an OData V4 model.\n  An event handler can only be attached to this binding for the following events: 'change',\n  'dataReceived', and 'dataRequested'.\n  For other events, an error is thrown.\n\n  A context binding can also be used as an <i>operation binding</i> to support bound actions,\n  action imports and function imports. If you want to control the execution time of an\n  operation, for example a function import named \"GetNumberOfAvailableItems\", create a\n  context binding for the path \"/GetNumberOfAvailableItems(...)\" (as specified here,\n  including the three dots). Such an operation binding is <i>deferred</i>, meaning that it\n  does not request automatically, but only when you call {@link #execute}. {@link #refresh}\n  is always ignored for actions and action imports. For function imports, it is ignored if\n  {@link #execute} has not yet been called. Afterwards it results in another call of the\n  function with the parameter values of the last execute.\n\n  The binding parameter for bound actions may be given in the binding path, for example\n  \"/SalesOrderList('42')/name.space.SalesOrder_Confirm\". This can be\n  used if the exact entity for the binding parameter is known in advance. If you use a\n  relative binding instead, the operation path is a concatenation of the parent context's\n  canonical path and the deferred binding's path.\n\n  <b>Example</b>: You have a table with a list binding to \"/SalesOrderList\". In\n  each row you have a button to confirm the sales order, with the relative binding\n  \"name.space.SalesOrder_Confirm(...)\". Then the parent context for such a button\n  refers to an entity in \"SalesOrderList\", so its canonical path is\n  \"/SalesOrderList('<i>SalesOrderID</i>')\" and the resulting path for the action\n  is \"/SalesOrderList('<i>SalesOrderID</i>')/name.space.SalesOrder_Confirm\".\n\n  This also works if the relative path of the deferred operation binding starts with a\n  navigation property. Then this navigation property will be part of the operation's\n  resource path, which is still valid.\n\n  A deferred operation binding is not allowed to have another deferred operation binding as\n  parent.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.odata.v4.ODataModel",
						"optional": false,
						"description": "The OData V4 model"
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false,
						"description": "The binding path in the model; must not end with a slash"
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": true,
						"description": "The context which is required as base for a relative path"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"$$groupId": {
								"name": "$$groupId",
								"type": "string",
								"optional": true,
								"description": "The group ID to be used for <b>read</b> requests triggered by this binding; if not\n  specified, either the parent binding's group ID (if the binding is relative) or the\n  model's group ID is used, see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."
							},
							"$$updateGroupId": {
								"name": "$$updateGroupId",
								"type": "string",
								"optional": true,
								"description": "The group ID to be used for <b>update</b> requests triggered by this binding;\n  if not specified, either the parent binding's update group ID (if the binding is relative)\n  or the model's update group ID is used,\n  see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  For valid values, see parameter \"$$groupId\"."
							}
						},
						"description": "Map of binding parameters which can be OData query options as specified in\n  \"OData Version 4.0 Part 2: URL Conventions\" or the binding-specific parameters \"$$groupId\"\n  and \"$$updateGroupId\".\n  Note: If parameters are provided for a relative binding path, the binding accesses data\n  with its own service requests instead of using its parent binding.\n  The following OData query options are allowed:\n  <ul>\n  <li> All \"5.2 Custom Query Options\" except for those with a name starting with \"sap-\"\n <li> The $apply, $count, $expand, $filter, $orderby, $search and $select\n  \"5.1 System Query Options\"; OData V4 only allows $apply, $count, $filter, $orderby, $search\n  and $select inside resource paths that identify a collection.\n  In our case here, this means you can only use them inside $expand.\n  </ul>\n  All other query options lead to an error.\n  Query options specified for the binding overwrite model query options."
					}
				],
				"description": "Do <strong>NOT</strong> call this private constructor, but rather use\n{@link sap.ui.model.odata.v4.ODataModel#bindContext} instead!"
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"reason": {
											"name": "reason",
											"type": "sap.ui.model.ChangeReason",
											"optional": false,
											"description": "The reason for the 'change' event: {@link sap.ui.model.ChangeReason.Change} when the\n  binding is initialized, {@link sap.ui.model.ChangeReason.Refresh} when the binding is\n  refreshed, and {@link sap.ui.model.ChangeReason.Context} when the parent context is changed"
										}
									}
								}
							}
						}
					],
					"description": "The 'change' event is fired when the binding is initialized or its parent context is changed.\nIt is to be used by controls to get notified about changes to the bound context of this\ncontext binding.\nRegistered event handlers are called with the change reason as parameter."
				},
				{
					"name": "dataReceived",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"error": {
											"name": "error",
											"type": "Error",
											"optional": true,
											"description": "The error object if a back-end request failed.\n  If there are multiple failed back-end requests, the error of the first one is provided."
										}
									}
								}
							}
						}
					],
					"description": "The 'dataReceived' event is fired after the back-end data has been processed. It is to be\nused by applications for example to switch off a busy indicator or to process an error.\n\nIf back-end requests are successful, the event has no parameters. Use the binding's bound\ncontext via {@link #getBoundContext oEvent.getSource().getBoundContext()} to access the\nresponse data. Note that controls bound to this data may not yet have been updated, meaning\nit is not safe for registered event handlers to access data via control APIs.\n\nIf a back-end request fails, the 'dataReceived' event provides an <code>Error</code> in the\n'error' event parameter."
				},
				{
					"name": "dataRequested",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event"
						}
					],
					"description": "The 'dataRequested' event is fired directly after data has been requested from a back end.\nIt is to be used by applications for example to switch on a busy indicator. Registered event\nhandlers are called without parameters."
				}
			],
			"methods": [
				{
					"name": "changeParameters",
					"module": "sap/ui/model/odata/v4/ODataParentBinding",
					"visibility": "public",
					"since": "1.45.0",
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"description": "Map of binding parameters, see {@link sap.ui.model.odata.v4.ODataModel#bindList} and\n  {@link sap.ui.model.odata.v4.ODataModel#bindContext}"
						}
					],
					"description": "Changes this binding's parameters and refreshes the binding. The parameters are changed\naccording to the given map of parameters: Parameters with an <code>undefined</code> value are\nremoved, the other parameters are set, and missing parameters remain unchanged.",
					"resource": "sap/ui/model/odata/v4/ODataParentBinding.js"
				},
				{
					"name": "destroy",
					"visibility": "public",
					"since": "1.40.1",
					"description": "Destroys the object. The object must not be used anymore after this function was called."
				},
				{
					"name": "execute",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise that is resolved without data when the operation call succeeded, or rejected\n  with an instance of <code>Error</code> in case of failure."
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The group ID to be used for the request; if not specified, the group ID for this binding is\n  used, see {@link sap.ui.model.odata.v4.ODataContextBinding#constructor}.\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."
						}
					],
					"description": "Calls the OData operation that corresponds to this operation binding.\n\nParameters for the operation must be set via {@link #setParameter} beforehand.\n\nThe value of this binding is the result of the operation. To access a result of primitive\ntype, bind a control to the path \"value\", for example\n<code>&lt;Text text=\"{value}\"/&gt;</code>. If the result has a complex or entity type, you\ncan bind properties as usual, for example <code>&lt;Text text=\"{street}\"/&gt;</code>."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v4.ODataContextBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}."
				},
				{
					"name": "getBoundContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.Context",
						"description": "The bound context"
					},
					"since": "1.39.0",
					"description": "Returns the bound context."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v4.ODataContextBinding."
				},
				{
					"name": "hasPendingChanges",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if the binding has pending changes"
					},
					"since": "1.39.0",
					"description": "Returns <code>true</code> if this binding or its dependent bindings have pending changes,\nmeaning updates that have not yet been successfully sent to the server.",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "initialize",
					"module": "sap/ui/model/odata/v4/ODataParentBinding",
					"visibility": "protected",
					"since": "1.37.0",
					"description": "Initializes the OData list binding. Fires a 'change' event in case the binding has a\nresolved path.",
					"resource": "sap/ui/model/odata/v4/ODataParentBinding.js"
				},
				{
					"name": "isInitial",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "refresh",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The group ID to be used for refresh; if not specified, the group ID for this binding is\n  used.\n\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."
						}
					],
					"description": "Refreshes the binding. Prompts the model to retrieve data from the server using the given\ngroup ID and notifies the control that new data is available.\n\nRefresh is supported for bindings which are not relative to a\n{@link sap.ui.model.odata.v4.Context}.\n\nNote: When calling {@link #refresh} multiple times, the result of the request triggered by\nthe last call determines the binding's data; it is <b>independent</b> of the order of calls\nto {@link sap.ui.model.odata.v4.ODataModel#submitBatch} with the given group ID.\n\nIf there are pending changes, an error is thrown. Use {@link #hasPendingChanges} to check if\nthere are pending changes. If there are changes, call\n{@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or\n{@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling\n{@link #refresh}.",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "resetChanges",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.40.1",
					"description": "Resets all pending changes of this binding, see {@link #hasPendingChanges}.",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "resume",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "setParameter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ODataContextBinding",
						"description": "<code>this</code> to enable method chaining"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sParameterName",
							"type": "string",
							"optional": false,
							"description": "The parameter name"
						},
						{
							"name": "vValue",
							"type": "any",
							"optional": false,
							"description": "The parameter value"
						}
					],
					"description": "Sets a parameter for an operation call."
				},
				{
					"name": "suspend",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "A string description of this binding"
					},
					"since": "1.37.0",
					"description": "Returns a string representation of this object including the binding path. If the binding is\nrelative, the parent path is also given, separated by a '|'."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v4.ODataListBinding",
			"basename": "ODataListBinding",
			"resource": "sap/ui/model/odata/v4/ODataListBinding.js",
			"module": "sap/ui/model/odata/v4/ODataListBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"extends": "sap.ui.model.ListBinding",
			"description": "List binding for an OData V4 model.\n  An event handler can only be attached to this binding for the following events: 'change',\n  'dataReceived', 'dataRequested', and 'refresh'.\n  For other events, an error is thrown.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.odata.v4.ODataModel",
						"optional": false,
						"description": "The OData V4 model"
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false,
						"description": "The binding path in the model; must not end with a slash"
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": true,
						"description": "The parent context which is required as base for a relative path"
					},
					{
						"name": "vSorters",
						"type": "sap.ui.model.Sorter|sap.ui.model.Sorter[]",
						"optional": true,
						"description": "The dynamic sorters to be used initially. Call {@link #sort} to replace them. Static\n  sorters, as defined in the '$orderby' binding parameter, are always executed after the\n  dynamic sorters.\n  Supported since 1.39.0."
					},
					{
						"name": "vFilters",
						"type": "sap.ui.model.Filter|sap.ui.model.Filter[]",
						"optional": true,
						"description": "The dynamic application filters to be used initially. Call {@link #filter} to replace them.\n  Static filters, as defined in the '$filter' binding parameter, are always combined with the\n  dynamic filters using a logical <code>AND</code>.\n  Supported since 1.39.0."
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"$$operationMode": {
								"name": "$$operationMode",
								"type": "sap.ui.model.odata.OperationMode",
								"optional": true,
								"description": "The operation mode for sorting with the model's operation mode as default. Since 1.39.0,\n  the operation mode {@link sap.ui.model.odata.OperationMode.Server} is supported. All other\n  operation modes including <code>undefined</code> lead to an error if 'vFilters' or\n  'vSorters' are given or if {@link #filter} or {@link #sort} is called."
							},
							"$$groupId": {
								"name": "$$groupId",
								"type": "string",
								"optional": true,
								"description": "The group ID to be used for <b>read</b> requests triggered by this binding; if not\n  specified, either the parent binding's group ID (if the binding is relative) or the\n  model's group ID is used, see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."
							},
							"$$updateGroupId": {
								"name": "$$updateGroupId",
								"type": "string",
								"optional": true,
								"description": "The group ID to be used for <b>update</b> requests triggered by this binding;\n  if not specified, either the parent binding's update group ID (if the binding is relative)\n  or the model's update group ID is used,\n  see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  For valid values, see parameter \"$$groupId\"."
							}
						},
						"description": "Map of binding parameters which can be OData query options as specified in\n  \"OData Version 4.0 Part 2: URL Conventions\" or the binding-specific parameters \"$$groupId\"\n  and \"$$updateGroupId\".\n  Note: If parameters are provided for a relative binding path, the binding accesses data\n  with its own service requests instead of using its parent binding.\n  The following OData query options are allowed:\n  <ul>\n  <li> All \"5.2 Custom Query Options\" except for those with a name starting with \"sap-\"\n  <li> The $apply, $count, $expand, $filter, $orderby, $search and $select \"5.1 System Query\n    Options\"\n  </ul>\n  All other query options lead to an error.\n  Query options specified for the binding overwrite model query options."
					}
				],
				"description": "Do <strong>NOT</strong> call this private constructor, but rather use\n{@link sap.ui.model.odata.v4.ODataModel#bindList} instead!"
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"reason": {
											"name": "reason",
											"type": "sap.ui.model.ChangeReason",
											"optional": false,
											"description": "The reason for the 'change' event: {@link sap.ui.model.ChangeReason.Change} when the\n  binding is initialized and or a new context is created, or\n  {@link sap.ui.model.ChangeReason.Context} when the parent context is changed"
										}
									}
								}
							}
						}
					],
					"description": "The 'change' event is fired when the binding is initialized or new contexts are created or\nits parent context is changed. It is to be used by controls to get notified about changes to\nthe binding contexts of this list binding. Registered event handlers are called with the\nchange reason as parameter."
				},
				{
					"name": "dataReceived",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"error": {
											"name": "error",
											"type": "Error",
											"optional": true,
											"description": "The error object if a back-end request failed.\n  If there are multiple failed back-end requests, the error of the first one is provided."
										}
									}
								}
							}
						}
					],
					"description": "The 'dataReceived' event is fired after the back-end data has been processed and the\nregistered 'change' event listeners have been notified.\nIt is to be used by applications for example to switch off a busy indicator or to process an\nerror.\nIf back-end requests are successful, the event has no parameters. Use the binding's contexts\nvia {@link #getCurrentContexts oEvent.getSource().getCurrentContexts()} to access the\nresponse data. Note that controls bound to this data may not yet have been updated, meaning\nit is not safe for registered event handlers to access data via control APIs.\n\nIf a back-end request fails, the 'dataReceived' event provides an <code>Error</code> in the\n'error' event parameter."
				},
				{
					"name": "dataRequested",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event"
						}
					],
					"description": "The 'dataRequested' event is fired directly after data has been requested from a back end.\nIt is to be used by applications for example to switch on a busy indicator.\nRegistered event handlers are called without parameters."
				}
			],
			"methods": [
				{
					"name": "changeParameters",
					"module": "sap/ui/model/odata/v4/ODataParentBinding",
					"visibility": "public",
					"since": "1.45.0",
					"parameters": [
						{
							"name": "mParameters",
							"type": "object",
							"optional": false,
							"description": "Map of binding parameters, see {@link sap.ui.model.odata.v4.ODataModel#bindList} and\n  {@link sap.ui.model.odata.v4.ODataModel#bindContext}"
						}
					],
					"description": "Changes this binding's parameters and refreshes the binding. The parameters are changed\naccording to the given map of parameters: Parameters with an <code>undefined</code> value are\nremoved, the other parameters are set, and missing parameters remain unchanged.",
					"resource": "sap/ui/model/odata/v4/ODataParentBinding.js"
				},
				{
					"name": "create",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.Context",
						"description": "The context object for the created entity"
					},
					"since": "1.43.0",
					"parameters": [
						{
							"name": "oInitialData",
							"type": "object",
							"optional": true,
							"defaultValue": "{}",
							"description": "The initial data for the created entity"
						}
					],
					"description": "Creates a new entity and inserts it at the beginning of the list. As long as the binding\ncontains an entity created via this function, you cannot create another entity. This is only\npossible after the creation of the entity has been successfully sent to the server and you\nhave called {@link #refresh} at the binding or the new entity is deleted in between.\n\nFor creating the new entity, the binding's update group ID is used, see binding parameter\n$$updateGroupId of {@link sap.ui.model.odata.v4.ODataModel#bindList}.\n\nYou can call {@link sap.ui.model.odata.v4.Context#delete} to delete the created context\nagain. As long as the context is transient (see\n{@link sap.ui.model.odata.v4.Context#isTransient}), {@link #resetChanges} and a call to\n{@link sap.ui.model.odata.v4.ODataModel#resetChanges} with the update group ID as parameter\nalso delete the created context together with other changes.\n\nIf the creation of the entity on the server failed, the creation is repeated for application\ngroup IDs with the next call of {@link sap.ui.model.odata.v4.ODataModel#submitBatch}. For\n'$auto' or '$direct', the creation is repeated automatically with the next update for the\nentity."
				},
				{
					"name": "destroy",
					"visibility": "public",
					"since": "1.40.1",
					"description": "Destroys the object. The object must not be used anymore after this function was called."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v4.ODataListBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}."
				},
				{
					"name": "filter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ODataListBinding",
						"description": "<code>this</code> to facilitate method chaining"
					},
					"since": "1.39.0",
					"parameters": [
						{
							"name": "vFilters",
							"type": "sap.ui.model.Filter|sap.ui.model.Filter[]",
							"optional": true,
							"description": "The dynamic filters to be used; replaces the dynamic filters given in\n  {@link sap.ui.model.odata.v4.ODataModel#bindList}.\n  The filter executed on the list is created from the following parts, which are combined\n  with a logical 'and':\n  <ul>\n  <li> Dynamic filters of type {@link sap.ui.model.FilterType.Application}\n  <li> Dynamic filters of type {@link sap.ui.model.FilterType.Control}\n  <li> The static filters, as defined in the '$filter' binding parameter\n  </ul>"
						},
						{
							"name": "sFilterType",
							"type": "sap.ui.model.FilterType",
							"optional": true,
							"defaultValue": "sap.ui.model.FilterType.Application",
							"description": "The filter type to be used"
						}
					],
					"description": "Filters the list with the given filters.\n\nIf there are pending changes an error is thrown. Use {@link #hasPendingChanges} to check if\nthere are pending changes. If there are changes, call\n{@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or\n{@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling\n{@link #filter}."
				},
				{
					"name": "getContexts",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.Context[]",
						"description": "The array of already created contexts with the first entry containing the context for\n  <code>iStart</code>"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "iStart",
							"type": "number",
							"optional": true,
							"defaultValue": 0,
							"description": "The index where to start the retrieval of contexts"
						},
						{
							"name": "iLength",
							"type": "number",
							"optional": true,
							"description": "The number of contexts to retrieve beginning from the start index; defaults to the model's\n  size limit, see {@link sap.ui.model.Model#setSizeLimit}"
						},
						{
							"name": "iMaximumPrefetchSize",
							"type": "number",
							"optional": true,
							"defaultValue": 0,
							"description": "The maximum number of contexts to read before and after the given range; with this,\n  controls can prefetch data that is likely to be needed soon, e.g. when scrolling down in a\n  table. Negative values will be treated as 0.\n  Supported since 1.39.0"
						}
					],
					"description": "Returns already created binding contexts for all entities in this list binding for the range\ndetermined by the given start index <code>iStart</code> and <code>iLength</code>.\nIf at least one of the entities in the given range has not yet been loaded, fires a\n{@link #event:change} event on this list binding once these entities have been loaded\n<b>asynchronously</b>. A further call to this method in the 'change' event handler with the\nsame index range then yields the updated array of contexts."
				},
				{
					"name": "getCurrentContexts",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.Context[]",
						"description": "The contexts"
					},
					"since": "1.39.0",
					"description": "Returns the contexts that were requested by a control last time. Does not trigger a data\nrequest. In the time between the {@link #event:dataRequested} event and the\n{@link #event:dataReceived} event, the resulting array contains <code>undefined</code> at\nthose indexes where the data is not yet available."
				},
				{
					"name": "getDistinctValues",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "getHeaderContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.Context",
						"description": "The header context or <code>null</code> if the binding is relative and has no context"
					},
					"since": "1.45.0",
					"description": "Returns the header context which allows binding to <code>$count</code>. If known, the value\nof such a binding is the element count of the collection on the server. Otherwise it is\n<code>undefined</code>. The value is a number and its type is <code>Edm.Int64</code>.\n\nThe count is known to the binding in the following situations:\n<ul>\n  <li>It has been requested from the server via the system query option <code>$count</code>.\n  <li>A \"short read\" in a paged collection (the server delivered less elements than\n    requested) indicated that the server has no more unread elements.\n  <li>It has been read completely in one request, for example an embedded collection via\n    <code>$expand</code>.\n</ul>\n\nThe <code>$count</code> is unknown, if the binding is relative, but has no context."
				},
				{
					"name": "getLength",
					"visibility": "public",
					"returnValue": {
						"type": "number",
						"description": "The number of entries in the list"
					},
					"since": "1.37.0",
					"description": "Returns the number of entries in the list. As long as the client does not know the size on\nthe server an estimated length is returned."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v4.ODataListBinding."
				},
				{
					"name": "hasPendingChanges",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if the binding has pending changes"
					},
					"since": "1.39.0",
					"description": "Returns <code>true</code> if this binding or its dependent bindings have pending changes,\nmeaning updates that have not yet been successfully sent to the server.",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "initialize",
					"module": "sap/ui/model/odata/v4/ODataParentBinding",
					"visibility": "protected",
					"since": "1.37.0",
					"description": "Initializes the OData list binding. Fires a 'change' event in case the binding has a\nresolved path.",
					"resource": "sap/ui/model/odata/v4/ODataParentBinding.js"
				},
				{
					"name": "isInitial",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "isLengthFinal",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "If <code>true</true> the length is determined by server side data"
					},
					"since": "1.37.0",
					"description": "Returns <code>true</code> if the length has been determined by the data returned from\nserver. If the length is a client side estimation <code>false</code> is returned."
				},
				{
					"name": "refresh",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The group ID to be used for refresh; if not specified, the group ID for this binding is\n  used.\n\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."
						}
					],
					"description": "Refreshes the binding. Prompts the model to retrieve data from the server using the given\ngroup ID and notifies the control that new data is available.\n\nRefresh is supported for bindings which are not relative to a\n{@link sap.ui.model.odata.v4.Context}.\n\nNote: When calling {@link #refresh} multiple times, the result of the request triggered by\nthe last call determines the binding's data; it is <b>independent</b> of the order of calls\nto {@link sap.ui.model.odata.v4.ODataModel#submitBatch} with the given group ID.\n\nIf there are pending changes, an error is thrown. Use {@link #hasPendingChanges} to check if\nthere are pending changes. If there are changes, call\n{@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or\n{@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling\n{@link #refresh}.",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "resetChanges",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.40.1",
					"description": "Resets all pending changes of this binding, see {@link #hasPendingChanges}.",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "resume",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "sort",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ODataListBinding",
						"description": "<code>this</code> to facilitate method chaining"
					},
					"since": "1.39.0",
					"parameters": [
						{
							"name": "vSorters",
							"type": "sap.ui.model.Sorter|sap.ui.model.Sorter[]",
							"optional": true,
							"description": "The dynamic sorters to be used; they replace the dynamic sorters given in\n  {@link sap.ui.model.odata.v4.ODataModel#bindList}.\n  Static sorters, as defined in the '$orderby' binding parameter, are always executed after\n  the dynamic sorters."
						}
					],
					"description": "Sort the entries represented by this list binding according to the given sorters.\nThe sorters are stored at this list binding and they are used for each following data\nrequest.\n\nIf there are pending changes an error is thrown. Use {@link #hasPendingChanges} to check if\nthere are pending changes. If there are changes, call\n{@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or\n{@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling\n{@link #sort}."
				},
				{
					"name": "suspend",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "A string description of this binding"
					},
					"since": "1.37.0",
					"description": "Returns a string representation of this object including the binding path. If the binding is\nrelative, the parent path is also given, separated by a '|'."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v4.ODataMetaModel",
			"basename": "ODataMetaModel",
			"resource": "sap/ui/model/odata/v4/ODataMetaModel.js",
			"module": "sap/ui/model/odata/v4/ODataMetaModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"extends": "sap.ui.model.MetaModel",
			"description": "Implementation of an OData metadata model which offers access to OData V4 metadata.\n  The meta model does not support any public events; attaching an event handler leads to an\n  error.\n\n  This model is read-only.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oRequestor",
						"type": "object",
						"optional": false,
						"description": "The metadata requestor"
					},
					{
						"name": "sUrl",
						"type": "string",
						"optional": false,
						"description": "The URL to the $metadata document of the service"
					},
					{
						"name": "vAnnotationUri",
						"type": "string|string[]",
						"optional": true,
						"description": "The URL (or an array of URLs) from which the annotation metadata are loaded\n  Supported since 1.41.0"
					},
					{
						"name": "oModel",
						"type": "sap.ui.model.odata.v4.ODataModel",
						"optional": false,
						"description": "The model this meta model is related to"
					}
				],
				"description": "Do <strong>NOT</strong> call this private constructor, but rather use\n{@link sap.ui.model.odata.v4.ODataModel#getMetaModel} instead."
			},
			"methods": [
				{
					"name": "bindList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.ListBinding",
						"description": "A list binding for this metadata model"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A relative or absolute path within the metadata model, for example \"/EMPLOYEES\""
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "The context to be used as a starting point in case of a relative path"
						},
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter|sap.ui.model.Sorter[]",
							"optional": true,
							"description": "Initial sort order, see {@link sap.ui.model.ListBinding#sort}"
						},
						{
							"name": "aFilters",
							"type": "sap.ui.model.Filter|sap.ui.model.Filter[]",
							"optional": true,
							"description": "Initial application filter(s), see {@link sap.ui.model.ListBinding#filter}"
						}
					],
					"description": "Creates a list binding for this metadata model which iterates content from the given path\n(relative to the given context), sorted and filtered as indicated.\n\nBy default, OData names are iterated and a trailing slash is implicitly added to the path\n(see {@link #requestObject} for the effects this has); technical properties and inline\nannotations are filtered out.\n\nA path which ends with an \"@\" segment can be used to iterate all inline or external\ntargeting annotations; no trailing slash is added implicitly; technical properties and OData\nnames are filtered out."
				},
				{
					"name": "bindProperty",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.PropertyBinding",
						"description": "A property binding for this meta data model"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A relative or absolute path within the meta data model, for example \"/EMPLOYEES/ENTRYDATE\""
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "The context to be used as a starting point in case of a relative path"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"scope": {
									"name": "scope",
									"type": "object",
									"optional": true,
									"description": "Optional scope for lookup of aliases for computed annotations (since 1.43.0)"
								}
							},
							"description": "Optional binding parameters that are passed to {@link #getObject} to compute the binding's\n  value; if they are given, <code>oContext</code> cannot be omitted"
						}
					],
					"description": "Creates a property binding for this meta data model which refers to the content from the\ngiven path (relative to the given context)."
				},
				{
					"name": "bindTree",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v4.ODataMetaModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.MetaModel.extend}."
				},
				{
					"name": "getMetaContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context",
						"description": "The corresponding metadata context within the OData metadata model, for example with\n  metadata path \"/EMPLOYEES/ENTRYDATE\""
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "An absolute data path within the OData data model, for example\n  \"/EMPLOYEES/0/ENTRYDATE\""
						}
					],
					"description": "Returns the OData metadata model context corresponding to the given OData data model path."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v4.ODataMetaModel."
				},
				{
					"name": "getObject",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The requested metadata object if it is already available, or <code>undefined</code>"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A relative or absolute path within the metadata model"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "The context to be used as a starting point in case of a relative path"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"scope": {
									"name": "scope",
									"type": "object",
									"optional": true,
									"description": "Optional scope for lookup of aliases for computed annotations (since 1.43.0)"
								}
							},
							"description": "Optional (binding) parameters; if they are given, <code>oContext</code> cannot be omitted"
						}
					],
					"description": "Returns the metadata object for the given path relative to the given context. Returns\n<code>undefined</code> in case the metadata is not (yet) available. Use\n{@link #requestObject} for asynchronous access."
				},
				{
					"name": "getOriginalProperty",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"since": "1.37.0",
					"deprecated": {
						"text": "Use {@link #getObject}."
					}
				},
				{
					"name": "getUI5Type",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.type.ODataType",
						"description": "The corresponding UI5 type from {@link sap.ui.model.odata.type}, if all required\n  metadata to calculate this type is already available; if no specific type can be\n  determined, a warning is logged and {@link sap.ui.model.odata.type.Raw} is used"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "An absolute path to an OData property within the OData data model"
						}
					],
					"description": "Returns the UI5 type for the given property path that formats and parses corresponding to\nthe property's EDM type and constraints. The property's type must be a primitive type. Use\n{@link #requestUI5Type} for asynchronous access."
				},
				{
					"name": "getValueListType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ValueListType",
						"description": "The type of the value list"
					},
					"since": "1.45.0",
					"parameters": [
						{
							"name": "sPropertyPath",
							"type": "string",
							"optional": false,
							"description": "An absolute path to an OData property within the OData data model"
						}
					],
					"description": "Determines which type of value list exists for the given property."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "requestObject",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise which is resolved with the requested metadata value as soon as it is\n  available"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "A relative or absolute path within the metadata model"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "The context to be used as a starting point in case of a relative path"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"scope": {
									"name": "scope",
									"type": "object",
									"optional": true,
									"description": "Optional scope for lookup of aliases for computed annotations (since 1.43.0)"
								}
							},
							"description": "Optional (binding) parameters; if they are given, <code>oContext</code> cannot be omitted"
						}
					],
					"description": "Requests the metadata value for the given path relative to the given context. Returns a\n<code>Promise</code> which is resolved with the requested metadata value or rejected with\nan error (only in case metadata cannot be loaded). An invalid path leads to an\n<code>undefined</code> result and a warning is logged. Use {@link #getObject} for\nsynchronous access.\n\nA relative path is appended to the context's path separated by a forward slash(\"/\").\nA relative path starting with \"@\" (that is, an annotation) is appended without a separator.\nUse \"./\" as a prefix for such a relative path to enforce a separator.\n\nExample:\n<pre>\n&lt;template:with path=\"/EMPLOYEES/ENTRYDATE\" var=\"property\">\n  &lt;!-- /EMPLOYEES/ENTRYDATE/$Type -->\n  \"{property>$Type}\"\n\n  &lt;!-- /EMPLOYEES/ENTRYDATE@com.sap.vocabularies.Common.v1.Text -->\n  \"{property>@com.sap.vocabularies.Common.v1.Text}\"\n\n  &lt;!-- /EMPLOYEES/ENTRYDATE/@com.sap.vocabularies.Common.v1.Text -->\n  \"{property>./@com.sap.vocabularies.Common.v1.Text}\"\n&lt;/template:with>\n</pre>\n\nThe basic idea is that every path described in \"14.2.1 Attribute Target\" in specification\n\"OData Version 4.0 Part 3: Common Schema Definition Language\" is a valid absolute path\nwithin the metadata model if a leading slash is added; for example\n\"/\" + \"MySchema.MyEntityContainer/MyEntitySet/MyComplexProperty/MyNavigationProperty\". Also,\nevery path described in \"14.5.2 Expression edm:AnnotationPath\",\n\"14.5.11 Expression edm:NavigationPropertyPath\", \"14.5.12 Expression edm:Path\", and\n\"14.5.13 Expression edm:PropertyPath\" is a valid relative path within the metadata model\nif a suitable prefix is added which addresses an entity container, entity set, singleton,\ncomplex type, entity type, or property; for example\n\"/MySchema.MyEntityType/MyProperty\" + \"@vCard.Address#work/FullName\".\n\nThe absolute path is split into segments and followed step-by-step, starting at the global\nscope of all known qualified OData names. There are two technical properties there:\n\"$Version\" (typically \"4.0\") and \"$EntityContainer\" with the name of the single entity\ncontainer for this metadata model's service.\n\nAn empty segment in between is invalid. An empty segment at the end caused by a trailing\nslash differentiates between a name and the object it refers to. This way,\n\"/$EntityContainer\" refers to the name of the single entity container and\n\"/$EntityContainer/\" refers to the single entity container as an object.\n\nThe segment \"@sapui.name\" refers back to the last OData name (simple identifier or qualified\nname) or annotation name encountered during path traversal immediately before \"@sapui.name\":\n<ul>\n<li> \"/EMPLOYEES@sapui.name\" results in \"EMPLOYEES\" and \"/EMPLOYEES/@sapui.name\"\nresults in the same as \"/EMPLOYEES/$Type\", that is, the qualified name of the entity set's\ntype (see below how \"$Type\" is inserted implicitly). Note how the separating slash again\nmakes a difference here.\n<li> \"/EMPLOYEES/@com.sap.vocabularies.Common.v1.Label@sapui.name\" results in\n\"@com.sap.vocabularies.Common.v1.Label\" and a slash does not make any difference as long as\nthe annotation does not have a \"$Type\" property.\n<li> A technical property (that is, a numerical segment or one starting with a \"$\")\nimmediately before \"@sapui.name\" is invalid, for example \"/$EntityContainer@sapui.name\".\n</ul>\nThe path must not continue after \"@sapui.name\".\n\nIf the current object is a string value, that string value is treated as a relative path and\nfollowed step-by-step before the next segment is processed. Except for this, a path must\nnot continue if it comes across a non-object value. Such a string value can be a qualified\nname (example path \"/$EntityContainer/...\"), a simple identifier (example path\n\"/TEAMS/$NavigationPropertyBinding/TEAM_2_EMPLOYEES/...\") or even a path according to\n\"14.5.12 Expression edm:Path\" etc. (example path\n\"/TEAMS/$Type/@com.sap.vocabularies.UI.v1.LineItem/0/Value/$Path/...\").\n\nSegments starting with an \"@\" character, for example \"@com.sap.vocabularies.Common.v1.Label\",\naddress annotations at the current object. As the first segment, they refer to the single\nentity container. For objects which can only be annotated inline (see \"14.3 Element\nedm:Annotation\" minus \"14.2.1 Attribute Target\"), the object already contains the\nannotations as a property. For objects which can (only or also) be annotated via external\ntargeting, the object does not contain any annotation as a property. Such annotations MUST\nbe accessed via a path. BEWARE of a special case: Actions, functions and their parameters\ncan be annotated inline for a single overload or via external targeting for all overloads at\nthe same time. In this case, the object contains all annotations for the single overload as\na property, but annotations MUST nevertheless be accessed via a path in order to include\nalso annotations for all overloads at the same time.\n\nSegments starting with an OData name followed by an \"@\" character, for example\n\"/TEAMS@Org.OData.Capabilities.V1.TopSupported\", address annotations at an entity set,\nsingleton, or property, not at the corresponding type. In contrast,\n\"/TEAMS/@com.sap.vocabularies.Common.v1.Deletable\" (note the separating slash) addresses an\nannotation at the entity set's type. This is in line with the special rule of\n\"14.5.12 Expression edm:Path\" regarding annotations at a navigation property itself.\n\n\"@\" can be used as a segment to address a map of all annotations of the current object. This\nis useful for iteration, for example via\n<code>&lt;template:repeat list=\"{entityType>@}\" ...></code>.\n\nAnnotations of an annotation are addressed not by two separate segments, but by a single\nsegment like\n\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.Common.v1.TextArrangement\". Each\nannotation can have a qualifier, for example \"@first#foo@second#bar\". Note: If the first\nannotation's value is a record, a separate segment addresses an annotation of that record,\nnot an annotation of the first annotation itself.\nIn a similar way, annotations of \"7.2 Element edm:ReferentialConstraint\",\n\"7.3 Element edm:OnDelete\", \"10.2 Element edm:Member\" and\n\"14.5.14.2 Element edm:PropertyValue\" are addressed by segments like\n\"&lt;7.2.1 Attribute Property>@...\", \"$OnDelete@...\", \"&lt;10.2.1 Attribute Name>@...\" and\n\"&lt;14.5.14.2.1 Attribute Property>@...\" (where angle brackets denote a variable part and\nsections refer to specification \"OData Version 4.0 Part 3: Common Schema Definition\nLanguage\").\n\nAnnotations starting with \"@@\", for example\n\"@@sap.ui.model.odata.v4.AnnotationHelper.isMultiple\" or \"@@.AH.isMultiple\" or\n\"@@.isMultiple\", represent computed annotations. Their name without the \"@@\" prefix must\nrefer to a function either in the global namespace (in case of an absolute name) or in\n<code>mParameters.scope</code> (in case of a relative name starting with a dot, which is\nstripped before lookup; see the <code>&lt;template:alias></code> instruction for XML\nTemplating). This function is called with the current object (or primitive value) and\nadditional details and returns the result of this {@link #requestObject} call. The additional\ndetails are given as an object with the following properties:\n<ul>\n<li><code>{@link sap.ui.model.Context} context</code> Points to the current object\n<li><code>{string} schemaChildName</code> The qualified name of the schema child where the\n  computed annotation has been found\n</ul>\nComputed annotations cannot be iterated by \"@\". The path must not continue after a computed\nannotation.\n\nA segment which represents an OData qualified name is looked up in the global scope (\"scope\nlookup\") and thus determines a schema child which is used later on. Unknown qualified names\nare invalid. This way, \"/acme.DefaultContainer/EMPLOYEES\" addresses the \"EMPLOYEES\" child of\nthe schema child named \"acme.DefaultContainer\". This also works indirectly\n(\"/$EntityContainer/EMPLOYEES\") and implicitly (\"/EMPLOYEES\", see below).\n\nA segment which represents an OData simple identifier needs special preparations. The same\napplies to the empty segment after a trailing slash.\n<ol>\n<li> If the current object has a \"$Action\", \"$Function\" or \"$Type\" property, it is used for\n   scope lookup first. This way, \"/EMPLOYEES/ENTRYDATE\" addresses the same object as\n   \"/EMPLOYEES/$Type/ENTRYDATE\", namely the \"ENTRYDATE\" child of the entity type\n   corresponding to the \"EMPLOYEES\" child of the entity container. The other cases jump from\n   an action or function import to the corresponding action or function overloads.\n<li> Else if the segment is the first one within its path, the last schema child addressed\n   via scope lookup is used instead of the current object. This can only happen indirectly as\n   in \"/TEAMS/$NavigationPropertyBinding/TEAM_2_EMPLOYEES/...\" where the schema child is the\n   entity container and the navigation property binding can contain the simple identifier of\n   another entity set within the same container.\n\n   If the segment is the first one overall, \"$EntityContainer\" is inserted into the path\n   implicitly. In other words, the entity container is used as the initial schema child.\n   This way, \"/EMPLOYEES\" addresses the same object as \"/$EntityContainer/EMPLOYEES\", namely\n   the \"EMPLOYEES\" child of the entity container.\n<li> Afterwards, if the current object is an array, it represents overloads for an action or\n   function. Multiple overloads are invalid. The overload's \"$ReturnType/$Type\" is used for\n   scope lookup. This way, \"/GetOldestWorker/AGE\" addresses the same object as\n   \"/GetOldestWorker/0/$ReturnType/$Type/AGE\". For primitive return types, the special\n   segment \"value\" can be used to refer to the return type itself (see\n   {@link sap.ui.model.odata.v4.ODataContextBinding#execute}). This way,\n   \"/GetOldestAge/value\" addresses the same object as \"/GetOldestAge/0/$ReturnType\" (which\n   is needed for automatic type determination, see {@link #requestUI5Type}).\n</ol>\n\nA trailing slash can be used to continue a path and thus force scope lookup or OData simple\nidentifier preparations, but then stay at the current object. This way, \"/EMPLOYEES/$Type/\"\naddresses the entity type itself corresponding to the \"EMPLOYEES\" child of the entity\ncontainer. Although the empty segment is not an OData simple identifier, it can be used as a\nplaceholder for one. In this way, \"/EMPLOYEES/\" addresses the same entity type as\n\"/EMPLOYEES/$Type/\". That entity type in turn is a map of all its OData children (that is,\nstructural and navigation properties) and determines the set of possible child names that\nmight be used after the trailing slash.\n\nAny other segment, including an OData simple identifier, is looked up as a property of the\ncurrent object."
				},
				{
					"name": "requestUI5Type",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise that gets resolved with the corresponding UI5 type from\n  {@link sap.ui.model.odata.type} or rejected with an error; if no specific type can be\n  determined, a warning is logged and {@link sap.ui.model.odata.type.Raw} is used"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "An absolute path to an OData property within the OData data model"
						}
					],
					"description": "Requests the UI5 type for the given property path that formats and parses corresponding to\nthe property's EDM type and constraints. The property's type must be a primitive type. Use\n{@link #getUI5Type} for synchronous access."
				},
				{
					"name": "requestValueListInfo",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise which is resolved with a map of qualifier to value list mapping objects\n  structured as defined by <code>com.sap.vocabularies.Common.v1.ValueListMappingType</code>;\n  the map entry with key \"\" represents the mapping without qualifier. Each entry has an\n  additional property \"$model\" which is the {@link sap.ui.model.odata.v4.ODataModel} instance\n  to read value list data via this mapping.\n\n  For fixed values, only one mapping is expected and the qualifier is ignored. The mapping\n  is available with key \"\".\n\n  The promise is rejected with an error if there is no value list information available\n  for the given property path. Use {@link #getValueListType} to determine if value list\n  information exists. It is also rejected with an error if the value list metadata is\n  inconsistent.\n\n  An inconsistency can result from one of the following reasons:\n  <ul>\n   <li> There is a reference, but the referenced service does not contain mappings for the\n    property.\n   <li> The referenced service contains annotation targets in the namespace of the data\n    service that are not mappings for the property.\n   <li> Two different referenced services contain a mapping using the same qualifier.\n   <li> A service is referenced twice.\n   <li> No mappings have been found.\n   <li> There are multiple mappings for a fixed value list.\n  </ul>"
					},
					"since": "1.45.0",
					"parameters": [
						{
							"name": "sPropertyPath",
							"type": "string",
							"optional": false,
							"description": "An absolute path to an OData property within the OData data model"
						}
					],
					"description": "Requests information to retrieve a value list for the property given by\n<code>sPropertyPath</code>."
				},
				{
					"name": "setLegacySyntax",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "A string description of this model"
					},
					"since": "1.37.0",
					"description": "Returns a string representation of this object including the URL to the $metadata document of\nthe service."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v4.ODataModel",
			"basename": "ODataModel",
			"resource": "sap/ui/model/odata/v4/ODataModel.js",
			"module": "sap/ui/model/odata/v4/ODataModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"extends": "sap.ui.model.Model",
			"description": "Model implementation for OData V4.\n\n  Every resource path (relative to the service root URL, no query options) according to\n  \"4 Resource Path\" in specification \"OData Version 4.0 Part 2: URL Conventions\" is\n  a valid data binding path within this model if a leading slash is added; for example\n  \"/\" + \"SalesOrderList('A%2FB%26C')\" to access an entity instance with key \"A/B&C\". Note\n  that appropriate URI encoding is necessary. \"4.5.1 Addressing Actions\" needs an operation\n  binding, see {@link sap.ui.model.odata.v4.ODataContextBinding}.\n\n  Note that the OData V4 model has its own {@link sap.ui.model.odata.v4.Context} class.\n  Bindings which are relative to such a V4 context depend on their corresponding parent\n  binding and do not access data with their own service requests unless parameters are\n  provided.\n\n  The model does not support any public events; attaching an event handler leads to an error.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mParameters",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"annotationURI": {
								"name": "annotationURI",
								"type": "string|string[]",
								"optional": true,
								"description": "The URL (or an array of URLs) from which the annotation metadata are loaded.\n  The annotation files are merged into the service metadata in the given order (last one\n  wins). The same annotations are overwritten; if an annotation file contains other elements\n  (like a type definition) that are already merged, an error is thrown.\n  Supported since 1.41.0"
							},
							"groupId": {
								"name": "groupId",
								"type": "string",
								"optional": true,
								"defaultValue": "\"$auto\"",
								"description": "Controls the model's use of batch requests: '$auto' bundles requests from the model in a\n  batch request which is sent automatically before rendering; '$direct' sends requests\n  directly without batch; other values result in an error"
							},
							"operationMode": {
								"name": "operationMode",
								"type": "sap.ui.model.odata.OperationMode",
								"optional": true,
								"description": "The default operation mode for sorting. Only\n  {@link sap.ui.model.odata.OperationMode.Server} is supported since 1.39.0."
							},
							"serviceUrl": {
								"name": "serviceUrl",
								"type": "string",
								"optional": false,
								"description": "Root URL of the service to request data from. The path part of the URL must end with a\n  forward slash according to OData V4 specification ABNF, rule \"serviceRoot\". You may append\n  OData custom query options to the service root URL separated with a \"?\", for example\n  \"/MyService/?custom=foo\".\n  See specification \"OData Version 4.0 Part 2: URL Conventions\", \"5.2 Custom Query Options\".\n  OData system query options and OData parameter aliases lead to an error."
							},
							"synchronizationMode": {
								"name": "synchronizationMode",
								"type": "string",
								"optional": false,
								"description": "Controls synchronization between different bindings which refer to the same data for the\n  case data changes in one binding. Must be set to 'None' which means bindings are not\n  synchronized at all; all other values are not supported and lead to an error."
							},
							"updateGroupId": {
								"name": "updateGroupId",
								"type": "string",
								"optional": true,
								"description": "The group ID that is used for update requests. If no update group ID is specified,\n  <code>mParameters.groupId</code> is used. Valid update group IDs are <code>undefined<code>,\n  '$auto', '$direct' or an application group ID, which is a non-empty string consisting of\n  alphanumeric characters from the basic Latin alphabet, including the underscore."
							}
						},
						"description": "The parameters"
					}
				],
				"description": "Constructor for a new ODataModel."
			},
			"methods": [
				{
					"name": "bindContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ODataContextBinding",
						"description": "The context binding"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The binding path in the model; must not end with a slash"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.odata.v4.Context",
							"optional": true,
							"description": "The context which is required as base for a relative path"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"$$groupId": {
									"name": "$$groupId",
									"type": "string",
									"optional": true,
									"description": "The group ID to be used for <b>read</b> requests triggered by this binding; if not\n  specified, either the parent binding's group ID (if the binding is relative) or the\n  model's group ID is used, see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link #submitBatch}."
								},
								"$$updateGroupId": {
									"name": "$$updateGroupId",
									"type": "string",
									"optional": true,
									"description": "The group ID to be used for <b>update</b> requests triggered by this binding;\n  if not specified, either the parent binding's update group ID (if the binding is relative)\n  or the model's update group ID is used, see\n  {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  For valid values, see parameter \"$$groupId\"."
								}
							},
							"description": "Map of binding parameters which can be OData query options as specified in\n  \"OData Version 4.0 Part 2: URL Conventions\" or the binding-specific parameters \"$$groupId\"\n  and \"$$updateGroupId\".\n  Note: If parameters are provided for a relative binding path, the binding accesses data\n  with its own service requests instead of using its parent binding.\n  The following OData query options are allowed:\n  <ul>\n  <li> All \"5.2 Custom Query Options\" except for those with a name starting with \"sap-\"\n  <li> The $apply, $count, $expand, $filter, $orderby, $search and $select\n  \"5.1 System Query Options\"; OData V4 only allows $apply, $count, $filter, $orderby and\n  $search inside resource paths that identify a collection. In our case here, this means you\n  can only use them inside $expand.\n  </ul>\n  All other query options lead to an error.\n  Query options specified for the binding overwrite model query options."
						}
					],
					"description": "Creates a new context binding for the given path, context and parameters.\n\nThis binding is inactive and will not know the bound context initially. You have to call\n{@link sap.ui.model.Binding#initialize} to get it updated asynchronously and register a\nchange listener at the binding to be informed when the bound context is available."
				},
				{
					"name": "bindList",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ODataListBinding",
						"description": "The list binding"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The binding path in the model; must not be empty or end with a slash"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "The context which is required as base for a relative path"
						},
						{
							"name": "vSorters",
							"type": "sap.ui.model.Sorter|sap.ui.model.Sorter[]",
							"optional": true,
							"description": "The dynamic sorters to be used initially. Call\n  {@link sap.ui.model.odata.v4.ODataListBinding#sort} to replace them. Static sorters, as\n  defined in the '$orderby' binding parameter, are always executed after the dynamic sorters.\n  Supported since 1.39.0."
						},
						{
							"name": "vFilters",
							"type": "sap.ui.model.Filter|sap.ui.model.Filter[]",
							"optional": true,
							"description": "The dynamic application filters to be used initially. Call\n  {@link sap.ui.model.odata.v4.ODataListBinding#filter} to replace them. Static filters, as\n  defined in the '$filter' binding parameter, are always combined with the dynamic filters\n  using a logical <code>AND</code>.\n  Supported since 1.39.0."
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"operationMode": {
									"name": "operationMode",
									"type": "sap.ui.model.odata.OperationMode",
									"optional": true,
									"description": "The operation mode for sorting. Since 1.39.0, the operation mode\n  {@link sap.ui.model.odata.OperationMode.Server} is supported. All other operation modes\n  including <code>undefined</code> lead to an error if 'vSorters' are given or if\n  {@link sap.ui.model.odata.v4.ODataListBinding#sort} is called."
								},
								"$$groupId": {
									"name": "$$groupId",
									"type": "string",
									"optional": true,
									"description": "The group ID to be used for <b>read</b> requests triggered by this binding; if not\n  specified, either the parent binding's group ID (if the binding is relative) or the\n  model's group ID is used, see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link #submitBatch}."
								},
								"$$updateGroupId": {
									"name": "$$updateGroupId",
									"type": "string",
									"optional": true,
									"description": "The group ID to be used for <b>update</b> requests triggered by this binding;\n  if not specified, either the parent binding's update group ID (if the binding is relative)\n  or the model's update group ID is used,\n  see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  For valid values, see parameter \"$$groupId\"."
								}
							},
							"description": "Map of binding parameters which can be OData query options as specified in\n  \"OData Version 4.0 Part 2: URL Conventions\" or the binding-specific parameters \"$$groupId\"\n  and \"$$updateGroupId\".\n  Note: If parameters are provided for a relative binding path, the binding accesses data\n  with its own service requests instead of using its parent binding.\n  The following OData query options are allowed:\n  <ul>\n  <li> All \"5.2 Custom Query Options\" except for those with a name starting with \"sap-\"\n  <li> The $apply, $count, $expand, $filter, $orderby, $search, and $select\n  \"5.1 System Query Options\"\n  </ul>\n  All other query options lead to an error.\n  Query options specified for the binding overwrite model query options."
						}
					],
					"description": "Creates a new list binding for the given path and optional context which must\nresolve to an absolute OData path for an entity set."
				},
				{
					"name": "bindProperty",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ODataPropertyBinding",
						"description": "The property binding"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The binding path in the model; must not be empty or end with a slash"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "The context which is required as base for a relative path"
						},
						{
							"name": "mParameters",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"$$groupId": {
									"name": "$$groupId",
									"type": "string",
									"optional": true,
									"description": "The group ID to be used for <b>read</b> requests triggered by this binding; if not\n  specified, either the parent binding's group ID (if the binding is relative) or the\n  model's group ID is used, see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link #submitBatch}."
								}
							},
							"description": "Map of binding parameters which can be OData query options as specified in\n  \"OData Version 4.0 Part 2: URL Conventions\" or the binding-specific parameter \"$$groupId\".\n  Note: Binding parameters may only be provided for absolute binding paths as only those\n  lead to a data service request.\n  All \"5.2 Custom Query Options\" are allowed except for those with a name starting with\n  \"sap-\". All other query options lead to an error.\n  Query options specified for the binding overwrite model query options."
						}
					],
					"description": "Creates a new property binding for the given path. This binding is inactive and will not\nknow the property value initially. You have to call {@link sap.ui.model.Binding#initialize}\nto get it updated asynchronously and register a change listener at the binding to be informed\nwhen the value is available."
				},
				{
					"name": "bindTree",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "createBindingContext",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Context",
						"description": "The binding context with the resolved path and the model instance"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "The binding path, may be relative to the provided context"
						},
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": true,
							"description": "The context which is required as base for a relative path"
						}
					],
					"description": "Creates a binding context for the given path. A relative path can only be resolved if a\ncontext is provided.\nNote: The parameters <code>mParameters</code>, <code>fnCallBack</code>, and\n<code>bReload</code> from {@link sap.ui.model.Model#createBindingContext} are not supported.\n\nIt is possible to create binding contexts pointing to metadata.  A '#' in the resolved path\nsplits it into two parts: The part before '#' is transformed into a metadata context (see\n{@link sap.ui.model.odata.v4.ODataMetaModel#getMetaContext}). The part following '#' is then\ninterpreted relative to this metadata context, even if it starts with a '/'; a trailing '/'\nis allowed here, see {@link sap.ui.model.odata.v4.ODataMetaModel#requestObject} for the\neffect it has.\n\nExamples:\n<ul>\n<li><code>/Products('42')/Name#@com.sap.vocabularies.Common.v1.Label</code>\n  points to the \"Label\" annotation of the \"Name\" property of the entity set \"Products\".\n<li><code>/#Products/Name@com.sap.vocabularies.Common.v1.Label</code> has no data path part\n  and thus starts at the metadata root. It also points to the \"Label\" annotation of the\n  \"Name\" property of the entity set \"Products\".\n<li><code>/Products#/</code>\n  points to the entity type (note the trailing '/') of the entity set \"Products\".\n</ul>"
				},
				{
					"name": "destroy",
					"visibility": "public",
					"since": "1.38.0",
					"description": "Destroys this model and its meta model."
				},
				{
					"name": "destroyBindingContext",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v4.ODataModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}."
				},
				{
					"name": "getGroupId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The group ID"
					},
					"since": "1.41.0",
					"description": "Returns the model's group ID."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v4.ODataModel."
				},
				{
					"name": "getMetaModel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ODataMetaModel",
						"description": "The meta model for this ODataModel"
					},
					"since": "1.37.0",
					"description": "Returns the meta model for this ODataModel."
				},
				{
					"name": "getObject",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "getOriginalProperty",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "getUpdateGroupId",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "The update group ID"
					},
					"since": "1.41.0",
					"description": "Returns the model's update group ID."
				},
				{
					"name": "hasPendingChanges",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if there are pending changes"
					},
					"since": "1.39.0",
					"description": "Returns <code>true</code> if there are pending changes, meaning updates or created entities\n(see {@link sap.ui.model.odata.v4.ODataListBinding#create}) that have not yet been\nsuccessfully sent to the server."
				},
				{
					"name": "refresh",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The group ID to be used for refresh; valid values are <code>undefined</code>,\n  '$auto', '$direct' or application group IDs as specified in {@link #submitBatch}"
						}
					],
					"description": "Refreshes the model by calling refresh on all bindings which have a change event handler\nattached.\n\nNote: When calling {@link #refresh} multiple times, the result of the request triggered by\nthe last call determines the model's data; it is <b>independent</b> of the order of calls to\n{@link #submitBatch} with the given group ID.\n\nIf there are pending changes, an error is thrown. Use {@link #hasPendingChanges} to check if\nthere are pending changes. If there are changes, call {@link #submitBatch} to submit the\nchanges or {@link #resetChanges} to reset the changes before calling {@link #refresh}."
				},
				{
					"name": "requestCanonicalPath",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise which is resolved with the canonical path (e.g. \"/SalesOrderList('0500000000')\")\n  in case of success, or rejected with an instance of <code>Error</code> in case of failure,\n  e.g. when the given context does not point to an entity"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEntityContext",
							"type": "sap.ui.model.odata.v4.Context",
							"optional": false,
							"description": "A context in this model which must point to a non-contained OData entity"
						}
					],
					"description": "Returns a promise for the \"canonical path\" of the entity for the given context.\nAccording to \"4.3.1 Canonical URL\" of the specification \"OData Version 4.0 Part 2: URL\nConventions\", this is the \"name of the entity set associated with the entity followed by the\nkey predicate identifying the entity within the collection\".\nUse the canonical path in {@link sap.ui.core.Element#bindElement} to create an element\nbinding.",
					"deprecated": {
						"since": "1.39.0",
						"text": "Use {@link sap.ui.model.odata.v4.Context#requestCanonicalPath} instead."
					}
				},
				{
					"name": "resetChanges",
					"visibility": "public",
					"since": "1.39.0",
					"parameters": [
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The application group ID, which is a non-empty string consisting of alphanumeric\n  characters from the basic Latin alphabet, including the underscore. If it is\n  <code>undefined</code>, the model's <code>updateGroupId</code> is used. Note that the\n  default <code>updateGroupId</code> is '$auto', which is invalid here."
						}
					],
					"description": "Resets all property changes and created entities associated with the given group ID which\nhave not been successfully submitted via {@link #submitBatch}. This function does not reset\nthe deletion of entities (see {@link sap.ui.model.odata.v4.Context#delete}) and the execution\nof OData operations (see {@link sap.ui.model.odata.v4.ODataContextBinding#execute})."
				},
				{
					"name": "setLegacySyntax",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported"
				},
				{
					"name": "submitBatch",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise on the outcome of the HTTP request resolving with <code>undefined</code>; it is\n  rejected with an error if the batch request itself fails"
					},
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sGroupId",
							"type": "string",
							"optional": false,
							"description": "The application group ID, which is a non-empty string consisting of alphanumeric\n  characters from the basic Latin alphabet, including the underscore."
						}
					],
					"description": "Submits the requests associated with the given application group ID in one batch request."
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "A string description of this model"
					},
					"since": "1.37.0",
					"description": "Returns a string representation of this object including the service URL."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.odata.v4.ODataPropertyBinding",
			"basename": "ODataPropertyBinding",
			"resource": "sap/ui/model/odata/v4/ODataPropertyBinding.js",
			"module": "sap/ui/model/odata/v4/ODataPropertyBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.37.0",
			"extends": "sap.ui.model.PropertyBinding",
			"description": "Property binding for an OData V4 model.\n  An event handler can only be attached to this binding for the following events: 'change',\n  'dataReceived', and 'dataRequested'.\n  For unsupported events, an error is thrown.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.odata.v4.ODataModel",
						"optional": false,
						"description": "The OData V4 model"
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false,
						"description": "The binding path in the model; must not end with a slash"
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": true,
						"description": "The context which is required as base for a relative path"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"$$groupId": {
								"name": "$$groupId",
								"type": "string",
								"optional": true,
								"description": "The group ID to be used for <b>read</b> requests triggered by this binding; if not\n  specified, either the parent binding's group ID (if the binding is relative) or the\n  model's group ID is used, see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."
							}
						},
						"description": "Map of binding parameters which can be OData query options as specified in\n  \"OData Version 4.0 Part 2: URL Conventions\" or the binding-specific parameter \"$$groupId\".\n  Note: Binding parameters may only be provided for absolute binding paths as only those\n  lead to a data service request.\n  All \"5.2 Custom Query Options\" are allowed except for those with a name starting with\n  \"sap-\". All other query options lead to an error.\n  Query options specified for the binding overwrite model query options."
					}
				],
				"description": "Do <strong>NOT</strong> call this private constructor, but rather use\n{@link sap.ui.model.odata.v4.ODataModel#bindProperty} instead!"
			},
			"events": [
				{
					"name": "change",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"reason": {
											"name": "reason",
											"type": "sap.ui.model.ChangeReason",
											"optional": false,
											"description": "The reason for the 'change' event: {@link sap.ui.model.ChangeReason.Change} when the\n  binding is initialized, {@link sap.ui.model.ChangeReason.Refresh} when the binding is\n  refreshed, and {@link sap.ui.model.ChangeReason.Context} when the parent context is changed"
										}
									}
								}
							}
						}
					],
					"description": "The 'change' event is fired when the binding is initialized or refreshed or its type is\nchanged or its parent context is changed. It is to be used by controls to get notified about\nchanges to the value of this property binding. Registered event handlers are called with the\nchange reason as parameter."
				},
				{
					"name": "dataReceived",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"error": {
											"name": "error",
											"type": "Error",
											"optional": true,
											"description": "The error object if a back-end request failed.\n  If there are multiple failed back-end requests, the error of the first one is provided."
										}
									}
								}
							}
						}
					],
					"description": "The 'dataReceived' event is fired after the back-end data has been processed and the\nregistered 'change' event listeners have been notified. It is to be used by applications for\nexample to switch off a busy indicator or to process an error.\n\nIf back-end requests are successful, the event has no parameters. Use\n{@link #getValue() oEvent.getSource().getValue()} to access the response data. Note that\ncontrols bound to this data may not yet have been updated, meaning it is not safe for\nregistered event handlers to access data via control APIs.\n\nIf a back-end request fails, the 'dataReceived' event provides an <code>Error</code> in the\n'error' event parameter."
				},
				{
					"name": "dataRequested",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "oEvent",
							"type": "sap.ui.base.Event"
						}
					],
					"description": "The 'dataRequested' event is fired directly after data has been requested from a back end.\nIt is to be used by applications for example to switch on a busy indicator. Registered event\nhandlers are called without parameters."
				}
			],
			"methods": [
				{
					"name": "destroy",
					"visibility": "public",
					"since": "1.39.0",
					"description": "Destroys the object. The object must not be used anymore after this function was called."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.odata.v4.ODataPropertyBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.odata.v4.ODataPropertyBinding."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "The current value"
					},
					"since": "1.37.0",
					"description": "Returns the current value."
				},
				{
					"name": "getValueListType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.odata.v4.ValueListType",
						"description": "The value list type"
					},
					"since": "1.45.0",
					"description": "Determines which type of value list exists for this property."
				},
				{
					"name": "hasPendingChanges",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "<code>true</code> if the binding has pending changes"
					},
					"since": "1.39.0",
					"description": "Returns <code>true</code> if this binding or its dependent bindings have pending changes,\nmeaning updates that have not yet been successfully sent to the server.",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "isInitial",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "refresh",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The group ID to be used for refresh; if not specified, the group ID for this binding is\n  used.\n\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."
						}
					],
					"description": "Refreshes the binding. Prompts the model to retrieve data from the server using the given\ngroup ID and notifies the control that new data is available.\n\nRefresh is supported for bindings which are not relative to a\n{@link sap.ui.model.odata.v4.Context}.\n\nNote: When calling {@link #refresh} multiple times, the result of the request triggered by\nthe last call determines the binding's data; it is <b>independent</b> of the order of calls\nto {@link sap.ui.model.odata.v4.ODataModel#submitBatch} with the given group ID.\n\nIf there are pending changes, an error is thrown. Use {@link #hasPendingChanges} to check if\nthere are pending changes. If there are changes, call\n{@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or\n{@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling\n{@link #refresh}.",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "requestValueListInfo",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "A promise which is resolved with a map of qualifier to value list mapping objects\n  structured as defined by <code>com.sap.vocabularies.Common.v1.ValueListMappingType</code>;\n  the map entry with key \"\" represents the mapping without qualifier. Each entry has an\n  additional property \"$model\" which is the {@link sap.ui.model.odata.v4.ODataModel} instance\n  to read value list data via this mapping.\n\n  For fixed values, only one mapping is expected and the qualifier is ignored. The mapping\n  is available with key \"\".\n\n  The promise is rejected with an error if there is no value list information available\n  for this property. Use {@link #getValueListType} to determine if value list information\n  exists. It is also rejected with an error if the value list metadata is inconsistent.\n\n  An inconsistency can result from one of the following reasons:\n  <ul>\n   <li> There is a reference, but the referenced service does not contain mappings for the\n    property.\n   <li> The referenced service contains annotation targets in the namespace of the data\n    service that are not mappings for the property.\n   <li> Two different referenced services contain a mapping using the same qualifier.\n   <li> A service is referenced twice.\n   <li> No mappings have been found.\n  </ul>"
					},
					"since": "1.45.0",
					"description": "Requests information to retrieve a value list for this property."
				},
				{
					"name": "resetChanges",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.40.1",
					"description": "Resets all pending changes of this binding, see {@link #hasPendingChanges}.",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "resume",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "setType",
					"visibility": "public",
					"since": "1.43.0",
					"parameters": [
						{
							"name": "oType",
							"type": "sap.ui.model.Type",
							"optional": false,
							"description": "The type for this binding"
						},
						{
							"name": "sInternalType",
							"type": "string",
							"optional": false,
							"description": "The internal type of the element property which owns this binding, for example \"any\",\n  \"boolean\", \"float\", \"int\", \"string\"; see {@link sap.ui.model.odata.type} for more\n  information"
						}
					],
					"description": "Sets the optional type and internal type for this binding; used for formatting and parsing.\nFires a change event if the type has changed."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"since": "1.37.0",
					"parameters": [
						{
							"name": "vValue",
							"type": "any",
							"optional": false,
							"description": "The new value which must be primitive"
						},
						{
							"name": "sGroupId",
							"type": "string",
							"optional": true,
							"description": "The group ID to be used for this update call; if not specified, the update group ID for\n  this binding (or its relevant parent binding) is used, see\n  {@link sap.ui.model.odata.v4.ODataPropertyBinding#constructor}.\n  Valid values are <code>undefined</code>, '$auto', '$direct' or application group IDs as\n  specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."
						}
					],
					"description": "Sets the new current value and updates the cache."
				},
				{
					"name": "suspend",
					"module": "sap/ui/model/odata/v4/ODataBinding",
					"visibility": "public",
					"since": "1.37.0",
					"description": "Method not supported",
					"resource": "sap/ui/model/odata/v4/ODataBinding.js"
				},
				{
					"name": "toString",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "A string description of this binding"
					},
					"since": "1.37.0",
					"description": "Returns a string representation of this object including the binding path. If the binding is\nrelative, the parent path is also given, separated by a '|'."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.odata.v4.ODataUtils",
			"basename": "ODataUtils",
			"resource": "sap/ui/model/odata/v4/ODataUtils.js",
			"module": "sap/ui/model/odata/v4/ODataUtils",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.43.0",
			"description": "A collection of methods which help to consume OData V4 services.",
			"methods": [
				{
					"name": "compare",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "number",
						"description": "The result of the comparison: <code>0</code> if the values are equal,\n  <code>1</code> if the first value is larger, <code>-1</code> if the second value\n  is larger, <code>NaN</code> if they cannot be compared"
					},
					"since": "1.43.0",
					"parameters": [
						{
							"name": "vValue1",
							"type": "any",
							"optional": false,
							"description": "The first value to compare"
						},
						{
							"name": "vValue2",
							"type": "any",
							"optional": false,
							"description": "The second value to compare"
						},
						{
							"name": "vEdmType",
							"type": "boolean|string",
							"optional": true,
							"description": "If <code>true</code> or \"Decimal\", the string values <code>vValue1</code> and\n  <code>vValue2</code> are assumed to be valid \"Edm.Decimal\" or \"Edm.Int64\" values\n  and are compared as a decimal number (only sign, integer and fraction digits; no\n  exponential format).\n  If \"DateTime\", the string values <code>vValue1</code> and <code>vValue2</code>\n  are assumed to be valid \"Edm.DateTimeOffset\" values and are compared based on the\n  corresponding number of milliseconds since 1 January, 1970 UTC.\n  Otherwise the values are compared with the JavaScript operators <code>===</code>\n  and <code>&gt;</code>."
						}
					],
					"description": "Compares the given OData values."
				},
				{
					"name": "parseDate",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Date",
						"description": "The JavaScript <code>Date</code> value"
					},
					"since": "1.43.0",
					"parameters": [
						{
							"name": "sDate",
							"type": "string",
							"optional": false,
							"description": "The \"Edm.Date\" value to parse"
						}
					],
					"description": "Parses an \"Edm.Date\" value and returns the corresponding JavaScript <code>Date</code>\nvalue (UTC with a time value of \"00:00:00\")."
				},
				{
					"name": "parseDateTimeOffset",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Date",
						"description": "The JavaScript <code>Date</code> value"
					},
					"since": "1.43.0",
					"parameters": [
						{
							"name": "sDateTimeOffset",
							"type": "string",
							"optional": false,
							"description": "The \"Edm.DateTimeOffset\" value to parse"
						}
					],
					"description": "Parses an \"Edm.DateTimeOffset\" value and returns the corresponding JavaScript\n<code>Date</code> value."
				},
				{
					"name": "parseTimeOfDay",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Date",
						"description": "The JavaScript <code>Date</code> value"
					},
					"since": "1.43.0",
					"parameters": [
						{
							"name": "sTimeOfDay",
							"type": "string",
							"optional": false,
							"description": "The \"Edm.TimeOfDay\" value to parse"
						}
					],
					"description": "Parses an \"Edm.TimeOfDay\" value and returns the corresponding JavaScript\n<code>Date</code> value (UTC with a date value of \"1970-01-01\")."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.model.odata.v4.ValueListType",
			"basename": "ValueListType",
			"resource": "sap/ui/model/odata/v4/ValueListType.js",
			"module": "sap/ui/model/odata/v4/ValueListType",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.45.0",
			"description": "Specifies the value list type of a property.",
			"properties": [
				{
					"name": "Fixed",
					"visibility": "public",
					"static": true,
					"since": "1.45.0",
					"type": "string",
					"description": "There is one enumeration of fixed values."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"since": "1.45.0",
					"type": "string",
					"description": "There is no value list."
				},
				{
					"name": "Standard",
					"visibility": "public",
					"static": true,
					"since": "1.45.0",
					"type": "string",
					"description": "There is a dynamic value list with multiple queries including selection criteria."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.PropertyBinding",
			"basename": "PropertyBinding",
			"resource": "sap/ui/model/PropertyBinding.js",
			"module": "sap/ui/model/PropertyBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Binding",
			"description": "The PropertyBinding is used to access single data values in the data model.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false
					},
					{
						"name": "oContext",
						"type": "sap.ui.model.Context",
						"optional": false
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true
					}
				],
				"description": "Constructor for PropertyBinding"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.PropertyBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}."
				},
				{
					"name": "getBindingMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.BindingMode",
						"description": "the binding mode"
					},
					"description": "Returns the binding mode"
				},
				{
					"name": "getExternalValue",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the current value of the bound target"
					},
					"description": "Returns the current external value of the bound target which is formatted via a type or formatter function."
				},
				{
					"name": "getFormatter",
					"visibility": "public",
					"returnValue": {
						"type": "function",
						"description": "the formatter function"
					},
					"description": "Returns the formatter function"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.PropertyBinding."
				},
				{
					"name": "getType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.Type",
						"description": "the binding type"
					},
					"description": "Returns the type if any for the binding."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the current value of the bound target"
					},
					"description": "Returns the current value of the bound target"
				},
				{
					"name": "resume",
					"visibility": "public",
					"description": "Resumes the binding update. Change events will be fired again.\n\nWhen the binding is resumed and the control value was changed in the meantime, the control value will be set to the\ncurrent value from the model and a change event will be fired."
				},
				{
					"name": "setBindingMode",
					"visibility": "protected",
					"parameters": [
						{
							"name": "sBindingMode",
							"type": "sap.ui.model.BindingMode",
							"optional": false,
							"description": "the binding mode"
						}
					],
					"description": "Sets the binding mode"
				},
				{
					"name": "setExternalValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "oValue",
							"type": "object",
							"optional": false,
							"description": "the value to set for this binding"
						}
					],
					"description": "Sets the value for this binding. The value is parsed and validated against its type and then set to the binding.\nA model implementation should check if the current default binding mode permits\nsetting the binding value and if so set the new value also in the model."
				},
				{
					"name": "setFormatter",
					"visibility": "public",
					"parameters": [
						{
							"name": "fnFormatter",
							"type": "function",
							"optional": false,
							"description": "the formatter function for the binding"
						}
					],
					"description": "Sets the optional formatter function for the binding."
				},
				{
					"name": "setType",
					"visibility": "public",
					"parameters": [
						{
							"name": "oType",
							"type": "sap.ui.model.Type",
							"optional": false,
							"description": "the type for the binding"
						},
						{
							"name": "sInternalType",
							"type": "String",
							"optional": false,
							"description": "the internal type of the element property which this binding is bound against."
						}
					],
					"description": "Sets the optional type and internal type for the binding. The type and internal type are used to do the parsing/formatting correctly.\nThe internal type is the property type of the element which the value is formatted to."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "oValue",
							"type": "object",
							"optional": false,
							"description": "the value to set for this binding"
						}
					],
					"description": "Sets the value for this binding. A model implementation should check if the current default binding mode permits\nsetting the binding value and if so set the new value also in the model."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.resource",
			"basename": "resource",
			"resource": "sap/ui/model/resource/ResourceModel.js",
			"module": "sap/ui/model/resource/ResourceModel",
			"static": true,
			"visibility": "public",
			"description": "ResourceBundle-based DataBinding"
		},
		{
			"kind": "class",
			"name": "sap.ui.model.resource.ResourceModel",
			"basename": "ResourceModel",
			"resource": "sap/ui/model/resource/ResourceModel.js",
			"module": "sap/ui/model/resource/ResourceModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Model",
			"description": "Model implementation for resource bundles",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oData",
						"type": "object",
						"optional": false,
						"parameterProperties": {
							"bundleUrl": {
								"name": "bundleUrl",
								"type": "string",
								"optional": true,
								"description": "the URL to the base .properties file of a bundle (.properties file without any locale information, e.g. \"mybundle.properties\")"
							},
							"bundleName": {
								"name": "bundleName",
								"type": "string",
								"optional": true,
								"description": "the UI5 module name of the .properties file; this name will be resolved to a path like the paths of normal UI5 modules and \".properties\" will then be appended (e.g. a name like \"myBundle\" can be given)"
							},
							"bundleLocale": {
								"name": "bundleLocale",
								"type": "string",
								"optional": true,
								"description": "an optional locale; when not given, the default is the active locale from the UI5 configuration"
							},
							"async": {
								"name": "async",
								"type": "boolean",
								"optional": true,
								"defaultValue": false,
								"description": "whether the language bundle should be loaded asynchronously"
							}
						},
						"description": "parameters used to initialize the ResourceModel; at least either bundleUrl or bundleName must be set on this object; if both are set, bundleName wins"
					}
				],
				"description": "Constructor for a new ResourceModel."
			},
			"methods": [
				{
					"name": "enhance",
					"visibility": "public",
					"returnValue": {
						"type": "Promise",
						"description": "Promise in async case (async ResourceModel) which is resolved when the the enhancement is finished"
					},
					"since": "1.16.1",
					"parameters": [
						{
							"name": "oData",
							"type": "object|jQuery.sap.util.ResourceBundle",
							"optional": false,
							"parameterProperties": {
								"bundleUrl": {
									"name": "bundleUrl",
									"type": "string",
									"optional": true,
									"description": "the URL to the base .properties file of a bundle (.properties file without any locale information, e.g. \"mybundle.properties\")"
								},
								"bundleName": {
									"name": "bundleName",
									"type": "string",
									"optional": true,
									"description": "the UI5 module name of the .properties file; this name will be resolved to a path like the paths of normal UI5 modules and \".properties\" will then be appended (e.g. a name like \"myBundle\" can be given)"
								},
								"bundleLocale": {
									"name": "bundleLocale",
									"type": "string",
									"optional": true,
									"description": "an optional locale; when not given, the default is the active locale from the UI5 configuration"
								}
							},
							"description": "parameters used to initialize the ResourceModel; at least either bundleUrl or bundleName must be set on this object; if both are set, bundleName wins - or an instance of an existing {@link jQuery.sap.util.ResourceBundle}"
						}
					],
					"description": "Enhances the resource model with a custom resource bundle. The resource model\ncan be enhanced with multiple resource bundles. The last enhanced resource\nbundle wins against the previous ones and the original ones. This function\ncan be called several times."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.resource.ResourceModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.resource.ResourceModel."
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "the value of the property"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path to the property"
						}
					],
					"description": "Returns the value for the property with the given <code>sPropertyName</code>"
				},
				{
					"name": "getResourceBundle",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.sap.util.ResourceBundle|Promise",
						"description": "loaded resource bundle or ECMA Script 6 Promise in asynchronous case"
					},
					"description": "Returns the resource bundle of this model"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.SelectionModel",
			"basename": "SelectionModel",
			"resource": "sap/ui/model/SelectionModel.js",
			"module": "sap/ui/model/SelectionModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.EventProvider",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "iSelectionMode",
						"type": "int",
						"optional": false,
						"description": "<code>sap.ui.model.SelectionModel.SINGLE_SELECTION</code> or <code>sap.ui.model.SelectionModel.MULTI_SELECTION</code>"
					}
				],
				"description": "Constructs an instance of a sap.ui.model.SelectionModel."
			},
			"properties": [
				{
					"name": "MULTI_SELECTION",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "SelectionMode: Multi Selection"
				},
				{
					"name": "SINGLE_SELECTION",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "SelectionMode: Single Selection"
				}
			],
			"methods": [
				{
					"name": "addSelectionInterval",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iFromIndex",
							"type": "int",
							"optional": false,
							"description": "one end of the interval."
						},
						{
							"name": "iToIndex",
							"type": "int",
							"optional": false,
							"description": "other end of the interval"
						}
					],
					"description": "Changes the selection to be the union of the current selection\nand the range between <code>iFromIndex</code> and <code>iToIndex</code> inclusive.\nIf <code>iFromIndex</code> is smaller than <code>iToIndex</code>, both parameters are swapped.\n\nIn <code>SINGLE_SELECTION</code> selection mode, this is equivalent\nto calling <code>setSelectionInterval</code>, and only the second index\nis used.\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged</code> event is fired."
				},
				{
					"name": "attachSelectionChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel</code>.<br/>"
				},
				{
					"name": "clearSelection",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"description": "Change the selection to the empty set and clears the lead selection.\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged</code> event is fired."
				},
				{
					"name": "detachSelectionChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.SelectionModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}."
				},
				{
					"name": "fireSelectionChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"leadIndex": {
									"name": "leadIndex",
									"type": "int",
									"optional": false,
									"description": "Lead selection index"
								},
								"rowIndices": {
									"name": "rowIndices",
									"type": "int[]",
									"optional": true,
									"description": "Other selected indices (if available)"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event 'selectionChanged' to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'leadIndex' of type <code>int</code> Lead selection index.</li>\n<li>'rowIndices' of type <code>int[]</code> Other selected indices (if available)</li>\n</ul>"
				},
				{
					"name": "getLeadSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "lead selected index"
					},
					"description": "Return the second index argument from the most recent call to\nsetSelectionInterval(), addSelectionInterval() or removeSelectionInterval()."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.SelectionModel."
				},
				{
					"name": "getSelectedIndices",
					"visibility": "public",
					"returnValue": {
						"type": "int[]",
						"description": "array of selected indices"
					},
					"description": "Returns the selected indices as array."
				},
				{
					"name": "getSelectionMode",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the current selection mode"
					},
					"description": "Returns the current selection mode."
				},
				{
					"name": "isSelectedIndex",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the specified index is selected."
					},
					"parameters": [
						{
							"name": "iIndex",
							"type": "int",
							"optional": false
						}
					],
					"description": "Returns true if the specified index is selected."
				},
				{
					"name": "moveSelectionInterval",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iStartIndex",
							"type": "int",
							"optional": false,
							"description": "start at this position"
						},
						{
							"name": "iMove",
							"type": "int",
							"optional": false
						}
					],
					"description": "Moves all selected indices starting at the position <code>iStartIndex</code> <code>iMove</code>\nitems.\n\nThis can be used if new items are inserted to the item set and you want to keep the selection.\nTo handle a deletion of items use <code>sliceSelectionInterval</code>.\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged</code> event is fired."
				},
				{
					"name": "removeSelectionInterval",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iFromIndex",
							"type": "int",
							"optional": false,
							"description": "one end of the interval."
						},
						{
							"name": "iToIndex",
							"type": "int",
							"optional": false,
							"description": "other end of the interval"
						}
					],
					"description": "Changes the selection to be the set difference of the current selection\nand the indices between <code>iFromIndex</code> and <code>iToIndex</code> inclusive.\nIf <code>iFromIndex</code> is smaller than <code>iToIndex</code>, both parameters are swapped.\n\nIf the range of removed selection indices includes the current lead selection,\nthen the lead selection will be unset (set to -1).\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged</code> event is fired."
				},
				{
					"name": "selectAll",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iToIndex",
							"type": "int",
							"optional": false,
							"description": "end of the interval"
						}
					],
					"description": "Selects all rows up to the <code>iToIndex</iToIndex>.\n\nIf this call results in a change to the current selection, then a\n<code>SelectionChanged</code> event is fired."
				},
				{
					"name": "setSelectionInterval",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iFromIndex",
							"type": "int",
							"optional": false,
							"description": "one end of the interval."
						},
						{
							"name": "iToIndex",
							"type": "int",
							"optional": false,
							"description": "other end of the interval"
						}
					],
					"description": "Changes the selection to be equal to the range <code>iFromIndex</code> and <code>iToIndex</code>\ninclusive. If <code>iFromIndex</code> is smaller than <code>iToIndex</code>, both parameters are swapped.\n\nIn <code>SINGLE_SELECTION</code> selection mode, only <code>iToIndex</iToIndex> is used.\n\nIf this call results in a change to the current selection, then a\n<code>SelectionChanged</code> event is fired."
				},
				{
					"name": "setSelectionMode",
					"visibility": "public",
					"parameters": [
						{
							"name": "iSelectionMode",
							"type": "int",
							"optional": false,
							"description": "selection mode"
						}
					],
					"description": "Sets the selection mode. The following list describes the accepted\nselection modes:\n<ul>\n<li><code>sap.ui.model.SelectionModel.SINGLE_SELECTION</code> -\n  Only one list index can be selected at a time. In this mode,\n  <code>setSelectionInterval</code> and <code>addSelectionInterval</code> are\n  equivalent, both replacing the current selection with the index\n  represented by the second argument (the \"lead\").\n<li><code>sap.ui.model.SelectionModel.MULTI_SELECTION</code> -\n  In this mode, there's no restriction on what can be selected.\n</ul>"
				},
				{
					"name": "sliceSelectionInterval",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "iFromIndex",
							"type": "int",
							"optional": false,
							"description": "one end of the interval."
						},
						{
							"name": "iToIndex",
							"type": "int",
							"optional": false,
							"description": "other end of the interval"
						}
					],
					"description": "Slices a the indices between the two indices from the selection.\nIf <code>iFromIndex</code> is smaller than <code>iToIndex</code>, both parameters are swapped.\n\nIf the range of removed selection indices includes the current lead selection,\nthen the lead selection will be unset (set to -1).\n\nIf this call results in a change to the current selection or lead selection, then a\n<code>SelectionChanged</code> event is fired."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.SimpleType",
			"basename": "SimpleType",
			"resource": "sap/ui/model/SimpleType.js",
			"module": "sap/ui/model/SimpleType",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Type",
			"description": "This is an abstract base class for simple types.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "options as provided by concrete subclasses"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"description": "constraints as supported by concrete subclasses"
					}
				],
				"description": "Constructor for a new SimpleType."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.SimpleType with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Type.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the formatted output value"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "the value to be formatted"
						},
						{
							"name": "sInternalType",
							"type": "string",
							"optional": false,
							"description": "the target type"
						}
					],
					"description": "Format the given value in model representation to an output value in the given\ninternal type. This happens according to the format options, if target type is 'string'.\nIf oValue is not defined or null, null will be returned."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.SimpleType."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the parse result"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "the value to be parsed"
						},
						{
							"name": "sInternalType",
							"type": "string",
							"optional": false,
							"description": "the source type"
						}
					],
					"description": "Parse a value of an internal type to the expected value of the model type."
				},
				{
					"name": "validateValue",
					"visibility": "public",
					"parameters": [
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "the value to be validated"
						}
					],
					"description": "Validate whether a given value in model representation is valid and meets the\ndefined constraints (if any)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.Sorter",
			"basename": "Sorter",
			"resource": "sap/ui/model/Sorter.js",
			"module": "sap/ui/model/Sorter",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "Sorter for the list binding\nThis object defines the sort order for the list binding.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sPath",
						"type": "String",
						"optional": false,
						"description": "the binding path used for sorting"
					},
					{
						"name": "bDescending",
						"type": "boolean",
						"optional": true,
						"defaultValue": false,
						"description": "whether the sort order should be descending"
					},
					{
						"name": "vGroup",
						"type": "boolean|function",
						"optional": true,
						"description": "configure grouping of the content, can either be true to enable grouping\n       based on the raw model property value, or a function which calculates the group value out of the\n       context (e.g. oContext.getProperty(\"date\").getYear() for year grouping). The control needs to\n       implement the grouping behaviour for the aggregation which you want to group. In case a function\n       is provided it must either return a primitive type value as the group key or an object containing\n       a \"key\" property an may contain additional properties needed for group visualization."
					},
					{
						"name": "fnComparator",
						"type": "function",
						"optional": true,
						"description": "a custom comparator function, which is used for clientside sorting instead\n       of the default comparator method."
					}
				],
				"description": "Constructor for Sorter"
			},
			"methods": [
				{
					"name": "defaultComparator",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "int",
						"description": "-1, 0 or 1 depending on the compare result"
					},
					"parameters": [
						{
							"name": "a",
							"type": "any",
							"optional": false,
							"description": "the first value to compare"
						},
						{
							"name": "b",
							"type": "any",
							"optional": false,
							"description": "the second value to compare"
						}
					],
					"description": "Compares two values\n\nThis is the default comparator function used for clientside sorting, if no custom comparator is given in the\nconstructor. It does compare just by using equal/less than/greater than with automatic type casting, except\nfor null values, which are always last, and string values where localeCompare is used.\n\nThe comparator method returns -1, 0 or 1, depending on the order of the two items and is\nsuitable to be used as a comparator method for Array.sort."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.Sorter with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getGroup",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "An object containing a key property and optional custom properties"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "sap.ui.model.Context",
							"optional": false,
							"description": "the binding context"
						}
					],
					"description": "Returns a group object, at least containing a key property for group detection.\nMay contain additional properties as provided by a custom group function."
				},
				{
					"name": "getGroupFunction",
					"visibility": "public",
					"returnValue": {
						"type": "function",
						"description": "The group function"
					},
					"description": "Returns the group function of this Sorter. If grouping is not enabled on this Sorter, it will return\nundefined, if no explicit group function has been defined the default group function is returned.\nThe returned function is bound to its Sorter, so it will group according to its own property path,\neven if it is used in the context of another Sorter."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.Sorter."
				}
			]
		},
		{
			"kind": "enum",
			"name": "sap.ui.model.TreeAutoExpandMode",
			"basename": "TreeAutoExpandMode",
			"resource": "sap/ui/model/TreeAutoExpandMode.js",
			"module": "sap/ui/model/TreeAutoExpandMode",
			"export": "",
			"static": true,
			"visibility": "protected",
			"description": "Different modes for setting the auto expand mode on tree or analytical bindings.",
			"properties": [
				{
					"name": "Bundled",
					"visibility": "protected",
					"static": true,
					"type": "string",
					"description": "If supported by a backend provider with analytical capabilities, the requests needed for an automatic\nnode expansion are bundled."
				},
				{
					"name": "Sequential",
					"visibility": "protected",
					"static": true,
					"type": "string",
					"description": "Tree nodes will be expanded in sequence, level by level (Single requests are sent)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.TreeBinding",
			"basename": "TreeBinding",
			"resource": "sap/ui/model/TreeBinding.js",
			"module": "sap/ui/model/TreeBinding",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.Binding",
			"description": "The TreeBinding is a specific binding for trees in the model, which can be used\nto populate Trees.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oModel",
						"type": "sap.ui.model.Model",
						"optional": false
					},
					{
						"name": "sPath",
						"type": "string",
						"optional": false,
						"description": "the path pointing to the tree / array that should be bound"
					},
					{
						"name": "oContext",
						"type": "object",
						"optional": true,
						"defaultValue": null,
						"description": "the context object for this databinding (optional)"
					},
					{
						"name": "aFilters",
						"type": "array",
						"optional": true,
						"defaultValue": null,
						"description": "predefined filter/s contained in an array (optional)"
					},
					{
						"name": "mParameters",
						"type": "object",
						"optional": true,
						"defaultValue": null,
						"description": "additional model specific parameters (optional)"
					},
					{
						"name": "aSorters",
						"type": "array",
						"optional": true,
						"defaultValue": null,
						"description": "predefined sap.ui.model.sorter/s contained in an array (optional)"
					}
				],
				"description": "Constructor for TreeBinding"
			},
			"methods": [
				{
					"name": "attachFilter",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the '_filter' event of this <code>sap.ui.model.TreeBinding</code>.<br/>",
					"deprecated": {
						"text": "use the change event. It now contains a parameter (reason : \"filter\") when a filter event is fired."
					}
				},
				{
					"name": "detachFilter",
					"visibility": "protected",
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "object on which to call the given function."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the '_filter' event of this <code>sap.ui.model.TreeBinding</code>.<br/>",
					"deprecated": {
						"text": "use the change event."
					}
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.TreeBinding with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}."
				},
				{
					"name": "filter",
					"visibility": "public",
					"parameters": [
						{
							"name": "aFilters",
							"type": "sap.ui.model.Filter[]",
							"optional": false,
							"description": "Array of sap.ui.model.Filter objects"
						},
						{
							"name": "sFilterType",
							"type": "sap.ui.model.FilterType",
							"optional": false,
							"description": "Type of the filter which should be adjusted, if it is not given, the standard behaviour applies"
						}
					],
					"description": "Filters the tree according to the filter definitions."
				},
				{
					"name": "getChildCount",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "the number of children"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "Object",
							"optional": false,
							"description": "the context element of the node"
						}
					],
					"description": "Returns the number of child nodes of a specific context"
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.TreeBinding."
				},
				{
					"name": "getNodeContexts",
					"visibility": "public",
					"returnValue": {
						"type": "Array",
						"description": "the array of child contexts for the given node"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "Object",
							"optional": false,
							"description": "the context element of the node"
						},
						{
							"name": "iStartIndex",
							"type": "int",
							"optional": false,
							"description": "the startIndex where to start the retrieval of contexts"
						},
						{
							"name": "iLength",
							"type": "int",
							"optional": false,
							"description": "determines how many contexts to retrieve beginning from the start index."
						}
					],
					"description": "Returns the current value of the bound target"
				},
				{
					"name": "getRootContexts",
					"visibility": "public",
					"returnValue": {
						"type": "Array",
						"description": "the array of child contexts for the root node"
					},
					"parameters": [
						{
							"name": "iStartIndex",
							"type": "int",
							"optional": false,
							"description": "the startIndex where to start the retrieval of contexts"
						},
						{
							"name": "iLength",
							"type": "int",
							"optional": false,
							"description": "determines how many contexts to retrieve beginning from the start index."
						}
					],
					"description": "Returns the current value of the bound target"
				},
				{
					"name": "hasChildren",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if node has children"
					},
					"parameters": [
						{
							"name": "oContext",
							"type": "Object",
							"optional": false,
							"description": "the context element of the node"
						}
					],
					"description": "Returns if the node has child nodes"
				},
				{
					"name": "sort",
					"visibility": "public",
					"parameters": [
						{
							"name": "aSorters",
							"type": "sap.ui.model.Sorter[]",
							"optional": false,
							"description": "Array of sap.ui.model.Sorter objects"
						}
					],
					"description": "Sorts the tree according to the sorter definitions."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.TreeBindingAdapter",
			"basename": "TreeBindingAdapter",
			"resource": "sap/ui/model/TreeBindingAdapter.js",
			"module": "sap/ui/model/TreeBindingAdapter",
			"export": "",
			"static": true,
			"visibility": "protected",
			"experimental": {
				"text": "This module is only for experimental and internal use!"
			},
			"constructor": {
				"visibility": "protected",
				"description": "Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls."
			},
			"methods": [
				{
					"name": "_calculateRequestLength",
					"visibility": "protected",
					"parameters": [
						{
							"name": "iMaxGroupSize",
							"type": "int",
							"optional": false,
							"description": "the maximum group size"
						},
						{
							"name": "oSection",
							"type": "object",
							"optional": false,
							"description": "the information of the current section"
						}
					],
					"description": "Calculate the request length based on the given information"
				},
				{
					"name": "attachSelectionChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "The object, that should be passed along with the event-object when firing the event."
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs. This function will be called on the\n           oListener-instance (if present) or in a 'static way'."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Object on which to call the given function. If empty, this Model is used."
						}
					],
					"description": "Attach event-handler <code>fnFunction</code> to the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel</code>.<br/>\nEvent is fired if the selection of tree nodes is changed in any way."
				},
				{
					"name": "detachSelectionChanged",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to call, when the event occurs."
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Object on which the given function had to be called."
						}
					],
					"description": "Detach event-handler <code>fnFunction</code> from the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel</code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration."
				},
				{
					"name": "fireSelectionChanged",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.ui.model.SelectionModel",
						"description": "<code>this</code> to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"leadIndex": {
									"name": "leadIndex",
									"type": "int",
									"optional": false,
									"description": "Lead selection index"
								},
								"rowIndices": {
									"name": "rowIndices",
									"type": "int[]",
									"optional": true,
									"description": "Other selected indices (if available)"
								}
							},
							"description": "the arguments to pass along with the event."
						}
					],
					"description": "Fire event 'selectionChanged' to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'leadIndex' of type <code>int</code> Lead selection index.</li>\n<li>'rowIndices' of type <code>int[]</code> Other selected indices (if available)</li>\n</ul>"
				},
				{
					"name": "getNodes",
					"visibility": "protected",
					"returnValue": {
						"type": "Object",
						"description": "Tree Node"
					},
					"parameters": [
						{
							"name": "iStartIndex",
							"type": "undefined",
							"optional": false
						},
						{
							"name": "iLength",
							"type": "undefined",
							"optional": false
						},
						{
							"name": "iThreshold",
							"type": "undefined",
							"optional": false
						}
					],
					"description": "Retrieves the requested part from the tree and returns node objects."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.TreeBindingCompatibilityAdapter",
			"basename": "TreeBindingCompatibilityAdapter",
			"resource": "sap/ui/model/TreeBindingCompatibilityAdapter.js",
			"module": "sap/ui/model/TreeBindingCompatibilityAdapter",
			"export": "",
			"static": true,
			"visibility": "protected",
			"constructor": {
				"visibility": "protected",
				"description": "Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls.\n\nThis module is only for experimental and internal use!"
			}
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.TreeBindingUtils",
			"basename": "TreeBindingUtils",
			"resource": "sap/ui/model/TreeBindingUtils.js",
			"module": "sap/ui/model/TreeBindingUtils",
			"export": "",
			"static": true,
			"visibility": "public",
			"methods": [
				{
					"name": "mergeSections",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object[]",
						"description": "a new array containing all sections from aSections merged with oNewSection"
					},
					"parameters": [
						{
							"name": "aSections",
							"type": "object[]",
							"optional": false,
							"description": "the sections into which oNewSection will be merged"
						},
						{
							"name": "oNewSection",
							"type": "object",
							"optional": false,
							"description": "the section which should be merged into aNewSections"
						}
					],
					"description": "Merges together oNewSection into a set of other sections (aSections)\nThe array/objects are not modified, the function returns a new section array."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.Type",
			"basename": "Type",
			"resource": "sap/ui/model/Type.js",
			"module": "sap/ui/model/Type",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.base.Object",
			"description": "This is an abstract base class for type objects.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Constructor for a new Type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.Type with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.Type."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "String",
						"description": "the name of this type"
					},
					"description": "Returns the name of this type."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.type.Boolean",
			"basename": "Boolean",
			"resource": "sap/ui/model/type/Boolean.js",
			"module": "sap/ui/model/type/Boolean",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.SimpleType",
			"description": "This class represents boolean simple types.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "formatting options. Boolean doesn't support any specific format options"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"description": "value constraints. Boolean doesn't support additional constraints"
					}
				],
				"description": "Constructor for a Boolean type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.type.Boolean with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.type.Boolean."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.type.Currency",
			"basename": "Currency",
			"resource": "sap/ui/model/type/Currency.js",
			"module": "sap/ui/model/type/Currency",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.CompositeType",
			"description": "This class represents the currency composite type.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"source": {
								"name": "source",
								"type": "object",
								"optional": true,
								"description": "additional set of format options to be used if the property in the model is not of type string and needs formatting as well.\n\t\t\t\t\t\t\t\t\t\t   In case an empty object is given, the default is disabled grouping and a dot as decimal separator."
							}
						},
						"description": "formatting options. Supports the same options as {@link sap.ui.core.format.NumberFormat.getCurrencyInstance NumberFormat.getCurrencyInstance}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"minimum": {
								"name": "minimum",
								"type": "float",
								"optional": true,
								"description": "smallest value allowed for this type"
							},
							"maximum": {
								"name": "maximum",
								"type": "float",
								"optional": true,
								"description": "largest value allowed for this type"
							}
						},
						"description": "value constraints."
					}
				],
				"description": "Constructor for a Currency type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.type.Currency with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.CompositeType.extend}."
				},
				{
					"name": "formatValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the formatted output value"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "array|string",
							"optional": false,
							"description": "the array of values or string value to be formatted"
						},
						{
							"name": "sInternalType",
							"type": "string",
							"optional": false,
							"description": "the target type"
						}
					],
					"description": "Format the given array containing amount and currency code to an output value of type string.\nOther internal types than 'string' are not supported by the Currency type.\nIf an source format is has been defined for this type, the formatValue does also accept\na string value as input, which will be parsed into an array using the source format.\nIf aValues is not defined or null, null will be returned."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.type.Currency."
				},
				{
					"name": "parseValue",
					"visibility": "public",
					"returnValue": {
						"type": "array|string",
						"description": "the parse result array"
					},
					"parameters": [
						{
							"name": "vValue",
							"type": "any",
							"optional": false,
							"description": "the value to be parsed"
						},
						{
							"name": "sInternalType",
							"type": "string",
							"optional": false,
							"description": "the source type"
						},
						{
							"name": "aCurrentValues",
							"type": "array",
							"optional": false,
							"description": "the current values of all binding parts"
						}
					],
					"description": "Parse a string value to an array containing amount and currency. Parsing of other\ninternal types than 'string' is not supported by the Currency type.\nIn case a source format has been defined, after parsing the currency is formatted\nusing the source format and a string value is returned instead."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.type.Date",
			"basename": "Date",
			"resource": "sap/ui/model/type/Date.js",
			"module": "sap/ui/model/type/Date",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.SimpleType",
			"description": "This class represents date simple types.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"source": {
								"name": "source",
								"type": "object",
								"optional": true,
								"description": "additional set of options used to create a second DateFormat object for conversions between\n          string values in the data source (e.g. model) and Date. This second format object is used to convert from a model string to Date before\n          converting the Date to string with the primary format object. Vice versa, this 'source' format is also used to format an already parsed\n          external value (e.g. user input) into the string format expected by the data source.\n          Supports the same set of options as {@link sap.ui.core.format.DateFormat.getDateInstance DateFormat.getDateInstance}.\n          In case an empty object is given, the default is ISO date notation (yyyy-MM-dd)."
							}
						},
						"description": "options used to create a DateFormat for formatting / parsing. Supports the same options as {@link sap.ui.core.format.DateFormat.getDateInstance DateFormat.getDateInstance}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"minimum": {
								"name": "minimum",
								"type": "Date|string",
								"optional": true,
								"description": "smallest value allowed for this type. Values for constraints must use the same type as configured via <code>oFormatOptions.source</code>"
							},
							"maximum": {
								"name": "maximum",
								"type": "Date|string",
								"optional": true,
								"description": "largest value allowed for this type. Values for constraints must use the same type as configured via <code>oFormatOptions.source</code>"
							}
						},
						"description": "value constraints."
					}
				],
				"description": "Constructor for a Date type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.type.Date with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.type.Date."
				},
				{
					"name": "getOutputPattern",
					"visibility": "protected"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.type.DateTime",
			"basename": "DateTime",
			"resource": "sap/ui/model/type/DateTime.js",
			"module": "sap/ui/model/type/DateTime",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.type.Date",
			"description": "This class represents datetime simple types.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "options used to create a DateFormat for formatting / parsing to/from external values and\n          optionally for a second DateFormat to convert between the data source format (Model) and the internally used JavaScript Date.format.\n          For both DateFormat objects, the same options are supported as for {@link sap.ui.core.format.DateFormat.getDateTimeInstance DateFormat.getDateTimeInstance}.\n          Note that this differs from the base type."
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"description": "value constraints. Supports the same kind of constraints as its base type Date, but note the different format options (Date vs. DateTime)"
					}
				],
				"description": "Constructor for a DateTime type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.type.DateTime with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.type.Date.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.type.DateTime."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.type.FileSize",
			"basename": "FileSize",
			"resource": "sap/ui/model/type/FileSize.js",
			"module": "sap/ui/model/type/FileSize",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.SimpleType",
			"description": "This class represents file size simple types.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"source": {
								"name": "source",
								"type": "object",
								"optional": true,
								"description": "additional set of options used to create a second FileSizeFormat object for conversions between\n          string values in the data source (e.g. model) and a numeric byte representation. This second format object is used to convert from a model string to numeric bytes before\n          converting to string with the primary format object. Vice versa, this 'source' format is also used to format an already parsed\n          external value (e.g. user input) into the string format expected by the data source.\n          Supports the same set of options as {@link sap.ui.core.format.FileSizeFormat.getInstance FileSizeFormat.getInstance}."
							}
						},
						"description": "formatting options. Supports the same options as {@link sap.ui.core.format.FileSizeFormat.getInstance FileSizeFormat.getInstance}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"minimum": {
								"name": "minimum",
								"type": "float",
								"optional": true,
								"description": "smallest value allowed for this type"
							},
							"maximum": {
								"name": "maximum",
								"type": "float",
								"optional": true,
								"description": "largest value allowed for this type"
							}
						},
						"description": "value constraints."
					}
				],
				"description": "Constructor for a FileSize type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.type.FileSize with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.type.FileSize."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.type.Float",
			"basename": "Float",
			"resource": "sap/ui/model/type/Float.js",
			"module": "sap/ui/model/type/Float",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.SimpleType",
			"description": "This class represents float simple types.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"source": {
								"name": "source",
								"type": "object",
								"optional": true,
								"description": "additional set of format options to be used if the property in the model is not of type string and needs formatting as well.\n\t\t\t\t\t\t\t\t\t\t   In case an empty object is given, the default is disabled grouping and a dot as decimal separator."
							}
						},
						"description": "formatting options. Supports the same options as {@link sap.ui.core.format.NumberFormat.getFloatInstance NumberFormat.getFloatInstance}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"minimum": {
								"name": "minimum",
								"type": "float",
								"optional": true,
								"description": "smallest value allowed for this type"
							},
							"maximum": {
								"name": "maximum",
								"type": "float",
								"optional": true,
								"description": "largest value allowed for this type"
							}
						},
						"description": "value constraints."
					}
				],
				"description": "Constructor for a Float type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.type.Float with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.type.Float."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.type.Integer",
			"basename": "Integer",
			"resource": "sap/ui/model/type/Integer.js",
			"module": "sap/ui/model/type/Integer",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.SimpleType",
			"description": "This class represents integer simple types.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"source": {
								"name": "source",
								"type": "object",
								"optional": true,
								"description": "additional set of format options to be used if the property in the model is not of type string and needs formatting as well.\n\t\t\t\t\t\t\t\t\t\t   In case an empty object is given, the default is disabled grouping and a dot as decimal separator."
							}
						},
						"description": "formatting options. Supports the same options as {@link sap.ui.core.format.NumberFormat.getIntegerInstance NumberFormat.getIntegerInstance}"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"minimum": {
								"name": "minimum",
								"type": "int",
								"optional": true,
								"description": "smallest value allowed for this type"
							},
							"maximum": {
								"name": "maximum",
								"type": "int",
								"optional": true,
								"description": "largest value allowed for this type"
							}
						},
						"description": "value constraints."
					}
				],
				"description": "Constructor for a Integer type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.type.Integer with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.type.Integer."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.type.String",
			"basename": "String",
			"resource": "sap/ui/model/type/String.js",
			"module": "sap/ui/model/type/String",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.SimpleType",
			"description": "This class represents string simple types.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "formatting options. String doesn't support any formatting options"
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"parameterProperties": {
							"maxLength": {
								"name": "maxLength",
								"type": "int",
								"optional": true,
								"description": "maximum length (in characters) that a string of this value may have"
							},
							"minLength": {
								"name": "minLength",
								"type": "int",
								"optional": true,
								"description": "minimum length (in characters) that a string of this value may have"
							},
							"startsWith": {
								"name": "startsWith",
								"type": "string",
								"optional": true,
								"description": "a prefix that any valid value must start with"
							},
							"startsWithIgnoreCase": {
								"name": "startsWithIgnoreCase",
								"type": "string",
								"optional": true,
								"description": "a prefix that any valid value must start with, ignoring case"
							},
							"endsWith": {
								"name": "endsWith",
								"type": "string",
								"optional": true,
								"description": "a suffix that any valid value must end with"
							},
							"endsWithIgnoreCase": {
								"name": "endsWithIgnoreCase",
								"type": "string",
								"optional": true,
								"description": "a suffix that any valid value must end with, ignoring case"
							},
							"contains": {
								"name": "contains",
								"type": "string",
								"optional": true,
								"description": "an infix that must be contained in any valid value"
							},
							"equals": {
								"name": "equals",
								"type": "string",
								"optional": true,
								"description": "only value that is allowed"
							},
							"search": {
								"name": "search",
								"type": "RegExp",
								"optional": true,
								"description": "a regular expression that the value must match"
							}
						},
						"description": "value constraints. All given constraints must be fulfilled by a value to be valid"
					}
				],
				"description": "Constructor for a String type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.type.String with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.type.String."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.model.type.Time",
			"basename": "Time",
			"resource": "sap/ui/model/type/Time.js",
			"module": "sap/ui/model/type/Time",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.type.Date",
			"description": "This class represents time simple types.",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oFormatOptions",
						"type": "object",
						"optional": true,
						"description": "options used to create a DateFormat for formatting / parsing to/from external values and\n          optionally for a second DateFormat to convert between the data source format (Model) and the internally used JavaScript Date.format.\n          For both DateFormat objects, the same options are supported as for {@link sap.ui.core.format.DateFormat.getTimeInstance DateFormat.getTimeInstance}.\n          Note that this differs from the base type."
					},
					{
						"name": "oConstraints",
						"type": "object",
						"optional": true,
						"description": "value constraints. Supports the same kind of constraints as its base type Date, but note the different format options (Date vs. Time)"
					}
				],
				"description": "Constructor for a Time type."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.type.Time with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.type.Date.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.type.Time."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.model.xml",
			"basename": "xml",
			"resource": "sap/ui/model/xml/XMLModel.js",
			"module": "sap/ui/model/xml/XMLModel",
			"static": true,
			"visibility": "public",
			"description": "XML-based DataBinding"
		},
		{
			"kind": "class",
			"name": "sap.ui.model.xml.XMLModel",
			"basename": "XMLModel",
			"resource": "sap/ui/model/xml/XMLModel.js",
			"module": "sap/ui/model/xml/XMLModel",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.model.ClientModel",
			"description": "Model implementation for XML format",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oData",
						"type": "object",
						"optional": false,
						"description": "either the URL where to load the XML from or a XML"
					}
				],
				"description": "Constructor for a new XMLModel."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.model.xml.XMLModel with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.model.xml.XMLModel."
				},
				{
					"name": "getObject",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the object"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path to the object"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context which will be used to retrieve the object"
						}
					],
					"description": "Returns the object for the given <code>path</code>"
				},
				{
					"name": "getProperty",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "the value of the property"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "the path to the property"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context which will be used to retrieve the property"
						}
					],
					"description": "Returns the value for the property with the given <code>sPropertyName</code>"
				},
				{
					"name": "getXML",
					"visibility": "public",
					"returnValue": {
						"description": "the XML document serialized as string"
					},
					"description": "Serializes the current XML data of the model into a string."
				},
				{
					"name": "loadData",
					"visibility": "public",
					"parameters": [
						{
							"name": "sURL",
							"type": "string",
							"optional": false,
							"description": "A string containing the URL to which the request is sent."
						},
						{
							"name": "oParameters",
							"type": "object|string",
							"optional": true,
							"description": "A map or string that is sent to the server with the request."
						},
						{
							"name": "bAsync",
							"type": "boolean",
							"optional": true,
							"defaultValue": true,
							"description": "if the request should be asynchron or not. Default is true."
						},
						{
							"name": "sType",
							"type": "string",
							"optional": true,
							"defaultValue": "GET",
							"description": "of request. Default is 'GET'"
						},
						{
							"name": "bCache",
							"type": "string",
							"optional": true,
							"defaultValue": false,
							"description": "force no caching if false. Default is false"
						},
						{
							"name": "mHeaders",
							"type": "object",
							"optional": false,
							"description": "An object of additional header key/value pairs to send along with the request"
						}
					],
					"description": "Load XML-encoded data from the server using a GET HTTP request and store the resulting XML data in the model.\nNote: Due to browser security restrictions, most \"Ajax\" requests are subject to the same origin policy,\nthe request can not successfully retrieve data from a different domain, subdomain, or protocol."
				},
				{
					"name": "setData",
					"visibility": "public",
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": false,
							"description": "the data to set to the model"
						}
					],
					"description": "Sets the provided XML encoded data object to the model"
				},
				{
					"name": "setNameSpace",
					"visibility": "public",
					"parameters": [
						{
							"name": "sNameSpace",
							"type": "string",
							"optional": false,
							"description": "the namespace URI"
						},
						{
							"name": "sPrefix",
							"type": "string",
							"optional": true,
							"defaultValue": null,
							"description": "the prefix for the namespace (optional)"
						}
					],
					"description": "Sets an XML namespace to use in the binding path"
				},
				{
					"name": "setProperty",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the value was set correctly and false if errors occurred like the entry was not found."
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "path of the property to set"
						},
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "value to set the property to"
						},
						{
							"name": "oContext",
							"type": "object",
							"optional": true,
							"defaultValue": null,
							"description": "the context which will be used to set the property"
						},
						{
							"name": "bAsyncUpdate",
							"type": "boolean",
							"optional": true,
							"description": "whether to update other bindings dependent on this property asynchronously"
						}
					],
					"description": "Sets a new value for the given property <code>sPropertyName</code> in the model.\nIf the model value changed all interested parties are informed."
				},
				{
					"name": "setXML",
					"visibility": "public",
					"parameters": [
						{
							"name": "sXMLText",
							"type": "string",
							"optional": false,
							"description": "the XML data as string"
						}
					],
					"description": "Sets the specified XML formatted string text to the model"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.actions.Action",
			"basename": "Action",
			"resource": "sap/ui/test/actions/Action.js",
			"module": "sap/ui/test/actions/Action",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Actions for Opa5 - needs to implement an executeOn function that should simulate a user interaction on a control",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "idSuffix",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38",
						"methods": [
							"getIdSuffix",
							"setIdSuffix"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"description": "Accepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "executeOn",
					"visibility": "protected",
					"parameters": [
						{
							"name": "element",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the {@link sap.ui.core.Element} or a control (extends element) the action will be executed on"
						}
					],
					"description": "Checks if the matcher is matching - will get an instance of sap.ui.core.Control as parameter\nShould be overwritten by subclasses"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.actions.Action with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "getIdSuffix",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>idSuffix</code>"
					},
					"since": "1.38",
					"description": "Gets current value of property <code>idSuffix</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.actions.Action."
				},
				{
					"name": "setIdSuffix",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.actions.Action",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38",
					"parameters": [
						{
							"name": "sIdSuffix",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>idSuffix</code>"
						}
					],
					"description": "Sets a new value for property <code>idSuffix</code>.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.actions.EnterText",
			"basename": "EnterText",
			"resource": "sap/ui/test/actions/EnterText.js",
			"module": "sap/ui/test/actions/EnterText",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.test.actions.Action",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The Text that is going to be typed to the control. If you are entering an empty string, the value will be cleared.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "clearTextFirst",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"since": "1.38.0",
						"methods": [
							"getClearTextFirst",
							"setClearTextFirst"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"description": "The EnterText action is used to simulate a user entering texts to inputs.\nEnterText will be executed on a control's focus dom ref.\nSupported controls are (for other controls this action still might work):\n<ul>\n    <li>sap.m.Input</li>\n    <li>sap.m.SearchField</li>\n    <li>sap.m.TextArea</li>\n</ul>\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "executeOn",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control on which the text event should be entered in."
						}
					],
					"description": "Sets focus on given control and triggers Multiple keyboard events on it, one event for every character in the text.\nLogs an error if control has no focusable dom ref or is not visible."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.actions.EnterText with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.actions.Action.extend}."
				},
				{
					"name": "getClearTextFirst",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>clearTextFirst</code>"
					},
					"since": "1.38.0",
					"description": "Gets current value of property <code>clearTextFirst</code>.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.actions.EnterText."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rThe Text that is going to be typed to the control. If you are entering an empty string, the value will be cleared."
				},
				{
					"name": "setClearTextFirst",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.actions.EnterText",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"since": "1.38.0",
					"parameters": [
						{
							"name": "bClearTextFirst",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>clearTextFirst</code>"
						}
					],
					"description": "Sets a new value for property <code>clearTextFirst</code>.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>true</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.actions.EnterText",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rThe Text that is going to be typed to the control. If you are entering an empty string, the value will be cleared.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.actions.Press",
			"basename": "Press",
			"resource": "sap/ui/test/actions/Press.js",
			"module": "sap/ui/test/actions/Press",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.test.actions.Action",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "The Press action is used to simulate a press interaction on a Control's dom ref.\nThis will work out of the box for most of the controls (even custom controls).\n\nHere is a List of supported controls (some controls will trigger the press on a specific region):\n\n<ul>\n    <li>sap.m.Button</li>\n    <li>sap.m.Link</li>\n    <li>sap.m.StandardListItem</li>\n    <li>sap.m.IconTabFilter</li>\n    <li>sap.m.Input - Value help</li>\n    <li>sap.m.SearchField - Search Button</li>\n    <li>sap.m.Page - Back Button</li>\n    <li>sap.m.semantic.FullscreenPage - Back Button</li>\n    <li>sap.m.semantic.DetailPage - Back Button</li>\n    <li>sap.m.List - More Button</li>\n    <li>sap.m.Table - More Button</li>\n    <li>sap.m.StandardTile</li>\n    <li>sap.m.ComboBox</li>\n    <li>sap.ui.comp.smartfilterbar.SmartFilterBar - Go Button</li>\n</ul>"
			},
			"properties": [
				{
					"name": "controlAdapters",
					"visibility": "public",
					"static": true,
					"type": "map",
					"description": "A map that contains the id suffixes for certain controls of the library.\nWhen you extended a UI5 controls the adapter of the control will be taken.\nIf you need an adapter for your own control you can add it here. For example:\nYou wrote a control with the namespace my.Control it renders two buttons and you want the press action to press the second one by default.\n\n<pre>\n<code>\n    new my.Control(\"myId\");\n</code>\n</pre>\n\nIt contains two button tags in its dom.\nWhen you render your control it creates the following dom:\n\n\n<pre>\n<code>\n    &lt;div id=\"myId\"&gt;\n        &lt;button id=\"myId-firstButton\"/&gt;\n        &lt;button id=\"myId-secondButton\"/&gt;\n    &lt;/div&gt;\n</code>\n</pre>\n\nThen you may add a control adapter like this\n\n<pre>\n<code>\n    Press.controlAdapters[\"my.control\"] = \"secondButton\"; //This can be used by setting the Target Property of an action\n\n    // Example usage\n    new Press(); // executes on second Button since it is set as default\n    new Press({ idSuffix: \"firstButton\"}); // executes on the first button has to be the same as the last part of the id in the dom\n</code>\n</pre>"
				}
			],
			"methods": [
				{
					"name": "executeOn",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control on which the 'press' event is triggered"
						}
					],
					"description": "Sets focus on given control and triggers a 'tap' event on it (which is\ninternally translated into a 'press' event).\nLogs an error if control is not visible (i.e. has no dom representation)"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.actions.Press with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.actions.Action.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.actions.Press."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.test.gherkin.dataTableUtils",
			"basename": "dataTableUtils",
			"resource": "sap/ui/test/gherkin/dataTableUtils.js",
			"module": "sap/ui/test/gherkin/dataTableUtils",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.40",
			"description": "Provides utility functions for formatting 2D arrays of strings (such as the raw data loaded from a Gherkin\nfeature file) into a more useful format such as an array of objects or a single object. Also handles normalization\nof the raw strings.",
			"methods": [
				{
					"name": "toObject",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "- an object equivalent to the input data, with property names normalized"
					},
					"parameters": [
						{
							"name": "aData",
							"type": "string[]",
							"optional": false,
							"description": "the 2D array of strings to be converted"
						},
						{
							"name": "vNorm",
							"type": "string|function",
							"optional": true,
							"defaultValue": "\"none\"",
							"description": "the normalization function to use to normalize property\n                                            names. Can also be a string with values \"titleCase\", \"pascalCase\",\n                                            \"camelCase\", \"hyphenated\" or \"none\"."
						}
					],
					"description": "Takes the inputed 2D array \"aData\" and returns an equivalent object. Each row of data is expected to\nbe a property-value pair. To create nested objects, add extra columns to the data. E.g.\n<pre>\n [\n   [\"Name\", \"Alice\"],\n   [\"Mass\", \"135 lbs\"],\n   [\"Telephone Number\", \"Home\", \"123-456-7890\"],\n   [\"Telephone Number\", \"Work\", \"123-456-0987\"]\n ]\n</pre>\nFor each data row, the right-most element becomes a property value, and everything else is a property\nname. The property names get normalized according to the strategy defined by the parameter \"vNorm\".\nE.g. using camelCase strategy\n<pre>\n  {\n    name: \"Alice\",\n    mass: \"135 lbs\",\n    telephoneNumber: {\n      home: \"123-456-7890\",\n      work: \"123-456-0987\"\n    }\n  }\n</pre>"
				},
				{
					"name": "toTable",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object[]",
						"description": "- an array of objects equivalent to the input data, with property names normalized"
					},
					"parameters": [
						{
							"name": "aData",
							"type": "string[]",
							"optional": false,
							"description": "the 2D array of strings to be converted, with a header row"
						},
						{
							"name": "vNorm",
							"type": "string|function",
							"optional": true,
							"defaultValue": "\"none\"",
							"description": "the normalization function to use to normalize property\n                                            names. Can also be a String with values \"titleCase\", \"pascalCase\",\n                                            \"camelCase\", \"hyphenated\" or \"none\"."
						}
					],
					"description": "Takes the inputed 2D array \"aData\" and returns an equivalent array of objects. The data is expected to\nhave a header row, with each subsequent row being an entity, and each column being a property of that\nentity. E.g.\n<pre>\n  [\n    [\"Their Name\",  \"Their Age\"],\n    [\"Alice\",       \"16\"],\n    [\"Bob\",         \"22\"]\n  ]\n</pre>\n\nThe data's column headers become the returned objects' property names. The property names get normalized\naccording to the strategy defined by the parameter \"vNorm\". E.g. using hyphenation strategy this is returned:\n<pre>\n  [\n    {their-name: \"Alice\", their-age: \"16\"},\n    {their-name: \"Bob\", their-age: \"22\"}\n  ]\n</pre>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.test.gherkin.dataTableUtils.normalization",
			"basename": "normalization",
			"resource": "sap/ui/test/gherkin/dataTableUtils.js",
			"module": "sap/ui/test/gherkin/dataTableUtils",
			"export": "normalization",
			"static": true,
			"visibility": "public",
			"description": "A simple object containing a series of normalization functions that change a string according to a\nparticular strategy. All strategies do the following normalization as a minimum:\n\n<ul>\n  <li>Trim spaces off the string on both sides. For example: <code>\" hello \"</code> becomes\n    <code>\"hello\"</code>.</li>\n  <li>Trim multiple spaces between words. For example: <code>\"hello    world\"</code> becomes\n    <code>\"hello world\"</code>.</li>\n  <li>Assume that dashes and underscores are analogs for a space. For example: <code>\"sold-to party\"</code> and\n    <code>\"sold to party\"</code> are equivalent, and would both convert to the camelCase\n    <code>\"soldToParty\"</code>.</li>\n  <li>Remove any characters that are not alphanumeric or whitespace. For example: <code>\"(hello)\"</code> becomes\n    <code>\"hello\"</code>.</li>\n</ul>",
			"methods": [
				{
					"name": "camelCase",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the normalized input string with all words after the first capitalized and all spaces\n                  removed"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "the string to normalize"
						}
					],
					"description": "For example: \"First Name\" -> \"firstName\""
				},
				{
					"name": "hyphenated",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the normalized input string changed to lower case and with space between words\n                  replaced by a hyphen (\"-\")"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "the string to normalize"
						}
					],
					"description": "For example: \"First Name\" -> \"first-name\""
				},
				{
					"name": "none",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the original unchanged input string"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "the string to normalize"
						}
					],
					"description": "For example: \"First Name\" -> \"First Name\""
				},
				{
					"name": "pascalCase",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the normalized input string with all words capitalized and all spaces removed"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "the string to normalize"
						}
					],
					"description": "For example: \"first name\" -> \"FirstName\""
				},
				{
					"name": "titleCase",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "string",
						"description": "the normalized input string with all words capitalized"
					},
					"parameters": [
						{
							"name": "sString",
							"type": "string",
							"optional": false,
							"description": "the string to normalize"
						}
					],
					"description": "For example: \"first name\" -> \"First Name\""
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.test.gherkin.opa5TestHarness",
			"basename": "opa5TestHarness",
			"resource": "sap/ui/test/gherkin/opa5TestHarness.js",
			"module": "sap/ui/test/gherkin/opa5TestHarness",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.40",
			"description": "Dynamically generates Opa5 tests based on a Gherkin feature file and step definitions.\n\nLogs activity to Opa5, and some debug information to the console with the prefix \"[GHERKIN]\"",
			"methods": [
				{
					"name": "test",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "args",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"featurePath": {
									"name": "featurePath",
									"type": "string",
									"optional": false,
									"description": "the path to the Gherkin feature file to parse, as a SAPUI5 module path. The\n                                   \".feature\" extension is assumed and should not be included. See\n                                   {@link jQuery.sap.registerModulePath}"
								},
								"steps": {
									"name": "steps",
									"type": "function",
									"optional": true,
									"description": "the constructor function of type sap.ui.test.gherkin.StepDefinitions. If this\n                                 parameter is ommitted then args.generateMissingSteps must be explicitly set\n                                 to true."
								},
								"generateMissingSteps": {
									"name": "generateMissingSteps",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "When true: if a Gherkin step cannot be matched to a step\n                                                     definition then it will be assumed that the user wants to\n                                                     convert the step into an Opa Page Object call."
								}
							},
							"description": "the arguments to the function"
						}
					],
					"description": "Dynamically generates Opa5 tests\n\nIf a test step is missing and args.generateMissingSteps is true then the  Gherkin step will be converted into Opa\nPage Object code and executed. The text will be converted to camelCase and have any non-alphanumeric character\nremoved. Here are two pertinent examples:\n\n(1) The simple step \"Given I start my app\" will be converted into the call \"Given.iStartMyApp();\"\n\n(2) The step \"Then on page 1: I should see the page 1 text\" will become the call\n    \"Then.onPage1.iShouldSeeThePage1Text();\"\n\nChaining function calls, such as \"Then.iStartMyApp().and.iCloseMyApp()\" is not possible at this time."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.ui.test.gherkin.qUnitTestHarness",
			"basename": "qUnitTestHarness",
			"resource": "sap/ui/test/gherkin/qUnitTestHarness.js",
			"module": "sap/ui/test/gherkin/qUnitTestHarness",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.40",
			"description": "Dynamically generates and executes QUnit tests based on a Gherkin feature file and step definitions\n\nLogs activity to QUnit, and some debug information to the console with the prefix \"[GHERKIN]\"",
			"methods": [
				{
					"name": "test",
					"visibility": "public",
					"static": true,
					"parameters": [
						{
							"name": "args",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"featurePath": {
									"name": "featurePath",
									"type": "string",
									"optional": false,
									"description": "the path to the Gherkin feature file to parse, as a SAPUI5 module path. The\n                                   \".feature\" extension is assumed and should not be included. See\n                                   {@link jQuery.sap.registerModulePath}"
								},
								"steps": {
									"name": "steps",
									"type": "function",
									"optional": false,
									"description": "the constructor function of type sap.ui.test.gherkin.StepDefinitions"
								}
							},
							"description": "the arguments to the function"
						}
					],
					"description": "Dynamically generates and executes QUnit tests"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.gherkin.StepDefinitions",
			"basename": "StepDefinitions",
			"resource": "sap/ui/test/gherkin/StepDefinitions.js",
			"module": "sap/ui/test/gherkin/StepDefinitions",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.40",
			"extends": "sap.ui.base.Object",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "A Gherkin feature file is human-readable, and the computer does not know how to execute its steps. This\nStepDefinitions class provides the interface between human and machine. It defines what each step in the Gherkin\nfeature file will actually do when it is executed.\n\nMeant to be implemented/overridden by a child object. Specifically, the functions \"init\" and \"closeApplication\"\nneed to be overridden."
			},
			"methods": [
				{
					"name": "closeApplication",
					"visibility": "public",
					"description": "Closes the application and cleans up any mess made by the tests. To avoid erroneous exceptions during test\nexecution, make sure that it is safe to run this method even if the application was never started."
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.gherkin.StepDefinitions with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.gherkin.StepDefinitions."
				},
				{
					"name": "init",
					"visibility": "public",
					"description": "Registers the step definitions by calling the method \"register\". The order of the register calls is important.\nThe first step definition whose regular expression matches the step text is the one that will be executed,\nhowever, the step definitions are checked in REVERSE ORDER (i.e. the last one you wrote is checked first)."
				},
				{
					"name": "register",
					"visibility": "public",
					"parameters": [
						{
							"name": "rRegex",
							"type": "RegExp",
							"optional": false,
							"description": "the regular expression that matches the feature file step (with leading \"Given\", \"When\",\n                         \"Then\", \"But\" or \"*\" removed). E.g. if the feature file has the step\n                         \"Then I should be served a coffee\" it will be truncated to \"I should be served a coffee\"\n                         and tested against \"rRegex\" to check for a match. The simple regular expression\n                         /^I should be served a coffee$/i would match this text. The regular\n                         expression can specify capturing groups, which will be passed as parameters to \"fnFunc\"."
						},
						{
							"name": "fnFunc",
							"type": "function",
							"optional": false,
							"description": "the function to execute in the event that the regular expression matches. Receives\n                           regular expression capturing groups as parameters in the same order that they are\n                           specified in the regular expression. If a data table is specified for the step, it\n                           will be passed as an additional final parameter. At execution time, all functions\n                           within a particular scenario will execute within the same \"this\" context."
						}
					],
					"description": "Registers a step definition."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.AggregationContainsPropertyEqual",
			"basename": "AggregationContainsPropertyEqual",
			"resource": "sap/ui/test/matchers/AggregationContainsPropertyEqual.js",
			"module": "sap/ui/test/matchers/AggregationContainsPropertyEqual",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.23",
			"extends": "sap.ui.test.matchers.Matcher",
			"description": "AggregationContainsPropertyEqual - checks if an aggregation contains at least one item that has a Property set to a certain value",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "aggregationName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The Name of the aggregation that is used for matching.",
						"methods": [
							"getAggregationName",
							"setAggregationName"
						]
					},
					{
						"name": "propertyName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The Name of the property that is used for matching.",
						"methods": [
							"getPropertyName",
							"setPropertyName"
						]
					},
					{
						"name": "propertyValue",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The value of the Property that is used for matching.",
						"methods": [
							"getPropertyValue",
							"setPropertyValue"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the new AggregationContainsPropertyEqualMatcher"
					}
				],
				"description": "AggregationContainsPropertyEqual - checks if an aggregation contains at least one item that has a Property set to a certain value.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.AggregationContainsPropertyEqual with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}."
				},
				{
					"name": "getAggregationName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>aggregationName</code>"
					},
					"description": "Gets current value of property <code>aggregationName</code>.\r\rThe Name of the aggregation that is used for matching."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.AggregationContainsPropertyEqual."
				},
				{
					"name": "getPropertyName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>propertyName</code>"
					},
					"description": "Gets current value of property <code>propertyName</code>.\r\rThe Name of the property that is used for matching."
				},
				{
					"name": "getPropertyValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>propertyValue</code>"
					},
					"description": "Gets current value of property <code>propertyValue</code>.\r\rThe value of the Property that is used for matching."
				},
				{
					"name": "isMatching",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the Aggregation set in the property aggregationName is filled, false if it is not."
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that is checked by the matcher"
						}
					],
					"description": "Checks if the control has a filled aggregation with at least one control that have a property equaling propertyName/Value."
				},
				{
					"name": "setAggregationName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.AggregationContainsPropertyEqual",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sAggregationName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>aggregationName</code>"
						}
					],
					"description": "Sets a new value for property <code>aggregationName</code>.\r\rThe Name of the aggregation that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPropertyName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.AggregationContainsPropertyEqual",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>propertyName</code>"
						}
					],
					"description": "Sets a new value for property <code>propertyName</code>.\r\rThe Name of the property that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPropertyValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.AggregationContainsPropertyEqual",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oPropertyValue",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>propertyValue</code>"
						}
					],
					"description": "Sets a new value for property <code>propertyValue</code>.\r\rThe value of the Property that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.AggregationEmpty",
			"basename": "AggregationEmpty",
			"resource": "sap/ui/test/matchers/AggregationEmpty.js",
			"module": "sap/ui/test/matchers/AggregationEmpty",
			"export": "",
			"static": true,
			"visibility": "public",
			"extends": "sap.ui.test.matchers.Matcher",
			"description": "AggregationEmpty - checks if an aggregation is empty",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the aggregation that is used for matching.",
						"methods": [
							"getName",
							"setName"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the new AggregationEmptyMatcher"
					}
				],
				"description": "AggregationEmpty - checks if an aggregation is empty.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.AggregationEmpty with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.AggregationEmpty."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\r\rThe name of the aggregation that is used for matching."
				},
				{
					"name": "isMatching",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the Aggregation set in the property aggregationName is empty, false if it is not."
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that is checked by the matcher"
						}
					],
					"description": "Checks if the control has an empty aggregation."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.AggregationEmpty",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\r\rThe name of the aggregation that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.AggregationFilled",
			"basename": "AggregationFilled",
			"resource": "sap/ui/test/matchers/AggregationFilled.js",
			"module": "sap/ui/test/matchers/AggregationFilled",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.23",
			"extends": "sap.ui.test.matchers.Matcher",
			"description": "AggregationFilled - checks if an aggregation contains at least one entry",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the aggregation that is used for matching.",
						"methods": [
							"getName",
							"setName"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the new AggregationFilledMatcher"
					}
				],
				"description": "AggregationFilled - checks if an aggregation contains at least one entry.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.AggregationFilled with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.AggregationFilled."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\r\rThe name of the aggregation that is used for matching."
				},
				{
					"name": "isMatching",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the Aggregation set in the property aggregationName is filled, false if it is not."
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that is checked by the matcher"
						}
					],
					"description": "Checks if the control has a filled aggregation."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.AggregationFilled",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\r\rThe name of the aggregation that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.AggregationLengthEquals",
			"basename": "AggregationLengthEquals",
			"resource": "sap/ui/test/matchers/AggregationLengthEquals.js",
			"module": "sap/ui/test/matchers/AggregationLengthEquals",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.23",
			"extends": "sap.ui.test.matchers.Matcher",
			"description": "AggregationLengthEquals - checks if an aggregation contains at least one entry",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the aggregation that is used for matching.",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "length",
						"type": "int",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The length that aggregation <code>name</code> should have.",
						"methods": [
							"getLength",
							"setLength"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the new AggregationLengthEqualsMatcher"
					}
				],
				"description": "AggregationLengthEquals - checks if an aggregation contains at least one entry.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.AggregationLengthEquals with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}."
				},
				{
					"name": "getLength",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "Value of property <code>length</code>"
					},
					"description": "Gets current value of property <code>length</code>.\r\rThe length that aggregation <code>name</code> should have."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.AggregationLengthEquals."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\r\rThe name of the aggregation that is used for matching."
				},
				{
					"name": "isMatching",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the length of aggregation <code>name</code> is the same as <code>length</code>, false if it is not."
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that is checked by the matcher"
						}
					],
					"description": "Checks if the control's aggregation <code>name</code> has length <code>length</code>."
				},
				{
					"name": "setLength",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.AggregationLengthEquals",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "iLength",
							"type": "int",
							"optional": false,
							"description": "New value for property <code>length</code>"
						}
					],
					"description": "Sets a new value for property <code>length</code>.\r\rThe length that aggregation <code>name</code> should have.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.AggregationLengthEquals",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\r\rThe name of the aggregation that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.Ancestor",
			"basename": "Ancestor",
			"resource": "sap/ui/test/matchers/Ancestor.js",
			"module": "sap/ui/test/matchers/Ancestor",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27",
			"description": "Ancestor - checks if a control has a defined ancestor",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oAncestorControl",
						"type": "object",
						"optional": false,
						"description": "the ancestor control to check, if undefined, validates every control to true"
					},
					{
						"name": "bDirect",
						"type": "boolean",
						"optional": true,
						"description": "specifies if the ancestor should be a direct ancestor (parent)"
					}
				]
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.BindingPath",
			"basename": "BindingPath",
			"resource": "sap/ui/test/matchers/BindingPath.js",
			"module": "sap/ui/test/matchers/BindingPath",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.32",
			"extends": "sap.ui.test.matchers.Matcher",
			"description": "BindingPath - checks if a control has a binding context with the exact same binding path",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "path",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The value of the binding path that is used for matching.",
						"methods": [
							"getPath",
							"setPath"
						]
					},
					{
						"name": "modelName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the binding model that is used for matching.",
						"methods": [
							"getModelName",
							"setModelName"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "Map/JSON-object with initial settings for the new BindingPath."
					}
				],
				"description": "BindingPath - checks if a control has a binding context with the exact same binding path.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.BindingPath with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.BindingPath."
				},
				{
					"name": "getModelName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>modelName</code>"
					},
					"description": "Gets current value of property <code>modelName</code>.\r\rThe name of the binding model that is used for matching."
				},
				{
					"name": "getPath",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>path</code>"
					},
					"description": "Gets current value of property <code>path</code>.\r\rThe value of the binding path that is used for matching."
				},
				{
					"name": "isMatching",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the binding path has a strictly matching value."
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that is checked by the matcher"
						}
					],
					"description": "Checks if the control has a binding context that matches the path"
				},
				{
					"name": "setModelName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.BindingPath",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sModelName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>modelName</code>"
						}
					],
					"description": "Sets a new value for property <code>modelName</code>.\r\rThe name of the binding model that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPath",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.BindingPath",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPath",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>path</code>"
						}
					],
					"description": "Sets a new value for property <code>path</code>.\r\rThe value of the binding path that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.I18NText",
			"basename": "I18NText",
			"resource": "sap/ui/test/matchers/I18NText.js",
			"module": "sap/ui/test/matchers/I18NText",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.42",
			"extends": "sap.ui.test.matchers.Matcher",
			"description": "The I18NText matcher checks if a control property has the same value as a text from an I18N file.\nThe matcher does automatically\n<ul>\n    <li>\n        retrieve the text from the assigned 'i18n' model (name can be changed)\n    </li>\n    <li>\n        check that the I18N key does actually exist in the file\n    </li>\n    <li>\n        check if asynchronously loaded I18N have actually been loaded\n    </li>\n</ul>",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "propertyName",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the control property to match the I18N text with.",
						"methods": [
							"getPropertyName",
							"setPropertyName"
						]
					},
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}.",
						"methods": [
							"getKey",
							"setKey"
						]
					},
					{
						"name": "parameters",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}.",
						"methods": [
							"getParameters",
							"setParameters"
						]
					},
					{
						"name": "modelName",
						"type": "string",
						"defaultValue": "i18n",
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.",
						"methods": [
							"getModelName",
							"setModelName"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the new I18NText"
					}
				],
				"description": "Accepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.I18NText with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"description": "Gets current value of property <code>key</code>.\r\rThe key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.I18NText."
				},
				{
					"name": "getModelName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>modelName</code>"
					},
					"description": "Gets current value of property <code>modelName</code>.\r\rThe name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.\r\rDefault value is <code>i18n</code>."
				},
				{
					"name": "getParameters",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>parameters</code>"
					},
					"description": "Gets current value of property <code>parameters</code>.\r\rThe parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}."
				},
				{
					"name": "getPropertyName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>propertyName</code>"
					},
					"description": "Gets current value of property <code>propertyName</code>.\r\rThe name of the control property to match the I18N text with."
				},
				{
					"name": "isMatching",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the property has a strictly matching value."
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that is checked by the matcher"
						}
					],
					"description": "Checks if the control has a property that matches the I18N text"
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.I18NText",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\r\rThe key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setModelName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.I18NText",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sModelName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>modelName</code>"
						}
					],
					"description": "Sets a new value for property <code>modelName</code>.\r\rThe name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>i18n</code>."
				},
				{
					"name": "setParameters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.I18NText",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oParameters",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>parameters</code>"
						}
					],
					"description": "Sets a new value for property <code>parameters</code>.\r\rThe parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPropertyName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.I18NText",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>propertyName</code>"
						}
					],
					"description": "Sets a new value for property <code>propertyName</code>.\r\rThe name of the control property to match the I18N text with.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.Interactable",
			"basename": "Interactable",
			"resource": "sap/ui/test/matchers/Interactable.js",
			"module": "sap/ui/test/matchers/Interactable",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.34",
			"extends": "sap.ui.test.matchers.Matcher",
			"description": "Interactable - check if a control is currently able to take user interactions.\nOPA5 will automatically apply this matcher if you specify actions in {@link sap.ui.test.Opa5#waitFor}.\nA control will be filtered out by this matcher when:\n<ul>\n    <li>\n        There are unfinished XMLHttpRequests (globally).\n        That means, the Opa can wait for pending requests to finish that would probably update the UI.\n        Also detects sinon.FakeXMLHttpRequests that are not responded yet.\n    </li>\n    <li>\n        The control is invisible (using the visible matcher)\n    </li>\n    <li>\n        The control is hidden behind a dialog\n    </li>\n    <li>\n        The control is in a navigating nav container\n    </li>\n    <li>\n        The control or its parents are busy\n    </li>\n    <li>\n        The control or its parents are not enabled\n    </li>\n    <li>\n        The UIArea of the control needs new rendering\n    </li>\n</ul>",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.Interactable with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.Interactable."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.LabelFor",
			"basename": "LabelFor",
			"resource": "sap/ui/test/matchers/LabelFor.js",
			"module": "sap/ui/test/matchers/LabelFor",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.46",
			"extends": "sap.ui.test.matchers.Matcher",
			"description": "The LabelFor matcher searches for given control associated with labelFor property.\nThe matcher does automatically\n<ul>\n    <li>\n        retrieve control associated by label by given text\n    </li>\n    <li>\n        retrieve control associated by label by given i18n key, modelName, parameters or propertyName. See {@link sap.ui.test.matchers.I18NText}\n    </li>\n    <li>\n        combination of text and key is not possible\n    </li>\n</ul>",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "text",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The text of the {@link sap.m.Label} which have the labelFor property.",
						"methods": [
							"getText",
							"setText"
						]
					},
					{
						"name": "modelName",
						"type": "string",
						"defaultValue": "i18n",
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.",
						"methods": [
							"getModelName",
							"setModelName"
						]
					},
					{
						"name": "key",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}.",
						"methods": [
							"getKey",
							"setKey"
						]
					},
					{
						"name": "parameters",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}.",
						"methods": [
							"getParameters",
							"setParameters"
						]
					},
					{
						"name": "propertyName",
						"type": "string",
						"defaultValue": "text",
						"group": "Misc",
						"visibility": "public",
						"description": "The name of the control property to match the I18N text with.",
						"methods": [
							"getPropertyName",
							"setPropertyName"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the new LabelFor"
					}
				],
				"description": "Accepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.LabelFor with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}."
				},
				{
					"name": "getKey",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>key</code>"
					},
					"description": "Gets current value of property <code>key</code>.\r\rThe key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.LabelFor."
				},
				{
					"name": "getModelName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>modelName</code>"
					},
					"description": "Gets current value of property <code>modelName</code>.\r\rThe name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.\r\rDefault value is <code>i18n</code>."
				},
				{
					"name": "getParameters",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>parameters</code>"
					},
					"description": "Gets current value of property <code>parameters</code>.\r\rThe parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}."
				},
				{
					"name": "getPropertyName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>propertyName</code>"
					},
					"description": "Gets current value of property <code>propertyName</code>.\r\rThe name of the control property to match the I18N text with.\r\rDefault value is <code>text</code>."
				},
				{
					"name": "getText",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>text</code>"
					},
					"description": "Gets current value of property <code>text</code>.\r\rThe text of the {@link sap.m.Label} which have the labelFor property."
				},
				{
					"name": "isMatching",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the Control has a label that matches the criteria"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that is checked by the matcher"
						}
					],
					"description": "Checks for control with labelFor property annotating other control"
				},
				{
					"name": "setKey",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.LabelFor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sKey",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>key</code>"
						}
					],
					"description": "Sets a new value for property <code>key</code>.\r\rThe key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setModelName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.LabelFor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sModelName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>modelName</code>"
						}
					],
					"description": "Sets a new value for property <code>modelName</code>.\r\rThe name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>i18n</code>."
				},
				{
					"name": "setParameters",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.LabelFor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oParameters",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>parameters</code>"
						}
					],
					"description": "Sets a new value for property <code>parameters</code>.\r\rThe parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setPropertyName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.LabelFor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sPropertyName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>propertyName</code>"
						}
					],
					"description": "Sets a new value for property <code>propertyName</code>.\r\rThe name of the control property to match the I18N text with.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\r\rDefault value is <code>text</code>."
				},
				{
					"name": "setText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.LabelFor",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sText",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>text</code>"
						}
					],
					"description": "Sets a new value for property <code>text</code>.\r\rThe text of the {@link sap.m.Label} which have the labelFor property.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.Matcher",
			"basename": "Matcher",
			"resource": "sap/ui/test/matchers/Matcher.js",
			"module": "sap/ui/test/matchers/Matcher",
			"export": "",
			"abstract": true,
			"static": true,
			"visibility": "public",
			"since": "1.23",
			"extends": "sap.ui.base.ManagedObject",
			"description": "Matchers for Opa5 - needs to implement an isMatching function that returns a boolean and will get a control instance as parameter",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.Matcher with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.Matcher."
				},
				{
					"name": "isMatching",
					"visibility": "protected",
					"returnValue": {
						"type": "boolean",
						"description": "true if the Control is matching the condition of the matcher"
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that is checked by the matcher"
						}
					],
					"description": "Checks if the matcher is matching - will get an instance of sap.ui.core.Control as parameter.\n\nShould be overwritten by subclasses"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.Properties",
			"basename": "Properties",
			"resource": "sap/ui/test/matchers/Properties.js",
			"module": "sap/ui/test/matchers/Properties",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.27",
			"description": "Properties - checks if a control's properties have the provided values - all properties have to match their values.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "oProperties",
						"type": "object",
						"optional": false,
						"description": "the object with the properties to be checked. Example:\n<pre>\n// Would filter for an enabled control with the text \"Accept\".\nnew Properties({\n    // The property text has the exact value \"Accept\"\n    text: \"Accept\",\n    // The property enabled also has to be true\n    enabled: true\n})\n</pre>\nIf the value is a RegExp, it tests the RegExp with the value. RegExp only works with string properties."
					}
				]
			}
		},
		{
			"kind": "class",
			"name": "sap.ui.test.matchers.PropertyStrictEquals",
			"basename": "PropertyStrictEquals",
			"resource": "sap/ui/test/matchers/PropertyStrictEquals.js",
			"module": "sap/ui/test/matchers/PropertyStrictEquals",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.23",
			"extends": "sap.ui.test.matchers.Matcher",
			"description": "PropertyStrictEquals - checks if a property has the exact same value",
			"ui5-metadata": {
				"stereotype": "object",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The Name of the property that is used for matching.",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "value",
						"type": "any",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "The value of the property that is used for matching.",
						"methods": [
							"getValue",
							"setValue"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "optional map/JSON-object with initial settings for the new PropertyStrictEquals"
					}
				],
				"description": "PropertyStrictEquals - checks if a property has the exact same value.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.matchers.PropertyStrictEquals with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.matchers.PropertyStrictEquals."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\r\rThe Name of the property that is used for matching."
				},
				{
					"name": "getValue",
					"visibility": "public",
					"returnValue": {
						"type": "any",
						"description": "Value of property <code>value</code>"
					},
					"description": "Gets current value of property <code>value</code>.\r\rThe value of the property that is used for matching."
				},
				{
					"name": "isMatching",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "true if the property has a strictly matching value."
					},
					"parameters": [
						{
							"name": "oControl",
							"type": "sap.ui.core.Control",
							"optional": false,
							"description": "the control that is checked by the matcher"
						}
					],
					"description": "Checks if the control has a property that matches the value"
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.PropertyStrictEquals",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\r\rThe Name of the property that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValue",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.test.matchers.PropertyStrictEquals",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oValue",
							"type": "any",
							"optional": false,
							"description": "New value for property <code>value</code>"
						}
					],
					"description": "Sets a new value for property <code>value</code>.\r\rThe value of the property that is used for matching.\r\rWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.Opa",
			"basename": "Opa",
			"resource": "sap/ui/test/Opa.js",
			"module": "sap/ui/test/Opa",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22",
			"description": "One Page Acceptance testing.",
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "extensionObject",
						"type": "object",
						"optional": true,
						"description": "An object containing properties and functions. The newly created Opa will be extended by these properties and functions using jQuery.extend."
					}
				],
				"description": "This class will help you write acceptance tests in one page or single page applications.\nYou can wait for certain conditions to be met."
			},
			"properties": [
				{
					"name": "config",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "the global configuration of Opa.\nAll of the global values can be overwritten in an individual waitFor call.\nThe default values are:\n<ul>\n\t\t<li>arrangements: A new Opa instance</li>\n\t\t<li>actions: A new Opa instance</li>\n\t\t<li>assertions: A new Opa instance</li>\n\t\t<li>timeout : 15 seconds, is increased to 5 minutes if running in debug mode e.g. with URL parameter sap-ui-debug=true</li>\n\t\t<li>pollingInterval: 400 milliseconds</li>\n</ul>\nYou can either directly manipulate the config, or extend it using {@link sap.ui.test.Opa.extendConfig}"
				}
			],
			"methods": [
				{
					"name": "emptyQueue",
					"visibility": "public",
					"description": "Calls the static emptyQueue function in the Opa namespace {@link sap.ui.test.Opa.emptyQueue}"
				},
				{
					"name": "emptyQueue",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.promise",
						"description": "If the waiting was successful, the promise will be resolved. If not it will be rejected"
					},
					"description": "Waits until all waitFor calls are done."
				},
				{
					"name": "extendConfig",
					"visibility": "public",
					"description": "Calls the static extendConfig function in the Opa namespace {@link sap.ui.test.Opa.extendConfig}"
				},
				{
					"name": "extendConfig",
					"visibility": "public",
					"static": true,
					"since": "1.40",
					"parameters": [
						{
							"name": "options",
							"type": "object",
							"optional": false,
							"description": "The values to be added to the existing config"
						}
					],
					"description": "Extends and overwrites default values of the {@link sap.ui.test.Opa.config}.\nSample usage:\n<pre>\n    <code>\n        var oOpa = new Opa();\n\n        // this statement will  will time out after 15 seconds and poll every 400ms.\n        // those two values come from the defaults of {@link sap.ui.test.Opa.config}.\n        oOpa.waitFor({\n        });\n\n        // All wait for statements added after this will take other defaults\n        Opa.extendConfig({\n            timeout: 10,\n            pollingInterval: 100\n        });\n\n        // this statement will time out after 10 seconds and poll every 100 ms\n        oOpa.waitFor({\n        });\n\n        // this statement will time out after 20 seconds and poll every 100 ms\n        oOpa.waitFor({\n            timeout: 20;\n        });\n    </code>\n</pre>"
				},
				{
					"name": "getContext",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the context object"
					},
					"description": "Gives access to a singleton object you can save values in.\nThis object will only be created once and it will never be destroyed.\nThat means you can use it to save values you need in multiple separated tests."
				},
				{
					"name": "getContext",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "the context object"
					},
					"since": "1.29.0",
					"description": "Gives access to a singleton object you can save values in.\nSame as {@link sap.ui.test.Opa#getContext}"
				},
				{
					"name": "resetConfig",
					"visibility": "public",
					"static": true,
					"since": "1.25",
					"description": "Reset Opa.config to its default values.\nAll of the global values can be overwritten in an individual waitFor call.\n\nThe default values are:\n<ul>\n\t\t<li>arrangements: A new Opa instance</li>\n\t\t<li>actions: A new Opa instance</li>\n\t\t<li>assertions: A new Opa instance</li>\n\t\t<li>timeout : 15 seconds, is increased to 5 minutes if running in debug mode e.g. with URL parameter sap-ui-debug=true</li>\n\t\t<li>pollingInterval: 400 milliseconds</li>\n\t\t<li>\n\t\t\texecutionDelay: 0 or 50 (depending on the browser) or coming from an URL parameter opaExecutionDelay.\n\t\t\tThe URL parameter takes priority over the browser value. The value is a number representing milliseconds.\n\t\t\tThe executionDelay will slow down the execution of every single waitFor statement to be delayed by the number of milliseconds.\n\t\t\tThis does not effect the polling interval it just adds an initial pause.\n\t\t\tUse this parameter to slow down OPA when you want to watch your test during development or checking the UI of your app.\n\t\t\tIt is not recommended to use this parameter in any automated test executions.\n\t\t</li>\n</ul>"
				},
				{
					"name": "stopQueue",
					"visibility": "public",
					"static": true,
					"since": "1.40.1",
					"description": "Clears the queue and stops running tests so that new tests can be run.\nThis means all waitFor statements registered by {@link sap.ui.test.Opa#waitFor} will not be invoked anymore and\nthe promise returned by {@link sap.ui.test.Opa.emptyQueue}\nwill be rejected or resolved depending on the failTest parameter.\nWhen its called inside of a check in {@link sap.ui.test.Opa#waitFor}\nthe success function of this waitFor will not be called."
				},
				{
					"name": "waitFor",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.promise",
						"description": "A promise that gets resolved on success"
					},
					"parameters": [
						{
							"name": "options",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"timeout": {
									"name": "timeout",
									"type": "int",
									"optional": true,
									"description": "default: 15 - (seconds) Specifies how long the waitFor function polls before it fails."
								},
								"pollingInterval": {
									"name": "pollingInterval",
									"type": "int",
									"optional": true,
									"description": "default: 400 - (milliseconds) Specifies how often the waitFor function polls."
								},
								"check": {
									"name": "check",
									"type": "function",
									"optional": true,
									"description": "Will get invoked in every polling interval.\nIf it returns true, the check is successful and the polling will stop.\nThe first parameter passed into the function is the same value that gets passed to the success function.\nReturning something other than boolean in the check will not change the first parameter of success."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "Will get invoked after the check function returns true.\nIf there is no check function defined, it will be directly invoked.\nwaitFor statements added in the success handler will be executed before previously added waitFor statements."
								},
								"errorMessage": {
									"name": "errorMessage",
									"type": "string",
									"optional": true,
									"description": "Will be displayed as an errorMessage depending on your unit test framework.\nCurrently the only adapter for Opa is QUnit.\nThis message is displayed there if Opa has reached its timeout but QUnit has not yet reached it."
								}
							},
							"description": "These contain check, success and error functions"
						}
					],
					"description": "Queues up a waitFor command for Opa.\nThe Queue will not be emptied until {@link sap.ui.test.Opa.emptyQueue} is called.\nIf you are using {@link sap.ui.test.opaQunit}, emptyQueue will be called by the wrapped tests.\n\nIf you are using Opa5, waitFor takes additional parameters.\nThey can be found here: {@link sap.ui.test.Opa5#waitFor}.\nWaits for a check condition to return true, in which case a success function will be called.\nIf the timeout is reached before the check returns true, an error function will be called."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.Opa5",
			"basename": "Opa5",
			"resource": "sap/ui/test/Opa5.js",
			"module": "sap/ui/test/Opa5",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22",
			"extends": "sap.ui.base.Object",
			"description": "UI5 extension of the OPA framework",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "public",
				"description": "Helps you when writing tests for UI5 applications.\nProvides convenience to wait and retrieve for UI5 controls without relying on global IDs.\nMakes it easy to wait until your UI is in the state you need for testing, e.g.: waiting for backend data."
			},
			"methods": [
				{
					"name": "createPageObjects",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "map",
						"description": "mPageObject The created page object. It will look like this:\n<pre><code>\n {\n  &lt;your-page-object-name&gt; : {\n      actions: // an instance of baseClass or Opa5 with all the actions defined above\n      assertions: // an instance of baseClass or Opa5 with all the assertions defined above\n  }\n }\n</code></pre>"
					},
					"since": "1.25",
					"parameters": [
						{
							"name": "mPageObjects",
							"type": "map",
							"optional": false,
							"parameterProperties": {
								"&lt;your-page-object-name&gt;": {
									"name": "&lt;your-page-object-name&gt;",
									"type": "map",
									"optional": false,
									"parameterProperties": {
										"viewName": {
											"name": "viewName",
											"type": "function",
											"optional": true,
											"description": "When a viewName is given, all waitFors inside of the page object will get a viewName parameter.\nHere is an example:\n<pre>\n\t\t<code>\n\t\t\tOpa5.createPageObjects({\n\t\t\t\tviewName: \"myView\",\n\t\t\t\tonMyPageWithViewName: {\n\t\t\t\t\tassertions: {\n\t\t\t\t\t\tiWaitForAButtonInMyView: function () {\n\t\t\t\t\t\t\tthis.waitFor({\n\t\t\t\t\t\t\t\tid: \"myButton\",\n\t\t\t\t\t\t\t\tsuccess: function (oButton) {\n\t\t\t\t\t\t\t\t\t// the button is defined in the view myView\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n    </code>\n</pre>\nThis saves you repeating the viewName in every waitFor statement of the page object.\nIt is possible to overwrite the viewName of the page object in a specific waitFor.\nSo if you have specified a <code>viewName: \"myView\"</code> in your page object\nand you want to look for a control with a global id you may use <code>viewName: \"\"</code> in a waitFor\nto overwrite the viewName of the page Object. Example:\n<pre>\n\t\t<code>\n\t\t\tthis.waitFor({\n\t\t\t\tid: \"myButton\",\n\t\t\t\tviewName: \"\",\n\t\t\t\tsuccess: function (oButton) {\n\t\t\t\t\t// now a button with the global id \"myButton\" will be searched\n\t\t\t\t}\n\t\t\t});\n\t\t</code>\n</pre>"
										},
										"baseClass": {
											"name": "baseClass",
											"type": "function",
											"optional": true,
											"description": "Base class for the page object's actions and assertions, default: Opa5"
										},
										"namespace": {
											"name": "namespace",
											"type": "function",
											"optional": true,
											"description": "Namespace prefix for the page object's actions and assertions, default: sap.ui.test.opa.pageObject. Use it if you use page objects from multiple projects in the same test build."
										},
										"actions": {
											"name": "actions",
											"type": "map",
											"optional": true,
											"parameterProperties": {
												"&lt;your-action-1&gt;": {
													"name": "&lt;your-action-1&gt;",
													"type": "function",
													"optional": false,
													"description": "This is your custom implementation containing one or multiple waitFor statements"
												},
												"&lt;your-action-2&gt;": {
													"name": "&lt;your-action-2&gt;",
													"type": "function",
													"optional": false,
													"description": "This is your custom implementation containing one or multiple waitFor statements"
												}
											},
											"description": "Can be used as an arrangement and action in Opa tests. Only the test knows if an action is used as arrangement or action"
										},
										"assertions": {
											"name": "assertions",
											"type": "map",
											"optional": true,
											"parameterProperties": {
												"&lt;your-assertions-1&gt;": {
													"name": "&lt;your-assertions-1&gt;",
													"type": "function",
													"optional": false,
													"description": "This is your custom implementation containing one or multiple waitFor statements"
												},
												"&lt;your-assertions-2&gt;": {
													"name": "&lt;your-assertions-2&gt;",
													"type": "function",
													"optional": false,
													"description": "This is your custom implementation containing one or multiple waitFor statements"
												}
											},
											"description": "Can be used as an assertions in Opa tests."
										}
									},
									"description": "Multiple page objects are possible, provide at least actions or assertions"
								}
							}
						}
					],
					"description": "Create a page object configured as arrangement, action and assertion to the Opa.config.\nUse it to structure your arrangement, action and assertion based on parts of the screen to avoid name clashes and help to structure your tests."
				},
				{
					"name": "emptyQueue",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.promise",
						"description": "If the waiting was successful, the promise will be resolved. If not it will be rejected"
					},
					"description": "Waits until all waitFor calls are done\nSee {@link sap.ui.test.Opa.emptyQueue} for the description"
				},
				{
					"name": "extendConfig",
					"visibility": "public",
					"static": true,
					"since": "1.40",
					"parameters": [
						{
							"name": "options",
							"type": "object",
							"optional": false,
							"description": "The values to be added to the existing config"
						}
					],
					"description": "Extends and overwrites default values of the {@link sap.ui.test.Opa.config}.\nMost frequent usecase:\n<pre>\n    <code>\n        // Every waitFor will append this namespace in front of your viewName\n        Opa5.extendConfig({\n           viewNamespace: \"namespace.of.my.views.\"\n        });\n\n        var oOpa = new Opa5();\n\n        // Looks for a control with the id \"myButton\" in a View with the name \"namespace.of.my.views.Detail\"\n        oOpa.waitFor({\n             id: \"myButton\",\n             viewName: \"Detail\"\n        });\n\n        // Looks for a control with the id \"myList\" in a View with the name \"namespace.of.my.views.Master\"\n        oOpa.waitFor({\n             id: \"myList\",\n             viewName: \"Master\"\n        });\n    </code>\n</pre>\n\nSample usage:\n<pre>\n    <code>\n        var oOpa = new Opa5();\n\n        // this statement will  will time out after 15 seconds and poll every 400ms.\n        // those two values come from the defaults of {@link sap.ui.test.Opa.config}.\n        oOpa.waitFor({\n        });\n\n        // All wait for statements added after this will take other defaults\n        Opa5.extendConfig({\n            timeout: 10,\n            pollingInterval: 100\n        });\n\n        // this statement will time out after 10 seconds and poll every 100 ms\n        oOpa.waitFor({\n        });\n\n        // this statement will time out after 20 seconds and poll every 100 ms\n        oOpa.waitFor({\n            timeout: 20;\n        });\n    </code>\n</pre>"
				},
				{
					"name": "getContext",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "the context object"
					},
					"since": "1.29.0",
					"description": "Gives access to a singleton object you can save values in.\nSee {@link sap.ui.test.Opa.getContext} for the description"
				},
				{
					"name": "getHashChanger",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.core.routing.HashChanger",
						"description": "The HashChanger instance"
					},
					"description": "Returns HashChanger object of the IFrame. If the IFrame is not loaded it will return null."
				},
				{
					"name": "getJQuery",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery",
						"description": "The jQuery object"
					},
					"description": "Returns the jQuery object of the IFrame. If the IFrame is not loaded it will return null."
				},
				{
					"name": "getPlugin",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.test.OpaPlugin",
						"description": "The plugin instance"
					},
					"description": "Returns the Opa plugin used for retrieving controls. If an IFrame is used it will return the iFrame's plugin."
				},
				{
					"name": "getUtils",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.test.qunit",
						"description": "The QUnit utils"
					},
					"description": "Returns QUnit utils object of the IFrame. If the IFrame is not loaded it will return null."
				},
				{
					"name": "getWindow",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "Window",
						"description": "The window of the IFrame"
					},
					"description": "Returns the window object of the IFrame or the current window. If the IFrame is not loaded it will return null."
				},
				{
					"name": "iStartMyAppInAFrame",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.promise",
						"description": "A promise that gets resolved on success"
					},
					"parameters": [
						{
							"name": "sSource",
							"type": "string",
							"optional": false,
							"description": "The source of the IFrame"
						},
						{
							"name": "iTimeout",
							"type": "int",
							"optional": true,
							"defaultValue": 80,
							"description": "The timeout for loading the IFrame in seconds - default is 80"
						}
					],
					"description": "Starts an app in an IFrame. Only works reliably if running on the same server."
				},
				{
					"name": "iStartMyAppInAFrame",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.promise",
						"description": "A promise that gets resolved on success"
					},
					"parameters": [
						{
							"name": "sSource",
							"type": "string",
							"optional": false,
							"description": "The source of the IFrame"
						},
						{
							"name": "iTimeout",
							"type": "number",
							"optional": true,
							"defaultValue": 80,
							"description": "The timeout for loading the IFrame in seconds - default is 80"
						}
					],
					"description": "Starts an app in an IFrame. Only works reliably if running on the same server."
				},
				{
					"name": "iStartMyUIComponent",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.promise",
						"description": "A promise that gets resolved on success."
					},
					"parameters": [
						{
							"name": "oOptions",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"componentConfig": {
									"name": "componentConfig",
									"type": "object",
									"optional": false,
									"description": "Will be passed to {@link sap.ui.component component}, please read the respective documentation."
								},
								"hash": {
									"name": "hash",
									"type": "string",
									"optional": true,
									"description": "Sets the hash {@link sap.ui.core.routing.HashChanger#setHash} to the given value.\nIf this parameter is omitted, the hash will always be reset to the empty hash - \"\"."
								},
								"timeout": {
									"name": "timeout",
									"type": "number",
									"optional": true,
									"defaultValue": 15,
									"description": "The timeout for loading the UIComponent in seconds - {@link sap.ui.test.Opa5#waitFor}."
								}
							},
							"description": "An Object that contains the configuration for starting up a UIComponent."
						}
					],
					"description": "Starts a UIComponent."
				},
				{
					"name": "iTeardownMyAppFrame",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.promise",
						"description": "A promise that gets resolved on success"
					},
					"description": "Removes the IFrame from the DOM and removes all the references to its objects"
				},
				{
					"name": "iTeardownMyAppFrame",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "jQuery.promise",
						"description": "A promise that gets resolved on success"
					},
					"description": "Removes the IFrame from the DOM and removes all the references to its objects"
				},
				{
					"name": "iTeardownMyUIComponent",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.promise",
						"description": "a promise that gets resolved on success."
					},
					"description": "Destroys the UIComponent and removes the div from the dom like all the references on its objects"
				},
				{
					"name": "resetConfig",
					"visibility": "public",
					"static": true,
					"since": "1.25",
					"description": "Resets Opa.config to its default values.\nSee {@link sap.ui.test.Opa5#waitFor} for the description\nDefault values for OPA5 are:\n<ul>\n\t<li>viewNamespace: empty string</li>\n\t<li>arrangements: instance of OPA5</li>\n\t<li>actions: instance of OPA5</li>\n\t<li>assertions: instance of OPA5</li>\n\t<li>visible: true</li>\n\t<li>timeout : 15 seconds, is increased to 5 minutes if running in debug mode e.g. with URL parameter sap-ui-debug=true</li>\n\t<li>pollingInterval: 400 milliseconds</li>\n\t<li>autoWait: false - since 1.42</li>\n</ul>"
				},
				{
					"name": "stopQueue",
					"visibility": "public",
					"static": true,
					"description": "Clears the queue and stops running tests so that new tests can be run.\nThis means all waitFor statements registered by {@link sap.ui.test.Opa5#waitFor} will not be invoked anymore and\nthe promise returned by {@link sap.ui.test.Opa5.emptyQueue} will be rejected.\nWhen its called inside of a check in {@link sap.ui.test.Opa5#waitFor}\nthe success function of this waitFor will not be called."
				},
				{
					"name": "waitFor",
					"visibility": "public",
					"returnValue": {
						"type": "jQuery.promise",
						"description": "A promise that gets resolved on success"
					},
					"parameters": [
						{
							"name": "options",
							"type": "object",
							"optional": false,
							"parameterProperties": {
								"id": {
									"name": "id",
									"type": "string|RegExp",
									"optional": true,
									"description": "The global ID of a control, or the ID of a control inside a view.\nIf a regex and a viewName is provided, Opa5 will only look for controls in the view with a matching ID.<br/>\nExample of a waitFor:\n<pre>\n    <code>\n        this.waitFor({\n            id: /my/,\n            viewName: \"myView\"\n        });\n    </code>\n</pre>\nThe view that is searched in:\n<pre>\n    <code>\n        &lt;core:View xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\"&gt;\n            &lt;Button id=\"myButton\"&gt;\n            &lt;/Button&gt;\n            &lt;Button id=\"bar\"&gt;\n            &lt;/Button&gt;\n            &lt;Button id=\"baz\"&gt;\n            &lt;/Button&gt;\n            &lt;Image id=\"myImage\"&gt;&lt;/Image&gt;\n        &lt;/core:View&gt;\n    </code>\n</pre>\nWill result in matching two controls, the image with the effective ID myView--myImage and the button myView--myButton.\nAlthough the IDs of the controls myView--bar and myView--baz contain a my,\nthey will not be matched since only the part you really write in your views will be matched."
								},
								"viewName": {
									"name": "viewName",
									"type": "string",
									"optional": true,
									"description": "The name of a view.\nIf this is set the id of the control is searched inside of the view. If an id is not be set, all controls of the view will be found."
								},
								"viewNamespace": {
									"name": "viewNamespace",
									"type": "string",
									"optional": true,
									"description": "This string gets appended before the viewName - should probably be set to the {@link sap.ui.test.Opa5.extendConfig}."
								},
								"matchers": {
									"name": "matchers",
									"type": "function|array|sap.ui.test.matchers.Matcher",
									"optional": true,
									"description": "A single matcher or an array of matchers {@link sap.ui.test.matchers}.\nMatchers will be applied to an every control found by the waitFor function.\nThe matchers are a pipeline: the first matcher gets a control as an input parameter, each subsequent matcher gets the same input as the previous one, if the previous output is 'true'.\nIf the previous output is a truthy value, the next matcher will receive this value as an input parameter.\nIf any matcher does not match an input (i.e. returns a falsy value), then the input is filtered out. Check will not be called if the matchers filtered out all controls/values.\nCheck/success will be called with all matching values as an input parameter. Matchers also can be define as an inline-functions."
								},
								"controlType": {
									"name": "controlType",
									"type": "string",
									"optional": true,
									"description": "Selects all control by their type.\nIt is usually combined with a viewName or searchOpenDialogs. If no control is matching the type, an empty\narray will be returned. Here are some samples:\n<code>\n    <pre>\n        this.waitFor({\n            controlType: \"sap.m.Button\",\n            success: function (aButtons) {\n                // aButtons is an array of all visible buttons\n            }\n        });\n\n        // control type will also return controls that extend the control type\n        // this will return an array of visible sap.m.List and sap.m.Table since both extend List base\n        this.waitFor({\n            controlType: \"sap.m.ListBase\",\n            success: function (aLists) {\n                // aLists is an array of all visible Tables and Lists\n            }\n        });\n\n        // control type is often combined with viewName - only controls that are inside of the view\n        // and have the correct type will be returned\n        this.waitFor({\n            viewName: \"my.View\"\n            controlType: \"sap.m.Input\",\n            success: function (aInputs) {\n                // aInputs are all sap.m.Inputs inside of a view called 'my.View'\n            }\n        });\n    </pre>\n</code>"
								},
								"searchOpenDialogs": {
									"name": "searchOpenDialogs",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "If set to true, Opa5 will only look in open dialogs. All the other values except control type will be ignored"
								},
								"visible": {
									"name": "visible",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "If set to false, Opa5 will also look for unrendered and invisible controls."
								},
								"timeout": {
									"name": "timeout",
									"type": "int",
									"optional": true,
									"defaultValue": 15,
									"description": "(seconds) Specifies how long the waitFor function polls before it fails.\nTimeout will increased to 5 minutes if running in debug mode e.g. with URL parameter sap-ui-debug=true."
								},
								"pollingInterval": {
									"name": "pollingInterval",
									"type": "int",
									"optional": true,
									"defaultValue": 400,
									"description": "(milliseconds) Specifies how often the waitFor function polls."
								},
								"check": {
									"name": "check",
									"type": "function",
									"optional": true,
									"description": "Will get invoked in every polling interval. If it returns true, the check is successful and the polling will stop.\nThe first parameter passed into the function is the same value that gets passed to the success function.\nReturning something other than boolean in check will not change the first parameter of success."
								},
								"success": {
									"name": "success",
									"type": "function",
									"optional": true,
									"description": "Will get invoked after the following conditions are met:\n<ol>\n    <li>\n        One or multiple controls were found using controlType, Id, viewName. If visible is true (it is by default), the controls also need to be rendered.\n    </li>\n    <li>\n        The whole matcher pipeline returned true for at least one control, or there are no matchers\n    </li>\n    <li>\n        The check function returned true, or there is no check function\n    </li>\n</ol>\nThe first parameter passed into the function is either a single control (when a single string ID was used),\nor an array of controls (viewName, controlType, multiple ID's, regex ID's) that matched all matchers.\nMatchers can alter the array or single control to something different. Please read the documentation of waitFor's matcher parameter."
								},
								"error": {
									"name": "error",
									"type": "function",
									"optional": true,
									"description": "Invoked when the timeout is reached and the check never returned true."
								},
								"errorMessage": {
									"name": "errorMessage",
									"type": "string",
									"optional": true,
									"description": "Will be displayed as an errorMessage depending on your unit test framework.\nCurrently the only adapter for Opa5 is QUnit.\nThis message is displayed if Opa5 has reached its timeout before QUnit has reached it."
								},
								"actions": {
									"name": "actions",
									"type": "function|function()[]|sap.ui.test.actions.Action|sap.ui.test.actions.Action[]",
									"optional": false,
									"description": "Available since 1.34.0. An array of functions or Actions or a mixture of both.\nAn action has an 'executeOn' function that will receive a single control as a parameter.\nIf there are multiple actions defined all of them\nwill be executed (first in first out) on each control of, similar to the matchers.\nHere is one of the most common usages:\n<code>\n    function (sButtonId) {\n         // executes a Press on a button with a specific id\n         new Opa5().waitFor({\n             id: sButtonId,\n             actions: new Press()\n         });\n    };\n</code>\nBut actions will only be executed once and only after the check function returned true.\nBefore actions are executed the {@link sap.ui.test.matchers.Interactable}\nmatcher will check if the Control is currently able to perform actions if it is not,\nOpa5 will try again after the 'pollingInterval'.\nThat means actions will only be executed if the control is not:\n<ul>\n    <li>\n        Behind an open dialog\n    </li>\n    <li>\n        Inside of a navigating NavContainer\n    </li>\n    <li>\n        Busy\n    </li>\n    <li>\n        Inside a Parent control that is Busy\n    </li>\n</ul>\nIf there are multiple controls in Opa5's result set the action will be executed on all of them.\nThe actions will be invoked directly before success is called.\nIn the documentation of the success parameter there is a list of conditions that have to be fulfilled.\nThey also apply for the actions.\nThere are some predefined actions in the {@link sap.ui.test.actions} namespace.\nsince 1.42 an Action may add other waitFors.\nThe next action or the success handler will not be executed until the waitFor of the action has finished.\nAn example:\n<code>\n    <pre>\n    this.waitFor({\n        id: \"myButton\",\n        actions: function (oButton) {\n           // this action is executed first\n           this.waitFor({\n             id: \"anotherButton\",\n             actions: function () {\n               // This is the second function that will be executed\n               // Opa will also wait until anotherButton is Interactable before executing this function\n             },\n             success: function () {\n               // This is the third function that will be executed\n             }\n           })\n        },\n        success: function () {\n            // This is the fourth function that will be executed\n        }\n    });\n    </pre>\n</code>\nExecuting multiple actions will not wait between actions for a control to become \"Interactable\" again.\nIf you need waiting between actions you need to split the actions into multiple 'waitFor' statements."
								},
								"autoWait": {
									"name": "autoWait",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "@since 1.42 Only has an effect if set to true.\nThe waitFor statement will not execute success callbacks as long as there are open XMLHTTPRequests (requests to a server).\nIt will only execute success if the control is {@link sap.ui.test.matchers.Interactable}\nSo success behaves like an action in terms of waiting.\nIt is recommended to set this value to true for all your waitFor statements using:\n<code>\n    <pre>\n    Opa5.extendConfig({\n        autoWait: true\n    });\n    </pre>\n</code>\nWhy is it recommended:\nWhen writing a huge set of tests and executing them frequently you might face tests that are sometimes successful but sometimes they are not.\nSetting the autoWait to true should stabilize most of those tests.\nThe default \"false\" could not be changed since it causes existing tests to fail.\nThere are cases where you do not want to wait for controls to be \"Interactable\":\nFor example when you are testing the Busy indication of your UI during the sending of a request.\nBut these cases are the exception so it is better to explicitly adding autoWait: false to this waitFor.\n<code>\n    <pre>\n    this.waitFor({\n        id: \"myButton\",\n        autoWait: false,\n        success: function (oButton) {\n             Opa5.assert.ok(oButton.getBusy(), \"My Button was busy\");\n        }\n    });\n    </pre>\n</code>\nThis is also the easiest way of migrating existing tests. First extend the config, then see which waitFors\nwill time out and finally disable autoWait in these Tests."
								}
							},
							"description": "An Object containing conditions for waiting and callbacks"
						}
					],
					"description": "Takes the same parameters as {@link sap.ui.test.Opa#waitFor}. Also allows you to specify additional parameters:"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.OpaPlugin",
			"basename": "OpaPlugin",
			"resource": "sap/ui/test/OpaPlugin.js",
			"module": "sap/ui/test/OpaPlugin",
			"export": "",
			"static": true,
			"visibility": "public",
			"since": "1.22",
			"description": "A Plugin to search UI5 controls.",
			"constructor": {
				"visibility": "public"
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.ui.test.OpaPlugin with name <code>sClassName</code>\rand enriches it with the information contained in <code>oClassInfo</code>.\r\r<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}."
				},
				{
					"name": "getAllControls",
					"visibility": "public",
					"returnValue": {
						"type": "Array",
						"description": "an array of the found controls (can be empty)"
					},
					"parameters": [
						{
							"name": "fnConstructorType",
							"type": "function",
							"optional": true,
							"description": "the control type, e.g: sap.m.CheckBox"
						}
					],
					"description": "Gets all the controls of a certain type that are currently instantiated.\nIf the control type is omitted, nothing is returned."
				},
				{
					"name": "getControlByGlobalId",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element[]",
						"description": "all controls matched by the regex or the control matched by the string or null"
					},
					"parameters": [
						{
							"name": "oOptions",
							"type": "undefined",
							"optional": false,
							"description": "should contain an ID property. It can be of the type string or regex. If contains controlType property, will check it as well"
						}
					],
					"description": "Returns a control by its id\naccepts an object with an ID property the ID can be\nwill check a control type also, if defined\n<ul>\n\t<li>a single string - function will return the control instance or undefined</li>\n\t<li>an array of strings - function will return an array of found controls or an empty array</li>\n\t<li>a regexp - function will return an array of found controls or an empty array</li>\n</ul>"
				},
				{
					"name": "getControlConstructor",
					"visibility": "public",
					"returnValue": {
						"type": "null|function",
						"description": "When the type is loaded, the contstructor is returned, if it is a lazy stub or not yet loaded, null will be returned and there will be a log entry."
					},
					"parameters": [
						{
							"name": "sControlType",
							"type": "string",
							"optional": false,
							"description": "the name of the type eg: \"sap.m.Button\""
						}
					],
					"description": "Gets the constructor function of a certain controlType"
				},
				{
					"name": "getControlInView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element|sap.ui.core.Element[]|null",
						"description": "If the passed id is a string it returns the found control or null.\nElse an array of matching controls, if the view is not found or no control is found for multiple ids an empty array is returned."
					},
					"parameters": [
						{
							"name": "oOptions",
							"type": "object",
							"optional": false,
							"description": "that may contain a viewName, id, viewNamespace and controlType properties."
						}
					],
					"description": "Gets a control inside of the view (same as calling oView.byId)\nIf no ID is provided, it will return all the controls inside of a view (also nested views and their children).<br/>\neg : { id : \"foo\" } will search globally for a control with the ID foo<br/>\neg : { id : \"foo\" , viewName : \"bar\" } will search for a control with the ID foo inside the view with the name bar<br/>\neg : { viewName : \"bar\" } will return all the controls inside the view with the name bar<br/>\neg : { viewName : \"bar\", controlType : sap.m.Button } will return all the Buttons inside a view with the name bar<br/>\neg : { viewName : \"bar\", viewNamespace : \"baz.\" } will return all the Controls in the view with the name baz.bar<br/>"
				},
				{
					"name": "getMatchingControls",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.Element|sap.ui.core.Element[]|null",
						"description": "<ul>\n    <li>an array of found Controls depending on the options</li>\n    <li>an empty array if no id was given</li>\n    <li>the found control/element when an id as a string is specified</li>\n    <li>null if an id as string was specified</li>\n</ul>"
					},
					"parameters": [
						{
							"name": "oOptions",
							"type": "object",
							"optional": true,
							"parameterProperties": {
								"viewName": {
									"name": "viewName",
									"type": "string",
									"optional": true,
									"description": "Controls will only be searched inside of the view.\nInside means, if you are giving an ID - the control will be found by using the byId function of the view.\nIf you are specifying other options than the id, the view has to be an ancestor of the control - when you call myControl.getParent,\nyou have to reach the view at some point."
								},
								"id": {
									"name": "id",
									"type": "string|string[]",
									"optional": true,
									"description": "The ID if one or multiple controls. This can be a global ID or an ID used together with viewName. See the documentation of this parameter."
								},
								"visible": {
									"name": "visible",
									"type": "boolean",
									"optional": true,
									"defaultValue": true,
									"description": "States if a control need to have a visible domref (jQUery's :visible will be used to determine this)."
								},
								"interactable": {
									"name": "interactable",
									"type": "boolean",
									"optional": true,
									"defaultValue": false,
									"description": "@since 1.34 States if a control has to match the interactable matcher {@link sap.ui.test.matchers.Interactable}."
								},
								"searchOpenDialogs": {
									"name": "searchOpenDialogs",
									"type": "boolean",
									"optional": true,
									"description": "Only controls in the static UI area of UI5 are searched."
								},
								"controlType": {
									"name": "controlType",
									"type": "string|function",
									"optional": true,
									"description": "@since 1.40 Selects all control by their type.\nIt is usually combined with viewName or searchOpenDialogs. If no control is matching the type, an empty\narray will be returned. Here are some samples:\n<code>\n    <pre>\n        // will return an array of all visible buttons\n        new OpaPlugin().getMatchingControls({\n            controlType: \"sap.m.Button\"\n        });\n\n        // control type will also return controls that extend the control type\n        // this will return an array of visible sap.m.List and sap.m.Table since both extend List base\n        new OpaPlugin().getMatchingControls({\n            controlType: \"sap.m.ListBase\"\n        });\n\n        // control type is often combined with viewName - only controls that are inside of the view\n        // and have the correct type will be returned\n        // here all sap.m.Inputs inside of a view called 'my.View' will be returned\n        new OpaPlugin().getMatchingControls({\n            viewName: \"my.View\"\n            controlType: \"sap.m.Input\"\n        });\n    </pre>\n</code>"
								}
							},
							"description": "a map of options used to describe the control you are looking for."
						}
					],
					"description": "Tries to find a control depending on the options provided."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.ui.test.OpaPlugin."
				},
				{
					"name": "getView",
					"visibility": "public",
					"returnValue": {
						"type": "sap.ui.core.mvc.View",
						"description": "or undefined"
					},
					"parameters": [
						{
							"name": "sViewName",
							"type": "string",
							"optional": false,
							"description": "the name of the view"
						}
					],
					"description": "Returns the view with a specific name - if there are multiple views with that name only the first one is returned."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.ui.test.PageObjectFactory",
			"basename": "PageObjectFactory",
			"resource": "sap/ui/test/PageObjectFactory.js",
			"module": "sap/ui/test/PageObjectFactory",
			"export": "",
			"static": true,
			"visibility": "protected",
			"since": "1.26",
			"extends": "sap.ui.base.Object",
			"description": "Page Object Factory",
			"ui5-metadata": {
				"stereotype": "object"
			},
			"constructor": {
				"visibility": "protected"
			},
			"methods": [
				{
					"name": "create",
					"visibility": "protected",
					"static": true,
					"description": "Create a page object configured as arrangement, action and assertion to the Opa.config.\nUse it to structure your arrangement, action and assertion based on parts of the screen to avoid name clashes and help structuring your tests."
				}
			]
		}
	]
}